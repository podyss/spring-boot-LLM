export declare const directions: readonly ["top", "right", "bottom", "left", "topRight", "bottomRight", "bottomLeft", "topLeft"];
export declare const directionStyles: {
    readonly top: {
        readonly top: "-5px";
        readonly width: "100%";
        readonly height: "10px";
        readonly left: "0px";
        readonly cursor: "row-resize";
    };
    readonly right: {
        readonly left: any;
        readonly right: "-5px";
        readonly width: "10px";
        readonly height: "100%";
        readonly top: "0px";
        readonly cursor: "col-resize";
    };
    readonly bottom: {
        readonly top: any;
        readonly bottom: "-5px";
        readonly width: "100%";
        readonly height: "10px";
        readonly left: "0px";
        readonly cursor: "row-resize";
    };
    readonly left: {
        readonly left: "-5px";
        readonly width: "10px";
        readonly height: "100%";
        readonly top: "0px";
        readonly cursor: "col-resize";
    };
    readonly topRight: {
        readonly right: "-10px";
        readonly top: "-10px";
        readonly cursor: "ne-resize";
        readonly width: "20px";
        readonly height: "20px";
        readonly position: "absolute";
    };
    readonly bottomRight: {
        readonly right: "-10px";
        readonly bottom: "-10px";
        readonly cursor: "se-resize";
        readonly width: "20px";
        readonly height: "20px";
        readonly position: "absolute";
    };
    readonly bottomLeft: {
        readonly left: "-10px";
        readonly bottom: "-10px";
        readonly cursor: "sw-resize";
        readonly width: "20px";
        readonly height: "20px";
        readonly position: "absolute";
    };
    readonly topLeft: {
        readonly left: "-10px";
        readonly top: "-10px";
        readonly cursor: "nw-resize";
        readonly width: "20px";
        readonly height: "20px";
        readonly position: "absolute";
    };
};
export type Direction = 'top' | 'right' | 'bottom' | 'left' | 'topRight' | 'bottomRight' | 'bottomLeft' | 'topLeft';
export interface HandleClassName {
    top?: string;
    right?: string;
    bottom?: string;
    left?: string;
    topRight?: string;
    bottomRight?: string;
    bottomLeft?: string;
    topLeft?: string;
}
export type HandlerCallback = (e: MouseEvent, direction: Direction) => void;
export interface Enable {
    top?: boolean;
    right?: boolean;
    bottom?: boolean;
    left?: boolean;
    topRight?: boolean;
    bottomRight?: boolean;
    bottomLeft?: boolean;
    topLeft?: boolean;
}
export interface Size {
    width?: string | number;
    height?: string | number;
}
export interface NumberSize {
    width: number;
    height: number;
}
export interface NewSize {
    newHeight: number | string;
    newWidth: number | string;
}
export declare const DEFAULT_SIZE: {
    width: string;
    height: string;
};
export type ResizeCallback = (size: Size, event: MouseEvent, direction: Direction) => void;
export type ResizeStartCallback = (e: MouseEvent, dir: Direction) => void | boolean;
