import { defineComponent as w, ref as c, onMounted as C, watch as y, createVNode as E } from "vue";
import L from "./StyledAnimation";
import a from "./utils/noop";
const N = {
  duration: String,
  className: String,
  name: String,
  position: String,
  motion: [Object, String, Boolean, Function],
  transitionState: String,
  state: {
    type: [String, Boolean],
    default: void 0
  },
  from: Object,
  enter: String,
  leave: String,
  willEnter: {
    type: Function,
    default: a
  },
  didEnter: {
    type: Function,
    default: a
  },
  willLeave: {
    type: Function,
    default: a
  },
  didLeave: {
    type: Function,
    default: a
  },
  onRest: {
    type: Function,
    default: a
  },
  onStart: {
    type: Function,
    default: a
  }
}, b = /* @__PURE__ */ w((e, {
  slots: r
}) => {
  const n = c(""), i = c(null), l = c(null);
  C(() => {
  }), y([() => e.transitionState, l, i], (t, s) => {
    r.default !== l.value && (i.value = l.value, l.value = r.default, n.value = e.transitionState);
  }, {
    immediate: !0
  }), y(() => e.state, () => {
    e.state != null && (n.value = e.state);
  });
  const g = () => [!0, !1, "enter", "leave"].includes(e.state), v = (t) => {
    n.value === "enter" ? e.didEnter(t) : n.value === "leave" && (l.value = null, i.value = null, e.didLeave(t)), e.onRest(t);
  }, S = (t) => {
    n.value === "enter" ? e.willEnter(t) : n.value === "leave" && e.willLeave(t), e.onStart(t);
  };
  return () => {
    const {
      enter: t,
      leave: s,
      ...m
    } = e, d = g();
    let u, o, f = JSON.parse(JSON.stringify(n.value));
    if (d)
      u = r.default, f = e.state;
    else if (l == null && i == null)
      return null;
    return f === "enter" ? (o = t, d || (u = l.value)) : f === "leave" && (o = s, d || (u = i.value)), {
      ...m
    }, E(L, {
      ...m,
      type: o,
      onStart: S,
      onRest: v
    }, {
      default: typeof u == "function" ? (F) => u(F) : (
        // @ts-ignore
        () => null
      )
    });
  };
}, {
  props: N,
  name: "StyledTransition"
});
export {
  b as default,
  N as vuePropsType
};
//# sourceMappingURL=StyledTransition.js.map
