import { defineComponent as $, onActivated as N } from "vue";
import A from "classnames";
import { types as h, speeds as D, delays as _, loops as E } from "@douyinfe/semi-animation-styled";
import l from "./utils/noop";
import s from "./utils/invokeFns";
const L = Object.values(h).reduce((t, i) => [...t, ...i], []), T = {
  state: [Object, String, Boolean, Function],
  willEnter: [Object, String, Boolean, Function],
  didEnter: [Object, String, Boolean, Function],
  willLeave: [Object, String, Boolean, Function],
  didLeave: [Object, String, Boolean, Function],
  from: [Object, String, Boolean, Function],
  motion: [Object, String, Boolean, Function],
  name: [Object, String, Boolean, Function],
  position: [Object, String, Boolean, Function],
  transitionState: String,
  className: String,
  type: [Object, String],
  style: [Object, String],
  speed: {
    type: [Number, String],
    default: "faster"
  },
  delay: [Number, String],
  reverse: [Number, String],
  loop: [Number, String],
  onStart: {
    type: Function,
    default: l
  },
  onFrame: {
    type: Function,
    default: l
  },
  onRest: {
    type: Function,
    default: l
  },
  prefixCls: {
    type: String,
    default: "semi"
  },
  timing: String,
  duration: [Number, String],
  fillMode: String
}, I = /* @__PURE__ */ $((t, {
  slots: i
}) => {
  N(() => {
  });
  const d = (n, o = {}) => ({
    onAnimationiteration: (...e) => s([n, o.onFrame], e),
    onAnimationstart: (...e) => s([n, o.onStart], e),
    onAnimationend: (...e) => s([n, o.onRest], e)
  }), S = (n = t.speed) => n != null && D.includes(n), g = (n = t.type) => n != null && L.includes(n), p = (n = t.delay) => n != null && _.includes(n), y = (n = t.loop) => n != null && E.includes(n);
  return () => {
    let {
      type: n,
      speed: o,
      duration: e,
      delay: r,
      loop: m,
      reverse: f,
      prefixCls: a,
      timing: b,
      className: F,
      fillMode: C
    } = t;
    const j = g(), O = S(), c = p(), u = y(), v = F || A(`${a}-animated`, {
      [`${a}-${n}`]: !!n,
      // How to use it before compatibility
      [`${a}-speed-${o}`]: O,
      [`${a}-delay-${r}`]: c,
      [`${a}-loop-${m}`]: u
    }), B = {
      animationTimingFunction: b,
      animationName: !j && n,
      animationDuration: e,
      animationDelay: !c && r,
      animationIterationCount: !u && m,
      animationDirection: f ? "alternate" : "normal",
      animationFillMode: C
    };
    return i.default ? i.default({
      animateCls: v,
      animateStyle: B,
      animateEvents: d(null, t)
    }) : null;
  };
}, {
  props: T,
  name: "StyledAnimation"
});
export {
  I as default,
  T as vuePropsType
};
//# sourceMappingURL=StyledAnimation.js.map
