{"version":3,"file":"index.js","sources":["../../src/components/switch/index.tsx"],"sourcesContent":["/* eslint-disable max-len */\nimport cls from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport SwitchFoudation, { SwitchAdapter } from '@douyinfe/semi-foundation/switch/foundation';\nimport { cssClasses, strings } from '@douyinfe/semi-foundation/switch/constants';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport '@douyinfe/semi-foundation/switch/switch.scss';\n\nimport { noop } from 'lodash';\nimport Spin from '../spin';\nimport {\n  ComponentObjectPropsOptions,\n  CSSProperties,\n  defineComponent,\n  h,\n  onMounted,\n  onUnmounted,\n  PropType,\n  reactive,\n  ref,\n  useSlots,\n  VNode,\n  watch,\n} from 'vue';\nimport { AriaAttributes } from '../AriaAttributes';\nimport { symbol, vuePropsMake } from '../PropTypes';\nimport { TimeInputProps } from '../timePicker';\nimport { CombineProps } from '../interface';\nexport interface SwitchProps {\n  'aria-label'?: AriaAttributes['aria-label'];\n  'aria-describedby'?: AriaAttributes['aria-describedby'];\n  'aria-errormessage'?: AriaAttributes['aria-errormessage'];\n  'aria-invalid'?: AriaAttributes['aria-invalid'];\n  'aria-labelledby'?: AriaAttributes['aria-labelledby'];\n  defaultChecked?: boolean;\n  checked?: boolean;\n  disabled?: boolean;\n  onChange?: (checked: boolean, e: any) => void;\n  loading?: boolean;\n  className?: string;\n  style?: CSSProperties;\n  onMouseEnter?: (e: MouseEvent) => any;\n  onMouseLeave?: (e: MouseEvent) => any;\n  size?: 'large' | 'default' | 'small';\n  checkedText?: VNode | string;\n  uncheckedText?: VNode | string;\n  id?: string;\n}\n\nexport interface SwitchState {\n  nativeControlChecked: boolean;\n  nativeControlDisabled: boolean;\n  focusVisible: boolean;\n}\n\nconst propTypes: CombineProps<SwitchProps> = {\n  'aria-label': PropTypes.string,\n  'aria-labelledby': PropTypes.string,\n  'aria-invalid': [PropTypes.bool, PropTypes.string] as PropType<SwitchProps['aria-invalid']>,\n  'aria-errormessage': PropTypes.string,\n  'aria-describedby': PropTypes.string,\n  className: PropTypes.string,\n  checked: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  checkedText: PropTypes.node as PropType<SwitchProps['checkedText']>,\n  defaultChecked: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  disabled: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  loading: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  onChange: PropTypes.func as PropType<SwitchProps['onChange']>,\n  onMouseEnter: PropTypes.func as PropType<SwitchProps['onMouseEnter']>,\n  onMouseLeave: PropTypes.func as PropType<SwitchProps['onMouseLeave']>,\n  style: PropTypes.object,\n  size: String as PropType<SwitchProps['size']>,\n  uncheckedText: PropTypes.node as PropType<SwitchProps['uncheckedText']>,\n  id: PropTypes.string,\n};\n\nconst defaultProps: Partial<SwitchProps> = {\n  disabled: false,\n  className: '',\n  onChange: noop,\n  loading: false,\n  onMouseEnter: noop,\n  onMouseLeave: noop,\n  size: 'default',\n};\nexport const vuePropsType = vuePropsMake<SwitchProps>(propTypes, defaultProps);\nconst Switch = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Switch',\n  setup(props, {}) {\n    const slots = useSlots();\n\n    const state = reactive<SwitchState>({\n      nativeControlChecked: props.defaultChecked || props.checked,\n      nativeControlDisabled: false,\n      focusVisible: false,\n    });\n\n    const switchRef = ref();\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent<SwitchProps>(props, state);\n\n    const inputKey = ref(symbol());\n\n    function adapter_(): SwitchAdapter<SwitchProps, SwitchState> {\n      return {\n        ...adapterInject<SwitchProps, SwitchState>(),\n        setNativeControlChecked: (nativeControlChecked: boolean): void => {\n          state.nativeControlChecked = nativeControlChecked;\n        },\n        setNativeControlDisabled: (nativeControlDisabled: boolean): void => {\n          state.nativeControlDisabled = nativeControlDisabled;\n        },\n        setFocusVisible: (focusVisible: boolean): void => {\n          state.focusVisible = focusVisible;\n        },\n        notifyChange: (checked: boolean, e: any): void => {\n          props.onChange(checked, e);\n          inputKey.value = symbol();\n        },\n      };\n    }\n    const adapter = adapter_();\n    const foundation = new SwitchFoudation(adapter);\n\n    onMounted(() => {\n      foundation.init();\n    });\n\n    onUnmounted(() => {\n      foundation.init();\n    });\n\n    watch(\n      () => props.checked,\n      () => {\n        foundation.setChecked(props.checked);\n      }\n    );\n    watch(\n      () => props.disabled,\n      () => {\n        foundation.setDisabled(props.disabled);\n      }\n    );\n\n    const handleFocusVisible = (event: FocusEvent) => {\n      foundation.handleFocusVisible(event);\n    };\n\n    const handleBlur = (event: FocusEvent) => {\n      foundation.handleBlur();\n    };\n\n    return () => {\n      const { nativeControlChecked, nativeControlDisabled, focusVisible } = state;\n      const { className, style, onMouseEnter, onMouseLeave, size, checkedText, uncheckedText, loading, id } = props;\n      const wrapperCls = cls(className, {\n        [cssClasses.PREFIX]: true,\n        [cssClasses.CHECKED]: nativeControlChecked,\n        [cssClasses.DISABLED]: nativeControlDisabled,\n        [cssClasses.LARGE]: size === 'large',\n        [cssClasses.SMALL]: size === 'small',\n        [cssClasses.LOADING]: loading,\n        [cssClasses.FOCUS]: focusVisible,\n      });\n      const switchProps = {\n        type: 'checkbox',\n        className: cssClasses.NATIVE_CONTROL,\n        disabled: nativeControlDisabled || loading,\n        checked: nativeControlChecked || false,\n      };\n      const showCheckedText = checkedText && nativeControlChecked && size !== 'small';\n      const showUncheckedText = uncheckedText && !nativeControlChecked && size !== 'small';\n      return (\n        <div\n          class={wrapperCls}\n          style={style}\n          onMouseenter={onMouseEnter}\n          onMouseleave={onMouseLeave}\n          {...getDataAttr()}\n        >\n          {loading ? (\n            <Spin wrapperClassName={cssClasses.LOADING_SPIN} size={size === 'default' ? 'middle' : size} />\n          ) : (\n            <div class={cssClasses.KNOB} aria-hidden={true} />\n          )}\n          {showCheckedText ? (\n            <div class={cssClasses.CHECKED_TEXT} x-semi-prop=\"checkedText\">\n              {checkedText}\n            </div>\n          ) : null}\n          {showUncheckedText ? (\n            <div class={cssClasses.UNCHECKED_TEXT} x-semi-prop=\"uncheckedText\">\n              {uncheckedText}\n            </div>\n          ) : null}\n          <input\n            {...switchProps}\n            ref={switchRef}\n            key={inputKey.value}\n            id={id}\n            role=\"switch\"\n            aria-checked={nativeControlChecked}\n            aria-invalid={props['aria-invalid']}\n            aria-errormessage={props['aria-errormessage']}\n            aria-label={props['aria-label']}\n            aria-labelledby={props['aria-labelledby']}\n            aria-describedby={props['aria-describedby']}\n            aria-disabled={props['disabled']}\n            onChange={(e) => {\n              // @ts-ignore\n              foundation.handleChange(e.target.checked, e);\n            }}\n            onFocus={(e) => handleFocusVisible(e)}\n            onBlur={(e) => handleBlur(e)}\n          />\n        </div>\n      );\n    };\n  },\n});\n\nexport default Switch;\n"],"names":["propTypes","PropTypes","string","bool","className","checked","type","default","undefined","checkedText","node","defaultChecked","disabled","loading","onChange","func","onMouseEnter","onMouseLeave","style","object","size","String","uncheckedText","id","defaultProps","noop","vuePropsType","vuePropsMake","Switch","defineComponent","props","name","setup","useSlots","state","reactive","nativeControlChecked","nativeControlDisabled","focusVisible","switchRef","ref","adapter","adapterInject","getDataAttr","useBaseComponent","inputKey","symbol","adapter_","setNativeControlChecked","setNativeControlDisabled","setFocusVisible","notifyChange","e","value","foundation","SwitchFoudation","onMounted","init","onUnmounted","watch","setChecked","setDisabled","handleFocusVisible","event","handleBlur","wrapperCls","cls","cssClasses","PREFIX","CHECKED","DISABLED","LARGE","SMALL","LOADING","FOCUS","switchProps","NATIVE_CONTROL","showCheckedText","showUncheckedText","_createVNode","_mergeProps","Spin","LOADING_SPIN","KNOB","CHECKED_TEXT","UNCHECKED_TEXT","handleChange","target"],"mappings":"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"}