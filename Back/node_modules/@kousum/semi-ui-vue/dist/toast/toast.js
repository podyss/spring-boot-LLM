import { defineComponent as L, useSlots as N, reactive as _, ref as j, onMounted as B, onBeforeUnmount as F, createVNode as n, cloneVNode as g } from "vue";
import x from "classnames";
import * as t from "../PropTypes";
import { vuePropsMake as R } from "../PropTypes";
import V from '@douyinfe/semi-foundation/lib/es/toast/toastFoundation';
import { cssClasses as q, numbers as O } from '@douyinfe/semi-foundation/lib/es/toast/constants';
import U from "../iconButton/index";
import { IconClose as X, IconAlertTriangle as D, IconTickCircle as G, IconInfoCircle as H, IconAlertCircle as J } from "@kousum/semi-icons-vue";
import { noop as y } from "lodash";
import { isSemiIcon as K } from "../_utils";
import { useConfigContext as Q } from "../configProvider/context/Consumer";
import { useBaseComponent as Y } from "../_base/baseComponent";
const o = q.PREFIX, Z = {
  onClose: t.func,
  content: {
    type: t.node,
    required: !0
  },
  close: t.func,
  duration: t.number,
  theme: String,
  type: String,
  textMaxWidth: t.oneOfType([t.string, t.number]),
  style: t.object,
  className: t.string,
  showClose: t.bool,
  stack: t.bool,
  stackExpanded: t.bool,
  onAnimationEnd: t.func,
  onAnimationStart: t.func,
  positionInList: t.object,
  icon: t.node,
  direction: String,
  id: String,
  top: [t.string, t.number],
  bottom: [t.string, t.number],
  left: [t.string, t.number],
  right: [t.string, t.number],
  zIndex: t.number,
  getPopupContainer: t.func
}, tt = {
  onClose: y,
  content: "",
  close: y,
  duration: O.duration,
  textMaxWidth: 450,
  showClose: !0,
  stack: !1,
  stackExpanded: !1,
  theme: "normal"
}, et = R(Z, tt), ft = /* @__PURE__ */ L({
  props: {
    ...et
  },
  name: "Toast",
  setup(e, {
    expose: h
  }) {
    N();
    const {
      context: b
    } = Q(), I = _({});
    let a = j();
    const {
      adapter: T
    } = Y(e, I);
    function $() {
      return {
        ...T(),
        notifyWrapperToRemove: (s) => {
          e.close(s);
        },
        notifyClose: () => {
          e.onClose();
        }
      };
    }
    const v = $(), r = new V(v);
    B(() => {
      r.init();
    }), F(() => {
      r.destroy();
    });
    function f(s) {
      r.close(s);
    }
    const S = () => {
      r.clearCloseTimer_();
    }, k = () => {
      r.startCloseTimer_();
    };
    function M() {
      const {
        type: s,
        icon: i
      } = e, l = {
        warning: n(D, null, null),
        success: n(G, null, null),
        info: n(H, null, null),
        error: n(J, null, null)
      }[s], c = "large", m = x(`${o}-icon`, `${o}-icon-${s}`);
      return i ? K(i) ? g(i, {
        size: c,
        class: `${o}-icon`
      }) : i : s && l ? g(l, {
        size: c,
        class: m
      }) : null;
    }
    return h({
      foundation: r,
      close: f
    }), () => {
      const {
        content: s,
        type: i,
        theme: u,
        showClose: l,
        textMaxWidth: c,
        className: m,
        style: A
      } = e, E = e.direction || b.value.direction, z = x(o, m, {
        [`${o}-${i}`]: !0,
        [`${o}-${u}`]: u === "light",
        [`${o}-rtl`]: E === "rtl"
      }), p = {};
      p.maxWidth = c;
      const w = "borderless", P = "small", W = e.positionInList ? e.positionInList.length - e.positionInList.index - 1 : 0, C = n("div", {
        ref: a,
        role: "alert",
        "aria-label": `${i || "default"} type`,
        class: z,
        style: {
          ...A,
          transform: `translate3d(0,0,${W * -10}px)`
        },
        onMouseenter: S,
        onMouseleave: k,
        onAnimationstart: e.onAnimationStart,
        onAnimationend: e.onAnimationEnd
      }, [n("div", {
        class: `${o}-content`
      }, [M(), n("span", {
        class: `${o}-content-text`,
        style: p,
        "x-semi-prop": "content"
      }, [s]), l && n("div", {
        class: `${o}-close-button`
      }, [n(U, {
        onClick: (d) => f(d),
        type: "tertiary",
        icon: n(X, {
          "x-semi-prop": "icon"
        }, null),
        theme: w,
        size: P
      }, null)])])]);
      if (e.stack) {
        const d = e.stackExpanded && a.value && getComputedStyle(a.value).height || 0;
        return n("div", {
          class: `${o}-zero-height-wrapper`,
          style: {
            height: d
          }
        }, [C]);
      } else
        return C;
    };
  }
});
export {
  ft as default,
  Z as propTypes,
  et as vuePropsType
};
//# sourceMappingURL=toast.js.map
