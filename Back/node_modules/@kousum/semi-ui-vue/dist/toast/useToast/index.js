import { ref as d, watch as y, createVNode as m, Fragment as p, mergeProps as h, unref as g } from "vue";
import w from '@douyinfe/semi-foundation/lib/es/utils/uuid';
import E from "./HookToast";
import { noop as M } from "lodash";
const s = {
  motion: !0,
  zIndex: 1010,
  duration: 3
};
function T() {
  const t = d([]);
  function c(l, n) {
    return t.value = [{
      element: l,
      config: n
    }, ...g(t)], (a) => {
      t.value = g(t).filter(({
        config: u
      }) => u.id !== a);
    };
  }
  return [t, c];
}
function F() {
  const [t, c] = T(), l = /* @__PURE__ */ new Map(), n = (e) => {
    const o = w("semi_toast_"), i = {
      ...e,
      id: o
    };
    let f;
    const v = m(E, h(i, {
      key: o,
      afterClose: (r) => f(r),
      onMyMounted: (r) => {
        l.set(o, {
          close: (r == null ? void 0 : r.close) ?? M
        });
      }
    }), null);
    return f = c(v, {
      ...i
    }), o;
  }, a = (e) => {
    const o = l.get(e);
    o && o.close();
  }, u = d();
  return y(() => t.value, (e) => {
    u.value = m(p, null, [Array.isArray(t.value) && t.value.length ? m(p, null, [t.value.map((o) => o.element)]) : null]);
  }), [{
    success: (e) => n({
      ...s,
      ...e,
      type: "success"
    }),
    info: (e) => n({
      ...s,
      ...e,
      type: "info"
    }),
    error: (e) => n({
      ...s,
      ...e,
      type: "error"
    }),
    warning: (e) => n({
      ...s,
      ...e,
      type: "warning"
    }),
    open: (e) => n({
      ...s,
      ...e,
      type: "default"
    }),
    close: (e) => a(e)
  }, u];
}
export {
  F as default
};
//# sourceMappingURL=index.js.map
