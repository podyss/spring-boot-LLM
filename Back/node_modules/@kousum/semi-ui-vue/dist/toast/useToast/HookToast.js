import { defineComponent as r, useSlots as u, ref as l, onMounted as a, watch as i, createVNode as c, mergeProps as f } from "vue";
import p, { propTypes as d } from "../toast";
import { useHasInProps as m } from "../../_base/baseComponent";
const y = {
  ...d,
  content: void 0,
  id: String,
  motion: Boolean,
  afterClose: {
    type: Function,
    required: !0
  },
  onMyMounted: {
    type: Function,
    required: !0
  }
}, P = /* @__PURE__ */ r({
  props: {
    ...y
  },
  name: "HookToast",
  setup(o, {
    expose: v
  }) {
    u();
    const {
      getProps: t
    } = m(), e = l(), n = () => {
      e.value = !1;
    };
    return a(() => {
      o.onMyMounted({
        close: () => {
          e.value = !1;
        }
      });
    }), i(e, () => {
      e.value || o.afterClose(o.id);
    }), () => {
      const {
        afterClose: M,
        ...s
      } = t(o);
      return e ? c(p, f(s, {
        close: n
      }), null) : null;
    };
  }
});
export {
  P as default,
  y as vuePropsType
};
//# sourceMappingURL=HookToast.js.map
