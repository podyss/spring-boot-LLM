import { defineComponent as I, useAttrs as k, reactive as w, onMounted as C, onUnmounted as x, useSlots as A, createVNode as e, mergeProps as y, isVNode as E } from "vue";
import T from "classnames";
import { cssClasses as V } from '@douyinfe/semi-foundation/lib/es/empty/constants';
import '@douyinfe/semi-foundation/lib/es/empty/empty.css';
import { Title as D } from "../typography";
import F from '@douyinfe/semi-foundation/lib/es/utils/getDataAttr';
import { useHasInProps as H } from "../_base/baseComponent";
function L(s) {
  return typeof s == "function" || Object.prototype.toString.call(s) === "[object Object]" && !E(s);
}
const o = V.PREFIX, R = {
  layout: {
    type: String,
    default: "vertical"
  },
  imageStyle: [Object, String],
  title: [Object, String],
  description: [Object, String],
  image: [Object, String],
  darkModeImage: [Object, String],
  style: [Object, String],
  className: [String]
}, G = /* @__PURE__ */ I({
  props: {
    ...R
  },
  name: "Empty",
  setup(s) {
    const {
      getProps: b
    } = H(), v = k();
    let d, r;
    const m = w({
      mode: null
    });
    C(() => {
      if (s.darkModeImage) {
        d = window.document.body, u();
        const t = {
          attributes: !0,
          childList: !1,
          subtree: !1
        };
        r = new MutationObserver(S), r.observe(d, t);
      }
    }), x(() => {
      r && r.disconnect();
    });
    const S = (t) => {
      for (const l of t)
        l.type === "attributes" && l.attributeName === "theme-mode" && u();
    }, u = () => {
      const t = d.getAttribute("theme-mode");
      t !== m.mode && (m.mode = t);
    }, p = A();
    return () => {
      const t = p.default ? p.default() : null, {
        className: l,
        image: h,
        description: a,
        style: j,
        title: c,
        imageStyle: O,
        layout: f,
        darkModeImage: g,
        ...$
      } = b(s), N = typeof a == "string" ? a : "empty", i = m.mode && g ? g : h;
      let n = null;
      typeof i == "string" ? n = e("img", {
        alt: N,
        src: i
      }, null) : i && "id" in i ? n = e("svg", {
        "aria-hidden": "true"
      }, [e("use", {
        "xlink:href": `#${i.id}`
      }, null)]) : n = i;
      const M = T(l, o, {
        [`${o}-${f}`]: f
      }), P = n ? {
        heading: 4
      } : {
        heading: 6,
        style: {
          fontWeight: 400
        }
      };
      return e("div", y({
        class: M,
        style: j
      }, F({
        ...$,
        ...v
      })), [e("div", {
        class: `${o}-image`,
        style: O
      }, [n]), e("div", {
        class: `${o}-content`
      }, [c ? e(D, y(P, {
        className: `${o}-title`
      }), L(c) ? c : {
        default: () => [c]
      }) : null, a ? e("div", {
        class: `${o}-description`
      }, [a]) : null, t ? e("div", {
        class: `${o}-footer`
      }, [t]) : null])]);
    };
  }
});
export {
  G as default,
  R as vuePropsType
};
//# sourceMappingURL=index.js.map
