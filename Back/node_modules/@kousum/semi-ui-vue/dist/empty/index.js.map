{"version":3,"file":"index.js","sources":["../../src/components/empty/index.tsx"],"sourcesContent":["import {\n  defineComponent,\n  ref,\n  h,\n  Fragment,\n  CSSProperties,\n  VNode,\n  reactive,\n  onMounted,\n  onUnmounted,\n  useSlots,\n  useAttrs,\n  ComponentObjectPropsOptions,\n  PropType,\n} from 'vue';\nimport cls from 'classnames';\nimport { cssClasses, strings } from '@douyinfe/semi-foundation/empty/constants';\nimport '@douyinfe/semi-foundation/empty/empty.scss';\nimport { Title } from '../typography';\nimport { ArrayElement } from '../_base/base';\nimport getDataAttr from '@douyinfe/semi-foundation/utils/getDataAttr';\nimport { useHasInProps } from '../_base/baseComponent';\nimport { CombineProps } from '../interface';\n\nconst prefixCls = cssClasses.PREFIX;\n\ninterface SVGNode {\n  id?: string;\n  viewBox?: string;\n  url?: string;\n}\n\nexport interface EmptyProps {\n  layout?: ArrayElement<typeof strings.LAYOUT>;\n  imageStyle?: CSSProperties;\n  title?: VNode | string;\n  description?: VNode | string;\n  image?: VNode | string | SVGNode;\n  darkModeImage?: VNode | string | SVGNode;\n  style?: CSSProperties;\n  className?: string;\n}\n\ninterface EmptyState {\n  mode: any;\n}\n\nexport const vuePropsType: CombineProps<EmptyProps> = {\n  layout: { type: String as PropType<EmptyProps['layout']>, default: 'vertical' },\n  imageStyle: [Object, String] as PropType<EmptyProps['imageStyle']>,\n  title: [Object, String],\n  description: [Object, String],\n  image: [Object, String],\n  darkModeImage: [Object, String],\n  style: [Object, String] as PropType<EmptyProps['style']>,\n  className: [String],\n};\n\nconst Empty = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Empty',\n  setup(props) {\n    const {getProps} = useHasInProps()\n    const attr = useAttrs();\n    let body: any;\n    let observer: MutationObserver;\n\n    const state = reactive({\n      mode: null,\n    });\n\n    onMounted(() => {\n      if (props.darkModeImage) {\n        body = window.document.body;\n        updateMode();\n        const config = { attributes: true, childList: false, subtree: false };\n        observer = new MutationObserver(observe);\n        observer.observe(body, config);\n      }\n    });\n\n    onUnmounted(() => {\n      observer && observer.disconnect();\n    });\n    const observe = (mutationsList: any): void => {\n      for (const mutation of mutationsList) {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'theme-mode') {\n          updateMode();\n        }\n      }\n    };\n\n    const updateMode = (): void => {\n      const val = body.getAttribute('theme-mode');\n      if (val !== state.mode) {\n        state.mode = val;\n      }\n    };\n    const slots = useSlots();\n    return () => {\n      const children = slots.default ? slots.default() : null;\n      const { className, image, description, style, title, imageStyle, layout, darkModeImage, ...rest } = getProps(props);\n\n      const alt = typeof description === 'string' ? description : 'empty';\n      const imgSrc = state.mode && darkModeImage ? darkModeImage : image;\n      let imageNode = null;\n      if (typeof imgSrc === 'string') {\n        imageNode = <img alt={alt} src={imgSrc} />;\n      } else if (imgSrc && 'id' in (imgSrc as any)) {\n        imageNode = (\n          <svg\n            // className={iconCls}\n            aria-hidden=\"true\"\n          >\n            <use xlinkHref={`#${(imgSrc as any).id}`} />\n          </svg>\n        );\n      } else {\n        imageNode = imgSrc;\n      }\n      const wrapperCls = cls(className, prefixCls, {\n        [`${prefixCls}-${layout}`]: layout,\n      });\n\n      const titleProps = imageNode\n        ? {\n            heading: 4,\n          }\n        : {\n            heading: 6,\n            style: { fontWeight: 400 },\n          };\n      return (\n        <div class={wrapperCls} style={style} {...getDataAttr({ ...rest, ...attr })}>\n          <div class={`${prefixCls}-image`} style={imageStyle}>\n            {imageNode}\n          </div>\n          <div class={`${prefixCls}-content`}>\n            {title ? (\n              <Title {...(titleProps as any)} className={`${prefixCls}-title`}>\n                {title}\n              </Title>\n            ) : null}\n            {description ? <div class={`${prefixCls}-description`}>{description}</div> : null}\n            {children ? <div class={`${prefixCls}-footer`}>{children}</div> : null}\n          </div>\n        </div>\n      );\n    };\n  },\n});\n\nexport default Empty;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","prefixCls","cssClasses","PREFIX","vuePropsType","layout","type","String","default","imageStyle","title","description","image","darkModeImage","style","className","Empty","defineComponent","props","name","setup","getProps","useHasInProps","attr","useAttrs","body","observer","state","reactive","mode","onMounted","window","document","updateMode","config","attributes","childList","subtree","MutationObserver","observe","onUnmounted","disconnect","mutationsList","mutation","attributeName","val","getAttribute","slots","useSlots","children","rest","alt","imgSrc","imageNode","_createVNode","id","wrapperCls","cls","titleProps","heading","fontWeight","_mergeProps","getDataAttr","Title"],"mappings":"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"}