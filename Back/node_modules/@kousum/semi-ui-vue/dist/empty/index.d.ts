import { CSSProperties, VNode, PropType } from 'vue';
import { strings } from '@douyinfe/semi-foundation/lib/es/empty/constants';
import '@douyinfe/semi-foundation/lib/es/empty/empty.css';
import { ArrayElement } from '../_base/base';
import { CombineProps } from '../interface';
interface SVGNode {
    id?: string;
    viewBox?: string;
    url?: string;
}
export interface EmptyProps {
    layout?: ArrayElement<typeof strings.LAYOUT>;
    imageStyle?: CSSProperties;
    title?: VNode | string;
    description?: VNode | string;
    image?: VNode | string | SVGNode;
    darkModeImage?: VNode | string | SVGNode;
    style?: CSSProperties;
    className?: string;
}
export declare const vuePropsType: CombineProps<EmptyProps>;
declare const Empty: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    layout: PropType<"horizontal" | "vertical"> | {
        type: PropType<"horizontal" | "vertical">;
        default?: any;
        required?: false;
    };
    imageStyle: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    title: PropType<string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>> | {
        type: PropType<string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
            [key: string]: any;
        }>>;
        default?: any;
        required?: false;
    };
    description: PropType<string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>> | {
        type: PropType<string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
            [key: string]: any;
        }>>;
        default?: any;
        required?: false;
    };
    image: PropType<string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }> | SVGNode> | {
        type: PropType<string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
            [key: string]: any;
        }> | SVGNode>;
        default?: any;
        required?: false;
    };
    darkModeImage: PropType<string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }> | SVGNode> | {
        type: PropType<string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
            [key: string]: any;
        }> | SVGNode>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    layout: PropType<"horizontal" | "vertical"> | {
        type: PropType<"horizontal" | "vertical">;
        default?: any;
        required?: false;
    };
    imageStyle: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    title: PropType<string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>> | {
        type: PropType<string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
            [key: string]: any;
        }>>;
        default?: any;
        required?: false;
    };
    description: PropType<string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>> | {
        type: PropType<string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
            [key: string]: any;
        }>>;
        default?: any;
        required?: false;
    };
    image: PropType<string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }> | SVGNode> | {
        type: PropType<string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
            [key: string]: any;
        }> | SVGNode>;
        default?: any;
        required?: false;
    };
    darkModeImage: PropType<string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }> | SVGNode> | {
        type: PropType<string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
            [key: string]: any;
        }> | SVGNode>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default Empty;
