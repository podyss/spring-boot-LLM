{"version":3,"file":"attachment.js","sources":["../../src/components/chat/attachment.tsx"],"sourcesContent":["import { FileItem } from '../upload/interface';\nimport Image from '../image';\nimport { IconBriefStroked, IconClear } from '@kousum/semi-icons-vue';\nimport { strings, cssClasses } from '@douyinfe/semi-foundation/chat/constants';\nimport cls from 'classnames';\nimport Progress from '../progress';\n\n\nconst { PREFIX_ATTACHMENT } = cssClasses;\nconst { PIC_SUFFIX_ARRAY, PIC_PREFIX } = strings;\n\ninterface AttachmentProps {\n  className?: string;\n  attachment?: FileItem[];\n  onClear?: (item: FileItem) => void;\n  showClear?: boolean;\n}\n\ninterface FileProps {\n  url?: string;\n  name?: string;\n  size?: string;\n  type?: string;\n}\n\nexport const FileAttachment = (props: FileProps) => {\n  const { url, name, size, type } = props;\n  return (\n    <a href={url} target=\"_blank\" class={`${PREFIX_ATTACHMENT}-file`} rel=\"noreferrer\">\n      <IconBriefStroked size=\"extra-large\" class={`${PREFIX_ATTACHMENT}-file-icon`} />\n      <div class={`${PREFIX_ATTACHMENT}-file-info`}>\n        <span class={`${PREFIX_ATTACHMENT}-file-title`}>{name}</span>\n        <span class={`${PREFIX_ATTACHMENT}-file-metadata`}>\n          <span class={`${PREFIX_ATTACHMENT}-file-type`}>{type}</span>\n          {type ? ' Â· ' : ''}\n          {size}\n        </span>\n      </div>\n    </a>\n  );\n};\n\nexport const ImageAttachment = (props: { src: string }) => {\n  const { src } = props;\n  return <Image class={`${PREFIX_ATTACHMENT}-img`} width={60} height={60} src={src} />;\n};\n\nconst Attachment = (props: AttachmentProps) => {\n  const { attachment, onClear, showClear = true, className } = props;\n\n  return (\n    <div class={cls(PREFIX_ATTACHMENT, { [className]: className })}>\n      {attachment.map((item) => {\n        const { percent, status } = item;\n        const suffix = item?.name.split('.').pop();\n        const isImg = item?.fileInstance?.type?.startsWith(PIC_PREFIX) || PIC_SUFFIX_ARRAY.includes(suffix);\n        const realType = suffix ?? item?.fileInstance?.type?.split('/').pop();\n        const showProcess = !(percent === 100 || typeof percent === 'undefined') && status === 'uploading';\n        return (\n          <div class={`${PREFIX_ATTACHMENT}-item`} key={item.uid}>\n            {isImg ? (\n              <ImageAttachment src={item.url} />\n            ) : (\n              <FileAttachment url={item.url} name={item.name} size={item.size} type={realType} />\n            )}\n            {showClear && (\n              <IconClear\n                size=\"large\"\n                class={`${PREFIX_ATTACHMENT}-clear`}\n                onClick={() => {\n                  onClear && onClear(item);\n                }}\n              />\n            )}\n            {showProcess && (\n              <Progress\n                percent={percent}\n                type=\"circle\"\n                size=\"small\"\n                width={30}\n                class={`${PREFIX_ATTACHMENT}-process`}\n                aria-label=\"upload progress\"\n              />\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Attachment;\n"],"names":["PREFIX_ATTACHMENT","cssClasses","PIC_SUFFIX_ARRAY","PIC_PREFIX","strings","FileAttachment","props","url","name","size","type","_createVNode","IconBriefStroked","ImageAttachment","src","Image","Attachment","attachment","onClear","showClear","className","cls","map","item","percent","status","suffix","split","pop","isImg","fileInstance","startsWith","includes","realType","showProcess","uid","IconClear","onClick","Progress"],"mappings":"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"}