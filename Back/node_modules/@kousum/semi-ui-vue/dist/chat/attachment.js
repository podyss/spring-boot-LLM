import { createVNode as l } from "vue";
import y from "../image";
import { IconBriefStroked as m, IconClear as C } from "@kousum/semi-icons-vue";
import { cssClasses as A, strings as z } from '@douyinfe/semi-foundation/lib/es/chat/constants';
import P from "classnames";
import F from "../progress";
const {
  PREFIX_ATTACHMENT: e
} = A, {
  PIC_SUFFIX_ARRAY: _,
  PIC_PREFIX: k
} = z, w = (r) => {
  const {
    url: a,
    name: c,
    size: t,
    type: n
  } = r;
  return l("a", {
    href: a,
    target: "_blank",
    class: `${e}-file`,
    rel: "noreferrer"
  }, [l(m, {
    size: "extra-large",
    class: `${e}-file-icon`
  }, null), l("div", {
    class: `${e}-file-info`
  }, [l("span", {
    class: `${e}-file-title`
  }, [c]), l("span", {
    class: `${e}-file-metadata`
  }, [l("span", {
    class: `${e}-file-type`
  }, [n]), n ? " Â· " : "", t])])]);
}, R = (r) => {
  const {
    src: a
  } = r;
  return l(y, {
    class: `${e}-img`,
    width: 60,
    height: 60,
    src: a
  }, null);
}, b = (r) => {
  const {
    attachment: a,
    onClear: c,
    showClear: t = !0,
    className: n
  } = r;
  return l("div", {
    class: P(e, {
      [n]: n
    })
  }, [a.map((s) => {
    var i, f, u, d;
    const {
      percent: o,
      status: g
    } = s, p = s == null ? void 0 : s.name.split(".").pop(), h = ((f = (i = s == null ? void 0 : s.fileInstance) == null ? void 0 : i.type) == null ? void 0 : f.startsWith(k)) || _.includes(p), I = p ?? ((d = (u = s == null ? void 0 : s.fileInstance) == null ? void 0 : u.type) == null ? void 0 : d.split("/").pop()), $ = !(o === 100 || typeof o > "u") && g === "uploading";
    return l("div", {
      class: `${e}-item`,
      key: s.uid
    }, [h ? l(R, {
      src: s.url
    }, null) : l(w, {
      url: s.url,
      name: s.name,
      size: s.size,
      type: I
    }, null), t && l(C, {
      size: "large",
      class: `${e}-clear`,
      onClick: () => {
        c && c(s);
      }
    }, null), $ && l(F, {
      percent: o,
      type: "circle",
      size: "small",
      width: 30,
      class: `${e}-process`,
      "aria-label": "upload progress"
    }, null)]);
  })]);
};
export {
  w as FileAttachment,
  R as ImageAttachment,
  b as default
};
//# sourceMappingURL=attachment.js.map
