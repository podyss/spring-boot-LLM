import { PropType } from 'vue';
declare const ChatContent: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    role: PropType<any> | {
        type: PropType<any>;
        default?: any;
        required?: false;
    };
    align: PropType<"leftRight" | "leftAlign"> | {
        type: PropType<"leftRight" | "leftAlign">;
        default?: any;
        required?: false;
    };
    mode: PropType<"bubble" | "noBubble" | "userBubble"> | {
        type: PropType<"bubble" | "noBubble" | "userBubble">;
        default?: any;
        required?: false;
    };
    chats: PropType<import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message[]> | {
        type: PropType<import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message[]>;
        default?: any;
        required?: false;
    };
    roleConfig: PropType<import("./interface").RoleConfig> | {
        type: PropType<import("./interface").RoleConfig>;
        default?: any;
        required?: false;
    };
    onMessageDelete: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void> | {
        type: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void>;
        default?: any;
        required?: false;
    };
    onChatsChange: PropType<(chats?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message[]) => void> | {
        type: PropType<(chats?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message[]) => void>;
        default?: any;
        required?: false;
    };
    onMessageBadFeedback: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void> | {
        type: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void>;
        default?: any;
        required?: false;
    };
    onMessageGoodFeedback: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void> | {
        type: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void>;
        default?: any;
        required?: false;
    };
    onMessageReset: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void> | {
        type: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void>;
        default?: any;
        required?: false;
    };
    onMessageCopy: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void> | {
        type: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void>;
        default?: any;
        required?: false;
    };
    chatBoxRenderConfig: PropType<import("./interface").ChatBoxRenderConfig> | {
        type: PropType<import("./interface").ChatBoxRenderConfig>;
        default?: any;
        required?: false;
    };
    customMarkDownComponents: PropType<import("mdx/types").MDXComponents> | {
        type: PropType<import("mdx/types").MDXComponents>;
        default?: any;
        required?: false;
    };
    renderDivider: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => import("vue").VNode> | {
        type: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => import("vue").VNode>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    role: PropType<any> | {
        type: PropType<any>;
        default?: any;
        required?: false;
    };
    align: PropType<"leftRight" | "leftAlign"> | {
        type: PropType<"leftRight" | "leftAlign">;
        default?: any;
        required?: false;
    };
    mode: PropType<"bubble" | "noBubble" | "userBubble"> | {
        type: PropType<"bubble" | "noBubble" | "userBubble">;
        default?: any;
        required?: false;
    };
    chats: PropType<import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message[]> | {
        type: PropType<import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message[]>;
        default?: any;
        required?: false;
    };
    roleConfig: PropType<import("./interface").RoleConfig> | {
        type: PropType<import("./interface").RoleConfig>;
        default?: any;
        required?: false;
    };
    onMessageDelete: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void> | {
        type: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void>;
        default?: any;
        required?: false;
    };
    onChatsChange: PropType<(chats?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message[]) => void> | {
        type: PropType<(chats?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message[]) => void>;
        default?: any;
        required?: false;
    };
    onMessageBadFeedback: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void> | {
        type: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void>;
        default?: any;
        required?: false;
    };
    onMessageGoodFeedback: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void> | {
        type: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void>;
        default?: any;
        required?: false;
    };
    onMessageReset: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void> | {
        type: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void>;
        default?: any;
        required?: false;
    };
    onMessageCopy: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void> | {
        type: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => void>;
        default?: any;
        required?: false;
    };
    chatBoxRenderConfig: PropType<import("./interface").ChatBoxRenderConfig> | {
        type: PropType<import("./interface").ChatBoxRenderConfig>;
        default?: any;
        required?: false;
    };
    customMarkDownComponents: PropType<import("mdx/types").MDXComponents> | {
        type: PropType<import("mdx/types").MDXComponents>;
        default?: any;
        required?: false;
    };
    renderDivider: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => import("vue").VNode> | {
        type: PropType<(message?: import("@douyinfe/semi-foundation/lib/es/chat/foundation").Message) => import("vue").VNode>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default ChatContent;
