{"version":3,"file":"index.js","sources":["../../../src/components/chat/inputBox/index.tsx"],"sourcesContent":["import { defineComponent, ref, h, Fragment, useSlots, reactive, CSSProperties, VNode, PropType } from 'vue';\nimport { CombineProps } from '../../interface';\nimport cls from 'classnames';\nimport  * as PropTypes from '../../PropTypes';\nimport { FileItem } from '../../upload/interface';\nimport { InputBoxProps, InputBoxState, RenderInputAreaProps } from '../interface';\nimport { IconDeleteStroked, IconChainStroked, IconArrowUp } from '@kousum/semi-icons-vue';\nimport { cssClasses, strings } from \"@douyinfe/semi-foundation/chat/constants\";\nimport InputBoxFoundation, { InputBoxAdapter } from '@douyinfe/semi-foundation/chat/inputboxFoundation';\nimport Attachment from '../attachment';\nimport { vuePropsMake } from '../../PropTypes';\nimport Tooltip, { TooltipProps } from '../../tooltip';\nimport Upload, { UploadProps } from '../../upload';\nimport Button from '../../button';\nimport TextArea from '../../input/textArea';\nimport { useBaseComponent } from '../../_base/baseComponent';\n\nconst { PREFIX_INPUT_BOX } = cssClasses;\nconst { SEND_HOT_KEY } = strings;\nconst textAutoSize = { minRows: 1, maxRows: 5 };\n\n\nexport const propsType: CombineProps<InputBoxProps> = {\n  showClearContext: PropTypes.bool,\n  sendHotKey: PropTypes.string as PropType<InputBoxProps['sendHotKey']>,\n  placeholder: {\n    type: PropTypes.string,\n    required: true\n  },\n  className: PropTypes.string,\n  style: PropTypes.object,\n  disableSend: PropTypes.bool,\n  uploadRef: [PropTypes.object, PropTypes.func,],\n  uploadProps: PropTypes.object as PropType<InputBoxProps['uploadProps']>,\n  uploadTipProps: PropTypes.object as PropType<InputBoxProps['uploadTipProps']>,\n  manualUpload: PropTypes.func as PropType<InputBoxProps['manualUpload']>,\n  renderInputArea: PropTypes.func as PropType<InputBoxProps['renderInputArea']>,\n  onSend: PropTypes.func as PropType<InputBoxProps['onSend']>,\n  onClearContext: PropTypes.func as PropType<InputBoxProps['onClearContext']>,\n  onInputChange: PropTypes.func as PropType<InputBoxProps['onInputChange']>,\n};\nconst vuePropsType = vuePropsMake(propsType, {\n  uploadProps: {}\n})\nconst index = defineComponent({\n  props: { ...vuePropsType },\n  name: 'index',\n  setup(props, { attrs }) {\n    const slots = useSlots();\n    const inputAreaRef = ref()\n    const state = reactive<InputBoxState>({\n      content: '',\n      attachment: []\n    })\n    const { adapter: adapterInject } = useBaseComponent(props, state)\n    function adapter_(): InputBoxAdapter<InputBoxProps, InputBoxState> {\n      return {\n        ...adapterInject(),\n        notifyInputChange: (props_: { inputValue: string; attachment: any[]}) => {\n          const { onInputChange } = props;\n          onInputChange && onInputChange(props_);\n        },\n        setInputValue: (value) => {\n          state.content = value\n        },\n        setAttachment: (attachment: any[]) => {\n          state.attachment = attachment\n        },\n        notifySend: (content: string, attachment: FileItem[]) => {\n          const { onSend } = props;\n          onSend && onSend(content, attachment);\n        }\n      };\n    }\n    const adapter = adapter_()\n    const foundation = new InputBoxFoundation(adapter);\n\n\n    const onClick = () => {\n      inputAreaRef.value?.focus();\n    }\n\n    const renderUploadButton = () => {\n      const { uploadProps, uploadRef, uploadTipProps } = props;\n      const { attachment } = state;\n      const { className, onChange, renderFileItem, ...rest } = uploadProps;\n      const children = slots.children?.()\n      const realUploadProps = {\n        ...rest,\n        className: cls(`${PREFIX_INPUT_BOX}-upload`, {\n          [className]: className\n        }),\n        onChange: foundation.onAttachmentAdd,\n      };\n      const uploadNode = <Upload\n        ref={uploadRef}\n        fileList={attachment}\n        {...realUploadProps}\n      >\n        {children ? children : <Button\n          class={`${PREFIX_INPUT_BOX}-uploadButton`}\n          icon={<IconChainStroked size=\"extra-large\" />}\n          theme='borderless'\n        />}\n      </Upload>;\n      return (uploadTipProps ? <Tooltip {...uploadTipProps}><span>{uploadNode}</span></Tooltip> : uploadNode);\n    }\n\n    const renderInputArea = () => {\n      const { content, attachment } = state;\n      const { placeholder, sendHotKey } = props;\n      return (<div\n        class={`${PREFIX_INPUT_BOX}-inputArea`}\n      >\n        <TextArea\n          placeholder={placeholder}\n          onEnterPress={foundation.onEnterPress}\n          value={content}\n          onChange={foundation.onInputAreaChange}\n          forwardRef={inputAreaRef}\n          class={`${PREFIX_INPUT_BOX}-textarea`}\n          autosize={textAutoSize}\n          disabledEnterStartNewLine={sendHotKey === SEND_HOT_KEY.ENTER}\n          onPaste={foundation.onPaste}\n        />\n        <Attachment\n          attachment={attachment}\n          onClear={foundation.onAttachmentDelete}\n        />\n      </div>);\n    }\n\n    const renderClearButton = () => {\n      const { onClearContext } = props;\n      return (\n        <Button\n          class={`${PREFIX_INPUT_BOX}-clearButton`}\n          theme='borderless'\n          icon={<IconDeleteStroked />}\n          onClick={onClearContext}\n        />\n      );\n    }\n\n    const renderSendButton = () => {\n      const disabledSend = foundation.getDisableSend();\n      return (\n        <Button\n          data-testid=\"sendButton\"\n          disabled={disabledSend}\n          theme='solid'\n          type='primary'\n          class={`${PREFIX_INPUT_BOX}-sendButton`}\n          // icon={<IconSend size=\"extra-large\" class={`${PREFIX_INPUT_BOX}-sendButton-icon`} />}\n          icon={<IconArrowUp size=\"large\" class={`${PREFIX_INPUT_BOX}-sendButton-icon`} />}\n          onClick={foundation.onSend}\n        />\n      );\n    }\n\n    return () => {\n\n      const { onClearContext, renderInputArea: renderInputArea_props, onSend, style, className, showClearContext } = props;\n      const clearNode = renderClearButton();\n      const uploadNode = renderUploadButton();\n      const inputNode = renderInputArea();\n      const sendNode = renderSendButton();\n      const nodes = (\n        <div class={cls(PREFIX_INPUT_BOX, { [className]: className })} style={style}>\n          <div\n            class={`${PREFIX_INPUT_BOX}-inner`}\n            onClick={onClick}\n          >\n            {showClearContext && clearNode}\n            <div class={`${PREFIX_INPUT_BOX}-container`}>\n              {uploadNode}\n              {inputNode}\n              {sendNode}\n            </div>\n          </div>\n        </div>\n      );\n      if (renderInputArea_props) {\n        return renderInputArea_props({\n          defaultNode: nodes,\n          onClear: onClearContext,\n          onSend: onSend,\n          detailProps: {\n            clearContextNode: clearNode,\n            uploadNode: uploadNode,\n            inputNode: inputNode,\n            sendNode: sendNode,\n            onClick: onClick,\n          }\n        });\n      }\n      return nodes;\n    };\n  },\n});\n\n\nexport default index;\n\n"],"names":["PREFIX_INPUT_BOX","cssClasses","SEND_HOT_KEY","strings","textAutoSize","minRows","maxRows","propsType","showClearContext","PropTypes","bool","sendHotKey","string","placeholder","type","required","className","style","object","disableSend","uploadRef","func","uploadProps","uploadTipProps","manualUpload","renderInputArea","onSend","onClearContext","onInputChange","vuePropsType","vuePropsMake","index","defineComponent","props","name","setup","attrs","slots","useSlots","inputAreaRef","ref","state","reactive","content","attachment","adapter","adapterInject","useBaseComponent","adapter_","notifyInputChange","props_","setInputValue","value","setAttachment","notifySend","foundation","InputBoxFoundation","onClick","focus","renderUploadButton","onChange","renderFileItem","rest","children","realUploadProps","cls","onAttachmentAdd","uploadNode","_createVNode","Upload","_mergeProps","default","Button","IconChainStroked","Tooltip","TextArea","onEnterPress","onInputAreaChange","ENTER","onPaste","Attachment","onAttachmentDelete","renderClearButton","IconDeleteStroked","renderSendButton","disabledSend","getDisableSend","IconArrowUp","renderInputArea_props","clearNode","inputNode","sendNode","nodes","defaultNode","onClear","detailProps","clearContextNode"],"mappings":"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"}