{"version":3,"file":"index.js","sources":["../../src/components/chat/index.tsx"],"sourcesContent":["import {\n  defineComponent,\n  ref,\n  h,\n  Fragment,\n  useSlots,\n  reactive,\n  watch,\n  onMounted,\n  onUnmounted,\n  PropType,\n  nextTick,\n} from 'vue';\nimport { CombineProps } from '../interface';\nimport cls from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport type { ChatProps, ChatState, Message } from './interface';\nimport InputBox from './inputBox';\nimport '@douyinfe/semi-foundation/chat/chat.scss';\nimport Hint from './hint';\nimport { IconChevronDown, IconDisc } from '@kousum/semi-icons-vue';\nimport ChatContent from './chatContent';\nimport { cssClasses, strings } from '@douyinfe/semi-foundation/chat/constants';\nimport ChatFoundation, { ChatAdapter } from '@douyinfe/semi-foundation/chat/foundation';\nimport type { FileItem } from '../upload';\nimport { Locale } from '../locale/interface';\nimport { vuePropsMake } from '../PropTypes';\nimport { LocaleConsumerFunc } from '../locale/localeConsumer';\nimport Button from '../button';\nimport { useBaseComponent } from '../_base/baseComponent';\nconst LocaleConsumer = LocaleConsumerFunc<Locale['Chat']>();\n\nconst prefixCls = cssClasses.PREFIX;\nconst { CHAT_ALIGN, MODE, SEND_HOT_KEY, MESSAGE_STATUS } = strings;\n\nexport const chatPropTypes: CombineProps<ChatProps> = {\n  role: String,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  roleConfig: PropTypes.object,\n  chats: PropTypes.array,\n  hints: PropTypes.array,\n  renderHintBox: PropTypes.func as PropType<ChatProps['renderHintBox']>,\n  onChatsChange: PropTypes.func as PropType<ChatProps['onChatsChange']>,\n  align: PropTypes.string as PropType<ChatProps['align']>,\n  chatBoxRenderConfig: PropTypes.object,\n  customMarkDownComponents: PropTypes.object,\n  onClear: PropTypes.func as PropType<ChatProps['onClear']>,\n  onMessageDelete: PropTypes.func as PropType<ChatProps['onMessageDelete']>,\n  onMessageReset: PropTypes.func as PropType<ChatProps['onMessageReset']>,\n  onMessageCopy: PropTypes.func as PropType<ChatProps['onMessageCopy']>,\n  onMessageGoodFeedback: PropTypes.func as PropType<ChatProps['onMessageGoodFeedback']>,\n  onMessageBadFeedback: PropTypes.func as PropType<ChatProps['onMessageBadFeedback']>,\n  onInputChange: PropTypes.func as PropType<ChatProps['onMessageBadFeedback']>,\n  inputContentConvert: PropTypes.func as PropType<ChatProps['inputContentConvert']>,\n  onMessageSend: PropTypes.func as PropType<ChatProps['onMessageSend']>,\n  InputBoxStyle: PropTypes.object as PropType<ChatProps['InputBoxStyle']>,\n  onHintClick: PropTypes.func as PropType<ChatProps['onHintClick']>,\n  onStopGenerator: PropTypes.func as PropType<ChatProps['onStopGenerator']>,\n  inputBoxStyle: PropTypes.object as PropType<ChatProps['inputBoxStyle']>,\n  renderInputArea: PropTypes.func as PropType<ChatProps['renderInputArea']>,\n  sendHotKey: PropTypes.string as PropType<ChatProps['sendHotKey']>,\n  inputBoxCls: PropTypes.string,\n  renderFullInputBox: PropTypes.func as PropType<ChatProps['renderFullInputBox']>,\n  placeholder: PropTypes.string,\n  topSlot: (PropTypes.node || PropTypes.array) as PropType<ChatProps['topSlot']>,\n  bottomSlot: (PropTypes.node || PropTypes.array) as PropType<ChatProps['bottomSlot']>,\n  showStopGenerate: PropTypes.bool,\n  showClearContext: PropTypes.bool,\n  hintStyle: PropTypes.object,\n  hintCls: PropTypes.string,\n  uploadProps: PropTypes.object,\n  uploadTipProps: PropTypes.object,\n  mode: PropTypes.string as PropType<ChatProps['mode']>,\n  renderDivider: PropTypes.func as PropType<ChatProps['renderDivider']>,\n};\nconst defaultProps = {\n  align: CHAT_ALIGN.LEFT_RIGHT,\n  showStopGenerate: false,\n  mode: MODE.BUBBLE,\n  showClearContext: false,\n  sendHotKey: SEND_HOT_KEY.ENTER,\n};\nconst vuePropsType = vuePropsMake(chatPropTypes, defaultProps);\nconst index = defineComponent({\n  props: { ...vuePropsType },\n  name: 'index',\n  setup(props, { attrs }) {\n    const slots = useSlots();\n    const containerRef = ref();\n    let animation: any;\n    let wheelEventHandler: any;\n    const uploadRef = ref();\n    const dropAreaRef = ref();\n    const scrollTargetRef = ref();\n\n    const state = reactive({\n      backBottomVisible: false,\n      chats: [],\n      cacheHints: [],\n      wheelScroll: false,\n      uploadAreaVisible: false,\n    });\n    const { adapter: adapterInject } = useBaseComponent(props, state);\n    function adapter_(): ChatAdapter {\n      return {\n        ...adapterInject(),\n        getContainerRef: () => {\n          return containerRef.value\n        },\n        setWheelScroll: (flag: boolean) => {\n          state.wheelScroll = flag\n        },\n        notifyChatsChange: (chats: Message[]) => {\n          const { onChatsChange } = props;\n          onChatsChange && onChatsChange(chats);\n        },\n        notifyLikeMessage: (message: Message) => {\n          const { onMessageGoodFeedback } = props;\n          onMessageGoodFeedback && onMessageGoodFeedback(message);\n        },\n        notifyDislikeMessage: (message: Message) => {\n          const { onMessageBadFeedback } = props;\n          onMessageBadFeedback && onMessageBadFeedback(message);\n        },\n        notifyCopyMessage: (message: Message) => {\n          const { onMessageCopy } = props;\n          onMessageCopy && onMessageCopy(message);\n        },\n        notifyClearContext: () => {\n          const { onClear } = props;\n          onClear && onClear();\n        },\n        notifyMessageSend: (content: string, attachment: any[]) => {\n          const { onMessageSend } = props;\n          onMessageSend && onMessageSend(content, attachment);\n        },\n        notifyInputChange: (props_: { inputValue: string; attachment: any[] }) => {\n          const { onInputChange } = props;\n          onInputChange && onInputChange(props_);\n        },\n        setBackBottomVisible: (visible: boolean) => {\n\n          if (state.backBottomVisible !== visible) {\n            state.backBottomVisible = visible\n          }\n        },\n        registerWheelEvent: () => {\n          adapter.unRegisterWheelEvent();\n          const containerElement = containerRef.value;\n          if (!containerElement) {\n            return;\n          }\n          wheelEventHandler = (e: any) => {\n            /**\n             * Why use this.scrollTargetRef.current and wheel's currentTarget target comparison?\n             * Both scroll and wheel events are on the container\n             * his.scrollTargetRef.current is the object where scrolling actually occurs\n             * wheel's currentTarget is the container,\n             * Only when the wheel event occurs and there is scroll, the following logic(show scroll bar) needs to be executed\n             */\n            if (scrollTargetRef?.value !== e.currentTarget) {\n              return;\n            }\n            adapter.setWheelScroll(true);\n            adapter.unRegisterWheelEvent();\n          };\n\n          containerElement.addEventListener('wheel', wheelEventHandler);\n        },\n        unRegisterWheelEvent: () => {\n          if (wheelEventHandler) {\n            const containerElement = containerRef.value;\n            if (!containerElement) {\n              return;\n            } else {\n              containerElement.removeEventListener('wheel', wheelEventHandler);\n            }\n            wheelEventHandler = null;\n          }\n        },\n        notifyStopGenerate: (e: MouseEvent) => {\n          const { onStopGenerator } = props;\n          onStopGenerator && onStopGenerator(e);\n        },\n        notifyHintClick: (hint: string) => {\n          const { onHintClick } = props;\n          onHintClick && onHintClick(hint);\n        },\n        setUploadAreaVisible: (visible: boolean) => {\n          state.uploadAreaVisible = visible\n        },\n        manualUpload: (file: File[]) => {\n          const uploadComponent = uploadRef.value;\n          if (uploadComponent) {\n            uploadComponent.insert(file);\n          }\n        },\n        getDropAreaElement: () => {\n          return dropAreaRef?.value;\n        },\n      };\n    }\n    const adapter = adapter_();\n    const foundation = new ChatFoundation(adapter);\n    function getDerivedStateFromProps(nextProps: ChatProps, prevState: ChatState) {\n      const { chats, hints } = nextProps;\n      const newState = {} as any;\n      if (chats !== prevState.chats) {\n        newState.chats = chats ?? [];\n      }\n      if (hints !== prevState.cacheHints) {\n        newState.cacheHints = hints;\n      }\n      if (Object.keys(newState).length) {\n        return newState;\n      }\n      return null;\n    }\n\n    watch([() => props.chats, () => props.hints, () => state.chats, () => state.cacheHints], (val) => {\n      const newState = getDerivedStateFromProps({ ...props }, { ...state });\n      if (newState) {\n        Object.keys(newState).forEach((key) => {\n          state[key] = newState[key];\n        });\n      }\n    }, {immediate: true});\n\n    onMounted(() => {\n      foundation.init();\n    });\n    onUnmounted(() => {\n      foundation.destroy();\n    });\n\n    function resetMessage() {\n      foundation.resetMessage(null);\n    }\n\n    function clearContext() {\n      foundation.clearContext(null);\n    }\n\n    function scrollToBottom(animation: boolean) {\n      if (animation) {\n        foundation.scrollToBottomWithAnimation();\n      } else {\n        foundation.scrollToBottomImmediately();\n      }\n    }\n\n    function sendMessage(content: string, attachment: FileItem[]) {\n      foundation.onMessageSend(content, attachment);\n    }\n\n    watch(\n      [() => props.chats, () => props.hints, () => state.chats, () => state.cacheHints, () => state.wheelScroll],\n      (value, oldValue, onCleanup) => {\n        const { chats: newChats, hints: newHints } = props;\n        const { chats: oldChats, cacheHints } = { chats: oldValue[2], cacheHints: oldValue[3] };\n        const { wheelScroll } = state;\n        let shouldScroll = false;\n        if (newChats !== oldChats) {\n          if (Array.isArray(newChats) && Array.isArray(oldChats)) {\n            const newLastChat = newChats[newChats.length - 1];\n            const oldLastChat = oldChats[oldChats.length - 1];\n            if (newChats.length > oldChats.length) {\n              if (oldChats.length === 0 || newLastChat.id !== oldLastChat.id) {\n                shouldScroll = true;\n              }\n            } else if (newChats.length === oldChats.length && newChats.length &&\n              (newLastChat.status !== 'complete' || newLastChat.status !== oldLastChat.status)\n            ) {\n              shouldScroll = true;\n            }\n          }\n        }\n        if (newHints !== cacheHints) {\n          if (newHints.length > cacheHints.length) {\n            shouldScroll = true;\n          }\n        }\n        if (!wheelScroll && shouldScroll) {\n          nextTick(()=>{\n            foundation.scrollToBottomImmediately();\n          })\n        }\n      }\n    );\n\n    function containerScroll(e: Event){\n      scrollTargetRef.value = e.target as HTMLElement;\n      foundation.containerScroll(e)\n    }\n    return () => {\n      const {\n        topSlot,\n        bottomSlot,\n        roleConfig,\n        hints,\n        onChatsChange,\n        onMessageCopy,\n        renderInputArea,\n        chatBoxRenderConfig,\n        align,\n        renderHintBox,\n        style,\n        className,\n        showStopGenerate,\n        customMarkDownComponents,\n        mode,\n        showClearContext,\n        placeholder,\n        inputBoxCls,\n        inputBoxStyle,\n        hintStyle,\n        hintCls,\n        uploadProps,\n        uploadTipProps,\n        sendHotKey, renderDivider\n      } = props;\n      const { backBottomVisible, chats, wheelScroll, uploadAreaVisible } = state;\n      let showStopGenerateFlag = false;\n      const lastChat = chats.length > 0 && chats[chats.length - 1];\n      let disableSend = false;\n      if (lastChat && showStopGenerate) {\n        const lastChatOnGoing = lastChat?.status && [MESSAGE_STATUS.LOADING, MESSAGE_STATUS.INCOMPLETE].includes(lastChat?.status);\n        disableSend = lastChatOnGoing;\n        showStopGenerate && (showStopGenerateFlag = lastChatOnGoing);\n      }\n      return (\n        <div class={cls(`${prefixCls}`, className)} style={style} onDragover={foundation.handleDragOver}>\n          {uploadAreaVisible && (\n            <div\n              ref={dropAreaRef}\n              class={`${prefixCls}-dropArea`}\n              onDragover={foundation.handleContainerDragOver}\n              onDrop={foundation.handleContainerDrop}\n              onDragleave={foundation.handleContainerDragLeave}\n            >\n              <span class={`${prefixCls}-dropArea-text`}>\n                <LocaleConsumer componentName=\"Chat\">\n                  {(locale: Locale['Chat']) => locale['dropAreaText']}\n                </LocaleConsumer>\n              </span>\n            </div>\n          )}\n          <div class={`${prefixCls}-inner`}>\n            {/* top slot */}\n            {topSlot}\n            {/* chat area */}\n            <div class={`${prefixCls}-content`}>\n              <div\n                data-testid={\"chat-container-scroll\"}\n                class={cls(`${prefixCls}-container`, {\n                  'semi-chat-container-scroll-hidden': !wheelScroll,\n                })}\n                onScroll={containerScroll}\n                ref={containerRef}\n              >\n                <ChatContent\n                  align={align}\n                  mode={mode}\n                  chats={chats}\n                  roleConfig={roleConfig}\n                  customMarkDownComponents={customMarkDownComponents}\n                  onMessageDelete={foundation.deleteMessage}\n                  onChatsChange={onChatsChange}\n                  onMessageBadFeedback={foundation.dislikeMessage}\n                  onMessageGoodFeedback={foundation.likeMessage}\n                  onMessageReset={foundation.resetMessage}\n                  onMessageCopy={onMessageCopy}\n                  chatBoxRenderConfig={chatBoxRenderConfig}\n                  renderDivider={renderDivider}\n                />\n                {/* hint area */}\n                {!!hints?.length && (\n                  <Hint\n                    className={hintCls}\n                    style={hintStyle}\n                    value={hints}\n                    onHintClick={foundation.onHintClick}\n                    renderHintBox={renderHintBox}\n                  />\n                )}\n              </div>\n            </div>\n            {backBottomVisible && !showStopGenerateFlag && (\n              <span class={`${prefixCls}-action`}>\n                <Button\n                  class={`${prefixCls}-action-content ${prefixCls}-action-backBottom`}\n                  icon={<IconChevronDown size=\"extra-large\" />}\n                  type=\"tertiary\"\n                  onClick={foundation.scrollToBottomWithAnimation}\n                />\n              </span>\n            )}\n            {showStopGenerateFlag && (\n              <span class={`${prefixCls}-action`}>\n                <Button\n                  class={`${prefixCls}-action-content ${prefixCls}-action-stop`}\n                  icon={<IconDisc size=\"extra-large\" />}\n                  type=\"tertiary\"\n                  onClick={foundation.stopGenerate}\n                >\n                  <LocaleConsumer componentName=\"Chat\">\n                    {(locale: Locale['Chat']) => locale['stop']}\n                  </LocaleConsumer>\n                </Button>\n              </span>\n            )}\n            {/* input area */}\n            <InputBox\n              showClearContext={showClearContext}\n              uploadRef={uploadRef}\n              manualUpload={adapter.manualUpload}\n              style={inputBoxStyle}\n              class={inputBoxCls}\n              placeholder={placeholder}\n              disableSend={disableSend}\n              onClearContext={foundation.clearContext}\n              onSend={foundation.onMessageSend}\n              onInputChange={foundation.onInputChange}\n              renderInputArea={renderInputArea}\n              uploadProps={uploadProps}\n              uploadTipProps={uploadTipProps}\n              sendHotKey={sendHotKey}\n            />\n            {bottomSlot}\n          </div>\n        </div>\n      );\n    };\n  },\n});\n\nexport default index;\n"],"names":["LocaleConsumer","LocaleConsumerFunc","prefixCls","cssClasses","PREFIX","CHAT_ALIGN","MODE","SEND_HOT_KEY","MESSAGE_STATUS","strings","chatPropTypes","role","String","className","PropTypes","string","style","object","roleConfig","chats","array","hints","renderHintBox","func","onChatsChange","align","chatBoxRenderConfig","customMarkDownComponents","onClear","onMessageDelete","onMessageReset","onMessageCopy","onMessageGoodFeedback","onMessageBadFeedback","onInputChange","inputContentConvert","onMessageSend","InputBoxStyle","onHintClick","onStopGenerator","inputBoxStyle","renderInputArea","sendHotKey","inputBoxCls","renderFullInputBox","placeholder","topSlot","node","bottomSlot","showStopGenerate","bool","showClearContext","hintStyle","hintCls","uploadProps","uploadTipProps","mode","renderDivider","defaultProps","LEFT_RIGHT","BUBBLE","ENTER","vuePropsType","vuePropsMake","index","defineComponent","props","name","setup","attrs","useSlots","containerRef","ref","wheelEventHandler","uploadRef","dropAreaRef","scrollTargetRef","state","reactive","backBottomVisible","cacheHints","wheelScroll","uploadAreaVisible","adapter","adapterInject","useBaseComponent","adapter_","getContainerRef","value","setWheelScroll","flag","notifyChatsChange","notifyLikeMessage","message","notifyDislikeMessage","notifyCopyMessage","notifyClearContext","notifyMessageSend","content","attachment","notifyInputChange","props_","setBackBottomVisible","visible","registerWheelEvent","unRegisterWheelEvent","containerElement","e","currentTarget","addEventListener","removeEventListener","notifyStopGenerate","notifyHintClick","hint","setUploadAreaVisible","manualUpload","file","uploadComponent","insert","getDropAreaElement","foundation","ChatFoundation","getDerivedStateFromProps","nextProps","prevState","newState","Object","keys","length","watch","val","forEach","key","immediate","onMounted","init","onUnmounted","destroy","oldValue","onCleanup","newChats","newHints","oldChats","shouldScroll","Array","isArray","newLastChat","oldLastChat","id","status","nextTick","scrollToBottomImmediately","containerScroll","target","showStopGenerateFlag","lastChat","disableSend","lastChatOnGoing","LOADING","INCOMPLETE","includes","_createVNode","cls","handleDragOver","handleContainerDragOver","handleContainerDrop","handleContainerDragLeave","default","locale","ChatContent","deleteMessage","dislikeMessage","likeMessage","resetMessage","Hint","Button","IconChevronDown","scrollToBottomWithAnimation","IconDisc","stopGenerate","InputBox","clearContext"],"mappings":";;;;;;;;;;;;;;AA8BA,MAAMA,IAAiBC,GAAkB,GAEnCC,IAAYC,GAAWC,QACvB;AAAA,EAAEC,YAAAA;AAAAA,EAAYC,MAAAA;AAAAA,EAAMC,cAAAA;AAAAA,EAAcC,gBAAAA;AAAe,IAAIC,IAE9CC,KAAyC;AAAA,EACpDC,MAAMC;AAAAA,EACNC,WAAWC,EAAUC;AAAAA,EACrBC,OAAOF,EAAUG;AAAAA,EACjBC,YAAYJ,EAAUG;AAAAA,EACtBE,OAAOL,EAAUM;AAAAA,EACjBC,OAAOP,EAAUM;AAAAA,EACjBE,eAAeR,EAAUS;AAAAA,EACzBC,eAAeV,EAAUS;AAAAA,EACzBE,OAAOX,EAAUC;AAAAA,EACjBW,qBAAqBZ,EAAUG;AAAAA,EAC/BU,0BAA0Bb,EAAUG;AAAAA,EACpCW,SAASd,EAAUS;AAAAA,EACnBM,iBAAiBf,EAAUS;AAAAA,EAC3BO,gBAAgBhB,EAAUS;AAAAA,EAC1BQ,eAAejB,EAAUS;AAAAA,EACzBS,uBAAuBlB,EAAUS;AAAAA,EACjCU,sBAAsBnB,EAAUS;AAAAA,EAChCW,eAAepB,EAAUS;AAAAA,EACzBY,qBAAqBrB,EAAUS;AAAAA,EAC/Ba,eAAetB,EAAUS;AAAAA,EACzBc,eAAevB,EAAUG;AAAAA,EACzBqB,aAAaxB,EAAUS;AAAAA,EACvBgB,iBAAiBzB,EAAUS;AAAAA,EAC3BiB,eAAe1B,EAAUG;AAAAA,EACzBwB,iBAAiB3B,EAAUS;AAAAA,EAC3BmB,YAAY5B,EAAUC;AAAAA,EACtB4B,aAAa7B,EAAUC;AAAAA,EACvB6B,oBAAoB9B,EAAUS;AAAAA,EAC9BsB,aAAa/B,EAAUC;AAAAA,EACvB+B,SAAUhC,EAAUiC,QAAQjC,EAAUM;AAAAA,EACtC4B,YAAalC,EAAUiC,QAAQjC,EAAUM;AAAAA,EACzC6B,kBAAkBnC,EAAUoC;AAAAA,EAC5BC,kBAAkBrC,EAAUoC;AAAAA,EAC5BE,WAAWtC,EAAUG;AAAAA,EACrBoC,SAASvC,EAAUC;AAAAA,EACnBuC,aAAaxC,EAAUG;AAAAA,EACvBsC,gBAAgBzC,EAAUG;AAAAA,EAC1BuC,MAAM1C,EAAUC;AAAAA,EAChB0C,eAAe3C,EAAUS;AAC3B,GACMmC,KAAe;AAAA,EACnBjC,OAAOpB,GAAWsD;AAAAA,EAClBV,kBAAkB;AAAA,EAClBO,MAAMlD,GAAKsD;AAAAA,EACXT,kBAAkB;AAAA,EAClBT,YAAYnC,GAAasD;AAC3B,GACMC,KAAeC,GAAarD,IAAegD,EAAY,GACvDM,KAAQC,gBAAAA,GAAgB;AAAA,EAC5BC,OAAO;AAAA,IAAE,GAAGJ;AAAAA,EAAc;AAAA,EAC1BK,MAAM;AAAA,EACNC,MAAMF,GAAO;AAAA,IAAEG,OAAAA;AAAAA,EAAM,GAAG;AACRC,IAAAA,GAAU;AACxB,UAAMC,IAAeC;AAErB,QAAIC;AACJ,UAAMC,IAAYF,KACZG,IAAcH,KACdI,IAAkBJ,KAElBK,IAAQC,GAAS;AAAA,MACrBC,mBAAmB;AAAA,MACnB5D,OAAO,CAAE;AAAA,MACT6D,YAAY,CAAE;AAAA,MACdC,aAAa;AAAA,MACbC,mBAAmB;AAAA,IACrB,CAAC,GACK;AAAA,MAAEC,SAASC;AAAAA,IAAc,IAAIC,GAAiBnB,GAAOW,CAAK;AAChE,aAASS,IAAwB;AAC/B,aAAO;AAAA,QACL,GAAGF,EAAe;AAAA,QAClBG,iBAAiBA,MACRhB,EAAaiB;AAAAA,QAEtBC,gBAAiBC,CAAAA,MAAkB;AACjCb,UAAAA,EAAMI,cAAcS;AAAAA,QACrB;AAAA,QACDC,mBAAoBxE,CAAAA,MAAqB;AACvC,gBAAM;AAAA,YAAEK,eAAAA;AAAAA,UAAe,IAAG0C;AAC1B1C,UAAAA,KAAiBA,EAAcL,CAAK;AAAA,QACrC;AAAA,QACDyE,mBAAoBC,CAAAA,MAAqB;AACvC,gBAAM;AAAA,YAAE7D,uBAAAA;AAAAA,UAAuB,IAAGkC;AAClClC,UAAAA,KAAyBA,EAAsB6D,CAAO;AAAA,QACvD;AAAA,QACDC,sBAAuBD,CAAAA,MAAqB;AAC1C,gBAAM;AAAA,YAAE5D,sBAAAA;AAAAA,UAAsB,IAAGiC;AACjCjC,UAAAA,KAAwBA,EAAqB4D,CAAO;AAAA,QACrD;AAAA,QACDE,mBAAoBF,CAAAA,MAAqB;AACvC,gBAAM;AAAA,YAAE9D,eAAAA;AAAAA,UAAe,IAAGmC;AAC1BnC,UAAAA,KAAiBA,EAAc8D,CAAO;AAAA,QACvC;AAAA,QACDG,oBAAoBA,MAAM;AACxB,gBAAM;AAAA,YAAEpE,SAAAA;AAAAA,UAAS,IAAGsC;AACpBtC,UAAAA,KAAWA,EAAO;AAAA,QACnB;AAAA,QACDqE,mBAAmBA,CAACC,GAAiBC,MAAsB;AACzD,gBAAM;AAAA,YAAE/D,eAAAA;AAAAA,UAAe,IAAG8B;AAC1B9B,UAAAA,KAAiBA,EAAc8D,GAASC,CAAU;AAAA,QACnD;AAAA,QACDC,mBAAoBC,CAAAA,MAAsD;AACxE,gBAAM;AAAA,YAAEnE,eAAAA;AAAAA,UAAe,IAAGgC;AAC1BhC,UAAAA,KAAiBA,EAAcmE,CAAM;AAAA,QACtC;AAAA,QACDC,sBAAuBC,CAAAA,MAAqB;AAE1C,UAAI1B,EAAME,sBAAsBwB,MAC9B1B,EAAME,oBAAoBwB;AAAAA,QAE7B;AAAA,QACDC,oBAAoBA,MAAM;AACxBrB,UAAAA,EAAQsB,qBAAoB;AAC5B,gBAAMC,IAAmBnC,EAAaiB;AACtC,UAAKkB,MAGLjC,IAAqBkC,CAAAA,MAAW;AAQ9B,aAAI/B,KAAAA,gBAAAA,EAAiBY,WAAUmB,EAAEC,kBAGjCzB,EAAQM,eAAe,EAAI,GAC3BN,EAAQsB,qBAAoB;AAAA,aAG9BC,EAAiBG,iBAAiB,SAASpC,CAAiB;AAAA,QAC7D;AAAA,QACDgC,sBAAsBA,MAAM;AAC1B,cAAIhC,GAAmB;AACrB,kBAAMiC,IAAmBnC,EAAaiB;AACtC,gBAAKkB;AAGHA,cAAAA,EAAiBI,oBAAoB,SAASrC,CAAiB;AAAA;AAF/D;AAIFA,YAAAA,IAAoB;AAAA,UACtB;AAAA,QACD;AAAA,QACDsC,oBAAqBJ,OAAkB;AACrC,gBAAM;AAAA,YAAEpE,iBAAAA;AAAAA,UAAiB,IAAG2B;AAC5B3B,UAAAA,KAAmBA,EAAgBoE,CAAC;AAAA,QACrC;AAAA,QACDK,iBAAkBC,CAAAA,MAAiB;AACjC,gBAAM;AAAA,YAAE3E,aAAAA;AAAAA,UAAa,IAAG4B;AACxB5B,UAAAA,KAAeA,EAAY2E,CAAI;AAAA,QAChC;AAAA,QACDC,sBAAuBX,CAAAA,MAAqB;AAC1C1B,UAAAA,EAAMK,oBAAoBqB;AAAAA,QAC3B;AAAA,QACDY,cAAeC,CAAAA,MAAiB;AAC9B,gBAAMC,IAAkB3C,EAAUc;AAClC,UAAI6B,KACFA,EAAgBC,OAAOF,CAAI;AAAA,QAE9B;AAAA,QACDG,oBAAoBA,MACX5C,KAAAA,gBAAAA,EAAaa;AAAAA;IAG1B;AACA,UAAML,IAAUG,KACVkC,IAAa,IAAIC,GAAetC,CAAO;AAC7C,aAASuC,EAAyBC,GAAsBC,GAAsB;AAC5E,YAAM;AAAA,QAAEzG,OAAAA;AAAAA,QAAOE,OAAAA;AAAAA,MAAO,IAAGsG,GACnBE,IAAW,CAAA;AAOjB,aANI1G,MAAUyG,EAAUzG,UACtB0G,EAAS1G,QAAQA,KAAS,KAExBE,MAAUuG,EAAU5C,eACtB6C,EAAS7C,aAAa3D,IAEpByG,OAAOC,KAAKF,CAAQ,EAAEG,SACjBH,IAEF;AAAA,IACT;AAEAI,IAAAA,EAAM,CAAC,MAAM/D,EAAM/C,OAAO,MAAM+C,EAAM7C,OAAO,MAAMwD,EAAM1D,OAAO,MAAM0D,EAAMG,UAAU,GAAIkD,CAAAA,MAAQ;AAChG,YAAML,IAAWH,EAAyB;AAAA,QAAE,GAAGxD;AAAAA,MAAM,GAAG;AAAA,QAAE,GAAGW;AAAAA,MAAM,CAAC;AACpE,MAAIgD,KACFC,OAAOC,KAAKF,CAAQ,EAAEM,QAASC,CAAAA,MAAQ;AACrCvD,QAAAA,EAAMuD,CAAG,IAAIP,EAASO,CAAG;AAAA,MAC3B,CAAC;AAAA,IAEL,GAAG;AAAA,MAACC,WAAW;AAAA,IAAI,CAAC,GAEpBC,GAAU,MAAM;AACdd,MAAAA,EAAWe,KAAI;AAAA,IACjB,CAAC,GACDC,GAAY,MAAM;AAChBhB,MAAAA,EAAWiB,QAAO;AAAA,IACpB,CAAC,GAsBDR,EACE,CAAC,MAAM/D,EAAM/C,OAAO,MAAM+C,EAAM7C,OAAO,MAAMwD,EAAM1D,OAAO,MAAM0D,EAAMG,YAAY,MAAMH,EAAMI,WAAW,GACzG,CAACO,GAAOkD,GAAUC,MAAc;AAC9B,YAAM;AAAA,QAAExH,OAAOyH;AAAAA,QAAUvH,OAAOwH;AAAAA,MAAU,IAAG3E,GACvC;AAAA,QAAE/C,OAAO2H;AAAAA,QAAU9D,YAAAA;AAAAA,MAAW,IAAI;AAAA,QAAE7D,OAAOuH,EAAS,CAAC;AAAA,QAAG1D,YAAY0D,EAAS,CAAC;AAAA,SAC9E;AAAA,QAAEzD,aAAAA;AAAAA,MAAa,IAAGJ;AACxB,UAAIkE,IAAe;AACnB,UAAIH,MAAaE,KACXE,MAAMC,QAAQL,CAAQ,KAAKI,MAAMC,QAAQH,CAAQ,GAAG;AACtD,cAAMI,IAAcN,EAASA,EAASZ,SAAS,CAAC,GAC1CmB,IAAcL,EAASA,EAASd,SAAS,CAAC;AAChD,QAAIY,EAASZ,SAASc,EAASd,UACzBc,EAASd,WAAW,KAAKkB,EAAYE,OAAOD,EAAYC,QAC1DL,IAAe,MAERH,EAASZ,WAAWc,EAASd,UAAUY,EAASZ,WACxDkB,EAAYG,WAAW,cAAcH,EAAYG,WAAWF,EAAYE,YAEzEN,IAAe;AAAA,MAEnB;AAEF,MAAIF,MAAa7D,KACX6D,EAASb,SAAShD,EAAWgD,WAC/Be,IAAe,KAGf,CAAC9D,KAAe8D,KAClBO,GAAS,MAAI;AACX9B,QAAAA,EAAW+B,0BAAyB;AAAA,MACtC,CAAC;AAAA,IAEL,CACF;AAEA,aAASC,EAAgB7C,GAAS;AAChC/B,MAAAA,EAAgBY,QAAQmB,EAAE8C,QAC1BjC,EAAWgC,gBAAgB7C,CAAC;AAAA,IAC9B;AACA,WAAO,MAAM;AACX,YAAM;AAAA,QACJ7D,SAAAA;AAAAA,QACAE,YAAAA;AAAAA,QACA9B,YAAAA;AAAAA,QACAG,OAAAA;AAAAA,QACAG,eAAAA;AAAAA,QACAO,eAAAA;AAAAA,QACAU,iBAAAA;AAAAA,QACAf,qBAAAA;AAAAA,QACAD,OAAAA;AAAAA,QACAH,eAAAA;AAAAA,QACAN,OAAAA;AAAAA,QACAH,WAAAA;AAAAA,QACAoC,kBAAAA;AAAAA,QACAtB,0BAAAA;AAAAA,QACA6B,MAAAA;AAAAA,QACAL,kBAAAA;AAAAA,QACAN,aAAAA;AAAAA,QACAF,aAAAA;AAAAA,QACAH,eAAAA;AAAAA,QACAY,WAAAA;AAAAA,QACAC,SAAAA;AAAAA,QACAC,aAAAA;AAAAA,QACAC,gBAAAA;AAAAA,QACAb,YAAAA;AAAAA,QAAYe,eAAAA;AAAAA,MACb,IAAGS,GACE;AAAA,QAAEa,mBAAAA;AAAAA,QAAmB5D,OAAAA;AAAAA,QAAO8D,aAAAA;AAAAA,QAAaC,mBAAAA;AAAAA,MAAmB,IAAGL;AACrE,UAAI6E,IAAuB;AAC3B,YAAMC,IAAWxI,EAAM6G,SAAS,KAAK7G,EAAMA,EAAM6G,SAAS,CAAC;AAC3D,UAAI4B,IAAc;AAClB,UAAID,KAAY1G,GAAkB;AAChC,cAAM4G,KAAkBF,KAAAA,gBAAAA,EAAUN,WAAU,CAAC7I,EAAesJ,SAAStJ,EAAeuJ,UAAU,EAAEC,SAASL,KAAAA,gBAAAA,EAAUN,MAAM;AACzHO,QAAAA,IAAcC,GACd5G,MAAqByG,IAAuBG;AAAAA,MAC9C;AACA,aAAAI,EAAA,OAAA;AAAA,QAAA,OACcC,EAAI,GAAGhK,CAAS,IAAIW,CAAS;AAAA,QAAC,OAASG;AAAAA,QAAK,YAAcwG,EAAW2C;AAAAA,SAC9EjF,CAAAA,MAAiB+E,EAAA,OAAA;AAAA,QAAA,KAETtF;AAAAA,QAAW,OACT,GAAGzE,CAAS;AAAA,QAAW,YAClBsH,EAAW4C;AAAAA,QAAuB,QACtC5C,EAAW6C;AAAAA,QAAmB,aACzB7C,EAAW8C;AAAAA,MAAwB,GAAA,CAAAL,EAAA,QAAA;AAAA,QAAA,OAEnC,GAAG/J,CAAS;AAAA,SAAgB+J,CAAAA,EAAAjK,GAAA;AAAA,QAAA,eAAA;AAAA,MAAA,GAAA;AAAA,QAAAuK,SAEnCC,CAAAA,MAA2BA,EAAO;AAAA,MAAe,CAAA,CAAA,CAAA,CAAA,CAAA,GAI1DP,EAAA,OAAA;AAAA,QAAA,OACW,GAAG/J,CAAS;AAAA,SAErB4C,CAAAA,GAAOmH,EAAA,OAAA;AAAA,QAAA,OAEI,GAAG/J,CAAS;AAAA,MAAU,GAAA,CAAA+J,EAAA,OAAA;AAAA,QAAA,eAEjB;AAAA,QAAuB,OAC7BC,EAAI,GAAGhK,CAAS,cAAc;AAAA,UACnC,qCAAqC,CAAC+E;AAAAA,QACxC,CAAC;AAAA,QAAC,UACQuE;AAAAA,QAAe,KACpBjF;AAAAA,SAAY0F,CAAAA,EAAAQ,IAAA;AAAA,QAAA,OAGRhJ;AAAAA,QAAK,MACN+B;AAAAA,QAAI,OACHrC;AAAAA,QAAK,YACAD;AAAAA,QAAU,0BACIS;AAAAA,QAAwB,iBACjC6F,EAAWkD;AAAAA,QAAa,eAC1BlJ;AAAAA,QAAa,sBACNgG,EAAWmD;AAAAA,QAAc,uBACxBnD,EAAWoD;AAAAA,QAAW,gBAC7BpD,EAAWqD;AAAAA,QAAY,eACxB9I;AAAAA,QAAa,qBACPL;AAAAA,QAAmB,eACzB+B;AAAAA,SAGhB,IAAA,GAAA,CAAC,EAACpC,KAAAA,QAAAA,EAAO2G,WAAMiC,EAAAa,IAAA;AAAA,QAAA,WAEDzH;AAAAA,QAAO,OACXD;AAAAA,QAAS,OACT/B;AAAAA,QAAK,aACCmG,EAAWlF;AAAAA,QAAW,eACpBhB;AAAAA,MAAa,GAAA,IAAA,CAE/B,MAGJyD,KAAqB,CAAC2E,KAAoBO,EAAA,QAAA;AAAA,QAAA,OAC5B,GAAG/J,CAAS;AAAA,SAAS+J,CAAAA,EAAAc,GAAA;AAAA,QAAA,OAEvB,GAAG7K,CAAS,mBAAmBA,CAAS;AAAA,QAAoB,MAAA+J,EAAAe,IAAA;AAAA,UAAA,MAAA;AAAA,QAAA,GAAA,IAAA;AAAA,QAAA,MAAA;AAAA,QAAA,SAG1DxD,EAAWyD;AAAAA,MAGzB,GAAA,IAAA,CAAA,CAAA,GACAvB,KAAoBO,EAAA,QAAA;AAAA,QAAA,OACN,GAAG/J,CAAS;AAAA,SAAS+J,CAAAA,EAAAc,GAAA;AAAA,QAAA,OAEvB,GAAG7K,CAAS,mBAAmBA,CAAS;AAAA,QAAc,MAAA+J,EAAAiB,IAAA;AAAA,UAAA,MAAA;AAAA,QAAA,GAAA,IAAA;AAAA,QAAA,MAAA;AAAA,QAAA,SAGpD1D,EAAW2D;AAAAA,MAAY,GAAA;AAAA,QAAAZ,SAAAA,MAAAN,CAAAA,EAAAjK,GAAA;AAAA,UAAA,eAAA;AAAA,QAAA,GAAA;AAAA,UAAAuK,SAG5BC,CAAAA,MAA2BA,EAAO;AAAA,QAAO,CAAA,CAAA;AAAA,OAIlD,CAAA,CAAA,GAAAP,EAAAmB,IAAA;AAAA,QAAA,kBAGmBjI;AAAAA,QAAgB,WACvBuB;AAAAA,QAAS,cACNS,EAAQgC;AAAAA,QAAY,OAC3B3E;AAAAA,QAAa,OACbG;AAAAA,QAAW,aACLE;AAAAA,QAAW,aACX+G;AAAAA,QAAW,gBACRpC,EAAW6D;AAAAA,QAAY,QAC/B7D,EAAWpF;AAAAA,QAAa,eACjBoF,EAAWtF;AAAAA,QAAa,iBACtBO;AAAAA,QAAe,aACnBa;AAAAA,QAAW,gBACRC;AAAAA,QAAc,YAClBb;AAAAA,MAAU,GAAA,IAAA,GAEvBM,CAAU,CAAA,CAAA,CAAA;AAAA;EAKrB;AACF,CAAC;"}