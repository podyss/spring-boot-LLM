{"version":3,"file":"index.js","sources":["../../../src/components/chat/chatBox/index.tsx"],"sourcesContent":["import { defineComponent, ref, h, Fragment, useSlots, CSSProperties } from 'vue';\nimport { CombineProps } from '../../interface';\nimport * as PropTypes from '../../PropTypes';\nimport cls from 'classnames';\nimport type { ChatBoxProps } from '../interface';\nimport ChatBoxAvatar from './chatBoxAvatar';\nimport ChatBoxTitle from './chatBoxTitle';\nimport ChatBoxContent from './chatBoxContent';\nimport ChatBoxAction from './chatBoxAction';\nimport { cssClasses, strings } from '@douyinfe/semi-foundation/chat/constants';\nimport { useMemo } from '../../_utils/useMemo';\nimport { chatBoxPropTypes } from './chatPropsType';\nimport { vuePropsMake } from '../../PropTypes';\n\nconst { PREFIX_CHAT_BOX } = cssClasses;\nconst { ROLE, CHAT_ALIGN } = strings;\n\nconst vuePropsType = vuePropsMake(chatBoxPropTypes, {chatBoxRenderConfig:{}})\nconst index = defineComponent({\n  props: { ...vuePropsType },\n  name: 'index',\n  setup(props, { attrs }) {\n    const slots = useSlots();\n\n    const continueSend = useMemo(() => {\n      return props.message?.role === props.previousMessage?.role;\n    }, [() => props.message.role, () => props.previousMessage]);\n\n    const info = useMemo(() => {\n      let info = {};\n      if (props.roleConfig) {\n        info = props.roleConfig[props.message.role] ?? {};\n      }\n      return info;\n    }, [() => props.message.role, () => props.roleConfig]);\n\n    const avatarNode = useMemo(() => {\n      return (\n        <ChatBoxAvatar\n          continueSend={continueSend.value}\n          role={info.value}\n          message={props.message}\n          customRenderFunc={props.chatBoxRenderConfig.renderChatBoxAvatar}\n        />\n      );\n    }, [info, ()=>props.message, () => props.chatBoxRenderConfig.renderChatBoxAvatar]);\n\n    const titleNode = useMemo(() => {\n      return (\n        <ChatBoxTitle\n          role={info.value}\n          message={props.message}\n          customRenderFunc={props.chatBoxRenderConfig.renderChatBoxTitle}\n        />\n      );\n    }, [info, ()=>props.message, () => props.message, ()=>props.chatBoxRenderConfig.renderChatBoxTitle]);\n\n    const contentNode = useMemo(() => {\n      return (\n        <ChatBoxContent\n          mode={props.mode}\n          role={info.value}\n          message={props.message}\n          customMarkDownComponents={props.customMarkDownComponents}\n          customRenderFunc={props.chatBoxRenderConfig.renderChatBoxContent}\n        />\n      );\n    }, [() => props.message, info, () => props.chatBoxRenderConfig.renderChatBoxContent]);\n\n    const actionNode = useMemo(() => {\n      return (\n        <ChatBoxAction\n          toast={props.toast}\n          role={info.value}\n          message={props.message}\n          lastChat={props.lastChat}\n          onMessageBadFeedback={props.onMessageBadFeedback}\n          onMessageCopy={props.onMessageCopy}\n          onChatsChange={props.onChatsChange}\n          onMessageDelete={props.onMessageDelete}\n          onMessageGoodFeedback={props.onMessageGoodFeedback}\n          onMessageReset={props.onMessageReset}\n          customRenderFunc={props.chatBoxRenderConfig.renderChatBoxAction}\n        />\n      );\n    }, [\n      () => props.message,\n      info,\n      () => props.lastChat,\n      () => props.onMessageBadFeedback,\n      () => props.onMessageGoodFeedback,\n      () => props.onMessageCopy,\n      () => props.onChatsChange,\n      () => props.onMessageDelete,\n      () => props.onMessageReset,\n      () => props.chatBoxRenderConfig.renderChatBoxAction,\n    ]);\n\n    const containerCls = useMemo(\n      () =>\n        cls(PREFIX_CHAT_BOX, {\n          [`${PREFIX_CHAT_BOX}-right`]: props.message.role === ROLE.USER && props.align === CHAT_ALIGN.LEFT_RIGHT,\n        }),\n      [()=>props.message.role, ()=>props.align]\n    );\n\n    return () => {\n      const {\n        message,\n        lastChat,\n        align,\n        toast,\n        mode,\n        roleConfig,\n        onMessageBadFeedback,\n        onMessageGoodFeedback,\n        onMessageCopy,\n        onChatsChange,\n        onMessageDelete,\n        onMessageReset,\n        chatBoxRenderConfig = {},\n        customMarkDownComponents,\n        previousMessage,\n      } = props;\n      const { renderChatBoxAvatar, renderChatBoxAction, renderChatBoxContent, renderChatBoxTitle, renderFullChatBox } =\n        chatBoxRenderConfig;\n\n      if (typeof renderFullChatBox !== 'function') {\n        return (\n          <div class={containerCls.value}>\n            {avatarNode.value}\n            <div class={`${PREFIX_CHAT_BOX}-wrap`}>\n              {!continueSend.value && titleNode.value}\n              {contentNode.value}\n              {actionNode.value}\n            </div>\n          </div>\n        );\n      } else {\n        return renderFullChatBox({\n          message,\n          role: info,\n          defaultNodes: {\n            avatar: avatarNode.value,\n            title: titleNode.value,\n            content: contentNode.value,\n            action: actionNode.value,\n          },\n          className: containerCls.value,\n        });\n      }\n    };\n  },\n});\n\nexport default index;\n"],"names":["PREFIX_CHAT_BOX","cssClasses","ROLE","CHAT_ALIGN","strings","vuePropsType","vuePropsMake","chatBoxPropTypes","chatBoxRenderConfig","index","defineComponent","props","name","setup","attrs","useSlots","continueSend","useMemo","message","role","previousMessage","info","roleConfig","avatarNode","_createVNode","ChatBoxAvatar","value","renderChatBoxAvatar","titleNode","ChatBoxTitle","renderChatBoxTitle","contentNode","ChatBoxContent","mode","customMarkDownComponents","renderChatBoxContent","actionNode","ChatBoxAction","toast","lastChat","onMessageBadFeedback","onMessageCopy","onChatsChange","onMessageDelete","onMessageGoodFeedback","onMessageReset","renderChatBoxAction","containerCls","cls","USER","align","LEFT_RIGHT","renderFullChatBox","defaultNodes","avatar","title","content","action","className"],"mappings":"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"}