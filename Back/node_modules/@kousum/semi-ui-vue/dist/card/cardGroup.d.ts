import { CSSProperties, PropType } from 'vue';
import { CombineProps } from '../interface';
export type CardGroupType = 'grid';
export interface CardGroupProps {
    /** Card group style class name */
    className?: string;
    /** Card Spacing */
    spacing?: number | number[];
    /** Card group inline style */
    style?: CSSProperties;
    /** Card set type */
    type?: CardGroupType;
}
export declare const vuePropsType: CombineProps<CardGroupProps>;
declare const CardGroup: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    spacing: PropType<number | number[]> | {
        type: PropType<number | number[]>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    type: PropType<"grid"> | {
        type: PropType<"grid">;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    spacing: PropType<number | number[]> | {
        type: PropType<number | number[]>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    type: PropType<"grid"> | {
        type: PropType<"grid">;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default CardGroup;
