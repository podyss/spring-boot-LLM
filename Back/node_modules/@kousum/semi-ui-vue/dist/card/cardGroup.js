import { defineComponent as d, useSlots as g, createVNode as y, mergeProps as P, isVNode as b } from "vue";
import * as o from "../PropTypes";
import { vuePropsMake as C } from "../PropTypes";
import { cssClasses as N } from '@douyinfe/semi-foundation/lib/es/card/constants';
import j from "classnames";
import G from "../space";
import { useHasInProps as S } from "../_base/baseComponent";
function T(r) {
  return typeof r == "function" || Object.prototype.toString.call(r) === "[object Object]" && !b(r);
}
const c = N.PREFIX, h = {
  className: o.string,
  spacing: [o.number, o.array],
  style: o.object,
  type: o.string
}, v = {
  spacing: 16
}, x = C(h, v), E = /* @__PURE__ */ d({
  props: {
    ...x
  },
  name: "CardGroup",
  setup(r, {}) {
    const {
      getProps: n
    } = S(), t = g();
    return () => {
      var p;
      const s = (p = t.default) == null ? void 0 : p.call(t), {
        className: a,
        spacing: i,
        style: m,
        type: u,
        ...l
      } = n(r), e = u === "grid", f = j(`${c}-group`, a, {
        [`${c}-group-grid`]: e
      });
      return y(G, P({
        spacing: e ? 0 : i,
        wrap: !0,
        className: f,
        style: m
      }, l), T(s) ? s : {
        default: () => [s]
      });
    };
  }
});
export {
  E as default,
  x as vuePropsType
};
//# sourceMappingURL=cardGroup.js.map
