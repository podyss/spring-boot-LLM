{"version":3,"file":"index.js","sources":["../../src/components/card/index.tsx"],"sourcesContent":["import { omit, isString } from 'lodash';\nimport * as PropTypes from '../PropTypes';\nimport { cssClasses, strings } from '@douyinfe/semi-foundation/card/constants';\nimport '@douyinfe/semi-foundation/card/card.scss';\nimport cls from 'classnames';\nimport Skeleton, { SkeletonParagraph, SkeletonTitle } from '../skeleton';\nimport { Title } from '../typography';\nimport Space from '../space';\nimport { ComponentObjectPropsOptions, CSSProperties, defineComponent, h, PropType, useSlots } from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { CombineProps, VueJsxNode } from '../interface';\nimport { useHasInProps } from '../_base/baseComponent';\nimport Meta from './meta';\n\nconst prefixcls = cssClasses.PREFIX;\n\nexport type Shadows = 'hover' | 'always';\n\nexport type { MetaProps } from './meta';\n\nexport type { CardGroupProps } from './cardGroup';\n\nexport interface CardProps {\n  /** Operation group at the bottom of the card content area */\n  actions?: VueJsxNode[];\n  /** Card content area inline style */\n  bodyStyle?: CSSProperties;\n  /** Whether there is an outer border */\n  bordered?: boolean;\n  /** Style class name */\n  className?: string;\n  children?: VueJsxNode;\n  /** Cover */\n  cover?: VueJsxNode;\n  /** Additional additions to the right of the title */\n  headerExtraContent?: VueJsxNode;\n  /** Custom end of page */\n  footer?: VueJsxNode;\n  /** Whether there is an edge between the bottom of the page and the content area */\n  footerLine?: boolean;\n  /** Inline style at the end of the page */\n  footerStyle?: CSSProperties;\n  /** Custom head */\n  header?: VueJsxNode;\n  /** Whether there is an edge line between the head and the content area */\n  headerLine?: boolean;\n  /** Head inline style */\n  headerStyle?: CSSProperties;\n  /** Whether to preload */\n  loading?: boolean;\n  /** Set shadow */\n  shadows?: Shadows;\n  /** Card inline style */\n  style?: CSSProperties;\n  /** Title */\n  title?: VueJsxNode;\n  /** aria label */\n  'aria-label'?: string;\n}\n\nconst propTypes: CombineProps<CardProps> = {\n  actions: PropTypes.array,\n  bodyStyle: PropTypes.object,\n  bordered: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cover: PropTypes.node,\n  footer: PropTypes.node,\n  footerLine: PropTypes.bool,\n  footerStyle: PropTypes.object,\n  header: PropTypes.node,\n  headerExtraContent: PropTypes.node,\n  headerLine: PropTypes.bool,\n  headerStyle: PropTypes.object,\n  loading: PropTypes.bool,\n  shadows: PropTypes.string as PropType<CardProps['shadows']>,\n  style: PropTypes.object,\n  title: PropTypes.node,\n  'aria-label': PropTypes.string,\n};\n\nconst defaultProps = {\n  bordered: true,\n  footerLine: false,\n  headerLine: true,\n  loading: false,\n};\nexport const vuePropsType = vuePropsMake<CardProps>(propTypes, defaultProps);\nconst Card = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Card',\n  setup(props, {}) {\n    const {getProps} = useHasInProps()\n    const slots = useSlots();\n\n    const renderHeader = () => {\n      const { title, headerExtraContent, header, headerLine, headerStyle } = props;\n      const headerCls = cls(`${prefixcls}-header`, {\n        [`${prefixcls}-header-bordered`]: Boolean(headerLine),\n      });\n      const headerWrapperCls = cls(`${prefixcls}-header-wrapper`);\n      const titleCls = cls(`${prefixcls}-header-wrapper-title`, {\n        [`${prefixcls}-header-wrapper-spacing`]: Boolean(headerExtraContent),\n      });\n\n      if (header || headerExtraContent || title) {\n        return (\n          <div style={headerStyle} class={headerCls}>\n            {header || ( // Priority of header over title and headerExtraContent\n              <div class={headerWrapperCls}>\n                {headerExtraContent && (\n                  <div class={`${prefixcls}-header-wrapper-extra`} x-semi-prop=\"headerExtraContent\">\n                    {headerExtraContent}\n                  </div>\n                )}\n                {title && (\n                  <div class={titleCls}>\n                    {isString(title) ? (\n                      <Title heading={6} ellipsis={{ showTooltip: true, rows: 1 }} x-semi-prop=\"title\">\n                        {title}\n                      </Title>\n                    ) : (\n                      title\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        );\n      }\n      return null;\n    };\n\n    const renderCover = () => {\n      const { cover } = props;\n      const coverCls = cls(`${prefixcls}-cover`);\n\n      return (\n        cover && (\n          <div class={coverCls} x-semi-prop=\"cover\">\n            {cover}\n          </div>\n        )\n      );\n    };\n\n    const renderBody = () => {\n      const children = slots.default?.();\n      const { bodyStyle, actions, loading } = props;\n      const bodyCls = cls(`${prefixcls}-body`);\n      const actionsCls = cls(`${prefixcls}-body-actions`);\n      const actionsItemCls = cls(`${prefixcls}-body-actions-item`);\n      const placeholder = (\n        <div>\n          <SkeletonTitle />\n          <br />\n          <SkeletonParagraph rows={3} />\n        </div>\n      );\n      return (\n        <div style={bodyStyle} class={bodyCls}>\n          {children && (\n            <Skeleton placeholder={placeholder} loading={loading} active>\n              {children}\n            </Skeleton>\n          )}\n          {Array.isArray(actions) && (\n            <div class={actionsCls}>\n              <Space spacing={12}>\n                {actions.map((item, idx) => (\n                  <div key={idx} class={actionsItemCls} x-semi-prop={`actions.${idx}`}>\n                    {item}\n                  </div>\n                ))}\n              </Space>\n            </div>\n          )}\n        </div>\n      );\n    };\n\n    const renderFooter = () => {\n      const { footer, footerLine, footerStyle } = props;\n      const footerCls = cls(`${prefixcls}-footer`, {\n        [`${prefixcls}-footer-bordered`]: footerLine,\n      });\n\n      return (\n        footer && (\n          <div style={footerStyle} class={footerCls} x-semi-prop=\"footer\">\n            {footer}\n          </div>\n        )\n      );\n    };\n\n    return () => {\n      const { bordered, shadows, style, className, children, ...otherProps } = getProps(props);\n      const others = omit(otherProps, [\n        // Remove APIs in otherProps that do not need to be hung on the outer node\n        'actions',\n        'bodyStyle',\n        'cover',\n        'headerExtraContent',\n        'footer',\n        'footerLine',\n        'footerStyle',\n        'header',\n        'headerLine',\n        'headerStyle',\n        'loading',\n        'title',\n      ]);\n      const cardCls = cls(prefixcls, className, {\n        [`${prefixcls}-bordered`]: bordered,\n        [`${prefixcls}-shadows`]: shadows,\n        [`${prefixcls}-shadows-${shadows}`]: shadows,\n      });\n\n      return (\n        <div {...others} aria-busy={props.loading} class={cardCls} style={style}>\n          {renderHeader()}\n          {renderCover()}\n          {renderBody()}\n          {renderFooter()}\n        </div>\n      );\n    };\n  },\n});\n\nexport type CardType = typeof Card & {\n  Meta: typeof Meta\n}\nconst BaseCard = Card as CardType\nBaseCard.Meta = Meta\nexport default BaseCard;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","prefixcls","cssClasses","PREFIX","propTypes","actions","PropTypes","array","bodyStyle","object","bordered","bool","children","node","className","string","cover","footer","footerLine","footerStyle","header","headerExtraContent","headerLine","headerStyle","loading","shadows","style","title","defaultProps","vuePropsType","vuePropsMake","Card","defineComponent","props","name","setup","getProps","useHasInProps","slots","useSlots","renderHeader","headerCls","cls","Boolean","headerWrapperCls","titleCls","_createVNode","isString","Title","showTooltip","rows","default","renderCover","coverCls","renderBody","_slot","bodyCls","actionsCls","actionsItemCls","placeholder","SkeletonTitle","SkeletonParagraph","Skeleton","Array","isArray","Space","map","item","idx","renderFooter","footerCls","otherProps","others","omit","cardCls","_mergeProps","BaseCard","Meta"],"mappings":"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"}