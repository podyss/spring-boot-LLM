{"version":3,"file":"index.js","sources":["../../src/components/pincode/index.tsx"],"sourcesContent":["import { defineComponent, ref, h, Fragment, useSlots, CSSProperties, PropType, watch, VNode, reactive } from 'vue';\nimport * as PropTypes from '../PropTypes';\nimport cls from 'classnames';\nimport PinCodeFoundation, {\n  PinCodeAdapter,\n  PinCodeBaseProps,\n  PinCodeBaseState,\n} from '@douyinfe/semi-foundation/pincode/foundation';\nimport { cssClasses } from '@douyinfe/semi-foundation/pincode/constants';\nimport Input, { InputProps } from '../input';\nimport '@douyinfe/semi-foundation/pincode/pincode.scss';\nimport { CombineProps } from '../interface';\nimport { vuePropsMake } from '../PropTypes';\nimport { useBaseComponent } from '../_base/baseComponent';\n\nexport interface PinCodeProps extends PinCodeBaseProps {\n  className?: string;\n  style?: CSSProperties;\n  size?: InputProps['size'];\n}\n\nexport interface PinCodeState extends PinCodeBaseState {}\n\nconst propTypes: CombineProps<PinCodeProps> = {\n  className: PropTypes.string,\n  style: PropTypes.object,\n  size: PropTypes.string as PropType<PinCodeProps['size']>,\n  disabled: PropTypes.bool,\n  value: PropTypes.string,\n  format: [Function, ...PropTypes.node] as PropType<PinCodeProps['format']>,\n  onChange: {\n    type: PropTypes.func as PropType<PinCodeProps['onChange']>,\n    required: true,\n  },\n  defaultValue: PropTypes.string,\n  count: PropTypes.number,\n  autoFocus: PropTypes.bool,\n  onComplete: PropTypes.func as PropType<PinCodeProps['onComplete']>,\n};\nconst defaultProps = {\n  count: 6,\n  format: 'number',\n  autoFocus: true,\n};\n\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst PinCode = defineComponent({\n  props: { ...vuePropsType },\n  name: 'PinCode',\n  setup(props, { expose }) {\n    const slots = useSlots();\n\n    let inputDOMList = [];\n    const state = reactive<PinCodeState>({\n      valueList: ((props.value || props.defaultValue) && (props.value || props.defaultValue).split('')) || [],\n      currentActiveIndex: 0,\n    });\n    const { adapter: adapterInject, setStateAsync } = useBaseComponent(props, state);\n    watch([() => props.value], () => {\n      foundation.updateValueList(props.value.split(''));\n    });\n    function adapter_(): PinCodeAdapter<PinCodeProps, PinCodeState> {\n      return {\n        ...adapterInject(),\n        onCurrentActiveIndexChange: async (i) => {\n          await setStateAsync({ currentActiveIndex: i });\n        },\n        notifyValueChange: (values: string[]) => {\n          props.onChange?.(values.join(''));\n        },\n        changeSpecificInputFocusState: (index, state) => {\n          if (state === 'focus') {\n            inputDOMList[index]?.focus?.();\n          } else if (state === 'blur') {\n            inputDOMList[index]?.blur?.();\n          }\n        },\n        updateValueList: async (valueList: PinCodeState['valueList']) => {\n          await setStateAsync({ valueList });\n        },\n      };\n    }\n    const adapter = adapter_();\n    const foundation = new PinCodeFoundation(adapter);\n\n    const focus = (index: number) => {\n      const inputDOM = inputDOMList[index];\n      inputDOM?.focus();\n      inputDOM?.setSelectionRange(1, 1);\n    };\n\n    const blur = (index: number) => {\n      inputDOMList[index]?.blur();\n    };\n\n    expose({\n      focus,\n      blur,\n    })\n\n    const renderSingleInput = (index: number) => {\n      return (\n        <Input\n          forwardRef={(dom: any) => (inputDOMList[index] = dom)}\n          key={`input-${index}`}\n          data-testid=\"pin-code-input\"\n          autoFocus={props.autoFocus && index === 0}\n          value={state.valueList[index]}\n          size={props.size}\n          disabled={props.disabled}\n          onBlur={() => foundation.handleCurrentActiveIndexChange(index, 'blur')}\n          onFocus={() => foundation.handleCurrentActiveIndexChange(index, 'focus')}\n          onPaste={(e) => foundation.handlePaste(e, index)}\n          onKeyDown={(e) => {\n            foundation.handleKeyDownOnSingleInput(e, index);\n          }}\n          onChange={(v) => {\n            const userInputChar = v[v.length - 1];\n            if (foundation.validateValue(userInputChar)) {\n              foundation.completeSingleInput(index, userInputChar);\n            }\n          }}\n        />\n      );\n    };\n\n    return () => {\n      const inputElements: VNode[] = [];\n      for (let i = 0; i < props.count; i++) {\n        inputElements.push(renderSingleInput(i));\n      }\n      return (\n        <div class={cls(`${cssClasses.PREFIX}-wrapper`, props.className)} style={props.style}>\n          {inputElements}\n        </div>\n      );\n    };\n  },\n});\n\nexport default PinCode;\n"],"names":["propTypes","className","PropTypes","string","style","object","size","disabled","bool","value","format","Function","node","onChange","type","func","required","defaultValue","count","number","autoFocus","onComplete","defaultProps","vuePropsType","vuePropsMake","PinCode","defineComponent","props","name","setup","expose","useSlots","inputDOMList","state","reactive","valueList","split","currentActiveIndex","adapter","adapterInject","setStateAsync","useBaseComponent","watch","foundation","updateValueList","adapter_","onCurrentActiveIndexChange","i","notifyValueChange","values","join","changeSpecificInputFocusState","index","focus","blur","PinCodeFoundation","inputDOM","setSelectionRange","renderSingleInput","_createVNode","Input","dom","onBlur","handleCurrentActiveIndexChange","onFocus","e","handlePaste","handleKeyDownOnSingleInput","v","userInputChar","length","validateValue","completeSingleInput","inputElements","push","cls","cssClasses","PREFIX"],"mappings":"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"}