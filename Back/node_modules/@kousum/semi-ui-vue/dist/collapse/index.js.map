{"version":3,"file":"index.js","sources":["../../src/components/collapse/index.tsx"],"sourcesContent":["import cls from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport { vuePropsMake } from '../PropTypes';\nimport { cssClasses } from '@douyinfe/semi-foundation/collapse/constants';\nimport CollapseFoundation, {\n  CollapseAdapter,\n  CollapseProps,\n  CollapseState,\n} from '@douyinfe/semi-foundation/collapse/foundation';\nimport CollapsePanel from './item';\nimport '@douyinfe/semi-foundation/collapse/collapse.scss';\nimport { noop } from '@douyinfe/semi-foundation/utils/function';\nimport { isEqual } from 'lodash';\nimport CollapseContext from './collapse-context';\nimport { CSSProperties, defineComponent, h, onBeforeUnmount, PropType, reactive, useSlots, VNode, watch } from 'vue';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport { CombineProps } from '../interface';\n\nexport type { CollapsePanelProps } from './item';\n\nexport interface CollapseReactProps extends CollapseProps {\n  expandIcon?: VNode;\n  collapseIcon?: VNode;\n  // children?: VNode;\n  style?: CSSProperties;\n  onChange?: (activeKey: CollapseProps['activeKey'], e: MouseEvent) => void;\n  lazyRender?: boolean;\n}\n\nexport type { CollapseState };\n\nconst propTypes: CombineProps<CollapseReactProps> = {\n  activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  defaultActiveKey: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  accordion: PropTypes.bool,\n  clickHeaderToExpand: PropTypes.bool,\n  onChange: PropTypes.func as PropType<CollapseReactProps['onChange']>,\n  expandIcon: PropTypes.node as PropType<CollapseReactProps['expandIcon']>,\n  collapseIcon: PropTypes.node as PropType<CollapseReactProps['collapseIcon']>,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  keepDOM: PropTypes.bool,\n  motion: PropTypes.oneOfType([PropTypes.bool, PropTypes.func, PropTypes.object]),\n  expandIconPosition: PropTypes.string as PropType<CollapseReactProps['expandIconPosition']>,\n  lazyRender: PropTypes.bool as PropType<CollapseReactProps['lazyRender']>,\n};\n\nconst defaultProps = {\n  defaultActiveKey: '',\n  clickHeaderToExpand: true,\n  onChange: noop,\n  expandIconPosition: 'right',\n  lazyRender: false,\n};\nexport const vuePropsType = vuePropsMake<CollapseReactProps>(propTypes, defaultProps);\nconst Collapse = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Collapse',\n  setup(props, {}) {\n    const slots = useSlots();\n\n    const state = reactive<CollapseState>({\n      activeSet: new Set(),\n    });\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent<CollapseReactProps>(props, state);\n\n    function adapter_(): CollapseAdapter {\n      return {\n        ...adapterInject(),\n        handleChange: (activeKey: CollapseProps['activeKey'], e: MouseEvent) => props.onChange(activeKey, e),\n        addActiveKey: (activeSet: CollapseState['activeSet']) => (state.activeSet = activeSet),\n      };\n    }\n\n    const adapter = adapter_();\n    const foundation = new CollapseFoundation(adapter);\n    const initKeys = foundation.initActiveKey();\n    state.activeSet = new Set(initKeys);\n\n    function getDerivedStateFromProps(props: CollapseReactProps, state: CollapseState) {\n      if (props.activeKey) {\n        const keys = Array.isArray(props.activeKey) ? props.activeKey : [props.activeKey];\n        const newSet = new Set(keys);\n        if (!isEqual(newSet, state.activeSet)) {\n          return {\n            ...state,\n            activeSet: newSet,\n          };\n        }\n        return state;\n      }\n      return state;\n    }\n\n    watch(\n      [() => props.activeKey, () => state.activeSet],\n      () => {\n        const newState = getDerivedStateFromProps({ ...props }, {...state});\n        if (newState) {\n          Object.keys(newState).forEach((key) => {\n            state[key] = newState[key];\n          });\n        }\n      },\n      { deep: true }\n    );\n\n    onBeforeUnmount(() => {\n      foundation.destroy();\n    });\n\n    const onChange = (activeKey: string, e: MouseEvent) => {\n      foundation.handleChange(activeKey, e);\n    };\n\n    return () => {\n      const children = slots.default?.();\n      // eslint-disable-next-line max-len\n      const {\n        defaultActiveKey,\n        lazyRender,\n        accordion,\n        style,\n        motion,\n        className,\n        keepDOM,\n        expandIconPosition,\n        expandIcon,\n        collapseIcon,\n        clickHeaderToExpand,\n        ...rest\n      } = props;\n      const clsPrefix = cls(cssClasses.PREFIX, className);\n      const { activeSet } = state;\n      return (\n        <div class={clsPrefix} style={style} {...getDataAttr()}>\n          <CollapseContext.Provider\n            value={{\n              activeSet,\n              expandIcon,\n              collapseIcon,\n              clickHeaderToExpand,\n              keepDOM,\n              expandIconPosition,\n              onClick: onChange,\n              motion,\n              lazyRender,\n            }}\n          >\n            {children}\n          </CollapseContext.Provider>\n        </div>\n      );\n    };\n  },\n});\n\n\nexport type CollapseType = typeof Collapse & {\n  Panel: typeof CollapsePanel;\n}\nconst BaseCollapse = Collapse as CollapseType;\nBaseCollapse.Panel = CollapsePanel\n\nexport default BaseCollapse;\nexport { CollapsePanel };\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","propTypes","activeKey","PropTypes","oneOfType","string","array","defaultActiveKey","accordion","bool","clickHeaderToExpand","onChange","func","expandIcon","node","collapseIcon","style","object","className","keepDOM","motion","expandIconPosition","lazyRender","defaultProps","noop","vuePropsType","vuePropsMake","Collapse","defineComponent","props","name","setup","slots","useSlots","state","reactive","activeSet","Set","adapter","adapterInject","getDataAttr","useBaseComponent","adapter_","handleChange","e","addActiveKey","foundation","CollapseFoundation","initKeys","initActiveKey","getDerivedStateFromProps","keys","Array","isArray","newSet","isEqual","watch","newState","forEach","key","deep","onBeforeUnmount","destroy","children","default","rest","clsPrefix","cls","cssClasses","PREFIX","_createVNode","_mergeProps","CollapseContext","Provider","onClick","BaseCollapse","Panel","CollapsePanel"],"mappings":"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"}