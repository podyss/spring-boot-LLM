{"version":3,"file":"item.js","sources":["../../src/components/collapse/item.tsx"],"sourcesContent":["import cls from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport { cssClasses } from '@douyinfe/semi-foundation/collapse/constants';\nimport Collapsible from '../collapsible';\nimport { IconChevronDown, IconChevronUp } from '@kousum/semi-icons-vue';\nimport { getUuidShort } from '@douyinfe/semi-foundation/utils/uuid';\nimport {\n  ComponentObjectPropsOptions,\n  CSSProperties,\n  defineComponent,\n  Fragment,\n  h,\n  onMounted, PropType,\n  ref,\n  useSlots,\n  VNode,\n} from 'vue';\nimport { useCollapseContext } from './context/Consumer';\nimport { vuePropsMake } from '../PropTypes';\nimport { CombineProps, VueJsxNode } from '../interface';\n\nexport interface CollapsePanelProps {\n  itemKey: string;\n  extra?: VueJsxNode;\n  header?: VueJsxNode;\n  className?: string;\n  // children?: VNode[];\n  reCalcKey?: number | string;\n  style?: CSSProperties;\n  showArrow?: boolean;\n  disabled?: boolean;\n  onMotionEnd?: () => void;\n}\n\nconst propTypes: CombineProps<CollapsePanelProps> = {\n  itemKey: {\n    type: PropTypes.string,\n    required: true\n  },\n  extra: PropTypes.node,\n  header: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  className: PropTypes.string,\n  reCalcKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  showArrow: PropTypes.bool,\n  disabled: PropTypes.bool,\n  style: PropTypes.object,\n  onMotionEnd: PropTypes.func as PropType<CollapsePanelProps['onMotionEnd']>,\n};\n\nconst defaultProps = {\n  showArrow: true,\n  disabled: false,\n};\n\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst CollapsePanel = defineComponent({\n  props: { ...vuePropsType },\n  name: 'CollapsePanel',\n  setup(props, {}) {\n    let ariaID: string = '';\n    onMounted(() => {\n      ariaID = getUuidShort({});\n    });\n    const slots = useSlots();\n\n    const headerExpandIconTriggerRef = ref();\n    const { context } = useCollapseContext();\n    function renderHeader(active: boolean, expandIconEnable = true) {\n      const { showArrow, header, extra } = props;\n      let { expandIcon, collapseIcon } = context.value;\n      const { expandIconPosition } = context.value;\n      if (typeof expandIcon === 'undefined') {\n        expandIcon = <IconChevronDown />;\n      }\n      if (typeof collapseIcon === 'undefined') {\n        collapseIcon = <IconChevronUp />;\n      }\n      const icon = (\n        <span\n          ref={headerExpandIconTriggerRef}\n          aria-hidden=\"true\"\n          class={cls([\n            `${cssClasses.PREFIX}-header-icon`,\n            { [`${cssClasses.PREFIX}-header-iconDisabled`]: !expandIconEnable },\n          ])}\n        >\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {expandIconEnable ? (active ? collapseIcon : expandIcon) : expandIcon}\n        </span>\n      );\n      const iconPosLeft = expandIconPosition === 'left';\n      if (typeof header === 'string') {\n        return (\n          <>\n            {showArrow && (iconPosLeft ? icon : null)}\n            <span>{header}</span>\n            <span class={`${cssClasses.PREFIX}-header-right`}>\n              <span>{extra}</span>\n              {showArrow && (iconPosLeft ? null : icon)}\n            </span>\n          </>\n        );\n      }\n      return (\n        <Fragment>\n          {showArrow && (iconPosLeft ? icon : null)}\n          {header}\n          {showArrow && (iconPosLeft ? null : icon)}\n        </Fragment>\n      );\n    }\n\n    const handleClick = (itemKey: string, e: MouseEvent) => {\n      // Judge user click Icon or Header\n      // Don't mount this func into icon span wrapper, or get triggered twice because of event propagation\n      if (context.value.clickHeaderToExpand || headerExpandIconTriggerRef.value?.contains(e.target as HTMLElement)) {\n        context.value.onClick(itemKey, e);\n      }\n    };\n\n    return () => {\n      const children = slots.default?.();\n      const { className, itemKey, reCalcKey, header, extra, showArrow, disabled, ...restProps } = props;\n      const { keepDOM, expandIconPosition, activeSet, motion, lazyRender } = context.value;\n      const active = activeSet.has(itemKey);\n      const itemCls = cls(className, {\n        [`${cssClasses.PREFIX}-item`]: true,\n      });\n      const headerCls = cls({\n        [`${cssClasses.PREFIX}-header`]: true,\n        [`${cssClasses.PREFIX}-header-disabled`]: disabled,\n        [`${cssClasses.PREFIX}-header-iconLeft`]: expandIconPosition === 'left',\n      });\n      const contentCls = cls({\n        [`${cssClasses.PREFIX}-content`]: true,\n      });\n      return (\n        <div class={itemCls} {...restProps}>\n          <div\n            role=\"button\"\n            tabindex={0}\n            class={headerCls}\n            aria-disabled={disabled}\n            aria-expanded={active ? 'true' : 'false'}\n            aria-owns={ariaID}\n            onClick={(e) => !disabled && handleClick(itemKey, e)}\n          >\n            {renderHeader(active, children !== undefined && !disabled)}\n          </div>\n          {children && (\n            <Collapsible\n              lazyRender={lazyRender}\n              isOpen={active}\n              keepDOM={keepDOM}\n              motion={motion}\n              reCalcKey={reCalcKey}\n              onMotionEnd={props.onMotionEnd}\n            >\n              <div class={contentCls} aria-hidden={!active} id={ariaID}>\n                <div class={`${cssClasses.PREFIX}-content-wrapper`}>{children}</div>\n              </div>\n            </Collapsible>\n          )}\n        </div>\n      );\n    };\n  },\n});\n\nexport default CollapsePanel;\n"],"names":["propTypes","itemKey","type","PropTypes","string","required","extra","node","header","oneOfType","className","reCalcKey","number","showArrow","bool","disabled","style","object","onMotionEnd","func","defaultProps","vuePropsType","vuePropsMake","CollapsePanel","defineComponent","props","name","setup","ariaID","onMounted","getUuidShort","slots","useSlots","headerExpandIconTriggerRef","ref","context","useCollapseContext","renderHeader","active","expandIconEnable","expandIcon","collapseIcon","value","expandIconPosition","_createVNode","IconChevronDown","IconChevronUp","icon","cls","cssClasses","PREFIX","iconPosLeft","_Fragment","handleClick","e","clickHeaderToExpand","contains","target","onClick","children","default","restProps","keepDOM","activeSet","motion","lazyRender","has","itemCls","headerCls","contentCls","_mergeProps","undefined","Collapsible"],"mappings":"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"}