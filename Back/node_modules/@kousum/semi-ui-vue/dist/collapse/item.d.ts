import { CSSProperties, PropType } from 'vue';
import { CombineProps, VueJsxNode } from '../interface';
export interface CollapsePanelProps {
    itemKey: string;
    extra?: VueJsxNode;
    header?: VueJsxNode;
    className?: string;
    reCalcKey?: number | string;
    style?: CSSProperties;
    showArrow?: boolean;
    disabled?: boolean;
    onMotionEnd?: () => void;
}
export declare const vuePropsType: CombineProps<CollapsePanelProps>;
declare const CollapsePanel: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    itemKey: {
        type: PropType<string>;
        default?: any;
        required: true;
    };
    extra: PropType<VueJsxNode> | {
        type: PropType<VueJsxNode>;
        default?: any;
        required?: false;
    };
    header: PropType<VueJsxNode> | {
        type: PropType<VueJsxNode>;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    reCalcKey: PropType<string | number> | {
        type: PropType<string | number>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    showArrow: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    disabled: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    onMotionEnd: PropType<() => void> | {
        type: PropType<() => void>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    itemKey: {
        type: PropType<string>;
        default?: any;
        required: true;
    };
    extra: PropType<VueJsxNode> | {
        type: PropType<VueJsxNode>;
        default?: any;
        required?: false;
    };
    header: PropType<VueJsxNode> | {
        type: PropType<VueJsxNode>;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    reCalcKey: PropType<string | number> | {
        type: PropType<string | number>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    showArrow: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    disabled: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    onMotionEnd: PropType<() => void> | {
        type: PropType<() => void>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default CollapsePanel;
