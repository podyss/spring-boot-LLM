import { createApp as p, h as d, createVNode as i } from "vue";
import { destroyFns as l } from "./Modal";
import s from "./ConfirmModal";
import '@douyinfe/semi-foundation/lib/es/modal/modal.css';
import { IconInfoCircle as a, IconTickCircle as h, IconAlertTriangle as y, IconAlertCircle as C, IconHelpCircle as g } from "@kousum/semi-icons-vue";
import { omit as I } from "lodash";
function T(n) {
  const t = document.createElement("div");
  document.body.appendChild(t);
  let r, c = {
    ...n
  };
  const e = () => {
    r == null || r.unmount(), t.parentNode && setTimeout(() => {
      var o;
      (o = t.parentNode) == null || o.removeChild(t);
    });
    for (let o = 0; o < l.length; o++)
      if (l[o] === e) {
        l.splice(o, 1);
        break;
      }
  };
  function f(o) {
    const {
      afterClose: u
    } = o;
    e(), r = p(d(s, {
      ...o,
      motion: n.motion,
      afterClose: () => {
        u == null || u(...args), e();
      }
    })), r.mount(t);
  }
  function m(o) {
    c = {
      ...c,
      ...o
    }, f(c);
  }
  return f(c), l.push(e), {
    destroy: e,
    update: m
  };
}
function b(n) {
  return {
    type: "info",
    icon: i(a, null, null),
    ...n
  };
}
function E(n) {
  return {
    type: "success",
    icon: i(h, null, null),
    ...n
  };
}
function P(n) {
  return {
    type: "warning",
    icon: i(y, null, null),
    ...n
  };
}
function x(n) {
  return {
    type: "error",
    icon: i(C, null, null),
    okButtonProps: {
      type: "danger",
      ...n.okButtonProps
    },
    ...I(n, ["okButtonProps"])
  };
}
function F(n) {
  return {
    type: "confirm",
    icon: i(g, null, null),
    ...n
  };
}
export {
  T as default,
  F as withConfirm,
  x as withError,
  b as withInfo,
  E as withSuccess,
  P as withWarning
};
//# sourceMappingURL=confirm.js.map
