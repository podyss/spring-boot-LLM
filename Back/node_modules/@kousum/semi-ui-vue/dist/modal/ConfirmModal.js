import { defineComponent as j, useSlots as I, ref as f, computed as b, cloneVNode as N, createVNode as d } from "vue";
import u from "classnames";
import { cssClasses as g } from '@douyinfe/semi-foundation/lib/es/modal/constants';
import M from "./Modal";
import { isSemiIcon as z } from "../_utils";
import '@douyinfe/semi-foundation/lib/es/modal/modal.css';
import * as e from "../PropTypes";
import { vuePropsMake as B } from "../PropTypes";
import { useHasInProps as w } from "../_base/baseComponent";
const D = {
  type: {
    type: String,
    required: !0
  },
  mask: {
    type: e.bool,
    default: void 0
  },
  closable: {
    type: e.bool,
    default: void 0
  },
  centered: {
    type: e.bool,
    default: void 0
  },
  visible: {
    type: e.bool,
    default: void 0
  },
  width: e.oneOfType([e.string, e.number]),
  height: e.oneOfType([e.string, e.number]),
  confirmLoading: {
    type: e.bool,
    default: void 0
  },
  cancelLoading: {
    type: e.bool,
    default: void 0
  },
  okText: e.string,
  okType: e.string,
  cancelText: e.string,
  maskClosable: {
    type: e.bool,
    default: void 0
  },
  onCancel: e.func,
  onOk: e.func,
  afterClose: e.func,
  okButtonProps: e.object,
  cancelButtonProps: e.object,
  style: e.object,
  className: e.string,
  maskStyle: e.object,
  bodyStyle: e.object,
  zIndex: e.number,
  title: e.node,
  icon: e.node,
  header: [...e.any, e.func],
  footer: [...e.any, e.func],
  hasCancel: {
    type: e.bool,
    default: void 0
  },
  motion: e.oneOfType([e.bool, e.func, e.object]),
  getPopupContainer: e.func,
  getContainerContext: e.func,
  maskFixed: {
    type: e.bool,
    default: void 0
  },
  closeIcon: e.node,
  closeOnEsc: {
    type: e.bool,
    default: void 0
  },
  size: String,
  keepDOM: {
    type: e.bool,
    default: void 0
  },
  lazyRender: {
    type: e.bool,
    default: void 0
  },
  direction: String,
  fullScreen: {
    type: e.bool,
    default: void 0
  },
  content: [String, Object, Function],
  modalContentClass: String,
  preventScroll: Boolean,
  footerFill: Boolean
}, F = {}, V = B(D, F), W = /* @__PURE__ */ j({
  props: {
    ...V
  },
  name: "ConfirmModal",
  setup(t, {}) {
    const {
      getProps: C
    } = w();
    I();
    const p = f(!0);
    function c(n) {
      p.value = n;
    }
    const m = f();
    function a(n) {
      m.value = n;
    }
    const y = f();
    function i(n) {
      y.value = n;
    }
    const k = b(() => (n) => {
      const o = t.onOk && t.onOk(n);
      o && o.then ? (a(!0), o.then((...l) => {
        c(!1), a(!1);
      }, (l) => {
        a(!1);
      })) : c(!1);
    }), v = b(() => (n) => {
      const o = t.onCancel && t.onCancel(n);
      o && o.then ? (i(!0), o.then((...l) => {
        c(!1), i(!1);
      }, (l) => {
        i(!1);
      })) : c(!1);
    });
    return () => {
      const {
        direction: n
      } = t, {
        title: o,
        content: l,
        icon: r,
        type: O,
        onCancel: A,
        onOk: G,
        className: h,
        ...S
      } = C(t), s = `${g.DIALOG}-confirm`, L = u(h, s, {
        [`${s}-rtl`]: n === "rtl"
      }), x = u(`${g.DIALOG}-${O}`), P = z(r) ? N(r, {
        class: `${s}-icon ${x}-icon`,
        size: "extra-large"
      }) : r, T = o == null ? null : d("span", {
        class: `${s}-title-text`
      }, [o]), $ = u(`${s}-content`, {
        [`${s}-content-withIcon`]: t.icon
      });
      return d(M, {
        className: L,
        title: T,
        confirmLoading: m.value,
        cancelLoading: y.value,
        onOk: k.value,
        onCancel: v.value,
        icon: P,
        visible: p.value,
        ...S
      }, {
        default: () => [d("div", {
          class: $,
          "x-semi-prop": "content"
        }, [typeof l == "function" ? l() : l])]
      });
    };
  }
});
export {
  W as default,
  V as vuePropsType
};
//# sourceMappingURL=ConfirmModal.js.map
