{"version":3,"file":"ConfirmModal.js","sources":["../../src/components/modal/ConfirmModal.tsx"],"sourcesContent":["/* eslint-disable react/destructuring-assignment */\n/* eslint-disable eqeqeq */\nimport cls from 'classnames';\nimport { cssClasses } from '@douyinfe/semi-foundation/modal/constants';\nimport Modal from './Modal';\nimport { isSemiIcon } from '../_utils';\n\nimport '@douyinfe/semi-foundation/modal/modal.scss';\nimport { ConfirmProps } from './confirm';\nimport { cloneVNode, ComponentObjectPropsOptions, computed, defineComponent, h, PropType, ref, useSlots } from 'vue';\nimport * as PropTypes from '../PropTypes';\nimport { vuePropsMake } from '../PropTypes';\nimport { useHasInProps } from '../_base/baseComponent';\nimport { CombineProps } from '../interface';\n\nconst propTypes: CombineProps<ConfirmProps> = {\n  type: {\n    type: String as PropType<ConfirmProps['type']>,\n    required: true,\n  },\n  mask: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  closable: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  centered: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  visible: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  confirmLoading: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  cancelLoading: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  okText: PropTypes.string,\n  okType: PropTypes.string as PropType<ConfirmProps['okType']>,\n  cancelText: PropTypes.string,\n  maskClosable: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  onCancel: PropTypes.func as PropType<ConfirmProps['onCancel']>,\n  onOk: PropTypes.func as PropType<ConfirmProps['onOk']>,\n  afterClose: PropTypes.func as PropType<ConfirmProps['afterClose']>,\n  okButtonProps: PropTypes.object,\n  cancelButtonProps: PropTypes.object,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  maskStyle: PropTypes.object,\n  bodyStyle: PropTypes.object,\n  zIndex: PropTypes.number,\n  title: PropTypes.node as PropType<ConfirmProps['title']>,\n  icon: PropTypes.node as PropType<ConfirmProps['icon']>,\n  header: [...PropTypes.any, PropTypes.func] as PropType<ConfirmProps['header']>,\n  footer: [...PropTypes.any, PropTypes.func] as PropType<ConfirmProps['footer']>,\n  hasCancel: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  motion: PropTypes.oneOfType([PropTypes.bool, PropTypes.func, PropTypes.object]),\n  getPopupContainer: PropTypes.func as PropType<ConfirmProps['getPopupContainer']>,\n  getContainerContext: PropTypes.func as PropType<ConfirmProps['getContainerContext']>,\n  maskFixed: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  closeIcon: PropTypes.node as PropType<ConfirmProps['closeIcon']>,\n  closeOnEsc: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  size: String as PropType<ConfirmProps['size']>,\n  keepDOM: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  lazyRender: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  direction: String,\n  fullScreen: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  content: [String, Object, Function] as PropType<ConfirmProps['content']>,\n  modalContentClass: String,\n  preventScroll: Boolean,\n  footerFill: Boolean,\n};\nconst defaultProps = {};\nexport const vuePropsType = vuePropsMake<ConfirmProps>(propTypes, defaultProps);\nconst ConfirmModal = defineComponent({\n  props: { ...vuePropsType },\n  name: 'ConfirmModal',\n  setup(props, {}) {\n    const { getProps } = useHasInProps();\n    const slots = useSlots();\n\n    const visible = ref<boolean>(true);\n\n    function setVisible(val: boolean) {\n      visible.value = val;\n    }\n\n    const confirmLoading = ref<boolean>();\n\n    function setConfirmLoading(val: boolean) {\n      confirmLoading.value = val;\n    }\n\n    const cancelLoading = ref<boolean>();\n\n    function setCancelLoading(val: boolean) {\n      cancelLoading.value = val;\n    }\n\n    const handleOk = computed(() => (e: MouseEvent) => {\n      const res = props.onOk && props.onOk(e);\n      if (res && res.then) {\n        setConfirmLoading(true);\n        res.then(\n          (...args) => {\n            setVisible(false);\n            setConfirmLoading(false);\n          },\n          (err) => {\n            setConfirmLoading(false);\n          }\n        );\n      } else {\n        setVisible(false);\n      }\n    });\n\n    const handleCancel = computed(() => (e) => {\n      const res = props.onCancel && props.onCancel(e);\n      if (res && res.then) {\n        setCancelLoading(true);\n        res.then(\n          (...args) => {\n            setVisible(false);\n            setCancelLoading(false);\n          },\n          (err) => {\n            setCancelLoading(false);\n          }\n        );\n      } else {\n        setVisible(false);\n      }\n    });\n\n    return () => {\n      const { direction } = props;\n\n      const { title, content, icon, type, onCancel, onOk, className, ...rest } = getProps(props);\n\n      const confirmCls = `${cssClasses.DIALOG}-confirm`;\n      const wrapperCls = cls(className, confirmCls, {\n        [`${confirmCls}-rtl`]: direction === 'rtl',\n      });\n      const typeCls = cls(`${cssClasses.DIALOG}-${type}`);\n      const iconNode = isSemiIcon(icon)\n        ? cloneVNode(icon as any, { class: `${confirmCls}-icon ${typeCls}-icon`, size: 'extra-large' })\n        : icon;\n      const titleNode = title == null ? null : <span class={`${confirmCls}-title-text`}>{title}</span>;\n      const contentCls = cls(`${confirmCls}-content`, {\n        [`${confirmCls}-content-withIcon`]: props.icon,\n      });\n\n      return (\n        <Modal\n          {...{\n            className: wrapperCls,\n            title: titleNode,\n            confirmLoading: confirmLoading.value,\n            cancelLoading: cancelLoading.value,\n            onOk: handleOk.value,\n            onCancel: handleCancel.value,\n            icon: iconNode,\n            visible: visible.value,\n            ...rest,\n          }}\n        >\n          <div class={contentCls} x-semi-prop=\"content\">\n            {typeof content === 'function' ? content() : content}\n          </div>\n        </Modal>\n      );\n    };\n  },\n});\n\nexport default ConfirmModal;\n"],"names":["propTypes","type","String","required","mask","PropTypes","bool","default","undefined","closable","centered","visible","width","oneOfType","string","number","height","confirmLoading","cancelLoading","okText","okType","cancelText","maskClosable","onCancel","func","onOk","afterClose","okButtonProps","object","cancelButtonProps","style","className","maskStyle","bodyStyle","zIndex","title","node","icon","header","any","footer","hasCancel","motion","getPopupContainer","getContainerContext","maskFixed","closeIcon","closeOnEsc","size","keepDOM","lazyRender","direction","fullScreen","content","Object","Function","modalContentClass","preventScroll","Boolean","footerFill","defaultProps","vuePropsType","vuePropsMake","ConfirmModal","defineComponent","props","name","setup","getProps","useHasInProps","useSlots","ref","setVisible","val","value","setConfirmLoading","setCancelLoading","handleOk","computed","e","res","then","args","err","handleCancel","rest","confirmCls","cssClasses","DIALOG","wrapperCls","cls","typeCls","iconNode","isSemiIcon","cloneVNode","class","titleNode","_createVNode","contentCls","Modal"],"mappings":"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"}