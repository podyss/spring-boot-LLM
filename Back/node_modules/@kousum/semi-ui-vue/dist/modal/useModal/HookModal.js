import { defineComponent as p, useSlots as l, ref as c, createVNode as m, mergeProps as v } from "vue";
import g from "../ConfirmModal";
import { get as y } from "lodash";
const C = {
  afterClose: {
    type: Function,
    required: !0
  },
  config: {
    type: Object,
    required: !0
  },
  motion: [Object, Function]
}, j = /* @__PURE__ */ p({
  props: {
    ...C
  },
  name: "HookModal",
  setup(r, {
    expose: i
  }) {
    l();
    const {
      afterClose: s,
      config: u,
      ...t
    } = r, e = c(u);
    return i({
      destroy: () => {
        e.value = {
          ...e.value,
          visible: !1
        };
      },
      update: (o) => {
        e.value = {
          ...e.value,
          ...o
        };
      }
    }), () => {
      const {
        motion: o
      } = t, a = typeof o > "u" || o ? {
        ...o,
        didLeave: (...d) => {
          const n = y(t.motion, "didLeave");
          typeof n == "function" && n(...d), s();
        }
      } : !1, f = e.value;
      return m(g, v(f, {
        motion: a
      }), null);
    };
  }
});
export {
  j as default,
  C as vuePropsType
};
//# sourceMappingURL=HookModal.js.map
