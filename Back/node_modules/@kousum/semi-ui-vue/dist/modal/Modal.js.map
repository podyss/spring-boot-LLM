{"version":3,"file":"Modal.js","sources":["../../src/components/modal/Modal.tsx"],"sourcesContent":["import { cssClasses } from '@douyinfe/semi-foundation/modal/constants';\nimport Button from '../button';\nimport ModalFoundation, { ModalAdapter, ModalProps, ModalState } from '@douyinfe/semi-foundation/modal/modalFoundation';\nimport ModalContent from './ModalContent';\nimport Portal from '../_portal';\nimport LocaleConsumer from '../locale/localeConsumer';\nimport cls from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport { vuePropsMake } from '../PropTypes';\nimport { noop } from 'lodash';\nimport '@douyinfe/semi-foundation/modal/modal.scss';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport confirm, { withConfirm, withError, withInfo, withSuccess, withWarning } from './confirm';\nimport { Locale } from '../locale/interface';\nimport useModal from './useModal';\nimport { ButtonProps } from '../button/Button';\nimport CSSAnimation from '../_cssAnimation';\nimport { getScrollbarWidth } from '../_utils';\n\nimport {\n  ComponentObjectPropsOptions,\n  CSSProperties,\n  defineComponent,\n  h,\n  nextTick,\n  onMounted,\n  onUnmounted,\n  PropType,\n  reactive,\n  ref,\n  useSlots,\n  VNode,\n  watch,\n} from 'vue';\nimport { CombineProps } from '../interface';\n\nexport let destroyFns: any[] = [];\nexport type ConfirmType = 'leftTop' | 'leftBottom' | 'rightTop' | 'rightBottom';\nexport type Directions = 'ltr' | 'rtl';\nexport type { ModalState };\n\nexport interface ModalReactProps extends ModalProps {\n  getContainerContext?: () => { Provider: VNode };\n  cancelButtonProps?: ButtonProps;\n  okButtonProps?: ButtonProps;\n  bodyStyle?: CSSProperties;\n  maskStyle?: CSSProperties;\n  style?: CSSProperties;\n  icon?: VNode | string | (() => VNode | string);\n  closeIcon?: VNode | string | (() => VNode | string);\n  title?: VNode | string | (() => VNode | string);\n  content?: VNode | string | (() => VNode | string);\n  footer?: VNode | string | null | (() => VNode | string);\n  header?: VNode | string | (() => VNode | string);\n  onCancel?: (e: MouseEvent) => void | Promise<any>;\n  onOk?: (e: MouseEvent) => void | Promise<any>;\n  type?: string;\n}\n\nconst propTypes: CombineProps<ModalReactProps> = {\n  mask: PropTypes.bool,\n  closable: PropTypes.bool,\n  centered: PropTypes.bool,\n  visible: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  confirmLoading: PropTypes.bool,\n  cancelLoading: PropTypes.bool,\n  okText: PropTypes.string,\n  okType: PropTypes.string as PropType<ModalReactProps['okType']>,\n  cancelText: PropTypes.string,\n  maskClosable: PropTypes.bool,\n  onCancel: PropTypes.func as PropType<ModalReactProps['onCancel']>,\n  onOk: PropTypes.func as PropType<ModalReactProps['onOk']>,\n  afterClose: PropTypes.func as PropType<ModalReactProps['afterClose']>,\n  okButtonProps: PropTypes.object,\n  cancelButtonProps: PropTypes.object,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  maskStyle: PropTypes.object,\n  bodyStyle: PropTypes.object,\n  zIndex: PropTypes.number,\n  title: PropTypes.any as PropType<ModalReactProps['title']>,\n  icon: PropTypes.node as PropType<ModalReactProps['icon']>,\n  header: [...PropTypes.any, PropTypes.func] as PropType<ModalReactProps['header']>,\n  footer: [...PropTypes.any, PropTypes.func] as PropType<ModalReactProps['footer']>,\n  hasCancel: PropTypes.bool,\n  motion: PropTypes.oneOfType([PropTypes.bool, PropTypes.func, PropTypes.object]),\n  getPopupContainer: PropTypes.func as PropType<ModalReactProps['getPopupContainer']>,\n  getContainerContext: PropTypes.func as PropType<ModalReactProps['getContainerContext']>,\n  maskFixed: PropTypes.bool,\n  closeIcon: PropTypes.node as PropType<ModalReactProps['closeIcon']>,\n  closeOnEsc: PropTypes.bool,\n  size: String as PropType<ModalReactProps['size']>,\n  keepDOM: PropTypes.bool,\n  lazyRender: PropTypes.bool,\n  direction: String,\n  fullScreen: PropTypes.bool,\n  footerFill: PropTypes.bool,\n  content: [Object, String],\n  type: String as PropType<ModalReactProps['type']>,\n  modalContentClass: String,\n  preventScroll: Boolean,\n};\nconst defaultProps = {\n  zIndex: 1000,\n  motion: true,\n  mask: true,\n  centered: false,\n  closable: true,\n  visible: false,\n  okType: 'primary',\n  maskClosable: true,\n  hasCancel: true,\n  onCancel: noop,\n  onOk: noop,\n  afterClose: noop,\n  maskFixed: false,\n  closeOnEsc: true,\n  size: 'small',\n  keepDOM: false,\n  lazyRender: true,\n  fullScreen: false,\n  getContainerContext: noop,\n};\nexport const vuePropsType = vuePropsMake<ModalReactProps>(propTypes, defaultProps);\n\nconst Modal = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Modal',\n  emits: {\n    cancel:(e: MouseEvent): void | Promise<any>=>{},\n    ok:(e: MouseEvent): void | Promise<any>=>{},\n  },\n  setup(props, { expose }) {\n    const slots = useSlots();\n\n    const state = reactive<ModalState>({\n      displayNone: !props.visible,\n      isFullScreen: props.fullScreen,\n    });\n    const modalRef = ref();\n    let bodyOverflow: string | null = null;\n    let scrollBarWidth = 0;\n    let originBodyWith = '100%';\n    let _haveRendered: boolean;\n\n    const { adapter: adapterInject } = useBaseComponent<ModalReactProps>(props, state);\n\n    function adapter_(): ModalAdapter {\n      return {\n        ...adapterInject<ModalReactProps, ModalState>(),\n        // getProps: () => props,\n        disabledBodyScroll: () => {\n          const { getPopupContainer } = props;\n          bodyOverflow = document.body.style.overflow || '';\n          if ((!getPopupContainer || getPopupContainer() === globalThis?.document?.body) && bodyOverflow !== 'hidden') {\n            document.body.style.overflow = 'hidden';\n            document.body.style.width = `calc(${originBodyWith || '100%'} - ${scrollBarWidth}px)`;\n          }\n        },\n        enabledBodyScroll: () => {\n          const { getPopupContainer } = props;\n          if ((!getPopupContainer || getPopupContainer() === globalThis?.document?.body) && bodyOverflow !== null && bodyOverflow !== 'hidden') {\n            document.body.style.overflow = bodyOverflow;\n            document.body.style.width = originBodyWith;\n          }\n        },\n        notifyCancel: (e: MouseEvent) => {\n          return props.onCancel(e);\n        },\n        notifyOk: (e: MouseEvent) => {\n          return props.onOk(e);\n        },\n        notifyClose: () => {\n          props.afterClose();\n        },\n        toggleDisplayNone: (displayNone: boolean, callback?: (hidden: boolean) => void) => {\n          if (displayNone !== state.displayNone) {\n            state.displayNone = displayNone;\n            nextTick(() => {\n              (callback || noop)();\n            });\n          }\n        },\n        notifyFullScreen: (isFullScreen: boolean) => {\n          if (isFullScreen !== state.isFullScreen) {\n            state.isFullScreen = isFullScreen;\n          }\n        },\n      };\n    }\n\n    const adapter = adapter_();\n    const foundation = new ModalFoundation(adapter);\n\n    function getDerivedStateFromProps(props: ModalReactProps, prevState: ModalState) {\n      const newState: Partial<ModalState> = {};\n\n      if (props.fullScreen !== prevState.isFullScreen) {\n        newState.isFullScreen = props.fullScreen;\n      }\n\n      if (props.visible && prevState.displayNone) {\n        newState.displayNone = false;\n      }\n\n      return newState;\n    }\n\n    watch(\n      () => props.fullScreen,\n      (value) => {\n        const newState = getDerivedStateFromProps({ ...props }, { ...state });\n        newState &&\n          Object.keys(newState).forEach((key) => {\n            state[key] = newState[key];\n          });\n      }\n    );\n\n    onMounted(() => {\n      scrollBarWidth = getScrollbarWidth();\n      originBodyWith = document.body.style.width;\n      if (props.visible) {\n        foundation.beforeShow();\n      }\n    });\n\n    watch(\n      () => props.visible,\n      (value, oldValue) => {\n        // hide => show\n        if (!oldValue && value) {\n          foundation.beforeShow();\n        }\n        // show => hide\n        if (oldValue && !value) {\n          foundation.afterHide();\n        }\n      }\n    );\n\n    onUnmounted(() => {\n      if (props.visible) {\n        foundation.destroy();\n      } else {\n        foundation.enabledBodyScroll();\n      }\n    });\n\n    const handleCancel = (e: MouseEvent) => {\n      foundation.handleCancel(e);\n    };\n\n    const handleOk = (e: MouseEvent) => {\n      foundation.handleOk(e);\n    };\n\n    const updateState = () => {\n      const { visible } = props;\n      foundation.toggleDisplayNone(!visible);\n    };\n\n    const renderFooter = (): VNode => {\n      const { okText, okType, cancelText, confirmLoading, cancelLoading, hasCancel, footerFill } = props;\n      const getCancelButton = (locale: Locale['Modal']) => {\n        if (!hasCancel) {\n          return null;\n        } else {\n          return (\n            <Button\n              aria-label=\"cancel\"\n              onClick={handleCancel}\n              loading={cancelLoading === undefined ? state.onCancelReturnPromiseStatus === 'pending' : cancelLoading}\n              type=\"tertiary\"\n              block={footerFill}\n              autoFocus={true}\n              {...props.cancelButtonProps}\n              style={{\n                ...(footerFill ? { marginLeft: 'unset' } : {}),\n                ...((props.cancelButtonProps?.style as CSSProperties) || {}),\n              }}\n              x-semi-children-alias=\"cancelText\"\n            >\n              {cancelText || locale.cancel}\n            </Button>\n          );\n        }\n      };\n\n      return (\n        <LocaleConsumer componentName=\"Modal\">\n          {(locale: Locale['Modal'], localeCode: Locale['code']) => (\n            <div\n              class={cls({\n                [`${cssClasses.DIALOG}-footerfill`]: footerFill,\n              })}\n            >\n              {slots.extraFooter?.()}\n              {getCancelButton(locale)}\n              <Button\n                aria-label=\"confirm\"\n                type={okType}\n                theme=\"solid\"\n                block={footerFill}\n                loading={confirmLoading === undefined ? state.onOKReturnPromiseStatus === 'pending' : confirmLoading}\n                onClick={handleOk}\n                {...props.okButtonProps}\n                x-semi-children-alias=\"okText\"\n              >\n                {okText || locale.confirm}\n              </Button>\n            </div>\n          )}\n        </LocaleConsumer>\n      );\n    };\n\n    // getDialog = () => {\n    //     const {\n    //         footer,\n    //         ...restProps\n    //     } = props;\n    //     const renderFooter = 'footer' in props ? footer : renderFooter();\n    //     return <ModalContent {...restProps} footer={renderFooter} onClose={handleCancel}/>;\n    // };\n\n    const renderDialog = () => {\n      let {\n        footer,\n        className,\n        motion,\n        maskStyle: maskStyleFromProps,\n        keepDOM,\n        style: styleFromProps,\n        zIndex,\n        getPopupContainer,\n        visible,\n        modalContentClass,\n        //@ts-ignore\n        getContainerContext,\n        ...restProps\n      } = adapter.getProps();\n\n      let style = styleFromProps;\n      const maskStyle = maskStyleFromProps;\n      const renderFooter_ =\n        'footer' in adapter.getProps() ? (typeof footer === 'function' ? footer() : footer) : renderFooter();\n      let wrapperStyle: CSSProperties = {\n        zIndex,\n      };\n      if (getPopupContainer && getPopupContainer() !== globalThis?.document?.body) {\n        wrapperStyle = {\n          zIndex,\n          position: 'static',\n        };\n      }\n\n      const classList = cls(className, {\n        [`${cssClasses.DIALOG}-displayNone`]: keepDOM && state.displayNone,\n      });\n\n      const shouldRender =\n        props.visible ||\n        (props.keepDOM && (!props.lazyRender || _haveRendered)) ||\n        (props.motion &&\n          !state.displayNone) /* When there is animation, we use displayNone to judge whether animation is ended and judge whether to unmount content */;\n\n      if (shouldRender) {\n        _haveRendered = true;\n      }\n      return (\n        <CSSAnimation\n          motion={props.motion}\n          animationState={visible ? 'enter' : 'leave'}\n          startClassName={\n            visible ? `${cssClasses.DIALOG}-content-animate-show` : `${cssClasses.DIALOG}-content-animate-hide`\n          }\n          onAnimationEnd={() => {\n            updateState();\n          }}\n          children={({ animationClassName, animationEventsNeedBind }) => {\n            return (\n              <CSSAnimation\n                motion={props.motion}\n                animationState={visible ? 'enter' : 'leave'}\n                startClassName={\n                  visible ? `${cssClasses.DIALOG}-mask-animate-show` : `${cssClasses.DIALOG}-mask-animate-hide`\n                }\n                onAnimationEnd={() => {\n                  updateState();\n                }}\n                children={({\n                  animationClassName: maskAnimationClassName,\n                  animationEventsNeedBind: maskAnimationEventsNeedBind,\n                }) => {\n                  return shouldRender ? (\n                    <Portal style={wrapperStyle} getPopupContainer={getPopupContainer}>\n                      <ModalContent\n                        {...restProps}\n                        getContainerContext={getContainerContext}\n                        contentExtraProps={animationEventsNeedBind}\n                        maskExtraProps={maskAnimationEventsNeedBind}\n                        isFullScreen={state.isFullScreen}\n                        contentClassName={`${animationClassName} ${modalContentClass}`}\n                        maskClassName={maskAnimationClassName}\n                        className={classList}\n                        getPopupContainer={getPopupContainer}\n                        maskStyle={maskStyle}\n                        style={style}\n                        ref={modalRef}\n                        footer={renderFooter_}\n                        onClose={handleCancel}\n                      >\n                        {{ default: slots.default }}\n                      </ModalContent>\n                    </Portal>\n                  ) : null;\n                }}\n              ></CSSAnimation>\n            );\n          }}\n        ></CSSAnimation>\n      );\n    };\n\n    return () => {\n      const { visible, keepDOM, lazyRender } = props;\n      return renderDialog();\n    };\n  },\n});\n\n// const info = function (props: ModalReactProps) {\n//   return confirm<ReturnType<typeof withInfo>>(withInfo(props));\n// };\n//\n// const success = function (props: ModalReactProps) {\n//   return confirm<ReturnType<typeof withSuccess>>(withSuccess(props));\n// };\n//\n// const error = function (props: ModalReactProps) {\n//   return confirm<ReturnType<typeof withError>>(withError(props));\n// };\n//\n// const warning = function (props: ModalReactProps) {\n//   return confirm<ReturnType<typeof withWarning>>(withWarning(props));\n// };\n//\n// const confirm_ = function (props: ModalReactProps) {\n//   return confirm<ReturnType<typeof withConfirm>>(withConfirm(props));\n// };\n//\n// const destroyAll = function destroyAllFn() {\n//   while (destroyFns.length) {\n//     const close = destroyFns.pop();\n//     if (close) {\n//       close();\n//     }\n//   }\n// };\n\nexport class ModalClass {\n  static useModal = useModal;\n\n  static info = function (props: ModalReactProps) {\n    return confirm<ReturnType<typeof withInfo>>(withInfo(props));\n  };\n\n  static success = function (props: ModalReactProps) {\n    return confirm<ReturnType<typeof withSuccess>>(withSuccess(props));\n  };\n\n  static error = function (props: ModalReactProps) {\n    return confirm<ReturnType<typeof withError>>(withError(props));\n  };\n\n  static warning = function (props: ModalReactProps) {\n    return confirm<ReturnType<typeof withWarning>>(withWarning(props));\n  };\n\n  static confirm = function (props: ModalReactProps) {\n    return confirm<ReturnType<typeof withConfirm>>(withConfirm(props));\n  };\n\n  static destroyAll = function destroyAllFn() {\n    for (let i = 0, len = destroyFns.length; i < len; i++) {\n      const close = destroyFns[i];\n      if (close) {\n        close();\n      }\n    }\n    destroyFns = [];\n  };\n}\n// Modal.info = info\n// Modal.success = success\n// Modal.error = error\n// Modal.warning = warning\n// Modal.confirm = confirm_\n// Modal.destroyAll = destroyAll\n// Modal.useModal = useModal\nexport type ModalType = typeof Modal & {\n  useModal: typeof ModalClass.useModal,\n  info: typeof ModalClass.info,\n  success: typeof ModalClass.success,\n  error: typeof ModalClass.error,\n  warning: typeof ModalClass.warning,\n  confirm: typeof ModalClass.confirm,\n  destroyAll: typeof ModalClass.destroyAll,\n}\n\nconst BaseModal = Modal as ModalType;\nBaseModal.useModal = ModalClass.useModal\nBaseModal.info = ModalClass.info\nBaseModal.success = ModalClass.success\nBaseModal.error = ModalClass.error\nBaseModal.warning = ModalClass.warning\nBaseModal.confirm = ModalClass.confirm\nBaseModal.destroyAll = ModalClass.destroyAll\n\nexport default Modal;\n"],"names":["destroyFns","propTypes","mask","PropTypes","bool","closable","centered","visible","width","oneOfType","string","number","height","confirmLoading","cancelLoading","okText","okType","cancelText","maskClosable","onCancel","func","onOk","afterClose","okButtonProps","object","cancelButtonProps","style","className","maskStyle","bodyStyle","zIndex","title","any","icon","node","header","footer","hasCancel","motion","getPopupContainer","getContainerContext","maskFixed","closeIcon","closeOnEsc","size","String","keepDOM","lazyRender","direction","fullScreen","footerFill","content","Object","type","modalContentClass","preventScroll","Boolean","defaultProps","noop","vuePropsType","vuePropsMake","Modal","defineComponent","props","name","emits","cancel","e","ok","setup","expose","slots","useSlots","state","reactive","displayNone","isFullScreen","modalRef","ref","bodyOverflow","scrollBarWidth","originBodyWith","_haveRendered","adapter","adapterInject","useBaseComponent","adapter_","disabledBodyScroll","document","body","overflow","globalThis","enabledBodyScroll","notifyCancel","notifyOk","notifyClose","toggleDisplayNone","callback","nextTick","notifyFullScreen","foundation","ModalFoundation","getDerivedStateFromProps","prevState","newState","watch","value","keys","forEach","key","onMounted","getScrollbarWidth","beforeShow","oldValue","afterHide","onUnmounted","destroy","handleCancel","handleOk","updateState","renderFooter","getCancelButton","locale","_createVNode","Button","_mergeProps","undefined","onCancelReturnPromiseStatus","marginLeft","default","LocaleConsumer","localeCode","cls","cssClasses","DIALOG","extraFooter","onOKReturnPromiseStatus","confirm","renderDialog","maskStyleFromProps","styleFromProps","restProps","getProps","renderFooter_","wrapperStyle","position","classList","shouldRender","CSSAnimation","onAnimationEnd","children","animationClassName","animationEventsNeedBind","maskAnimationClassName","maskAnimationEventsNeedBind","Portal","ModalContent","ModalClass","__publicField","useModal","info","withInfo","success","withSuccess","error","withError","warning","withWarning","withConfirm","destroyAll","i","len","length","close","BaseModal"],"mappings":"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"}