{"version":3,"file":"index.js","sources":["../../src/components/banner/index.tsx"],"sourcesContent":["import cls from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport Button from '../iconButton';\nimport { strings, cssClasses } from '@douyinfe/semi-foundation/banner/constants';\nimport BannerFoundation, { BannerAdapter } from '@douyinfe/semi-foundation/banner/foundation';\nimport '@douyinfe/semi-foundation/banner/banner.scss';\nimport { Title, Paragraph } from '../typography/index';\nimport { IconClose, IconAlertTriangle, IconInfoCircle, IconTickCircle, IconAlertCircle } from '@kousum/semi-icons-vue';\n\nimport warning from '@douyinfe/semi-foundation/utils/warning';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport {\n  ComponentObjectPropsOptions,\n  CSSProperties,\n  defineComponent,\n  h,\n  onMounted,\n  onUnmounted,\n  PropType,\n  reactive,\n  useSlots,\n} from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { CombineProps, VueJsxNode } from '../interface';\n\nconst prefixCls = cssClasses.PREFIX;\nconst types = strings.TYPE;\n\nexport type Type = 'info' | 'danger' | 'warning' | 'success';\nexport interface BannerProps {\n  type?: Type;\n  className?: string;\n  fullMode?: boolean;\n  title?: VueJsxNode;\n  description?: VueJsxNode;\n  icon?: VueJsxNode;\n  closeIcon?: VueJsxNode;\n  style?: CSSProperties;\n  bordered?: boolean;\n  onClose?(e: MouseEvent): void;\n}\n\nexport interface BannerState {\n  visible: boolean;\n}\n\nconst propTypes: CombineProps<BannerProps> = {\n  // target: PropTypes.func,\n  fullMode: PropTypes.bool,\n  // insertAfter: PropTypes.func,\n  type: String as PropType<BannerProps['type']>,\n  title: PropTypes.node,\n  description: PropTypes.node,\n  icon: PropTypes.node,\n  closeIcon: PropTypes.node,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  onClose: PropTypes.func as PropType<BannerProps['onClose']>,\n  bordered: PropTypes.bool,\n};\n\nconst defaultProps = {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onClose: () => {},\n  type: 'info',\n  fullMode: true,\n};\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst Banner = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Banner',\n  setup(props, {}) {\n    warning('target' in props, \"[Semi Banner] 'target' has been deprecated, please write JSX directly instead.\");\n\n    const slots = useSlots();\n\n    const state = reactive<BannerState>({\n      visible: true,\n    });\n\n    let foundation: BannerFoundation;\n\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent<BannerProps>(props, state);\n    function adapter_(): BannerAdapter<BannerProps, BannerState> {\n      return {\n        ...adapterInject(),\n        setVisible: () => {\n          state.visible = false;\n        },\n        notifyClose: (e: MouseEvent) => {\n          const { onClose } = props;\n          onClose(e);\n        },\n      };\n    }\n    const adapter = adapter_();\n\n    onMounted(() => {\n      foundation = new BannerFoundation(adapter);\n      foundation.init();\n    });\n\n    onUnmounted(() => {\n      foundation.destroy();\n    });\n\n    const remove = (e: MouseEvent) => {\n      e && e.stopPropagation();\n      foundation.removeBanner(e);\n    };\n\n    function renderCloser() {\n      const { closeIcon } = props;\n      if (closeIcon === null) {\n        return closeIcon;\n      }\n      const closer = (\n        <Button\n          className={`${prefixCls}-close`}\n          onClick={remove}\n          icon={closeIcon || <IconClose x-semi-prop=\"closeIcon\" aria-hidden={true} />}\n          theme=\"borderless\"\n          size=\"small\"\n          type=\"tertiary\"\n          aria-label=\"Close\"\n        />\n      );\n      return closer;\n    }\n\n    function renderIcon() {\n      const { type, icon } = props;\n      const iconMap = {\n        warning: <IconAlertTriangle size=\"large\" aria-label=\"warning\" />,\n        success: <IconTickCircle size=\"large\" aria-label=\"success\" />,\n        info: <IconInfoCircle size=\"large\" aria-label=\"info\" />,\n        danger: <IconAlertCircle size=\"large\" aria-label=\"danger\" />,\n      };\n      let iconType: VueJsxNode = iconMap[type];\n      const iconCls = cls({\n        [`${prefixCls}-icon`]: true,\n        // [prefixCls + '-' + type]: true,\n      });\n      if (typeof icon !== 'undefined') {\n        iconType = icon;\n      }\n      if (iconType) {\n        return (\n          <div class={iconCls} x-semi-prop=\"icon\">\n            {iconType}\n          </div>\n        );\n      }\n      return null;\n    }\n\n    return () => {\n      const children = slots.default?.();\n      const { type, className, style, bordered, title, description, fullMode } = props;\n      const { visible } = state;\n      const wrapper = cls(prefixCls, className, {\n        [`${prefixCls}-${type}`]: type,\n        [`${prefixCls}-full`]: fullMode,\n        [`${prefixCls}-in-container`]: !fullMode,\n        [`${prefixCls}-bordered`]: !fullMode && bordered,\n      });\n      const banner = visible ? (\n        <div class={wrapper} style={style} role=\"alert\" {...getDataAttr()}>\n          <div class={`${prefixCls}-content-wrapper`}>\n            <div class={`${prefixCls}-content`}>\n              {renderIcon()}\n              <div class={`${prefixCls}-content-body`}>\n                {title ? (\n                  <Title heading={5} className={`${prefixCls}-title`} component_=\"div\" x-semi-prop=\"title\">\n                    {title}\n                  </Title>\n                ) : null}\n                {description ? (\n                  <Paragraph className={`${prefixCls}-description`} component_=\"div\" x-semi-prop=\"description\">\n                    {description}\n                  </Paragraph>\n                ) : null}\n              </div>\n            </div>\n            {renderCloser()}\n          </div>\n          {children ? (\n            <div class={`${prefixCls}-extra`} x-semi-prop=\"children\">\n              {children}\n            </div>\n          ) : null}\n        </div>\n      ) : null;\n      return banner;\n    };\n  },\n});\n\nexport default Banner;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","prefixCls","cssClasses","PREFIX","strings","TYPE","propTypes","fullMode","PropTypes","bool","type","String","title","node","description","icon","closeIcon","style","object","className","string","onClose","func","bordered","defaultProps","vuePropsType","vuePropsMake","Banner","defineComponent","props","name","setup","warning","slots","useSlots","state","reactive","visible","foundation","adapter","adapterInject","getDataAttr","useBaseComponent","adapter_","setVisible","notifyClose","e","onMounted","BannerFoundation","init","onUnmounted","destroy","remove","stopPropagation","removeBanner","renderCloser","_createVNode","Button","IconClose","renderIcon","iconType","IconAlertTriangle","success","IconTickCircle","info","IconInfoCircle","danger","IconAlertCircle","iconCls","cls","children","default","wrapper","_mergeProps","Title","Paragraph"],"mappings":"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"}