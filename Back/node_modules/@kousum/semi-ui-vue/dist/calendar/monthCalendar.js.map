{"version":3,"file":"monthCalendar.js","sources":["../../src/components/calendar/monthCalendar.tsx"],"sourcesContent":["import cls from 'classnames';\nimport { isEqual } from 'lodash';\nimport * as PropTypes from '../PropTypes';\nimport { IconClose } from '@kousum/semi-icons-vue';\n// eslint-disable-next-line max-len\nimport CalendarFoundation, {\n  CalendarAdapter,\n  EventObject,\n  MonthData,\n  MonthlyEvent,\n  ParsedEventsType,\n  ParsedEventsWithArray,\n  ParsedRangeEvent,\n} from '@douyinfe/semi-foundation/calendar/foundation';\nimport { cssClasses } from '@douyinfe/semi-foundation/calendar/constants';\nimport { DateObj } from '@douyinfe/semi-foundation/calendar/eventUtil';\nimport LocaleConsumer from '../locale/localeConsumer';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport Popover from '../popover';\nimport Button from '../iconButton';\nimport { Locale } from '../locale/interface';\nimport { MonthCalendarProps } from './interface';\n\nimport '@douyinfe/semi-foundation/calendar/calendar.scss';\nimport {\n  ComponentObjectPropsOptions,\n  defineComponent,\n  h,\n  onBeforeUnmount,\n  onMounted,\n  PropType,\n  reactive,\n  ref,\n  useSlots,\n  watch,\n} from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { CombineProps } from '../interface';\n\nconst toPercent = (num: number) => {\n  const res = num < 1 ? num * 100 : 100;\n  return `${res}%`;\n};\n\nconst prefixCls = `${cssClasses.PREFIX}-month`;\nconst contentPadding = 60;\nconst contentHeight = 24;\n\nexport interface MonthCalendarState {\n  itemLimit: number;\n  showCard: Record<string, [boolean] | [boolean, string]>;\n  parsedEvents: MonthlyEvent;\n  cachedKeys: Array<string>;\n}\n\nconst propTypes: CombineProps<MonthCalendarProps> = {\n  displayValue: PropTypes.object,\n  header: PropTypes.node,\n  events: PropTypes.array,\n  mode: PropTypes.string as PropType<MonthCalendarProps['mode']>,\n  markWeekend: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  style: PropTypes.object,\n  className: PropTypes.string,\n  dateGridRender: PropTypes.func as PropType<MonthCalendarProps['dateGridRender']>,\n  onClick: PropTypes.func as PropType<MonthCalendarProps['onClick']>,\n  onClose: PropTypes.func as PropType<MonthCalendarProps['onClose']>,\n\n  weekStartsOn: PropTypes.number as PropType<MonthCalendarProps['weekStartsOn']>,\n\n  renderDateDisplay: PropTypes.func as PropType<MonthCalendarProps['renderDateDisplay']>,\n  minEventHeight: PropTypes.number as PropType<MonthCalendarProps['minEventHeight']>,\n  allDayEventsRender: PropTypes.func as PropType<MonthCalendarProps['allDayEventsRender']>,\n  // range: PropTypes.array as PropType<MonthCalendarProps['range']>,\n  // showCurrTime: PropTypes.bool as PropType<MonthCalendarProps['showCurrTime']>,\n  // scrollTop: PropTypes.number as PropType<MonthCalendarProps['scrollTop']>,\n  // renderTimeDisplay: PropTypes.func as PropType<MonthCalendarProps['renderTimeDisplay']>,\n};\n\nconst defaultProps = {\n  displayValue: new Date(),\n  events: [] as EventObject[],\n  mode: 'month',\n};\n\nexport const vuePropsType = vuePropsMake<MonthCalendarProps>(propTypes, defaultProps);\nconst MonthCalendar = defineComponent({\n  props: { ...vuePropsType },\n  name: 'MonthCalendar',\n  setup(props, {}) {\n    const slots = useSlots();\n\n    const cellDom = ref();\n    const cardRef: Map<string, any> = new Map();\n    let contentCellHeight: number;\n    let monthlyData: MonthData;\n\n    let clickOutsideHandler: (e: MouseEvent) => void;\n\n    const state = reactive<MonthCalendarState>({\n      itemLimit: 0,\n      showCard: {},\n      parsedEvents: {} as MonthlyEvent,\n      cachedKeys: [],\n    });\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent<MonthCalendarProps>(props, state);\n    function adapter_(): CalendarAdapter<MonthCalendarProps, MonthCalendarState> {\n      return {\n        ...adapterInject(),\n        registerClickOutsideHandler: (key: string, cb: () => void) => {\n          clickOutsideHandler = (e: MouseEvent) => {\n            const cardInstance = cardRef && cardRef.get(key);\n            // eslint-disable-next-line react/no-find-dom-node\n            const cardDom = cardInstance;\n            const target = e.target as Element;\n            const path = (e.composedPath && e.composedPath()) || [target];\n            if (cardDom && !cardDom.contains(e.target as any) && !path.includes(cardDom)) {\n              cb();\n            }\n          };\n          document.addEventListener('mousedown', clickOutsideHandler, false);\n        },\n        unregisterClickOutsideHandler: () => {\n          document.removeEventListener('mousedown', clickOutsideHandler, false);\n        },\n        setMonthlyData: (data) => {\n          monthlyData = data;\n        },\n        getMonthlyData: () => monthlyData,\n        notifyClose: (e, key) => {\n          const updates = {};\n          updates[key] = [false];\n          state.showCard = { ...state.showCard, ...updates };\n          props.onClose && props.onClose(e);\n        },\n        openCard: (key, spacing) => {\n          const updates = {};\n          const pos = spacing ? 'leftTopOver' : 'rightTopOver';\n          updates[key] = [true, pos];\n          state.showCard = { ...updates };\n        },\n        setParsedEvents: (parsedEvents: ParsedEventsType) => {\n          state.parsedEvents = parsedEvents as MonthlyEvent;\n        },\n        setItemLimit: (itemLimit) => {\n          state.itemLimit = itemLimit;\n        },\n        cacheEventKeys: (cachedKeys) => {\n          state.cachedKeys = cachedKeys;\n        },\n      };\n    }\n\n    const adapter = adapter_();\n    const foundation = new CalendarFoundation(adapter);\n\n    const calcItemLimit = () => {\n      contentCellHeight = cellDom.value.getBoundingClientRect().height;\n      return Math.max(0, Math.ceil((contentCellHeight - contentPadding) / contentHeight));\n    };\n\n    onMounted(() => {\n      foundation.init();\n      const itemLimit = calcItemLimit();\n      foundation.parseMonthlyEvents(itemLimit);\n    });\n\n    onBeforeUnmount(() => {\n      foundation.destroy();\n    });\n\n    watch(\n      [() => state.cachedKeys, () => state.itemLimit, () => props.events, () => props.height, () => props.displayValue],\n      (\n        value,\n        [prevStateCachedKeys, prevStateItemLimit, prevPropsEvents, prevPropsHeight, prevPropsDisplayValue],\n        onCleanup\n      ) => {\n        const prevEventKeys = prevStateCachedKeys;\n        const nowEventKeys = props.events.map((event) => event.key);\n\n        let itemLimitUpdate = false;\n        let { itemLimit } = state;\n        if (prevPropsHeight !== props.height) {\n          itemLimit = calcItemLimit();\n          if (prevStateItemLimit !== itemLimit) {\n            itemLimitUpdate = true;\n          }\n        }\n        if (\n          !isEqual(prevEventKeys, nowEventKeys) ||\n          itemLimitUpdate ||\n          !isEqual(prevPropsDisplayValue, props.displayValue)\n        ) {\n          foundation.parseMonthlyEvents(itemLimit);\n        }\n      }\n    );\n\n    const handleClick = (e: MouseEvent, val: [Date]) => {\n      const { onClick } = props;\n      const value = foundation.formatCbValue(val);\n      onClick && onClick(e, value);\n    };\n\n    function closeCard(e: MouseEvent, key: string) {\n      foundation.closeCard(e, key);\n    }\n\n    const showCardFunc = (e: MouseEvent, key: string) => {\n      foundation.showCard(e, key);\n    };\n\n    const renderHeader = (dateFnsLocale: Locale['dateFnsLocale']) => {\n      const { markWeekend, displayValue } = props;\n      monthlyData = foundation.getMonthlyData(displayValue, dateFnsLocale);\n      return (\n        <div class={`${prefixCls}-header`} role=\"presentation\">\n          <div role=\"presentation\" class={`${prefixCls}-grid`}>\n            <ul role=\"row\" class={`${prefixCls}-grid-row`}>\n              {monthlyData[0].map((day) => {\n                const { weekday } = day;\n                const listCls = cls({\n                  [`${cssClasses.PREFIX}-weekend`]: markWeekend && day.isWeekend,\n                });\n                return (\n                  <li role=\"columnheader\" aria-label={weekday} key={`${weekday}-monthheader`} class={listCls}>\n                    <span>{weekday}</span>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      );\n    };\n\n    const renderEvents = (events: ParsedRangeEvent[]) => {\n      const { itemLimit } = state;\n      if (!events) {\n        return undefined;\n      }\n      const list = events.map((event, ind) => {\n        const { leftPos, width, topInd, key, children } = event;\n        const style = {\n          left: toPercent(leftPos),\n          width: toPercent(width),\n          top: `${topInd}em`,\n        };\n        if (topInd < itemLimit)\n          return (\n            <li\n              class={`${cssClasses.PREFIX}-event-item ${cssClasses.PREFIX}-event-month`}\n              key={key || `${ind}-monthevent`}\n              style={style}\n            >\n              {children}\n            </li>\n          );\n        return null;\n      });\n      return list;\n    };\n\n    const renderCollapsed = (\n      events: MonthlyEvent['day'][number],\n      itemInfo: DateObj,\n      listCls: string,\n      month: string\n    ) => {\n      const { itemLimit, showCard } = state;\n      const { weekday, dayString, date } = itemInfo;\n      const key = date.toString();\n      const remained = events.filter((i) => Boolean(i)).length - itemLimit;\n      const cardCls = `${prefixCls}-event-card`;\n      // const top = contentPadding / 2 + state.itemLimit * contentHeight;\n      const shouldRenderCard = remained > 0;\n      const closer = (\n        <Button\n          className={`${cardCls}-close`}\n          onClick={(e) => closeCard(e, key)}\n          type=\"tertiary\"\n          icon={<IconClose />}\n          theme=\"borderless\"\n          size=\"small\"\n        />\n      );\n      const header = (\n        <div class={`${cardCls}-header-info`}>\n          <div class={`${cardCls}-header-info-weekday`}>{weekday}</div>\n          <div class={`${cardCls}-header-info-date`}>{dayString}</div>\n        </div>\n      );\n      const content = (\n        <div class={cardCls}>\n          <div class={`${cardCls}-content`}>\n            <div class={`${cardCls}-header`}>\n              {header}\n              {closer}\n            </div>\n            <div class={`${cardCls}-body`}>\n              <ul class={`${cardCls}-list`}>\n                {events.map((item) => (\n                  <li key={item.key || `${item.start.toString()}-event`}>{item.children}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      );\n      const pos = showCard && showCard[key] ? showCard[key][1] : 'leftTopOver';\n      const text = (\n        <LocaleConsumer componentName=\"Calendar\">\n          {(\n            locale: Locale['Calendar'] // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n          ) => (\n            <div\n              class={`${cardCls}-wrapper`}\n              style={{ bottom: 0 }}\n              onClick={(e) => showCardFunc(e, key)}\n              {...getDataAttr()}\n            >\n              {locale.remaining.replace('${remained}', String(remained))}\n            </div>\n          )}\n        </LocaleConsumer>\n      );\n      return (\n        <Popover\n          key={`${date.valueOf()}`}\n          content={content}\n          position={pos as any}\n          trigger=\"custom\"\n          visible={showCard && showCard[key] && showCard[key][0]}\n          ref={(ref) => cardRef.set(key, ref)}\n        >\n          <li key={date as any} class={listCls} onClick={(e) => handleClick(e, [date])}>\n            {formatDayString(date, month, dayString)}\n            {shouldRenderCard ? text : null}\n            {renderCusDateGrid(date)}\n          </li>\n        </Popover>\n      );\n    };\n\n    const formatDayString = (dateObj: Date, month: string, date: string) => {\n      const { renderDateDisplay } = props;\n      if (renderDateDisplay) {\n        return renderDateDisplay(dateObj);\n      }\n      if (date === '1') {\n        return (\n          <LocaleConsumer componentName=\"Calendar\">\n            {(locale: Locale['Calendar'], localeCode: string) => (\n              <span class={`${prefixCls}-date`}>\n                {month}\n                <span class={`${cssClasses.PREFIX}-today-date`}>&nbsp;{date}</span>\n                {locale.datestring}\n              </span>\n            )}\n          </LocaleConsumer>\n        );\n      }\n      return (\n        // eslint-disable-next-line max-len\n        <span class={`${prefixCls}-date`}>\n          <span class={`${cssClasses.PREFIX}-today-date`}>{date}</span>\n        </span>\n      );\n    };\n\n    const renderCusDateGrid = (date: Date) => {\n      const { dateGridRender } = props;\n      if (!dateGridRender) {\n        return null;\n      }\n      return dateGridRender(date.toString(), date);\n    };\n\n    const renderWeekRow = (\n      index: number | string,\n      weekDay: MonthData[number],\n      events: MonthlyEvent = {} as MonthlyEvent\n    ) => {\n      const { markWeekend } = props;\n      const { itemLimit } = state;\n      const { display, day } = events;\n      return (\n        <div role=\"presentation\" class={`${prefixCls}-weekrow`} ref={cellDom} key={`${index}-weekrow`}>\n          <ul role=\"row\" class={`${prefixCls}-skeleton`}>\n            {weekDay.map((each) => {\n              const { date, dayString, isToday, isSameMonth, isWeekend, month, ind } = each;\n              const listCls = cls({\n                [`${cssClasses.PREFIX}-today`]: isToday,\n                [`${cssClasses.PREFIX}-weekend`]: markWeekend && isWeekend,\n                [`${prefixCls}-same`]: isSameMonth,\n              });\n              const shouldRenderCollapsed = Boolean(day && day[ind] && day[ind].length > itemLimit);\n              const inner = (\n                <li\n                  role=\"gridcell\"\n                  aria-label={date.toLocaleDateString()}\n                  aria-current={isToday ? 'date' : false}\n                  key={`${date}-weeksk`}\n                  class={listCls}\n                  onClick={(e) => handleClick(e, [date])}\n                >\n                  {formatDayString(date, month, dayString)}\n                  {renderCusDateGrid(date)}\n                </li>\n              );\n              if (!shouldRenderCollapsed) {\n                return inner;\n              }\n              return renderCollapsed(day[ind], each, listCls, month);\n            })}\n          </ul>\n          <ul class={`${cssClasses.PREFIX}-event-items`}>{display ? renderEvents(display) : null}</ul>\n        </div>\n      );\n    };\n\n    const renderMonthGrid = () => {\n      const { parsedEvents } = state;\n      return (\n        <div role=\"presentation\" class={`${prefixCls}-week`}>\n          <ul role=\"presentation\" class={`${prefixCls}-grid-col`}>\n            {Object.keys(monthlyData).map((weekInd) =>\n              renderWeekRow(weekInd, monthlyData[weekInd], parsedEvents[weekInd])\n            )}\n          </ul>\n        </div>\n      );\n    };\n\n    return () => {\n      const { className, height, width, style, header } = props;\n      const monthCls = cls(prefixCls, className);\n      const monthStyle = {\n        height: typeof height === 'string' ? height : height + 'px',\n        width: typeof width === 'string' ? width : width + 'px',\n        ...style,\n      };\n      return (\n        <LocaleConsumer componentName=\"Calendar\">\n          {(locale: Locale['Calendar'], localeCode: string, dateFnsLocale: Locale['dateFnsLocale']) => (\n            <div role=\"grid\" class={monthCls} key={state.itemLimit} style={monthStyle}>\n              <div role=\"presentation\" class={`${prefixCls}-sticky-top`}>\n                {header}\n                {renderHeader(dateFnsLocale)}\n              </div>\n              <div role=\"presentation\" class={`${prefixCls}-grid-wrapper`}>\n                {renderMonthGrid()}\n              </div>\n            </div>\n          )}\n        </LocaleConsumer>\n      );\n    };\n  },\n});\n\nexport default MonthCalendar;\n"],"names":["toPercent","num","prefixCls","cssClasses","PREFIX","contentPadding","contentHeight","propTypes","displayValue","PropTypes","object","header","node","events","array","mode","string","markWeekend","bool","width","oneOfType","number","height","style","className","dateGridRender","func","onClick","onClose","weekStartsOn","renderDateDisplay","minEventHeight","allDayEventsRender","defaultProps","Date","vuePropsType","vuePropsMake","MonthCalendar","defineComponent","props","name","setup","useSlots","cellDom","ref","cardRef","Map","contentCellHeight","monthlyData","clickOutsideHandler","state","reactive","itemLimit","showCard","parsedEvents","cachedKeys","adapter","adapterInject","getDataAttr","useBaseComponent","adapter_","registerClickOutsideHandler","key","cb","e","cardDom","get","target","path","composedPath","contains","includes","document","addEventListener","unregisterClickOutsideHandler","removeEventListener","setMonthlyData","data","getMonthlyData","notifyClose","updates","openCard","spacing","pos","setParsedEvents","setItemLimit","cacheEventKeys","foundation","CalendarFoundation","calcItemLimit","value","getBoundingClientRect","Math","max","ceil","onMounted","init","parseMonthlyEvents","onBeforeUnmount","destroy","watch","prevStateCachedKeys","prevStateItemLimit","prevPropsEvents","prevPropsHeight","prevPropsDisplayValue","onCleanup","prevEventKeys","nowEventKeys","map","event","itemLimitUpdate","isEqual","handleClick","val","formatCbValue","closeCard","showCardFunc","renderHeader","dateFnsLocale","_createVNode","day","weekday","listCls","cls","isWeekend","renderEvents","ind","leftPos","topInd","children","left","top","renderCollapsed","itemInfo","month","dayString","date","toString","remained","filter","i","Boolean","length","cardCls","shouldRenderCard","closer","Button","IconClose","content","item","start","text","LocaleConsumer","default","locale","_mergeProps","bottom","remaining","replace","String","Popover","valueOf","set","formatDayString","renderCusDateGrid","dateObj","localeCode","_createTextVNode","datestring","renderWeekRow","index","weekDay","display","each","isToday","isSameMonth","shouldRenderCollapsed","inner","toLocaleDateString","renderMonthGrid","Object","keys","weekInd","monthCls","monthStyle"],"mappings":"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"}