{"version":3,"file":"timeCol.js","sources":["../../src/components/calendar/timeCol.tsx"],"sourcesContent":["import cls from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport LocaleConsumer from '../locale/localeConsumer';\nimport { cssClasses } from '@douyinfe/semi-foundation/calendar/constants';\n\nimport '@douyinfe/semi-foundation/calendar/calendar.scss';\nimport { TimeColProps } from './interface';\nimport { Locale } from '../locale/interface';\nimport { ComponentObjectPropsOptions, defineComponent, h, PropType, useSlots } from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { CombineProps } from '../interface';\n\nconst prefixCls = `${cssClasses.PREFIX}-time`;\n\nconst propTypes: CombineProps<TimeColProps> = {\n  className: PropTypes.string,\n  renderTimeDisplay: PropTypes.func as PropType<TimeColProps['renderTimeDisplay']>,\n};\nexport const vuePropsType = vuePropsMake<TimeColProps>(propTypes, {});\nconst TimeCol = defineComponent({\n  props: { ...vuePropsType },\n  name: 'TimeCol',\n  setup(props, {}) {\n    const slots = useSlots();\n\n    function formatTime(item: number) {\n      const { renderTimeDisplay } = props;\n      if (typeof renderTimeDisplay === 'function') {\n        return renderTimeDisplay(item);\n      } else {\n        const replaceTime = (template: string, time: number) => template.replace('${time}', String(time));\n        return (\n          <LocaleConsumer componentName=\"Calendar\" key={`locale-${item}`}>\n            {(locale: Locale['Calendar']) => {\n              let time = item < 12 ? replaceTime(locale.AM, item) : replaceTime(locale.PM, item - 12);\n              if (item === 12) {\n                time = replaceTime(locale.PM, item);\n              }\n              return time;\n            }}\n          </LocaleConsumer>\n        );\n      }\n    }\n\n    function renderTime() {\n      const { className } = props;\n      const wrapperCls = cls(className, `${prefixCls}`);\n      const list = [...Array(24).keys()].map((item) => formatTime(item));\n      list.splice(0, 1, '');\n      const inner = list.map((item, index) => (\n        <li key={`time-${index}`} class={`${prefixCls}-item`}>\n          <span>{item}</span>\n        </li>\n      ));\n      return (\n        <div class={wrapperCls}>\n          <ul class={`${prefixCls}-items`}>{inner}</ul>\n        </div>\n      );\n    }\n\n    return () => {\n      const time = renderTime();\n      return time;\n    };\n  },\n});\n\nexport default TimeCol;\n"],"names":["prefixCls","cssClasses","PREFIX","propTypes","className","PropTypes","string","renderTimeDisplay","func","vuePropsType","vuePropsMake","TimeCol","defineComponent","props","name","setup","useSlots","formatTime","item","replaceTime","template","time","replace","String","_createVNode","LocaleConsumer","default","locale","AM","PM","renderTime","wrapperCls","cls","list","Array","keys","map","splice","inner","index"],"mappings":";;;;;;;AAYA,MAAMA,IAAY,GAAGC,EAAWC,MAAM,SAEhCC,IAAwC;AAAA,EAC5CC,WAAWC,EAAUC;AAAAA,EACrBC,mBAAmBF,EAAUG;AAC/B,GACaC,IAAeC,EAA2BP,GAAW,EAAE,GAC9DQ,IAAUC,gBAAAA,EAAgB;AAAA,EAC9BC,OAAO;AAAA,IAAE,GAAGJ;AAAAA,EAAc;AAAA,EAC1BK,MAAM;AAAA,EACNC,MAAMF,GAAO,IAAI;AACDG,IAAAA,EAAU;AAExB,aAASC,EAAWC,GAAc;AAChC,YAAM;AAAA,QAAEX,mBAAAA;AAAAA,MAAmB,IAAGM;AAC9B,UAAI,OAAON,KAAsB;AAC/B,eAAOA,EAAkBW,CAAI;AACxB;AACL,cAAMC,IAAcA,CAACC,GAAkBC,MAAiBD,EAASE,QAAQ,WAAWC,OAAOF,CAAI,CAAC;AAChG,eAAAG,EAAAC,GAAA;AAAA,UAAA,eAAA;AAAA,UAAA,KACgD,UAAUP,CAAI;AAAA,QAAE,GAAA;AAAA,UAAAQ,SAC1DC,CAAAA,MAA+B;AAC/B,gBAAIN,IAAOH,IAAO,KAAKC,EAAYQ,EAAOC,IAAIV,CAAI,IAAIC,EAAYQ,EAAOE,IAAIX,IAAO,EAAE;AACtF,mBAAIA,MAAS,OACXG,IAAOF,EAAYQ,EAAOE,IAAIX,CAAI,IAE7BG;AAAAA,UACT;AAAA,QAAC,CAAA;AAAA,MAGP;AAAA,IACF;AAEA,aAASS,IAAa;AACpB,YAAM;AAAA,QAAE1B,WAAAA;AAAAA,MAAW,IAAGS,GAChBkB,IAAaC,EAAI5B,GAAW,GAAGJ,CAAS,EAAE,GAC1CiC,IAAO,CAAC,GAAGC,MAAM,EAAE,EAAEC,MAAM,EAAEC,IAAKlB,CAAAA,MAASD,EAAWC,CAAI,CAAC;AACjEe,MAAAA,EAAKI,OAAO,GAAG,GAAG,EAAE;AACpB,YAAMC,IAAQL,EAAKG,IAAI,CAAClB,GAAMqB,MAAKf,EAAA,MAAA;AAAA,QAAA,KACxB,QAAQe,CAAK;AAAA,QAAE,OAAS,GAAGvC,CAAS;AAAA,MAAO,GAAA,CAAAwB,EAAA,QAAA,MAAA,CAC3CN,CAAI,CAAA,CAAA,CAAA,CAEd;AACD,aAAAM,EAAA,OAAA;AAAA,QAAA,OACcO;AAAAA,MAAU,GAAA,CAAAP,EAAA,MAAA;AAAA,QAAA,OACT,GAAGxB,CAAS;AAAA,MAAQ,GAAA,CAAGsC,CAAK,CAAA,CAAA,CAAA;AAAA,IAG7C;AAEA,WAAO,MACQR;EAGjB;AACF,CAAC;"}