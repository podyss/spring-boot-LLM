import { defineComponent as S, useSlots as x, reactive as N, onMounted as X, onBeforeUnmount as G, createVNode as r, Fragment as f } from "vue";
import g from "classnames";
import * as o from "../PropTypes";
import { vuePropsMake as M } from "../PropTypes";
import j from '@douyinfe/semi-foundation/lib/es/calendar/foundation';
import { cssClasses as m } from '@douyinfe/semi-foundation/lib/es/calendar/constants';
import { useBaseComponent as q } from "../_base/baseComponent";
import '@douyinfe/semi-foundation/lib/es/calendar/calendar.css';
const c = `${m.PREFIX}-grid`;
function $(n) {
  return n < 10 ? `0${n.toString()}` : n.toString();
}
const V = {
  events: o.array,
  displayValue: o.object,
  showCurrTime: o.bool,
  scrollHeight: {
    type: o.number,
    required: !0
  },
  currPos: o.number,
  handleClick: {
    type: o.func,
    required: !0
  },
  mode: o.string,
  minEventHeight: o.number,
  isWeekend: {
    type: o.bool,
    required: !0
  },
  dateGridRender: o.func,
  style: Object,
  className: String
}, _ = {
  events: [],
  showCurrTime: !0,
  scrollHeight: 0,
  currPos: 0,
  mode: "dayCol",
  minEventHeight: Number.MIN_SAFE_INTEGER
}, A = M(V, _), K = /* @__PURE__ */ S({
  props: {
    ...A
  },
  name: "DayCol",
  setup(n, {}) {
    x();
    const a = N({
      currPos: 0,
      showCurrTime: !1
    }), {
      adapter: k
    } = q(n, a);
    function v() {
      return {
        ...k(),
        updateCurrPos: (e) => {
          a.currPos = e;
        },
        updateShowCurrTime: () => {
          a.showCurrTime = !0;
        }
      };
    }
    const P = v(), y = new j(P);
    X(() => {
      y.init(), y.initCurrTime();
    }), G(() => {
      y.destroy();
    });
    const T = () => {
      const {
        events: e,
        scrollHeight: t,
        minEventHeight: u
      } = n;
      return e.map((l, s) => {
        const {
          startPos: i,
          endPos: d,
          children: b,
          key: F,
          left: I = 0
        } = l, h = i * t, R = (d - i) * t, H = {
          top: `${h}px`,
          height: `${Math.max(u, R)}px`,
          left: I
        };
        return r("li", {
          class: `${m.PREFIX}-event-item ${m.PREFIX}-event-day`,
          style: H,
          key: F || `${h}-${s}`
        }, [b]);
      });
    }, w = () => {
      const {
        currPos: e
      } = a, {
        scrollHeight: t
      } = n, u = e, l = {
        top: e * t + "px"
      }, s = r("div", {
        class: `${c}-curr-circle`,
        style: l
      }, null), i = r("div", {
        class: `${c}-curr-line`,
        style: l
      }, null);
      return r(f, {
        key: u
      }, [s, i]);
    }, C = (e, t) => {
      n.handleClick(e, t);
    }, E = () => {
      const e = n.showCurrTime ? a.showCurrTime : !1, {
        displayValue: t,
        isWeekend: u,
        dateGridRender: p
      } = n, l = g(`${c}-skeleton`, {
        [`${m.PREFIX}-weekend`]: u
      });
      return r("div", {
        class: `${c}`,
        role: "presentation"
      }, [r("div", {
        role: "gridcell",
        class: `${c}-content`
      }, [e ? w() : null, r("ul", {
        role: "row",
        class: l
      }, [[...Array(25).keys()].map((s) => {
        const i = g({
          [`${c}-skeleton-row-line`]: !0
        });
        return r(f, {
          key: `${s}-daycol`
        }, [r("li", {
          "data-time": `${$(s)}:00:00`,
          class: i,
          onClick: (d) => C(d, [t, s, 0, 0])
        }, null), r("li", {
          "data-time": `${$(s)}:30:00`,
          onClick: (d) => C(d, [t, s, 30, 0])
        }, null)]);
      })]), p && p(t.toString(), t), r("ul", {
        class: `${m.PREFIX}-event-items`
      }, [T()])])]);
    };
    return () => E();
  }
});
export {
  K as default,
  A as vuePropsType
};
//# sourceMappingURL=dayCol.js.map
