{"version":3,"file":"rangeCalendar.js","sources":["../../src/components/calendar/rangeCalendar.tsx"],"sourcesContent":["import cls from 'classnames';\nimport * as PropTypes from '../PropTypes';\n// eslint-disable-next-line max-len\nimport CalendarFoundation, {\n  ParsedEvents,\n  CalendarAdapter,\n  RangeData,\n  ParsedRangeEvent,\n  ParsedEventsType,\n} from '@douyinfe/semi-foundation/calendar/foundation';\nimport LocaleConsumer from '../locale/localeConsumer';\nimport { cssClasses } from '@douyinfe/semi-foundation/calendar/constants';\nimport DayCol from './dayCol';\nimport TimeCol from './timeCol';\nimport { isEqual } from 'lodash';\nimport { calcRowHeight } from '@douyinfe/semi-foundation/calendar/eventUtil';\nimport '@douyinfe/semi-foundation/calendar/calendar.scss';\nimport { RangeCalendarProps } from './interface';\nimport { Locale } from '../locale/interface';\nimport {\n  ComponentObjectPropsOptions,\n  defineComponent,\n  Fragment,\n  h,\n  onBeforeUnmount,\n  onMounted,\n  PropType,\n  reactive,\n  ref,\n  useSlots,\n  watch,\n} from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport { CombineProps } from '../interface';\n\nconst toPercent = (num: number) => {\n  const res = num < 1 ? num * 100 : 100;\n  return `${res}%`;\n};\n\nconst prefixCls = `${cssClasses.PREFIX}-week`;\nconst allDayCls = `${cssClasses.PREFIX}-all-day`;\n\nexport interface RangeCalendarState {\n  scrollHeight: number;\n  parsedEvents: ParsedEvents;\n  cachedKeys: Array<string>;\n}\n\nconst propTypes: CombineProps<RangeCalendarProps> = {\n  // displayValue: PropTypes.instanceOf(Date),\n  range: PropTypes.array,\n  header: PropTypes.node,\n  events: PropTypes.array,\n  mode: PropTypes.string as PropType<RangeCalendarProps['mode']>,\n  showCurrTime: PropTypes.bool,\n  markWeekend: PropTypes.bool,\n  scrollTop: PropTypes.number,\n  renderTimeDisplay: PropTypes.func as PropType<RangeCalendarProps['renderTimeDisplay']>,\n  renderDateDisplay: PropTypes.func as PropType<RangeCalendarProps['renderDateDisplay']>,\n  dateGridRender: PropTypes.func as PropType<RangeCalendarProps['dateGridRender']>,\n  allDayEventsRender: PropTypes.func as PropType<RangeCalendarProps['allDayEventsRender']>,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  style: PropTypes.object,\n  className: PropTypes.string,\n\n  displayValue: PropTypes.object,\n  weekStartsOn: PropTypes.number as PropType<RangeCalendarProps['weekStartsOn']>,\n  onClick: PropTypes.func as PropType<RangeCalendarProps['onClick']>,\n  onClose: PropTypes.func as PropType<RangeCalendarProps['onClose']>,\n  minEventHeight: PropTypes.number as PropType<RangeCalendarProps['minEventHeight']>,\n};\n\nconst defaultProps = {\n  events: [] as ParsedEvents[],\n  mode: 'range',\n};\nexport const vuePropsType = vuePropsMake<RangeCalendarProps>(propTypes, defaultProps);\nconst RangeCalendar = defineComponent({\n  props: { ...vuePropsType },\n  name: 'RangeCalendar',\n  setup(props, {}) {\n    const slots = useSlots();\n\n    let dom = ref();\n    let scrollDom = ref();\n    let isWeekend: boolean;\n    let allDayRowHeight: number = 1;\n    let RangeData: RangeData;\n    const state = reactive({\n      scrollHeight: 0,\n      parsedEvents: {\n        day: new Map(),\n        allDay: new Map(),\n      },\n      cachedKeys: [],\n    });\n\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent<RangeCalendarProps>(props, state);\n    function adapter_(): CalendarAdapter<RangeCalendarProps, RangeCalendarState> {\n      return {\n        ...adapterInject(),\n        setRangeData: (data) => {\n          RangeData = data;\n        },\n        getRangeData: () => RangeData,\n        updateScrollHeight: (scrollHeight) => {\n          state.scrollHeight = scrollHeight;\n        },\n        setParsedEvents: (parsedEvents: ParsedEventsType) => {\n          state.parsedEvents = parsedEvents as any;\n        },\n        cacheEventKeys: (cachedKeys) => {\n          state.cachedKeys = cachedKeys;\n        },\n      };\n    }\n    const adapter = adapter_();\n    const foundation = new CalendarFoundation(adapter);\n\n    onMounted(() => {\n      foundation.init();\n      const { scrollHeight } = scrollDom.value;\n      dom.value.scrollTop = props.scrollTop;\n      foundation.notifyScrollHeight(scrollHeight);\n      foundation.parseRangeEvents();\n    });\n    watch(\n      [() => state.cachedKeys, () => props.events, () => props.range],\n      (value, [prevStateCachedKeys, _, prevPropsRange], onCleanup) => {\n        const prevEventKeys = prevStateCachedKeys;\n        const nowEventKeys = props.events.map((event) => event.key);\n        if (!isEqual(prevEventKeys, nowEventKeys) || !isEqual(prevPropsRange, props.range)) {\n          foundation.parseRangeEvents();\n        }\n      }\n    );\n\n    onBeforeUnmount(() => {\n      foundation.destroy();\n    });\n\n    const handleClick = (e: MouseEvent, val: [Date, number, number, number]) => {\n      const { onClick } = props;\n      const value = foundation.formatCbValue(val);\n      onClick && onClick(e, value);\n    };\n\n    const renderDayGrid = () => {\n      const { parsedEvents } = state;\n      const events = parsedEvents.day;\n      const { week } = RangeData;\n      const { markWeekend, dateGridRender, minEventHeight } = props;\n      const inner = week.map((day) => {\n        const dateString = day.date.toString();\n        const dayEvents = events.has(dateString) ? events.get(dateString) : [];\n        const parsed = foundation.getParseDailyEvents(dayEvents, day.date);\n        return (\n          <DayCol\n            key={`${dateString}-weekday`}\n            displayValue={day.date}\n            scrollHeight={state.scrollHeight}\n            handleClick={handleClick}\n            events={parsed.day}\n            showCurrTime={props.showCurrTime}\n            isWeekend={markWeekend && day.isWeekend}\n            dateGridRender={dateGridRender}\n            minEventHeight={minEventHeight}\n          />\n        );\n      });\n      return inner;\n    };\n\n    const renderHeader = (dateFnsLocale: Locale['dateFnsLocale']) => {\n      const { markWeekend, range, renderDateDisplay } = props;\n      const { month, week } = foundation.getRangeData(range[0], dateFnsLocale);\n      return (\n        <div class={`${prefixCls}-header`}>\n          <ul class={`${cssClasses.PREFIX}-tag ${prefixCls}-tag ${prefixCls}-sticky-left`}>\n            <span>{month}</span>\n          </ul>\n          <div role=\"gridcell\" class={`${prefixCls}-grid`}>\n            <ul class={`${prefixCls}-grid-row`}>\n              {week.map((day) => {\n                const { date, dayString, weekday, isToday } = day;\n                const listCls = cls({\n                  [`${cssClasses.PREFIX}-today`]: isToday,\n                  [`${cssClasses.PREFIX}-weekend`]: markWeekend && day.isWeekend,\n                });\n\n                const dateContent = renderDateDisplay ? (\n                  renderDateDisplay(date)\n                ) : (\n                  <Fragment>\n                    <span class={`${cssClasses.PREFIX}-today-date`}>{dayString}</span>\n                    <span>{weekday}</span>\n                  </Fragment>\n                );\n\n                return (\n                  <li key={`${date.toString()}-weekheader`} class={listCls}>\n                    {dateContent}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      );\n    };\n\n    const renderAllDayEvents = (events: Array<ParsedRangeEvent>) => {\n      if (props.allDayEventsRender) {\n        return props.allDayEventsRender(props.events);\n      }\n      const list = events.map((event, ind) => {\n        const { leftPos, width, topInd, children } = event;\n        const top = `${topInd}em`;\n        const style = {\n          left: toPercent(leftPos),\n          width: toPercent(width),\n          top,\n        };\n        return (\n          <li\n            class={`${cssClasses.PREFIX}-event-item ${cssClasses.PREFIX}-event-allday`}\n            key={`allDay-${ind}`}\n            style={style}\n          >\n            {children}\n          </li>\n        );\n      });\n      return list;\n    };\n\n    const renderAllDay = (locale: Locale['Calendar']) => {\n      const { allDayEventsRender } = props;\n      const { allDay } = state.parsedEvents;\n      const parsed = foundation.parseRangeAllDayEvents(allDay);\n      const style = allDayEventsRender\n        ? null\n        : {\n            height: `${calcRowHeight(parsed)}em`,\n          };\n      const { markWeekend } = props;\n      const { week } = RangeData;\n      return (\n        <div class={`${allDayCls}`} style={style}>\n          <ul class={`${cssClasses.PREFIX}-tag ${allDayCls}-tag ${prefixCls}-sticky-left`}>\n            <span>{locale.allDay}</span>\n          </ul>\n          <div role=\"gridcell\" class={`${cssClasses.PREFIX}-content ${allDayCls}-content`}>\n            <ul class={`${allDayCls}-skeleton`}>\n              {Object.keys(week).map((date, ind) => {\n                const listCls = cls({\n                  [`${cssClasses.PREFIX}-weekend`]: markWeekend && week[date].isWeekend,\n                });\n                return <li key={`${date}-weekgrid`} class={listCls} />;\n              })}\n            </ul>\n            <ul class={`${cssClasses.PREFIX}-event-items`}>{renderAllDayEvents(parsed)}</ul>\n          </div>\n        </div>\n      );\n    };\n\n    return () => {\n      const { renderTimeDisplay, className, height, width, style, header } = props;\n      const weekCls = cls(prefixCls, className);\n      const weekStyle = {\n        height: typeof height === 'string' ? height : height + 'px',\n        width: typeof width === 'string' ? width : width + 'px',\n        ...style,\n      };\n      return (\n        <LocaleConsumer componentName=\"Calendar\">\n          {(locale: Locale['Calendar'], localeCode: string, dateFnsLocale: Locale['dateFnsLocale']) => (\n            <div class={weekCls} style={weekStyle} ref={dom} {...getDataAttr()}>\n              <div class={`${prefixCls}-sticky-top`}>\n                {header}\n                {renderHeader(dateFnsLocale)}\n                {renderAllDay(locale)}\n              </div>\n              <div class={`${prefixCls}-scroll-wrapper`}>\n                <div class={`${prefixCls}-scroll`} ref={scrollDom}>\n                  <TimeCol className={`${prefixCls}-sticky-left`} renderTimeDisplay={renderTimeDisplay} />\n                  {renderDayGrid()}\n                </div>\n              </div>\n            </div>\n          )}\n        </LocaleConsumer>\n      );\n    };\n  },\n});\n\nexport default RangeCalendar;\n"],"names":["toPercent","num","prefixCls","cssClasses","PREFIX","allDayCls","propTypes","range","PropTypes","array","header","node","events","mode","string","showCurrTime","bool","markWeekend","scrollTop","number","renderTimeDisplay","func","renderDateDisplay","dateGridRender","allDayEventsRender","width","oneOfType","height","style","object","className","displayValue","weekStartsOn","onClick","onClose","minEventHeight","defaultProps","vuePropsType","vuePropsMake","RangeCalendar","defineComponent","props","name","setup","useSlots","dom","ref","scrollDom","RangeData","state","reactive","scrollHeight","parsedEvents","day","Map","allDay","cachedKeys","adapter","adapterInject","getDataAttr","useBaseComponent","adapter_","setRangeData","data","getRangeData","updateScrollHeight","setParsedEvents","cacheEventKeys","foundation","CalendarFoundation","onMounted","init","value","notifyScrollHeight","parseRangeEvents","watch","prevStateCachedKeys","_","prevPropsRange","onCleanup","prevEventKeys","nowEventKeys","map","event","key","isEqual","onBeforeUnmount","destroy","handleClick","e","val","formatCbValue","renderDayGrid","week","dateString","date","toString","dayEvents","has","get","parsed","getParseDailyEvents","_createVNode","DayCol","isWeekend","renderHeader","dateFnsLocale","month","dayString","weekday","isToday","listCls","cls","dateContent","_Fragment","renderAllDayEvents","ind","leftPos","topInd","children","top","left","renderAllDay","locale","parseRangeAllDayEvents","calcRowHeight","Object","keys","weekCls","weekStyle","LocaleConsumer","default","localeCode","_mergeProps","TimeCol"],"mappings":"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"}