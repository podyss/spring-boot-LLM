{"version":3,"file":"index.js","sources":["../../src/components/popover/index.tsx"],"sourcesContent":["import {\n  defineComponent,\n  ref,\n  h,\n  getCurrentInstance,\n  ComponentObjectPropsOptions, PropType\n} from 'vue'\nimport * as PropTypes from '../PropTypes'\nimport classNames from 'classnames';\n\nimport {cssClasses, strings, numbers} from '@douyinfe/semi-foundation/popover/constants';\nimport Tooltip from '../tooltip';\nimport type {ArrowBounding, Position, TooltipProps, Trigger} from '../tooltip'\n\nimport Arrow from './Arrow';\nimport '@douyinfe/semi-foundation/popover/popover.scss';\nimport {BaseProps} from '../_base/baseComponent';\nimport {Motion} from '../_base/base';\nimport {isFunction, noop} from 'lodash';\nimport {vuePropsMake} from \"../PropTypes\";\nimport {useConfigContext} from \"../configProvider/context/Consumer\";\nimport type { ArrowProps } from './Arrow';\nimport isNullOrUndefined from '@douyinfe/semi-foundation/utils/isNullOrUndefined';\nimport { CombineProps } from '../interface';\nexport type { ArrowProps };\nexport declare interface ArrowStyle {\n  borderColor?: string;\n  backgroundColor?: string;\n  borderOpacity?: string | number;\n}\n\nexport interface PopoverProps extends BaseProps {\n  content?: TooltipProps['content'];\n  visible?: boolean;\n  autoAdjustOverflow?: boolean;\n  motion?: Motion;\n  margin?: TooltipProps['margin'];\n  position?: Position;\n  mouseEnterDelay?: number;\n  mouseLeaveDelay?: number;\n  trigger?: Trigger;\n  contentClassName?: string | any[];\n  onVisibleChange?: (visible: boolean) => void;\n  onClickOutSide?: (e: MouseEvent) => void;\n  showArrow?: boolean;\n  spacing?: number | { x: number; y: number };\n  stopPropagation?: boolean | string;\n  arrowStyle?: ArrowStyle;\n  arrowBounding?: ArrowBounding;\n  arrowPointAtCenter?: boolean;\n  prefixCls?: string;\n  rePosKey?: string | number;\n  getPopupContainer?: () => HTMLElement;\n  zIndex?: number;\n  closeOnEsc?: TooltipProps['closeOnEsc'];\n  guardFocus?: TooltipProps['guardFocus'];\n  returnFocusOnClose?: TooltipProps['returnFocusOnClose'];\n  onEscKeyDown?: TooltipProps['onEscKeyDown'];\n  clickToHide?: TooltipProps['clickToHide'];\n  disableFocusListener?: boolean\n  afterClose?: () => void,\n  disableArrowKeyDown?: boolean,\n  keepDOM?: boolean\n\n  class?: string\n  cancelText?: string\n  okText?: string\n  role?: string\n}\n\nexport interface PopoverState {\n  popConfirmVisible: boolean;\n}\n\nconst positionSet = strings.POSITION_SET;\nconst triggerSet = strings.TRIGGER_SET;\n\nconst propTypes:CombineProps<PopoverProps> = {\n  // children: PropTypes.node,\n  content: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  visible: PropTypes.bool,\n  autoAdjustOverflow: PropTypes.bool,\n  motion: PropTypes.bool,\n  position: PropTypes.string as PropType<PopoverProps['position']>,\n  // getPopupContainer: PropTypes.func,\n  mouseEnterDelay: PropTypes.number,\n  mouseLeaveDelay: PropTypes.number,\n  trigger: [Boolean, String] as PropType<PopoverProps['trigger']>,\n  contentClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  onVisibleChange: PropTypes.func as PropType<PopoverProps['onVisibleChange']>,\n  onClickOutSide: PropTypes.func as PropType<PopoverProps['onClickOutSide']>,\n  style: PropTypes.object,\n  spacing: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  zIndex: PropTypes.number,\n  showArrow: PropTypes.bool,\n  arrowStyle: Object,\n  arrowPointAtCenter: PropTypes.bool,\n  arrowBounding: PropTypes.object,\n  prefixCls: PropTypes.string,\n  guardFocus: PropTypes.bool,\n  disableArrowKeyDown: PropTypes.bool,\n\n  className: String,\n  class: String as PropType<PopoverProps['class']>,\n  stopPropagation: [Boolean, String],\n  rePosKey: [String, Number, Boolean] as PropType<PopoverProps['rePosKey']>,\n  getPopupContainer: Function as PropType<PopoverProps['getPopupContainer']>,\n  cancelText: {\n    type: String as PropType<PopoverProps['cancelText']>,\n    default: 'No',\n  },\n  okText: {\n    type: String as PropType<PopoverProps['okText']>,\n    default: 'Yes',\n  },\n  role: String as PropType<PopoverProps['role']>,\n  afterClose: Function as PropType<PopoverProps['afterClose']>,\n  disableFocusListener: Boolean,\n  keepDOM: Boolean,\n  margin: [PropTypes.number, PropTypes.object],\n  closeOnEsc: Boolean,\n  returnFocusOnClose: Boolean,\n  onEscKeyDown: Function as PropType<PopoverProps['onEscKeyDown']>,\n  clickToHide: Boolean,\n};\n\nconst defaultProps = {\n  arrowBounding: numbers.ARROW_BOUNDING,\n  showArrow: false,\n  autoAdjustOverflow: true,\n  zIndex: numbers.DEFAULT_Z_INDEX,\n  motion: true,\n  trigger: 'hover',\n  cancelText: 'No',\n  okText: 'Yes',\n  position: 'bottom',\n  prefixCls: cssClasses.PREFIX,\n  onClickOutSide: noop,\n  onEscKeyDown: noop,\n  closeOnEsc: true,\n  returnFocusOnClose: true,\n  guardFocus: true,\n  disableFocusListener: true,\n};\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps)\n\nconst Popover = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Popover',\n  setup(props, {slots, expose}) {\n  const {context} = useConfigContext()\n  const tooltipRef = ref()\n\n  function focusTrigger() {\n    tooltipRef.value?.focusTrigger();\n  }\n\n  const currentInstance = getCurrentInstance()\n\n  expose({\n    focusTrigger,\n    // 当组件内部使用了expose时，使用ref得到的内容只有expose的那部分\n    getRef() {\n      return currentInstance\n    }\n  })\n\n  function renderPopCard({initialFocusRef}: { initialFocusRef: any }) {\n    const {content, contentClassName, prefixCls} = props;\n    const {direction} = context.value;\n    const popCardCls = classNames(\n      prefixCls,\n      contentClassName,\n      {\n        // @ts-ignore\n        [`${prefixCls}-rtl`]: direction === 'rtl',\n      }\n    );\n    const contentNode = renderContentNode({initialFocusRef, content});\n    return (\n      <div class={popCardCls}>\n        <div class={`${prefixCls}-content`}>{contentNode}</div>\n      </div>\n    );\n  }\n\n  const renderContentNode = (props: { content: TooltipProps['content'], initialFocusRef: any }) => {\n    const {initialFocusRef, content} = props;\n    const contentProps = {initialFocusRef};\n    return !isFunction(content) ? content : content(contentProps);\n  };\n\n  return () => {\n\n    const {\n      prefixCls,\n      showArrow,\n      arrowStyle = {},\n      arrowBounding,\n      position,\n      style,\n      trigger,\n      contentClassName,\n      cancelText,\n      okText,\n      ...attr\n    } = props;\n    let {spacing} = props;\n\n    const arrowProps = {\n      position,\n      className: '',\n      popStyle: style,\n      arrowStyle,\n    };\n\n    const arrow = showArrow ? <Arrow {...arrowProps} /> : false;\n\n    if (typeof spacing !== 'number') {\n      spacing = showArrow ? numbers.SPACING_WITH_ARROW : numbers.SPACING;\n    }\n    if (isNullOrUndefined(spacing)) {\n      spacing = showArrow ? numbers.SPACING_WITH_ARROW : numbers.SPACING;\n    }\n    const role = trigger === 'click' || trigger === 'custom' ? 'dialog' : 'tooltip';\n\n    return (\n      <Tooltip\n        guardFocus\n        ref={tooltipRef}\n        {...(attr as any)}\n        trigger={trigger}\n        position={position}\n        style={style}\n        content={renderPopCard}\n        prefixCls={prefixCls}\n        spacing={spacing}\n        showArrow={arrow}\n        arrowBounding={arrowBounding}\n        role={role}\n      >\n        {{\n          default: slots.default\n        }}\n      </Tooltip>\n    );\n  }\n}\n})\n\n\n\nexport default Popover\n\n"],"names":["strings","POSITION_SET","TRIGGER_SET","propTypes","content","PropTypes","oneOfType","node","func","visible","bool","autoAdjustOverflow","motion","position","string","mouseEnterDelay","number","mouseLeaveDelay","trigger","Boolean","String","contentClassName","array","onVisibleChange","onClickOutSide","style","object","spacing","zIndex","showArrow","arrowStyle","Object","arrowPointAtCenter","arrowBounding","prefixCls","guardFocus","disableArrowKeyDown","className","class","stopPropagation","rePosKey","Number","getPopupContainer","Function","cancelText","type","default","okText","role","afterClose","disableFocusListener","keepDOM","margin","closeOnEsc","returnFocusOnClose","onEscKeyDown","clickToHide","defaultProps","numbers","ARROW_BOUNDING","DEFAULT_Z_INDEX","cssClasses","PREFIX","noop","vuePropsType","vuePropsMake","Popover","defineComponent","props","name","setup","slots","expose","context","useConfigContext","tooltipRef","ref","focusTrigger","value","currentInstance","getCurrentInstance","getRef","renderPopCard","initialFocusRef","direction","popCardCls","classNames","contentNode","renderContentNode","_createVNode","contentProps","isFunction","attr","arrow","Arrow","popStyle","SPACING_WITH_ARROW","SPACING","isNullOrUndefined","Tooltip","_mergeProps"],"mappings":";;;;;;;;;;;AA0EoBA,EAAQC;AACTD,EAAQE;AAE3B,MAAMC,IAAuC;AAAA;AAAA,EAE3CC,SAASC,EAAUC,UAAU,CAACD,EAAUE,MAAMF,EAAUG,IAAI,CAAC;AAAA,EAC7DC,SAASJ,EAAUK;AAAAA,EACnBC,oBAAoBN,EAAUK;AAAAA,EAC9BE,QAAQP,EAAUK;AAAAA,EAClBG,UAAUR,EAAUS;AAAAA;AAAAA,EAEpBC,iBAAiBV,EAAUW;AAAAA,EAC3BC,iBAAiBZ,EAAUW;AAAAA,EAC3BE,SAAS,CAACC,SAASC,MAAM;AAAA,EACzBC,kBAAkBhB,EAAUC,UAAU,CAACD,EAAUS,QAAQT,EAAUiB,KAAK,CAAC;AAAA,EACzEC,iBAAiBlB,EAAUG;AAAAA,EAC3BgB,gBAAgBnB,EAAUG;AAAAA,EAC1BiB,OAAOpB,EAAUqB;AAAAA,EACjBC,SAAStB,EAAUC,UAAU,CAACD,EAAUW,QAAQX,EAAUqB,MAAM,CAAC;AAAA,EACjEE,QAAQvB,EAAUW;AAAAA,EAClBa,WAAWxB,EAAUK;AAAAA,EACrBoB,YAAYC;AAAAA,EACZC,oBAAoB3B,EAAUK;AAAAA,EAC9BuB,eAAe5B,EAAUqB;AAAAA,EACzBQ,WAAW7B,EAAUS;AAAAA,EACrBqB,YAAY9B,EAAUK;AAAAA,EACtB0B,qBAAqB/B,EAAUK;AAAAA,EAE/B2B,WAAWjB;AAAAA,EACXkB,OAAOlB;AAAAA,EACPmB,iBAAiB,CAACpB,SAASC,MAAM;AAAA,EACjCoB,UAAU,CAACpB,QAAQqB,QAAQtB,OAAO;AAAA,EAClCuB,mBAAmBC;AAAAA,EACnBC,YAAY;AAAA,IACVC,MAAMzB;AAAAA,IACN0B,SAAS;AAAA,EACV;AAAA,EACDC,QAAQ;AAAA,IACNF,MAAMzB;AAAAA,IACN0B,SAAS;AAAA,EACV;AAAA,EACDE,MAAM5B;AAAAA,EACN6B,YAAYN;AAAAA,EACZO,sBAAsB/B;AAAAA,EACtBgC,SAAShC;AAAAA,EACTiC,QAAQ,CAAC/C,EAAUW,QAAQX,EAAUqB,MAAM;AAAA,EAC3C2B,YAAYlC;AAAAA,EACZmC,oBAAoBnC;AAAAA,EACpBoC,cAAcZ;AAAAA,EACda,aAAarC;AACf,GAEMsC,IAAe;AAAA,EACnBxB,eAAeyB,EAAQC;AAAAA,EACvB9B,WAAW;AAAA,EACXlB,oBAAoB;AAAA,EACpBiB,QAAQ8B,EAAQE;AAAAA,EAChBhD,QAAQ;AAAA,EACRM,SAAS;AAAA,EACT0B,YAAY;AAAA,EACZG,QAAQ;AAAA,EACRlC,UAAU;AAAA,EACVqB,WAAW2B,EAAWC;AAAAA,EACtBtC,gBAAgBuC;AAAAA,EAChBR,cAAcQ;AAAAA,EACdV,YAAY;AAAA,EACZC,oBAAoB;AAAA,EACpBnB,YAAY;AAAA,EACZe,sBAAsB;AACxB,GACac,IAAeC,EAAa9D,GAAWsD,CAAY,GAE1DS,KAAUC,gBAAAA,EAAgB;AAAA,EAC9BC,OAAO;AAAA,IAAE,GAAGJ;AAAAA,EAAc;AAAA,EAC1BK,MAAM;AAAA,EACNC,MAAMF,GAAO;AAAA,IAACG,OAAAA;AAAAA,IAAOC,QAAAA;AAAAA,EAAM,GAAG;AAC9B,UAAM;AAAA,MAACC,SAAAA;AAAAA,IAAQ,IAAGC,EAAgB,GAC5BC,IAAaC;AAEnB,aAASC,IAAe;;AACtBF,OAAAA,IAAAA,EAAWG,UAAXH,QAAAA,EAAkBE;AAAAA,IACpB;AAEA,UAAME,IAAkBC;AAExBR,IAAAA,EAAO;AAAA,MACLK,cAAAA;AAAAA;AAAAA,MAEAI,SAAS;AACP,eAAOF;AAAAA,MACT;AAAA,IACF,CAAC;AAED,aAASG,EAAc;AAAA,MAACC,iBAAAA;AAAAA,IAAyC,GAAG;AAClE,YAAM;AAAA,QAAC/E,SAAAA;AAAAA,QAASiB,kBAAAA;AAAAA,QAAkBa,WAAAA;AAAAA,MAAU,IAAGkC,GACzC;AAAA,QAACgB,WAAAA;AAAAA,UAAaX,EAAQK,OACtBO,IAAaC,EACjBpD,GACAb,GACA;AAAA;AAAA,QAEE,CAAC,GAAGa,CAAS,MAAM,GAAGkD,MAAc;AAAA,MACtC,CACF,GACMG,IAAcC,EAAkB;AAAA,QAACL,iBAAAA;AAAAA,QAAiB/E,SAAAA;AAAAA,MAAO,CAAC;AAChE,aAAAqF,EAAA,OAAA;AAAA,QAAA,OACcJ;AAAAA,MAAU,GAAA,CAAAI,EAAA,OAAA;AAAA,QAAA,OACR,GAAGvD,CAAS;AAAA,MAAU,GAAA,CAAGqD,CAAW,CAAA,CAAA,CAAA;AAAA,IAGtD;AAEA,UAAMC,IAAqBpB,CAAAA,MAAsE;AAC/F,YAAM;AAAA,QAACe,iBAAAA;AAAAA,QAAiB/E,SAAAA;AAAAA,MAAQ,IAAGgE,GAC7BsB,IAAe;AAAA,QAACP,iBAAAA;AAAAA;AACtB,aAAQQ,EAAWvF,CAAO,IAAcA,EAAQsF,CAAY,IAA9BtF;AAAAA;AAGhC,WAAO,MAAM;AAEX,YAAM;AAAA,QACJ8B,WAAAA;AAAAA,QACAL,WAAAA;AAAAA,QACAC,YAAAA,IAAa,CAAE;AAAA,QACfG,eAAAA;AAAAA,QACApB,UAAAA;AAAAA,QACAY,OAAAA;AAAAA,QACAP,SAAAA;AAAAA,QACAG,kBAAAA;AAAAA,QACAuB,YAAAA;AAAAA,QACAG,QAAAA;AAAAA,QACA,GAAG6C;AAAAA,MACJ,IAAGxB;AACJ,UAAI;AAAA,QAACzC,SAAAA;AAAAA,MAAQ,IAAGyC;AAShB,YAAMyB,IAAQhE,IAAS4D,EAAAK,GAPJ;AAAA,QACjBjF,UAAAA;AAAAA,QACAwB,WAAW;AAAA,QACX0D,UAAUtE;AAAAA,QACVK,YAAAA;AAAAA,SAG6C,IAAA,IAAO;AAEtD,aAAI,OAAOH,KAAY,aACrBA,IAAUE,IAAY6B,EAAQsC,qBAAqBtC,EAAQuC,UAEzDC,EAAkBvE,CAAO,MAC3BA,IAAUE,IAAY6B,EAAQsC,qBAAqBtC,EAAQuC,UAI7DR,EAAAU,GAAAC,EAAA;AAAA,QAAA,YAAA;AAAA,QAAA,KAGSzB;AAAAA,MAAU,GACViB,GAAI;AAAA,QAAA,SACA1E;AAAAA,QAAO,UACNL;AAAAA,QAAQ,OACXY;AAAAA,QAAK,SACHyD;AAAAA,QAAa,WACXhD;AAAAA,QAAS,SACXP;AAAAA,QAAO,WACLkE;AAAAA,QAAK,eACD5D;AAAAA,QAAa,MAdnBf,MAAY,WAAWA,MAAY,WAAW,WAAW;AAAA,MAexD,CAAA,GAAA;AAAA,QAGR4B,SAASyB,EAAMzB;AAAAA,MAAO,CAAA;AAAA;EAKhC;AACA,CAAC;"}