import { defineComponent as u, useSlots as A, reactive as S, onMounted as c, watch as m, nextTick as l } from "vue";
import * as e from "../PropTypes";
const f = {
  startClassName: String,
  endClassName: String,
  children: {
    type: [Function, Object],
    required: !0
  },
  animationState: {
    type: String,
    required: !0
  },
  onAnimationEnd: Function,
  onAnimationStart: Function,
  motion: {
    type: [e.bool, e.func, e.object],
    default: !0
  },
  replayKey: {
    type: String,
    default: ""
  },
  fillMode: String
}, y = /* @__PURE__ */ u({
  props: {
    ...f
  },
  name: "CSSAnimation",
  setup(n, {}) {
    A();
    const t = S({
      currentClassName: n.startClassName,
      extraStyle: {
        animationFillMode: n.fillMode
      },
      isAnimating: !0
    });
    c(() => {
      var i, a;
      (i = n.onAnimationStart) == null || i.call(n), n.motion || ((a = n.onAnimationEnd) == null || a.call(n, !1), t.isAnimating = !1);
    }), m(() => n.animationState, () => {
    }), m([() => n.startClassName, () => n.replayKey, () => n.motion], () => {
      t.currentClassName = n.startClassName, t.extraStyle = {
        animationFillMode: n.fillMode
      }, t.isAnimating = !0, l(() => {
        var i, a;
        (i = n.onAnimationStart) == null || i.call(n), n.motion || ((a = n.onAnimationEnd) == null || a.call(n, t.isAnimating), t.isAnimating = !1);
      });
    });
    const o = () => {
      var i;
      (i = n.onAnimationStart) == null || i.call(n);
    }, d = () => {
      t.currentClassName = n.startClassName, t.extraStyle = {
        animationFillMode: n.fillMode
      }, t.isAnimating = !1, l(() => {
        var i;
        (i = n.onAnimationEnd) == null || i.call(n, !1);
      });
    };
    return () => n.motion ? n.children({
      animationClassName: t.currentClassName ?? "",
      animationStyle: t.extraStyle,
      animationEventsNeedBind: {
        onAnimationstart: o,
        onAnimationend: d
      },
      isAnimating: t.isAnimating
    }) : n.children({
      animationClassName: "",
      animationStyle: {},
      animationEventsNeedBind: {},
      isAnimating: t.isAnimating
    });
  }
});
export {
  y as default,
  f as vuePropsType
};
//# sourceMappingURL=index.js.map
