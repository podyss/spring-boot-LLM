import { CSSProperties, PropType } from 'vue';
import { LottieBaseProps, LottieBaseState } from '@douyinfe/semi-foundation/lib/es/lottie/foundation';
import { CombineProps } from '../interface';
export type { LottiePlayer } from 'lottie-web';
export interface LottieProps extends LottieBaseProps {
    className?: string;
    style?: CSSProperties;
}
export interface LottieState extends LottieBaseState {
}
export declare const vuePropsType: CombineProps<LottieProps>;
declare const index: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    width: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    height: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    params: {
        type: PropType<import("lottie-web").AnimationConfigWithPath<import("lottie-web").RendererType> | import("lottie-web").AnimationConfigWithData<import("lottie-web").RendererType>>;
        default?: any;
        required: true;
    };
    getAnimationInstance: PropType<(instance: import("lottie-web").AnimationItem | null) => void> | {
        type: PropType<(instance: import("lottie-web").AnimationItem | null) => void>;
        default?: any;
        required?: false;
    };
    getLottie: PropType<(lottiePKG: import("lottie-web").LottiePlayer) => void> | {
        type: PropType<(lottiePKG: import("lottie-web").LottiePlayer) => void>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    width: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    height: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    params: {
        type: PropType<import("lottie-web").AnimationConfigWithPath<import("lottie-web").RendererType> | import("lottie-web").AnimationConfigWithData<import("lottie-web").RendererType>>;
        default?: any;
        required: true;
    };
    getAnimationInstance: PropType<(instance: import("lottie-web").AnimationItem | null) => void> | {
        type: PropType<(instance: import("lottie-web").AnimationItem | null) => void>;
        default?: any;
        required?: false;
    };
    getLottie: PropType<(lottiePKG: import("lottie-web").LottiePlayer) => void> | {
        type: PropType<(lottiePKG: import("lottie-web").LottiePlayer) => void>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default index;
