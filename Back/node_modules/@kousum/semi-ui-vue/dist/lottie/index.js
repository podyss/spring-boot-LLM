import { defineComponent as p, useSlots as h, shallowRef as y, reactive as w, onMounted as P, onUnmounted as v, watch as C, createVNode as L, mergeProps as I } from "vue";
import o from '@douyinfe/semi-foundation/lib/es/lottie/foundation';
import * as n from "../PropTypes";
import { vuePropsMake as N } from "../PropTypes";
import { useBaseComponent as b } from "../_base/baseComponent";
import { cssClasses as j } from '@douyinfe/semi-foundation/lib/es/lottie/constants';
import { isEqual as A } from "lodash";
import F from "classnames";
const T = {
  className: n.string,
  style: n.object,
  width: n.string,
  height: n.string,
  params: {
    type: n.object,
    required: !0
  },
  getAnimationInstance: n.func,
  getLottie: n.func
}, q = {
  count: 6,
  format: "number",
  autoFocus: !0
}, x = N(T, q), V = /* @__PURE__ */ p({
  props: {
    ...x
  },
  name: "Lottie",
  setup(t, {
    expose: i
  }) {
    h();
    const r = y(), s = w({}), {
      adapter: u,
      getDataAttr: m
    } = b(t, s);
    function c() {
      const e = () => t.params.container ?? r.value;
      return {
        ...u(),
        getContainer: e,
        getLoadParams: () => ({
          container: e(),
          renderer: "svg",
          loop: !0,
          autoplay: !0,
          ...t.params
        })
      };
    }
    const l = c(), a = new o(l);
    P(() => {
      var e;
      a.init(), (e = t.getAnimationInstance) == null || e.call(t, a.animation);
    }), v(() => {
      a.destroy();
    }), i({
      getLottie() {
        return o.getLottie;
      }
    }), C(() => t.params, (e, g, E) => {
      A(e, g) || a.handleParamsUpdate();
    });
    function d() {
      return {
        width: t.width,
        height: t.height,
        ...t.style
      };
    }
    function f() {
      return F(j.PREFIX, t.className);
    }
    return () => t.params.container ? null : L("div", I({
      ref: r,
      style: d(),
      class: f()
    }, m()), null);
  }
});
export {
  V as default,
  x as vuePropsType
};
//# sourceMappingURL=index.js.map
