{"version":3,"file":"index.js","sources":["../../src/components/lottie/index.tsx"],"sourcesContent":["import {\n  CSSProperties,\n  defineComponent,\n  h,\n  onMounted,\n  onUnmounted,\n  PropType,\n  reactive,\n  shallowRef,\n  useSlots,\n  watch,\n} from 'vue';\nimport LottieFoundation, {\n  LottieAdapter,\n  LottieBaseProps,\n  LottieBaseState,\n} from '@douyinfe/semi-foundation/lottie/foundation';\nimport { CombineProps } from '../interface';\nimport * as PropTypes from '../PropTypes';\nimport { vuePropsMake } from '../PropTypes';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport { cssClasses } from '@douyinfe/semi-foundation/lottie/constants';\nimport { isEqual } from 'lodash';\nimport cls from 'classnames';\nexport type { LottiePlayer } from 'lottie-web';\n\nexport interface LottieProps extends LottieBaseProps {\n  className?: string;\n  style?: CSSProperties;\n}\n\nexport interface LottieState extends LottieBaseState {}\n\nconst propTypes: CombineProps<LottieProps> = {\n  className: PropTypes.string,\n  style: PropTypes.object,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  params: {\n    type: PropTypes.object as PropType<LottieProps['params']>,\n    required: true,\n  },\n  getAnimationInstance: PropTypes.func as PropType<LottieProps['getAnimationInstance']>,\n  getLottie: PropTypes.func as PropType<LottieProps['getLottie']>,\n};\nconst defaultProps = {\n  count: 6,\n  format: 'number',\n  autoFocus: true,\n};\n\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst index = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Lottie',\n  setup(props, { expose }) {\n    const slots = useSlots();\n    const container = shallowRef();\n    const state = reactive<LottieState>({});\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent(props, state);\n    function adapter_(): LottieAdapter<LottieProps, LottieState> {\n      const getContainer = () => {\n        return props.params.container ?? container.value;\n      };\n      return {\n        ...adapterInject(),\n        getContainer,\n        getLoadParams: () => {\n          return {\n            container: getContainer(),\n            renderer: 'svg',\n            loop: true,\n            autoplay: true,\n            ...props.params,\n          };\n        },\n      };\n    }\n    const adapter = adapter_();\n    const foundation = new LottieFoundation(adapter);\n    onMounted(() => {\n      foundation.init();\n      props.getAnimationInstance?.(foundation.animation);\n    });\n    onUnmounted(()=>{\n      foundation.destroy();\n    })\n\n    expose({\n      getLottie(){\n        return LottieFoundation.getLottie;\n      }\n    })\n\n    watch(\n      () => props.params,\n      (value, oldValue, onCleanup) => {\n        if (!isEqual(value, oldValue)) {\n          foundation.handleParamsUpdate();\n        }\n      }\n    );\n\n    function wrapperStyle() {\n      return {\n        width: props.width,\n        height: props.height,\n        ...props.style,\n      };\n    }\n\n    function wrapperClassName() {\n      return cls(cssClasses.PREFIX, props.className);\n    }\n\n    return () => {\n      if (props.params.container) {\n        return null;\n      } else {\n        return <div ref={container} style={wrapperStyle()} class={wrapperClassName()} {...getDataAttr()}></div>;\n      }\n    };\n  },\n});\n\nexport default index;\n"],"names":["propTypes","className","PropTypes","string","style","object","width","height","params","type","required","getAnimationInstance","func","getLottie","defaultProps","count","format","autoFocus","vuePropsType","vuePropsMake","index","defineComponent","props","name","setup","expose","useSlots","container","shallowRef","state","reactive","adapter","adapterInject","getDataAttr","useBaseComponent","adapter_","getContainer","value","getLoadParams","renderer","loop","autoplay","foundation","LottieFoundation","onMounted","init","animation","onUnmounted","destroy","watch","oldValue","onCleanup","isEqual","handleParamsUpdate","wrapperStyle","wrapperClassName","cls","cssClasses","PREFIX","_createVNode","_mergeProps"],"mappings":";;;;;;;;AAiCA,MAAMA,IAAuC;AAAA,EAC3CC,WAAWC,EAAUC;AAAAA,EACrBC,OAAOF,EAAUG;AAAAA,EACjBC,OAAOJ,EAAUC;AAAAA,EACjBI,QAAQL,EAAUC;AAAAA,EAClBK,QAAQ;AAAA,IACNC,MAAMP,EAAUG;AAAAA,IAChBK,UAAU;AAAA,EACX;AAAA,EACDC,sBAAsBT,EAAUU;AAAAA,EAChCC,WAAWX,EAAUU;AACvB,GACME,IAAe;AAAA,EACnBC,OAAO;AAAA,EACPC,QAAQ;AAAA,EACRC,WAAW;AACb,GAEaC,IAAeC,EAAanB,GAAWc,CAAY,GAC1DM,IAAQC,gBAAAA,EAAgB;AAAA,EAC5BC,OAAO;AAAA,IAAE,GAAGJ;AAAAA,EAAc;AAAA,EAC1BK,MAAM;AAAA,EACNC,MAAMF,GAAO;AAAA,IAAEG,QAAAA;AAAAA,EAAO,GAAG;AACTC,IAAAA,EAAU;AACxB,UAAMC,IAAYC,KACZC,IAAQC,EAAsB,CAAA,CAAE,GAChC;AAAA,MAAEC,SAASC;AAAAA,MAAeC,aAAAA;AAAAA,IAAY,IAAIC,EAAiBZ,GAAOO,CAAK;AAC7E,aAASM,IAAoD;AAC3D,YAAMC,IAAeA,MACZd,EAAMd,OAAOmB,aAAaA,EAAUU;AAE7C,aAAO;AAAA,QACL,GAAGL,EAAe;AAAA,QAClBI,cAAAA;AAAAA,QACAE,eAAeA,OACN;AAAA,UACLX,WAAWS,EAAc;AAAA,UACzBG,UAAU;AAAA,UACVC,MAAM;AAAA,UACNC,UAAU;AAAA,UACV,GAAGnB,EAAMd;AAAAA;;IAIjB;AACA,UAAMuB,IAAUI,KACVO,IAAa,IAAIC,EAAiBZ,CAAO;AAC/Ca,IAAAA,EAAU,MAAM;;AACdF,MAAAA,EAAWG,KAAI,IACfvB,IAAAA,EAAMX,yBAANW,QAAAA,EAAAA,KAAAA,GAA6BoB,EAAWI;AAAAA,IAC1C,CAAC,GACDC,EAAY,MAAI;AACdL,MAAAA,EAAWM,QAAO;AAAA,IACpB,CAAC,GAEDvB,EAAO;AAAA,MACLZ,YAAW;AACT,eAAO8B,EAAiB9B;AAAAA,MAC1B;AAAA,IACF,CAAC,GAEDoC,EACE,MAAM3B,EAAMd,QACZ,CAAC6B,GAAOa,GAAUC,MAAc;AAC9B,MAAKC,EAAQf,GAAOa,CAAQ,KAC1BR,EAAWW,mBAAkB;AAAA,IAEjC,CACF;AAEA,aAASC,IAAe;AACtB,aAAO;AAAA,QACLhD,OAAOgB,EAAMhB;AAAAA,QACbC,QAAQe,EAAMf;AAAAA,QACd,GAAGe,EAAMlB;AAAAA;IAEb;AAEA,aAASmD,IAAmB;AAC1B,aAAOC,EAAIC,EAAWC,QAAQpC,EAAMrB,SAAS;AAAA,IAC/C;AAEA,WAAO,MACDqB,EAAMd,OAAOmB,YACR,OAEPgC,SAAAC,EAAA;AAAA,MAAA,KAAiBjC;AAAAA,MAAS,OAAS2B,EAAc;AAAA,MAAA,OAASC,EAAiB;AAAA,OAAOtB,EAAW,CAAE,GAAA,IAAA;AAAA,EAGrG;AACF,CAAC;"}