{"version":3,"file":"resizable.js","sources":["../../../src/components/resizable/single/resizable.tsx"],"sourcesContent":["\nimport classNames from 'classnames';\nimport * as PropTypes from '../../PropTypes';\nimport { ResizableFoundation, ResizableAdapter } from '@douyinfe/semi-foundation/resizable/foundation';\n\nimport { cssClasses, } from '@douyinfe/semi-foundation/resizable/constants';\nimport { Direction, Size, Enable, ResizeStartCallback, ResizeCallback, HandleClassName, directions } from '@douyinfe/semi-foundation/resizable/singleConstants';\n\nimport ResizableHandler from './resizableHandler';\nimport '@douyinfe/semi-foundation/resizable/resizable.scss';\nimport {\n  CSSProperties,\n  defineComponent,\n  h, onBeforeUnmount,\n  onMounted,\n  onUnmounted,\n  PropType,\n  reactive,\n  ref,\n  useSlots,\n  VNode, watch,\n} from 'vue';\nimport { vuePropsMake } from '../../PropTypes';\nimport { CombineProps } from '../../interface';\nimport { useBaseComponent } from '../../_base/baseComponent';\n\nconst prefixCls = cssClasses.PREFIX;\nexport interface HandleComponent {\n  top?: VNode;\n  right?: VNode;\n  bottom?: VNode;\n  left?: VNode;\n  topRight?: VNode;\n  bottomRight?: VNode;\n  bottomLeft?: VNode;\n  topLeft?: VNode\n}\n\nexport interface HandleStyle {\n  top?: CSSProperties;\n  right?: CSSProperties;\n  bottom?: CSSProperties;\n  left?: CSSProperties;\n  topRight?: CSSProperties;\n  bottomRight?: CSSProperties;\n  bottomLeft?: CSSProperties;\n  topLeft?: CSSProperties\n}\n\nexport interface ResizableProps {\n  style?: CSSProperties;\n  className?: string;\n  grid?: [number, number];\n  snap?: {\n    x?: number[];\n    y?: number[]\n  };\n  snapGap?: number;\n  bounds?: any;\n  boundElement?: 'parent' | 'window' | HTMLElement;\n  boundsByDirection?: boolean;\n  size?: Size;\n  minWidth?: string | number;\n  minHeight?: string | number;\n  maxWidth?: string | number;\n  maxHeight?: string | number;\n  lockAspectRatio?: boolean | number;\n  lockAspectRatioExtraWidth?: number;\n  lockAspectRatioExtraHeight?: number;\n  enable?: Enable | false;\n  handleStyle?: HandleStyle;\n  handleClass?: HandleClassName;\n  handleWrapperStyle?: CSSProperties;\n  handleWrapperClass?: string;\n  handleNode?: HandleComponent;\n  onResizeStart?: ResizeStartCallback;\n  onChange?: ResizeCallback;\n  onResizeEnd?: ResizeCallback;\n  defaultSize?: Size;\n  scale?: number;\n  ratio?: number | [number, number]\n}\n\nexport interface ResizableState {\n  isResizing: boolean;\n  direction: Direction;\n  original: {\n    x: number;\n    y: number;\n    width: number;\n    height: number\n  };\n  width: number | string;\n  height: number | string;\n\n  backgroundStyle: CSSProperties;\n  flexBasis?: string | number\n}\n\nconst propTypes: CombineProps<ResizableProps> = {\n  style: PropTypes.object,\n  className: PropTypes.string,\n  //@ts-ignore\n  grid: PropTypes.array as PropType<ResizableProps['grid']>,\n  snap: PropTypes.object,\n  snapGap: PropTypes.number,\n  bounds: PropTypes.node as PropType<ResizableProps['bounds']>,\n  boundElement: PropTypes.node as PropType<ResizableProps['boundElement']>,\n  boundsByDirection: PropTypes.bool,\n  size: PropTypes.object,\n  minWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  minHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  maxWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  maxHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  lockAspectRatio: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  lockAspectRatioExtraWidth: PropTypes.number,\n  lockAspectRatioExtraHeight: PropTypes.number,\n  enable: PropTypes.object,\n  handleStyle: PropTypes.object,\n  handleClass: PropTypes.object,\n  handleWrapperStyle: PropTypes.object,\n  handleWrapperClass: PropTypes.string,\n  handleNode: PropTypes.object,\n  onResizeStart: PropTypes.func as PropType<ResizableProps['onResizeStart']>,\n  onChange: PropTypes.func as PropType<ResizableProps['onChange']>,\n  onResizeEnd: PropTypes.func as PropType<ResizableProps['onResizeEnd']>,\n  defaultSize: PropTypes.object,\n  scale: PropTypes.number,\n  ratio: PropTypes.oneOfType([PropTypes.number, PropTypes.array]),\n};\n\nconst defaultProps: Partial<ResizableProps> = {\n  onResizeStart: () => {},\n  onChange: () => {},\n  onResizeEnd: () => {},\n  enable: {\n    top: true,\n    right: true,\n    bottom: true,\n    left: true,\n    topRight: true,\n    bottomRight: true,\n    bottomLeft: true,\n    topLeft: true,\n  },\n  style: {},\n  grid: [1, 1],\n  lockAspectRatio: false,\n  lockAspectRatioExtraWidth: 0,\n  lockAspectRatioExtraHeight: 0,\n  scale: 1,\n  ratio: 1,\n  snapGap: 0,\n};\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps)\n\nconst Resizable = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Resizable',\n  setup(props, { attrs }) {\n    const slots = useSlots();\n\n    const resizableRef = ref()\n    const state = reactive<ResizableState>({\n      isResizing: false,\n      width: 'auto',\n      height: 'auto',\n      direction: 'right',\n      original: {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n      },\n      backgroundStyle: {\n        height: '100%',\n        width: '100%',\n        backgroundColor: 'rgba(0,0,0,0)',\n        cursor: 'auto',\n        opacity: 0,\n        position: 'fixed',\n        zIndex: 9999,\n        top: '0',\n        left: '0',\n        bottom: '0',\n        right: '0',\n      },\n      flexBasis: undefined,\n    });\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent(props, state);\n    function adapter_(): ResizableAdapter<ResizableProps, ResizableState> {\n      return {\n        ...adapterInject(),\n        getResizable: getResizable,\n        registerEvent: () => {\n          let window = foundation.window;\n          window?.addEventListener('mouseup', foundation.onMouseUp);\n          window?.addEventListener('mousemove', foundation.onMouseMove);\n          window?.addEventListener('mouseleave', foundation.onMouseUp);\n        },\n        unregisterEvent: () => {\n          let window = foundation.window;\n          window?.removeEventListener('mouseup', foundation.onMouseUp);\n          window?.removeEventListener('mousemove', foundation.onMouseMove);\n          window?.removeEventListener('mouseleave', foundation.onMouseUp);\n        },\n      };\n    }\n    const adapter = adapter_()\n    const foundation = new ResizableFoundation(adapter);\n    state.width = foundation.propSize.width ?? 'auto'\n    state.height = foundation.propSize.height ?? 'auto'\n\n    onMounted(()=>{\n      foundation.init();\n    })\n\n    onBeforeUnmount(()=>{\n      foundation.destroy();\n    })\n\n    function getResizable (){\n      return resizableRef?.value;\n    }\n\n    const renderResizeHandler = () => {\n      const { enable, handleStyle, handleClass, handleNode, handleWrapperStyle, handleWrapperClass } = props;\n      if (!enable) {\n        return null;\n      }\n      const handlers = directions.map(dir => {\n        if (enable[dir as Direction] !== false) {\n          return (\n            <ResizableHandler\n              key={dir}\n              direction={dir as Direction}\n              onResizeStart={foundation.onResizeStart}\n              style={handleStyle && handleStyle[dir]}\n              className={handleClass && handleClass[dir]}\n            >\n              {handleNode?.[dir] ?? null}\n            </ResizableHandler>\n          );\n        }\n        return null;\n      });\n\n      return (\n        <div class={handleWrapperClass} style={handleWrapperStyle}>\n          {handlers}\n        </div>\n      );\n    }\n\n\n    return () => {\n      const children = slots.default?.()\n      const { className, style, maxHeight, maxWidth, minHeight, minWidth } = props;\n      const resizeStyle: CSSProperties = {\n        userSelect: state.isResizing ? 'none' : 'auto',\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        minWidth: minWidth,\n        minHeight: minHeight,\n        ...style,\n        // Vue 保持响应\n        width: state.width,\n        height: state.height,\n        ...foundation.sizeStyle,\n      };\n\n      if (state?.flexBasis) {\n        style.flexBasis = state.flexBasis;\n      }\n\n      return (\n        <div\n          style={resizeStyle}\n          class={classNames(className, prefixCls + '-resizable')}\n          ref={resizableRef}\n          {...getDataAttr()}\n        >\n          {state.isResizing && <div style={state.backgroundStyle} />}\n          {children}\n          {renderResizeHandler()}\n        </div>\n      );\n    };\n  },\n});\n\n\n\nexport default Resizable;\n"],"names":["prefixCls","cssClasses","PREFIX","propTypes","style","PropTypes","object","className","string","grid","array","snap","snapGap","number","bounds","node","boundElement","boundsByDirection","bool","size","minWidth","oneOfType","minHeight","maxWidth","maxHeight","lockAspectRatio","lockAspectRatioExtraWidth","lockAspectRatioExtraHeight","enable","handleStyle","handleClass","handleWrapperStyle","handleWrapperClass","handleNode","onResizeStart","func","onChange","onResizeEnd","defaultSize","scale","ratio","defaultProps","top","right","bottom","left","topRight","bottomRight","bottomLeft","topLeft","vuePropsType","vuePropsMake","Resizable","defineComponent","props","name","setup","attrs","slots","useSlots","resizableRef","ref","state","reactive","isResizing","width","height","direction","original","x","y","backgroundStyle","backgroundColor","cursor","opacity","position","zIndex","flexBasis","undefined","adapter","adapterInject","getDataAttr","useBaseComponent","adapter_","getResizable","registerEvent","window","foundation","addEventListener","onMouseUp","onMouseMove","unregisterEvent","removeEventListener","ResizableFoundation","propSize","onMounted","init","onBeforeUnmount","destroy","value","renderResizeHandler","handlers","directions","map","dir","_createVNode","ResizableHandler","default","children","resizeStyle","userSelect","sizeStyle","_mergeProps","classNames"],"mappings":"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"}