{"version":3,"file":"resizeGroup.js","sources":["../../../src/components/resizable/group/resizeGroup.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport * as PropTypes from '../../PropTypes';\nimport { ResizeGroupFoundation, ResizeGroupAdapter } from '@douyinfe/semi-foundation/resizable/foundation';\nimport { cssClasses } from '@douyinfe/semi-foundation/resizable/constants';\nimport { ResizeContext, type ResizeContextProps } from './resizeContext';\nimport { ResizeCallback, ResizeStartCallback } from '@douyinfe/semi-foundation/resizable/singleConstants';\nimport '@douyinfe/semi-foundation/resizable/resizable.scss';\nimport {\n  CSSProperties,\n  defineComponent,\n  h,\n  onMounted,\n  onUnmounted,\n  PropType,\n  reactive,\n  Ref,\n  ref,\n  useSlots,\n  useTemplateRef,\n  VNode,\n} from 'vue';\nimport { CombineProps } from '../../interface';\nimport { vuePropsMake } from '../../PropTypes';\nimport { useBaseComponent } from '../../_base/baseComponent';\n\nconst prefixCls = cssClasses.PREFIX;\n\nexport interface ResizeGroupProps {\n  direction?: 'horizontal' | 'vertical';\n  className?: string;\n}\n\nexport interface ResizeGroupState {\n  isResizing: boolean;\n  originalPosition: {\n    x: number;\n    y: number;\n    lastItemSize: number;\n    nextItemSize: number;\n    lastOffset: number;\n    nextOffset: number;\n  };\n  backgroundStyle: CSSProperties;\n  curHandler: number;\n}\n\nconst propTypes: CombineProps<ResizeGroupProps> = {\n  className: String,\n  direction: {\n    type: String as PropType<ResizeGroupProps['direction']>,\n    required: false\n  },\n};\n\nconst defaultProps: Partial<ResizeGroupProps> = {\n  direction: 'horizontal',\n};\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst ResizeGroup = defineComponent({\n  props: { ...vuePropsType },\n  name: 'ResizeGroup',\n  setup(props, { attrs }) {\n    const slots = useSlots();\n    const state = reactive<ResizeGroupState>({\n      isResizing: false,\n      originalPosition: {\n        x: 0,\n        y: 0,\n        lastItemSize: 0,\n        nextItemSize: 0,\n        lastOffset: 0,\n        nextOffset: 0,\n      },\n      backgroundStyle: {\n        height: '100%',\n        width: '100%',\n        backgroundColor: 'rgba(0,0,0,0)',\n        cursor: 'auto',\n        opacity: 0,\n        position: 'fixed',\n        zIndex: 9999,\n        top: '0',\n        left: '0',\n        bottom: '0',\n        right: '0',\n      },\n      curHandler: null,\n    });\n\n    const groupRef = ref();\n\n    let groupSize: number;\n    let availableSize: number;\n    const itemRefs: Ref<HTMLDivElement>[] = [];\n    let itemMinMap: Map<number, string> = new Map();\n    let itemMaxMap: Map<number, string> = new Map();\n    let itemMinusMap: Map<number, number> = new Map();\n    let itemDefaultSizeList: (string | number)[] = [];\n    let itemResizeStart: Map<number, ResizeStartCallback> = new Map();\n    let itemResizing: Map<number, ResizeCallback> = new Map();\n    let itemResizeEnd: Map<number, ResizeCallback> = new Map();\n    const handlerRefs: Ref<HTMLDivElement>[] = [];\n\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent(props, state);\n    function adapter_(): ResizeGroupAdapter<ResizeGroupProps, ResizeGroupState> {\n      return {\n        ...adapterInject(),\n        getGroupRef: () => groupRef.value,\n        getItem: (id: number) => itemRefs[id].value,\n        getItemCount: () => itemRefs.length,\n        getHandler: (id: number) => handlerRefs[id].value,\n        getHandlerCount: () => handlerRefs.length,\n        getItemMin: (index) => {\n          return itemMinMap.get(index);\n        },\n        getItemMax: (index) => {\n          return itemMaxMap.get(index);\n        },\n        getItemChange: (index) => {\n          return itemResizing.get(index);\n        },\n        getItemEnd: (index) => {\n          return itemResizeEnd.get(index);\n        },\n        getItemStart: (index) => {\n          return itemResizeStart.get(index);\n        },\n        getItemDefaultSize: (index) => {\n          return itemDefaultSizeList[index];\n        },\n        registerEvents: registerEvent,\n        unregisterEvents: unregisterEvent,\n      };\n    }\n    const adapter = adapter_();\n    const foundation = new ResizeGroupFoundation(adapter);\n\n    onMounted(() => {\n      foundation.init();\n    });\n\n    onUnmounted(() => {\n      foundation.destroy();\n    });\n\n    function window(): Window | null {\n      return (groupRef.value.ownerDocument.defaultView as Window) ?? null;\n    }\n\n    function registerEvent() {\n      if (window) {\n        window().addEventListener('mousemove', foundation.onResizing);\n        window().addEventListener('mouseup', foundation.onResizeEnd);\n        window().addEventListener('mouseleave', foundation.onResizeEnd);\n      }\n    };\n\n    function unregisterEvent() {\n      if (window) {\n        window().removeEventListener('mousemove', foundation.onResizing);\n        window().removeEventListener('mouseup', foundation.onResizeEnd);\n        window().removeEventListener('mouseleave', foundation.onResizeEnd);\n      }\n    };\n\n    function registerItem (\n      ref: Ref<HTMLDivElement>,\n      min: string,\n      max: string,\n      defaultSize: string | number,\n      onResizeStart: ResizeStartCallback,\n      onChange: ResizeCallback,\n      onResizeEnd: ResizeCallback\n    ) {\n      itemRefs.push(ref);\n      let index = itemRefs.length - 1;\n      itemMinMap.set(index, min);\n      itemMaxMap.set(index, max);\n      itemDefaultSizeList.push(defaultSize);\n      itemResizeStart.set(index, onResizeStart);\n      itemResizing.set(index, onChange);\n      itemResizeEnd.set(index, onResizeEnd);\n      return index;\n    };\n\n    const registerHandler = (ref: Ref<HTMLDivElement>) => {\n      handlerRefs.push(ref);\n      return handlerRefs.length - 1;\n    };\n\n    const getGroupSize = () => {\n      return groupSize;\n    };\n\n    const contextValue = {\n      direction: props.direction,\n      registerItem: registerItem,\n      registerHandler: registerHandler,\n      notifyResizeStart: foundation.onResizeStart,\n      getGroupSize: getGroupSize,\n    };\n\n    return () => {\n      const { direction, className, ...rest } = props;\n      return (\n        <ResizeContext.Provider value={contextValue}>\n          <div\n            style={{\n              flexDirection: direction === 'vertical' ? 'column' : 'row',\n            }}\n            ref={groupRef}\n            class={classNames(className, prefixCls + '-group')}\n            {...rest}\n          >\n            {state.isResizing && <div style={state.backgroundStyle} />}\n            {slots.default?.()}\n          </div>\n        </ResizeContext.Provider>\n      );\n    };\n  },\n});\n\nexport default ResizeGroup;\n"],"names":["prefixCls","cssClasses","PREFIX","propTypes","className","String","direction","type","required","defaultProps","vuePropsType","vuePropsMake","ResizeGroup","defineComponent","props","name","setup","attrs","slots","useSlots","state","reactive","isResizing","originalPosition","x","y","lastItemSize","nextItemSize","lastOffset","nextOffset","backgroundStyle","height","width","backgroundColor","cursor","opacity","position","zIndex","top","left","bottom","right","curHandler","groupRef","ref","groupSize","itemRefs","itemMinMap","Map","itemMaxMap","itemDefaultSizeList","itemResizeStart","itemResizing","itemResizeEnd","handlerRefs","adapter","adapterInject","getDataAttr","useBaseComponent","adapter_","getGroupRef","value","getItem","id","getItemCount","length","getHandler","getHandlerCount","getItemMin","index","get","getItemMax","getItemChange","getItemEnd","getItemStart","getItemDefaultSize","registerEvents","registerEvent","unregisterEvents","unregisterEvent","foundation","ResizeGroupFoundation","onMounted","init","onUnmounted","destroy","window","ownerDocument","defaultView","addEventListener","onResizing","onResizeEnd","removeEventListener","registerItem","min","max","defaultSize","onResizeStart","onChange","push","set","registerHandler","getGroupSize","contextValue","notifyResizeStart","rest","_createVNode","ResizeContext","Provider","default","_mergeProps","flexDirection","classNames"],"mappings":"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"}