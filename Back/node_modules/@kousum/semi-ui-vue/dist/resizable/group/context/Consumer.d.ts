import { ResizeContextProps } from '../resizeContext';
export declare function useResizeContext(): import("vue").Ref<{
    direction: "horizontal" | "vertical";
    registerItem: (ref: import("vue").Ref<HTMLDivElement>, min: string, max: string, defaultSize: string | number, onResizeStart: import("@douyinfe/semi-foundation/lib/es/resizable/singleConstants").ResizeStartCallback, onChange: import("@douyinfe/semi-foundation/resizable/singleConstants").ResizeCallback, onResizeEnd: import("@douyinfe/semi-foundation/resizable/singleConstants").ResizeCallback) => number;
    registerHandler: (ref: import("vue").Ref<HTMLDivElement>) => number;
    notifyResizeStart: (handlerIndex: number, e: MouseEvent) => void;
    getGroupSize: () => number;
}, ResizeContextProps | {
    direction: "horizontal" | "vertical";
    registerItem: (ref: import("vue").Ref<HTMLDivElement>, min: string, max: string, defaultSize: string | number, onResizeStart: import("@douyinfe/semi-foundation/lib/es/resizable/singleConstants").ResizeStartCallback, onChange: import("@douyinfe/semi-foundation/resizable/singleConstants").ResizeCallback, onResizeEnd: import("@douyinfe/semi-foundation/resizable/singleConstants").ResizeCallback) => number;
    registerHandler: (ref: import("vue").Ref<HTMLDivElement>) => number;
    notifyResizeStart: (handlerIndex: number, e: MouseEvent) => void;
    getGroupSize: () => number;
}>;
export declare const vuePropsType: {};
declare const Consumer: import("vue").DefineSetupFnComponent<Record<string, any>, {}, {}, Record<string, any> & {}, import("vue").PublicProps>;
export default Consumer;
