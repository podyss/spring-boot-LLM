import { defineComponent as g, useSlots as z, reactive as R, ref as h, onMounted as x, onBeforeUnmount as C, createVNode as m } from "vue";
import E from "classnames";
import * as e from "../../PropTypes";
import { vuePropsMake as H } from "../../PropTypes";
import { ResizeHandlerFoundation as P } from '@douyinfe/semi-foundation/lib/es/resizable/foundation';
import { cssClasses as w } from '@douyinfe/semi-foundation/lib/es/resizable/constants';
import { directionStyles as I } from '@douyinfe/semi-foundation/lib/es/resizable/groupConstants';
import { IconHandle as N } from "@kousum/semi-icons-vue";
import { useBaseComponent as S } from "../../_base/baseComponent";
import { useResizeContext as b } from "./context/Consumer";
const M = w.PREFIX, T = {
  direction: e.string,
  onResizeStart: e.func,
  className: e.string,
  disabled: e.bool,
  style: e.object
}, j = {}, B = H(T, j), J = /* @__PURE__ */ g({
  props: {
    ...B
  },
  name: "ResizeHandler",
  setup(a, {
    attrs: D
  }) {
    const n = z(), t = b(), u = R({}), o = h();
    let i;
    const {
      adapter: p,
      getDataAttr: F
    } = S(a, u);
    function f() {
      return {
        ...p(),
        registerEvents: () => {
          o.value.addEventListener("mousedown", l);
        },
        unregisterEvents: () => {
          o.value.removeEventListener("mousedown", l);
        }
      };
    }
    const v = f(), d = new P(v);
    x(() => {
      d.init(), i = t.value.registerHandler(o);
    }), C(() => {
      d.destroy();
    });
    const l = (r) => {
      const {
        notifyResizeStart: s
      } = t.value;
      s(i, r);
    };
    return () => {
      var c;
      const r = (c = n.default) == null ? void 0 : c.call(n), {
        style: s,
        className: y
      } = a;
      return m("div", {
        class: E(y, M + "-handler"),
        style: {
          ...I[t.value.direction],
          ...s
        },
        ref: o
      }, [r ?? m(N, {
        size: "inherit",
        style: {
          rotate: t.value.direction === "horizontal" ? "0deg" : "90deg"
        }
      }, null)]);
    };
  }
});
export {
  J as default,
  B as vuePropsType
};
//# sourceMappingURL=resizeHandler.js.map
