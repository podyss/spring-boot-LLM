import { defineComponent as g, useSlots as y, ref as C, reactive as x, onMounted as I, onUnmounted as S, createVNode as v } from "vue";
import P from "classnames";
import * as e from "../../PropTypes";
import { vuePropsMake as E } from "../../PropTypes";
import { ResizeItemFoundation as N } from '@douyinfe/semi-foundation/lib/es/resizable/foundation';
import { cssClasses as T } from '@douyinfe/semi-foundation/lib/es/resizable/constants';
import { noop as r } from "lodash";
import { useResizeContext as h } from "./context/Consumer";
import { useBaseComponent as b } from "../../_base/baseComponent";
const j = T.PREFIX, F = {
  style: e.object,
  className: e.string,
  min: e.string,
  max: e.string,
  onResizeStart: e.func,
  onChange: e.func,
  onResizeEnd: e.func,
  defaultSize: e.oneOfType([e.string, e.number])
}, M = {
  onResizeStart: r,
  onChange: r,
  onResizeEnd: r
}, k = E(F, M), G = /* @__PURE__ */ g({
  props: {
    ...k
  },
  name: "ResizeItem",
  setup(t, {
    attrs: w
  }) {
    const o = y(), a = C(), m = x({
      isResizing: !1
    }), c = h(), {
      adapter: f,
      getDataAttr: A
    } = b(t, m);
    function p() {
      return {
        ...f()
      };
    }
    const u = p(), i = new N(u);
    return I(() => {
      i.init();
      const {
        min: s,
        max: n,
        onResizeStart: d,
        onChange: l,
        onResizeEnd: z,
        defaultSize: R
      } = t;
      c.value.registerItem(a, s, n, R, d, l, z);
    }), S(() => {
      i.destroy();
    }), () => {
      var n;
      const s = {
        ...t.style
      };
      return v("div", {
        style: s,
        class: P(t.className, j + "-item"),
        ref: a
      }, [(n = o.default) == null ? void 0 : n.call(o)]);
    };
  }
});
export {
  G as default,
  k as vuePropsType
};
//# sourceMappingURL=resizeItem.js.map
