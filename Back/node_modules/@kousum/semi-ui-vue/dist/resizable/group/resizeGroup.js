import { defineComponent as H, useSlots as k, reactive as N, ref as V, onMounted as F, onUnmounted as O, createVNode as p, mergeProps as T } from "vue";
import j from "classnames";
import { ResizeGroupFoundation as q } from '@douyinfe/semi-foundation/lib/es/resizable/foundation';
import { cssClasses as A } from '@douyinfe/semi-foundation/lib/es/resizable/constants';
import { ResizeContext as B } from "./resizeContext";
import '@douyinfe/semi-foundation/lib/es/resizable/resizable.css';
import { vuePropsMake as U } from "../../PropTypes";
import { useBaseComponent as X } from "../../_base/baseComponent";
const _ = A.PREFIX, J = {
  className: String,
  direction: {
    type: String,
    required: !1
  }
}, K = {
  direction: "horizontal"
}, Q = U(J, K), se = /* @__PURE__ */ H({
  props: {
    ...Q
  },
  name: "ResizeGroup",
  setup(a, {
    attrs: W
  }) {
    const u = k(), l = N({
      isResizing: !1,
      originalPosition: {
        x: 0,
        y: 0,
        lastItemSize: 0,
        nextItemSize: 0,
        lastOffset: 0,
        nextOffset: 0
      },
      backgroundStyle: {
        height: "100%",
        width: "100%",
        backgroundColor: "rgba(0,0,0,0)",
        cursor: "auto",
        opacity: 0,
        position: "fixed",
        zIndex: 9999,
        top: "0",
        left: "0",
        bottom: "0",
        right: "0"
      },
      curHandler: null
    }), m = V();
    let S;
    const o = [];
    let c = /* @__PURE__ */ new Map(), f = /* @__PURE__ */ new Map(), v = [], z = /* @__PURE__ */ new Map(), R = /* @__PURE__ */ new Map(), E = /* @__PURE__ */ new Map();
    const i = [], {
      adapter: I,
      getDataAttr: Y
    } = X(a, l);
    function h() {
      return {
        ...I(),
        getGroupRef: () => m.value,
        getItem: (e) => o[e].value,
        getItemCount: () => o.length,
        getHandler: (e) => i[e].value,
        getHandlerCount: () => i.length,
        getItemMin: (e) => c.get(e),
        getItemMax: (e) => f.get(e),
        getItemChange: (e) => R.get(e),
        getItemEnd: (e) => E.get(e),
        getItemStart: (e) => z.get(e),
        getItemDefaultSize: (e) => v[e],
        registerEvents: M,
        unregisterEvents: w
      };
    }
    const x = h(), t = new q(x);
    F(() => {
      t.init();
    }), O(() => {
      t.destroy();
    });
    function n() {
      return m.value.ownerDocument.defaultView ?? null;
    }
    function M() {
      n && (n().addEventListener("mousemove", t.onResizing), n().addEventListener("mouseup", t.onResizeEnd), n().addEventListener("mouseleave", t.onResizeEnd));
    }
    function w() {
      n && (n().removeEventListener("mousemove", t.onResizing), n().removeEventListener("mouseup", t.onResizeEnd), n().removeEventListener("mouseleave", t.onResizeEnd));
    }
    function y(e, d, g, s, G, b, D) {
      o.push(e);
      let r = o.length - 1;
      return c.set(r, d), f.set(r, g), v.push(s), z.set(r, G), R.set(r, b), E.set(r, D), r;
    }
    const C = (e) => (i.push(e), i.length - 1), L = () => S, P = {
      direction: a.direction,
      registerItem: y,
      registerHandler: C,
      notifyResizeStart: t.onResizeStart,
      getGroupSize: L
    };
    return () => {
      const {
        direction: e,
        className: d,
        ...g
      } = a;
      return p(B.Provider, {
        value: P
      }, {
        default: () => {
          var s;
          return [p("div", T({
            style: {
              flexDirection: e === "vertical" ? "column" : "row"
            },
            ref: m,
            class: j(d, _ + "-group")
          }, g), [l.isResizing && p("div", {
            style: l.backgroundStyle
          }, null), (s = u.default) == null ? void 0 : s.call(u)])];
        }
      });
    };
  }
});
export {
  se as default,
  Q as vuePropsType
};
//# sourceMappingURL=resizeGroup.js.map
