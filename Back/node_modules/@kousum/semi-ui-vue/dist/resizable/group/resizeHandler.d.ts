import { Direction, HandlerCallback } from '@douyinfe/semi-foundation/lib/es/resizable/singleConstants';
import { CSSProperties, PropType } from 'vue';
import { CombineProps } from '../../interface';
export interface ResizeHandlerProps {
    direction?: Direction;
    onResizeStart?: HandlerCallback;
    className?: string;
    disabled?: boolean;
    style?: CSSProperties;
}
export interface ResizeHandlerState {
}
export declare const vuePropsType: CombineProps<ResizeHandlerProps>;
declare const ResizeHandler: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    direction: PropType<Direction> | {
        type: PropType<Direction>;
        default?: any;
        required?: false;
    };
    onResizeStart: PropType<HandlerCallback> | {
        type: PropType<HandlerCallback>;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    disabled: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    direction: PropType<Direction> | {
        type: PropType<Direction>;
        default?: any;
        required?: false;
    };
    onResizeStart: PropType<HandlerCallback> | {
        type: PropType<HandlerCallback>;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    disabled: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default ResizeHandler;
