{"version":3,"file":"resizeHandler.js","sources":["../../../src/components/resizable/group/resizeHandler.tsx"],"sourcesContent":["\nimport classNames from 'classnames';\nimport * as PropTypes from '../../PropTypes';\nimport { ResizeHandlerFoundation, ResizeHandlerAdapter } from '@douyinfe/semi-foundation/resizable/foundation';\nimport { cssClasses } from '@douyinfe/semi-foundation/resizable/constants';\nimport { Direction, HandlerCallback } from '@douyinfe/semi-foundation/resizable/singleConstants';\nimport { directionStyles } from '@douyinfe/semi-foundation/resizable/groupConstants';\nimport { ResizeContext, ResizeContextProps } from './resizeContext';\nimport { IconHandle } from '@kousum/semi-icons-vue';\nimport {\n  CSSProperties,\n  defineComponent,\n  h, onBeforeUnmount,\n  onMounted,\n  onUnmounted,\n  PropType,\n  reactive,\n  ref,\n  useSlots,\n  VNode,\n} from 'vue';\nimport { vuePropsMake } from '../../PropTypes';\nimport { CombineProps } from '../../interface';\nimport { useBaseComponent } from '../../_base/baseComponent';\nimport { useResizeContext } from './context/Consumer';\n\n\nconst prefixCls = cssClasses.PREFIX;\n\nexport interface ResizeHandlerProps {\n  direction?: Direction;\n  onResizeStart?: HandlerCallback;\n  className?: string;\n  disabled?: boolean;\n  style?: CSSProperties\n}\n\nexport interface ResizeHandlerState {\n}\nconst propTypes: CombineProps<ResizeHandlerProps> = {\n  direction: PropTypes.string as PropType<ResizeHandlerProps['direction']>,\n  onResizeStart: PropTypes.func as PropType<ResizeHandlerProps['onResizeStart']>,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  style: PropTypes.object,\n};\n\nconst defaultProps: Partial<ResizeHandlerProps> = {\n};\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps)\n\nconst ResizeHandler = defineComponent({\n  props: { ...vuePropsType },\n  name: 'ResizeHandler',\n  setup(props, { attrs }) {\n    const slots = useSlots();\n    const context = useResizeContext()\n\n    const state = reactive({\n\n    })\n    const handlerRef = ref();\n\n    let getHandler: () => HTMLElement = () => {\n      return handlerRef.value;\n    }\n\n    let handlerIndex: number;\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent(props, state);\n\n    function adapter_(): ResizeHandlerAdapter<ResizeHandlerProps, ResizeHandlerState> {\n      return {\n        ...adapterInject(),\n        registerEvents: () => {\n          handlerRef.value.addEventListener('mousedown', onMouseDown);\n        },\n        unregisterEvents: () => {\n          handlerRef.value.removeEventListener('mousedown', onMouseDown);\n        },\n      };\n    }\n\n    const adapter = adapter_()\n    const foundation = new ResizeHandlerFoundation(adapter);\n    onMounted(()=>{\n      foundation.init();\n      handlerIndex = context.value.registerHandler(handlerRef);\n    })\n\n    onBeforeUnmount(()=>{\n      foundation.destroy();\n    })\n    const onMouseDown = (e: MouseEvent) => {\n      const { notifyResizeStart } = context.value;\n      notifyResizeStart(handlerIndex, e);\n    }\n\n    return () => {\n      const children = slots.default?.();\n      const { style, className } = props;\n      return (\n        <div\n          class={classNames(className, prefixCls + '-handler')}\n          style={{\n            ...directionStyles[context.value.direction],\n            ...style\n          }}\n          ref={handlerRef}\n        >\n          {children ?? <IconHandle size='inherit' style={{\n            rotate: context.value.direction === 'horizontal' ? '0deg' : '90deg',\n          }}/>}\n        </div>\n      );\n    };\n  },\n});\n\n\n\nexport default ResizeHandler;\n"],"names":["prefixCls","cssClasses","PREFIX","propTypes","direction","PropTypes","string","onResizeStart","func","className","disabled","bool","style","object","defaultProps","vuePropsType","vuePropsMake","ResizeHandler","defineComponent","props","name","setup","attrs","slots","useSlots","context","useResizeContext","state","reactive","handlerRef","ref","handlerIndex","adapter","adapterInject","getDataAttr","useBaseComponent","adapter_","registerEvents","value","addEventListener","onMouseDown","unregisterEvents","removeEventListener","foundation","ResizeHandlerFoundation","onMounted","init","registerHandler","onBeforeUnmount","destroy","e","notifyResizeStart","children","default","_createVNode","classNames","directionStyles","IconHandle","rotate"],"mappings":";;;;;;;;;;AA2BA,MAAMA,IAAYC,EAAWC,QAYvBC,IAA8C;AAAA,EAClDC,WAAWC,EAAUC;AAAAA,EACrBC,eAAeF,EAAUG;AAAAA,EACzBC,WAAWJ,EAAUC;AAAAA,EACrBI,UAAUL,EAAUM;AAAAA,EACpBC,OAAOP,EAAUQ;AACnB,GAEMC,IAA4C,CAAA,GAErCC,IAAeC,EAAab,GAAWW,CAAY,GAE1DG,IAAgBC,gBAAAA,EAAgB;AAAA,EACpCC,OAAO;AAAA,IAAE,GAAGJ;AAAAA,EAAc;AAAA,EAC1BK,MAAM;AAAA,EACNC,MAAMF,GAAO;AAAA,IAAEG,OAAAA;AAAAA,EAAM,GAAG;AACtB,UAAMC,IAAQC,KACRC,IAAUC,KAEVC,IAAQC,EAAS,CAAA,CAEtB,GACKC,IAAaC;AAMnB,QAAIC;AACJ,UAAM;AAAA,MAAEC,SAASC;AAAAA,MAAeC,aAAAA;AAAAA,IAAY,IAAIC,EAAiBhB,GAAOQ,CAAK;AAE7E,aAASS,IAAyE;AAChF,aAAO;AAAA,QACL,GAAGH,EAAe;AAAA,QAClBI,gBAAgBA,MAAM;AACpBR,UAAAA,EAAWS,MAAMC,iBAAiB,aAAaC,CAAW;AAAA,QAC3D;AAAA,QACDC,kBAAkBA,MAAM;AACtBZ,UAAAA,EAAWS,MAAMI,oBAAoB,aAAaF,CAAW;AAAA,QAC/D;AAAA;IAEJ;AAEA,UAAMR,IAAUI,KACVO,IAAa,IAAIC,EAAwBZ,CAAO;AACtDa,IAAAA,EAAU,MAAI;AACZF,MAAAA,EAAWG,KAAI,GACff,IAAeN,EAAQa,MAAMS,gBAAgBlB,CAAU;AAAA,IACzD,CAAC,GAEDmB,EAAgB,MAAI;AAClBL,MAAAA,EAAWM,QAAO;AAAA,IACpB,CAAC;AACD,UAAMT,IAAeU,CAAAA,MAAkB;AACrC,YAAM;AAAA,QAAEC,mBAAAA;AAAAA,UAAsB1B,EAAQa;AACtCa,MAAAA,EAAkBpB,GAAcmB,CAAC;AAAA;AAGnC,WAAO,MAAM;;AACX,YAAME,KAAW7B,IAAAA,EAAM8B,YAAN9B,gBAAAA,EAAAA,KAAAA,IACX;AAAA,QAAEX,OAAAA;AAAAA,QAAOH,WAAAA;AAAAA,MAAW,IAAGU;AAC7B,aAAAmC,EAAA,OAAA;AAAA,QAAA,OAEWC,EAAW9C,GAAWT,IAAY,UAAU;AAAA,QAAC,OAC7C;AAAA,UACL,GAAGwD,EAAgB/B,EAAQa,MAAMlC,SAAS;AAAA,UAC1C,GAAGQ;AAAAA,QACJ;AAAA,QAAA,KACIiB;AAAAA,MAAU,GAAA,CAEduB,KAAQE,EAAAG,GAAA;AAAA,QAAA,MAAA;AAAA,QAAA,OAAsC;AAAA,UAC7CC,QAAQjC,EAAQa,MAAMlC,cAAc,eAAe,SAAS;AAAA,QAC9D;AAAA,SAAI,IAAA,CAAA,CAAA;AAAA;EAIZ;AACF,CAAC;"}