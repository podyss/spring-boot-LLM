import { strings } from '@douyinfe/semi-foundation/lib/es/radio/constants';
import { ArrayElement } from '../_base/base';
export type RadioGroupButtonSize = ArrayElement<typeof strings.BUTTON_SIZE>;
export type RadioMode = ArrayElement<typeof strings.MODE>;
export interface RadioContextValue {
    mode?: RadioMode;
    radioGroup?: {
        value?: string | number;
        isButtonRadio?: any;
        disabled?: boolean;
        prefixCls?: string;
        name?: string;
        onChange?: (e: any) => void;
        buttonSize?: RadioGroupButtonSize;
        isCardRadio?: boolean;
        isPureCardRadio?: boolean;
    };
}
export declare const vuePropsType: {
    value: ObjectConstructor;
};
declare const RadioContext: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    value: ObjectConstructor;
}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[], {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    value: ObjectConstructor;
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default RadioContext;
