{"version":3,"file":"radioInner.js","sources":["../../src/components/radio/radioInner.tsx"],"sourcesContent":["import {\n  defineComponent,\n  ref,\n  h,\n  Fragment,\n  reactive,\n  onMounted,\n  watch,\n  onUnmounted,\n  ComponentObjectPropsOptions,\n  PropType,\n} from 'vue';\nimport RadioInnerFoundation, {\n  RadioChangeEvent,\n  RadioInnerAdapter,\n} from '@douyinfe/semi-foundation/radio/radioInnerFoundation';\nimport { BaseProps, useBaseComponent } from '../_base/baseComponent';\nimport { radioClasses as css } from '@douyinfe/semi-foundation/radio/constants';\nimport classnames from 'classnames';\nimport { IconRadio } from '@kousum/semi-icons-vue';\nimport { noop } from 'lodash';\nimport { symbol } from '../PropTypes';\nimport { CombineProps } from '../interface';\n\nexport type RadioInnerMode = 'advanced' | '';\nexport interface RadioInnerProps extends BaseProps {\n  checked?: boolean;\n  disabled?: boolean;\n  isButtonRadio?: boolean;\n  onChange?: (e: RadioChangeEvent) => void;\n  mode?: RadioInnerMode;\n  autoFocus?: boolean;\n  name?: string;\n  prefixCls?: string;\n  // ref?: any;\n  isPureCardRadioGroup?: boolean;\n  addonId?: string;\n  extraId?: string;\n  'aria-label'?: any;\n  focusInner?: boolean;\n  onInputFocus?: (e: any) => void;\n  onInputBlur?: (e: any) => void;\n  preventScroll?: boolean;\n\n  defaultChecked?: boolean;\n  value?: any;\n  type?: string;\n}\n\ninterface RadioInnerState {\n  checked?: boolean;\n}\n\nexport const vuePropsType: CombineProps<RadioInnerProps> = {\n  checked: {\n    type: Boolean,\n    // @ts-ignore\n    default: undefined,\n  },\n  disabled: Boolean,\n  isButtonRadio: { type: Boolean, default: false },\n  onChange: { type: Function as PropType<RadioInnerProps['onChange']>, default: noop },\n  mode: String as PropType<RadioInnerProps['mode']>,\n  autoFocus: Boolean,\n  name: String,\n  prefixCls: String,\n  // ref: [Object, String],\n  isPureCardRadioGroup: Boolean,\n  addonId: String,\n  extraId: String,\n  'aria-label': String,\n\n  className: String, // TODO 区别\n  defaultChecked: {\n    type: Boolean as PropType<RadioInnerProps['defaultChecked']>,\n    default: false,\n  },\n  value: [String, Boolean, Number] as PropType<RadioInnerProps['value']>,\n  type: { type: String as PropType<RadioInnerProps['type']>, default: 'default' },\n  focusInner: Boolean,\n  onInputFocus: Function as PropType<RadioInnerProps['onInputFocus']>,\n  onInputBlur: Function as PropType<RadioInnerProps['onInputBlur']>,\n  preventScroll: Boolean,\n  style: Object,\n};\nconst RadioInner = defineComponent({\n  props: { ...vuePropsType },\n  name: 'RadioInner',\n  setup(props, { slots }) {\n    let inputEntity!: any;\n    let foundation: RadioInnerFoundation;\n\n    const state = reactive({\n      checked: false,\n    });\n\n    const { adapter: adapterInject } = useBaseComponent<RadioInnerProps>(props, state);\n\n    const theAdapter = adapter();\n    function adapter(): RadioInnerAdapter {\n      return {\n        ...adapterInject<RadioInnerProps, RadioInnerState>(),\n        setNativeControlChecked: (checked: boolean) => {\n          // console.log('setNativeControlChecked', checked)\n          state.checked = checked;\n        },\n        notifyChange: (e: RadioChangeEvent) => {\n          // console.log(e,props)\n          props.onChange(e);\n        },\n      };\n    }\n\n    foundation = new RadioInnerFoundation(theAdapter);\n\n    onMounted(() => {\n      foundation.init();\n    });\n\n    watch(\n      () => props.checked,\n      (prevPropsChecked, nextPropsChecked) => {\n        // // console.log('inner watch',prevPropsChecked, nextPropsChecked)\n        if (prevPropsChecked !== nextPropsChecked) {\n          foundation.setChecked(props.checked);\n        }\n      }\n    );\n\n    onUnmounted(() => {\n      foundation.destroy();\n    });\n\n    function blur() {\n      inputEntity.blur();\n    }\n\n    function focus() {\n      inputEntity.focus();\n    }\n\n    // vue\n    const radioKey = ref(symbol());\n    function onChange(e: Event) {\n      // console.log(e.target.value)\n      // console.log(props)\n      foundation.handleChange(e);\n      radioKey.value = symbol();\n    }\n\n    return () => {\n      const {\n        disabled,\n        mode,\n        autoFocus,\n        name,\n        isButtonRadio,\n        isPureCardRadioGroup,\n        addonId,\n        extraId,\n        'aria-label': ariaLabel,\n        focusInner,\n        onInputFocus,\n        onInputBlur,\n      } = props;\n      // console.log(props)\n      const { checked } = state;\n\n      const prefix = props.prefixCls || css.PREFIX;\n\n      const wrapper = classnames({\n        [`${prefix}-inner`]: true,\n        [`${prefix}-inner-checked`]: Boolean(checked),\n        [`${prefix}-inner-buttonRadio`]: isButtonRadio,\n        [`${prefix}-inner-pureCardRadio`]: isPureCardRadioGroup,\n      });\n\n      const inner = classnames({\n        [`${prefix}-focus`]: focusInner,\n        [`${prefix}-focus-border`]: focusInner && !checked,\n        [`${prefix}-inner-display`]: !isButtonRadio,\n      });\n\n      // console.log(checked)\n      return (\n        <span class={wrapper} style={{ opacity: 1 }}>\n          <input\n            ref={(ref) => {\n              inputEntity = ref;\n            }}\n            key={radioKey.value}\n            // eslint-disable-next-line jsx-a11y/no-autofocus\n            autofocus={autoFocus}\n            type={mode === 'advanced' ? 'checkbox' : 'radio'}\n            checked={Boolean(checked)}\n            disabled={disabled}\n            onChange={onChange}\n            name={name}\n            aria-label={ariaLabel}\n            aria-labelledby={addonId}\n            aria-describedby={extraId}\n            onFocus={onInputFocus}\n            onBlur={onInputBlur}\n          />\n          <span class={inner}>{checked ? <IconRadio /> : null}</span>\n        </span>\n      );\n    };\n  },\n});\n\nexport default RadioInner;\n"],"names":["vuePropsType","checked","type","Boolean","default","undefined","disabled","isButtonRadio","onChange","Function","noop","mode","String","autoFocus","name","prefixCls","isPureCardRadioGroup","addonId","extraId","className","defaultChecked","value","Number","focusInner","onInputFocus","onInputBlur","preventScroll","style","Object","RadioInner","defineComponent","props","setup","slots","foundation","state","reactive","adapter","adapterInject","useBaseComponent","theAdapter","setNativeControlChecked","notifyChange","e","RadioInnerFoundation","onMounted","init","watch","prevPropsChecked","nextPropsChecked","setChecked","onUnmounted","destroy","radioKey","ref","symbol","handleChange","ariaLabel","prefix","css","PREFIX","wrapper","classnames","inner","_createVNode","opacity","IconRadio"],"mappings":"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"}