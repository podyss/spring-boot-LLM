{"version":3,"file":"radio.js","sources":["../../src/components/radio/radio.tsx"],"sourcesContent":["import {\n  defineComponent,\n  ref,\n  h,\n  Fragment,\n  CSSProperties,\n  VNode,\n  reactive,\n  inject,\n  Ref,\n  ComponentObjectPropsOptions,\n  PropType,\n} from 'vue';\nimport cls from 'classnames';\nimport { noop } from 'lodash';\nimport RadioFoundation, { RadioAdapter } from '@douyinfe/semi-foundation/radio/radioFoundation';\nimport type { RadioChangeEvent } from '@douyinfe/semi-foundation/radio/radioInnerFoundation';\nimport { strings, radioClasses as css } from '@douyinfe/semi-foundation/radio/constants';\nimport { getUuidShort } from '@douyinfe/semi-foundation/utils/uuid';\nimport '@douyinfe/semi-foundation/radio/radio.scss';\n\nimport { useBaseComponent } from '../_base/baseComponent';\nimport RadioInner from './radioInner';\nimport Context, { RadioContextValue, RadioMode } from './context';\nimport { CombineProps } from '../interface';\n\nexport type { RadioChangeEvent };\nexport type RadioDisplayMode = 'vertical' | '';\nexport type RadioType =\n  | typeof strings.TYPE_DEFAULT\n  | typeof strings.TYPE_BUTTON\n  | typeof strings.TYPE_CARD\n  | typeof strings.TYPE_PURECARD;\n\nexport type RadioProps = {\n  autoFocus?: boolean;\n  checked?: boolean;\n  defaultChecked?: boolean;\n  value?: string | number | boolean;\n  disabled?: boolean;\n  prefixCls?: string;\n  displayMode?: RadioDisplayMode;\n  onChange?: (e: RadioChangeEvent) => void;\n  onMouseEnter?: (e: any) => void;\n  onMouseLeave?: (e: any) => void;\n  mode?: RadioMode;\n  extra?: VNode | string;\n  style?: CSSProperties;\n  className?: string;\n  addonStyle?: CSSProperties;\n  addonClassName?: string;\n  type?: RadioType;\n  'aria-label'?: any;\n  addonId?: string;\n  extraId?: string;\n  name?: string;\n  preventScroll?: boolean;\n};\n\nexport interface RadioState {\n  hover?: boolean;\n  addonId?: string;\n  extraId?: string;\n  focusVisible?: boolean;\n  checked?: boolean;\n}\n\nexport const vuePropsType: CombineProps<RadioProps> = {\n  autoFocus: {\n    type: Boolean,\n    default: false,\n  },\n  checked: {\n    type: [Boolean],\n    // @ts-ignore\n    default: undefined,\n  },\n  defaultChecked: {\n    type: Boolean,\n    default: false,\n  },\n  value: [String, Number, Boolean],\n  disabled: Boolean,\n  prefixCls: String,\n  displayMode: String as PropType<RadioProps['displayMode']>,\n  onChange: Function as PropType<RadioProps['onChange']>,\n  onMouseEnter: { type: Function as PropType<RadioProps['onMouseEnter']>, default: noop },\n  onMouseLeave: { type: Function as PropType<RadioProps['onMouseLeave']>, default: noop },\n  mode: { type: String as PropType<RadioProps['mode']>, default: '' },\n  extra: [Object, String],\n  style: [Object, String] as PropType<RadioProps['style']>,\n  className: String,\n  addonStyle: [Object, String] as PropType<RadioProps['style']>,\n  addonClassName: String,\n  type: { type: String as PropType<RadioProps['type']>, default: 'default' },\n  'aria-label': String,\n  addonId: String,\n  extraId: String,\n  name: String,\n  preventScroll: Boolean,\n};\nconst Radio = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Radio',\n  setup(props, { slots }) {\n    let radioEntity: any;\n    let context!: Ref<RadioContextValue>;\n    let foundation: RadioFoundation;\n    const state = reactive<RadioState>({\n      hover: false,\n      addonId: props.addonId,\n      extraId: props.extraId,\n      checked: props.checked || props.defaultChecked || false,\n    });\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent<RadioProps>(props, state);\n    context = inject('RadioContextValue', ref<RadioContextValue>(null));\n    // console.log(context)\n    const theAdapter = adapter();\n    function adapter(): RadioAdapter {\n      return {\n        ...adapterInject<RadioProps, RadioState>(),\n        setHover: (hover: boolean) => {\n          state.hover = hover;\n        },\n        setAddonId: () => {\n          state.addonId = getUuidShort({ prefix: 'addon' });\n        },\n        setChecked: (checked: boolean) => {\n          state.checked = checked;\n        },\n        setExtraId: () => {\n          state.extraId = getUuidShort({ prefix: 'extra' });\n        },\n        setFocusVisible: (focusVisible: boolean): void => {\n          state.focusVisible = focusVisible;\n        },\n      };\n    }\n    foundation = new RadioFoundation(theAdapter);\n    radioEntity = null;\n\n    function isInGroup() {\n      // eslint-disable-next-line react/destructuring-assignment\n      return context && context.value && context.value.radioGroup;\n    }\n\n    function focus() {\n      radioEntity.focus();\n    }\n\n    function blur() {\n      radioEntity.blur();\n    }\n\n    const onChange = (e: RadioChangeEvent) => {\n      const { onChange } = props;\n      // console.log(isInGroup())\n      if (isInGroup()) {\n        const { radioGroup } = context.value;\n        // console.log(radioGroup)\n        radioGroup.onChange && radioGroup.onChange(e);\n      }\n      onChange && onChange(e);\n    };\n\n    const handleMouseEnter = (e: any) => {\n      props.onMouseEnter(e);\n      foundation.setHover(true);\n    };\n\n    const handleMouseLeave = (e: any) => {\n      props.onMouseLeave(e);\n      foundation.setHover(false);\n    };\n\n    const handleFocusVisible = (event: FocusEvent) => {\n      foundation.handleFocusVisible(event);\n    };\n\n    const handleBlur = (event: FocusEvent) => {\n      foundation.handleBlur();\n    };\n\n    return () => {\n      const {\n        addonClassName,\n        addonStyle,\n        checked,\n        disabled,\n        style,\n        className,\n        prefixCls,\n        displayMode,\n        extra,\n        mode,\n        type,\n        value: propValue,\n        name,\n        ...rest\n      } = props;\n      const children = slots.default ? slots.default() : null;\n\n      let realChecked,\n        isDisabled,\n        realMode,\n        isButtonRadioGroup,\n        isCardRadioGroup,\n        isPureCardRadioGroup,\n        isButtonRadioComponent,\n        buttonSize,\n        realPrefixCls;\n      const { hover: isHover, addonId, extraId, focusVisible } = state;\n      let props_: { checked?: boolean; disabled?: boolean } = {};\n\n      // console.log(context.value)\n      if (isInGroup()) {\n        // console.log('realChecked',context.value, context.value.radioGroup.value, propValue)\n        realChecked = context.value.radioGroup.value === propValue;\n        isDisabled = disabled || context.value.radioGroup.disabled;\n        realMode = context.value.mode;\n        isButtonRadioGroup = context.value.radioGroup.isButtonRadio;\n        isCardRadioGroup = context.value.radioGroup.isCardRadio;\n        isPureCardRadioGroup = context.value.radioGroup.isPureCardRadio;\n        buttonSize = context.value.radioGroup.buttonSize;\n        realPrefixCls = prefixCls || context.value.radioGroup.prefixCls;\n        props_ = { checked: realChecked, disabled: isDisabled };\n      } else {\n        realChecked = checked;\n        isDisabled = disabled;\n        realMode = mode;\n        isButtonRadioComponent = type === 'button';\n        realPrefixCls = prefixCls;\n      }\n      const isButtonRadio = typeof isButtonRadioGroup === 'undefined' ? isButtonRadioComponent : isButtonRadioGroup;\n\n      const prefix = realPrefixCls || css.PREFIX;\n\n      const focusOuter = isCardRadioGroup || isPureCardRadioGroup || isButtonRadio;\n\n      const wrapper = cls(prefix, {\n        [`${prefix}-disabled`]: isDisabled,\n        [`${prefix}-checked`]: realChecked,\n        [`${prefix}-${displayMode}`]: Boolean(displayMode),\n        [`${prefix}-buttonRadioComponent`]: isButtonRadioComponent,\n        [`${prefix}-buttonRadioGroup`]: isButtonRadioGroup,\n        [`${prefix}-buttonRadioGroup-${buttonSize}`]: isButtonRadioGroup && buttonSize,\n        [`${prefix}-cardRadioGroup`]: isCardRadioGroup,\n        [`${prefix}-cardRadioGroup_disabled`]: isDisabled && isCardRadioGroup,\n        [`${prefix}-cardRadioGroup_checked`]: isCardRadioGroup && realChecked && !isDisabled,\n        [`${prefix}-cardRadioGroup_checked_disabled`]: isCardRadioGroup && realChecked && isDisabled,\n        [`${prefix}-cardRadioGroup_hover`]: isCardRadioGroup && !realChecked && isHover && !isDisabled,\n        [className]: Boolean(className),\n        [`${prefix}-focus`]: focusVisible && (isCardRadioGroup || isPureCardRadioGroup),\n      });\n\n      const groupName = isInGroup() && context.value.radioGroup.name;\n      const addonCls = cls(\n        {\n          [`${prefix}-addon`]: !isButtonRadio,\n          [`${prefix}-addon-buttonRadio`]: isButtonRadio,\n          [`${prefix}-addon-buttonRadio-checked`]: isButtonRadio && realChecked,\n          [`${prefix}-addon-buttonRadio-disabled`]: isButtonRadio && isDisabled,\n          [`${prefix}-addon-buttonRadio-hover`]: isButtonRadio && !realChecked && !isDisabled && isHover,\n          [`${prefix}-addon-buttonRadio-${buttonSize}`]: isButtonRadio && buttonSize,\n          [`${prefix}-focus`]: focusVisible && isButtonRadio,\n        },\n        addonClassName\n      );\n      const renderContent = () => (\n        <>\n          {children ? (\n            <span class={addonCls} style={addonStyle} id={addonId}>\n              {children}\n            </span>\n          ) : null}\n          {extra && !isButtonRadio ? (\n            <div class={`${prefix}-extra`} id={extraId}>\n              {extra}\n            </div>\n          ) : null}\n        </>\n      );\n      return (\n        <label\n          style={style}\n          class={wrapper}\n          onMouseenter={handleMouseEnter}\n          onMouseleave={handleMouseLeave}\n          {...getDataAttr()}\n        >\n          <RadioInner\n            {...({...props, ...props_, onChange: onChange})}\n            mode={realMode}\n            name={name ?? groupName}\n            isButtonRadio={isButtonRadio}\n            isPureCardRadioGroup={isPureCardRadioGroup}\n            ref={(ref: any) => {\n              radioEntity = ref;\n            }}\n            addonId={children && addonId}\n            extraId={extra && extraId}\n            focusInner={focusVisible && !focusOuter}\n            onInputFocus={handleFocusVisible}\n            onInputBlur={handleBlur}\n          />\n          {isCardRadioGroup ? (\n            <div class={`${prefix}-isCardRadioGroup_content`}>{renderContent()}</div>\n          ) : (\n            renderContent()\n          )}\n        </label>\n      );\n    };\n  },\n});\n\nexport default Radio;\n"],"names":["vuePropsType","autoFocus","type","Boolean","default","checked","undefined","defaultChecked","value","String","Number","disabled","prefixCls","displayMode","onChange","Function","onMouseEnter","noop","onMouseLeave","mode","extra","Object","style","className","addonStyle","addonClassName","addonId","extraId","name","preventScroll","Radio","defineComponent","props","setup","slots","context","foundation","state","reactive","hover","adapter","adapterInject","getDataAttr","useBaseComponent","inject","ref","theAdapter","setHover","setAddonId","getUuidShort","prefix","setChecked","setExtraId","setFocusVisible","focusVisible","RadioFoundation","isInGroup","radioGroup","e","handleMouseEnter","handleMouseLeave","handleFocusVisible","event","handleBlur","propValue","rest","children","realChecked","isDisabled","realMode","isButtonRadioGroup","isCardRadioGroup","isPureCardRadioGroup","isButtonRadioComponent","buttonSize","realPrefixCls","isHover","props_","isButtonRadio","isCardRadio","isPureCardRadio","css","PREFIX","focusOuter","wrapper","cls","groupName","addonCls","renderContent","_createVNode","_Fragment","_mergeProps","RadioInner"],"mappings":"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"}