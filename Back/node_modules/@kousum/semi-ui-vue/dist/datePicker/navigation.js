import { defineComponent as R, ref as I, createVNode as t } from "vue";
import * as e from "../PropTypes";
import { noop as i } from "lodash";
import a from "../iconButton";
import L from "../button";
import { cssClasses as H, strings as f } from '@douyinfe/semi-foundation/lib/es/datePicker/constants';
import { IconDoubleChevronLeft as M, IconChevronLeft as S, IconChevronRight as Y, IconDoubleChevronRight as E } from "@kousum/semi-icons-vue";
const m = H.NAVIGATION, w = {
  monthText: {
    type: e.string,
    default: ""
  },
  density: e.string,
  onMonthClick: {
    type: e.func,
    default: i
  },
  onNextMonth: {
    type: e.func,
    default: i
  },
  onPrevMonth: {
    type: e.func,
    default: i
  },
  onNextYear: {
    type: e.func,
    default: i
  },
  onPrevYear: {
    type: e.func,
    default: i
  },
  navPrev: e.node,
  navNext: e.node,
  // Whether to switch synchronously for two panels
  shouldBimonthSwitch: e.bool,
  // Panel type, divided into left panel and right panel
  panelType: e.string,
  forwardRef: [e.object, e.func]
}, $ = /* @__PURE__ */ R({
  props: {
    ...w
  },
  name: "DatePickerNavigation",
  setup(p, {
    slots: A
  }) {
    const y = I();
    return () => {
      const {
        forwardRef: v,
        monthText: P,
        onMonthClick: g,
        onNextMonth: b,
        onPrevMonth: z,
        onPrevYear: C,
        onNextYear: N,
        density: d,
        shouldBimonthSwitch: u,
        panelType: h
      } = p, n = "borderless", r = d === "compact" ? "default" : "large", l = !0, o = d === "compact" ? "small" : "default", k = h === f.PANEL_TYPE_LEFT, T = h === f.PANEL_TYPE_RIGHT, x = u && k, B = u && T, s = {}, c = {};
      return B && (s.visibility = "hidden"), x && (c.visibility = "hidden"), t("div", {
        class: m,
        ref: v || y
      }, [t(a, {
        key: "double-chevron-left",
        "aria-label": "Previous year",
        icon: t(M, {
          "aria-hidden": !0,
          size: r
        }, null),
        size: o,
        theme: n,
        noHorizontalPadding: l,
        onClick: C,
        style: s
      }, null), t(a, {
        key: "chevron-left",
        "aria-label": "Previous month",
        icon: t(S, {
          "aria-hidden": !0,
          size: r
        }, null),
        size: o,
        onClick: z,
        theme: n,
        noHorizontalPadding: l,
        style: s
      }, null), t("div", {
        class: `${m}-month`
      }, [t(L, {
        onClick: g,
        theme: n,
        size: o
      }, {
        default: () => [t("span", null, [P])]
      })]), t(a, {
        key: "chevron-right",
        "aria-label": "Next month",
        icon: t(Y, {
          "aria-hidden": !0,
          size: r
        }, null),
        size: o,
        onClick: b,
        theme: n,
        noHorizontalPadding: l,
        style: c
      }, null), t(a, {
        key: "double-chevron-right",
        "aria-label": "Next year",
        icon: t(E, {
          "aria-hidden": !0,
          size: r
        }, null),
        size: o,
        theme: n,
        noHorizontalPadding: l,
        onClick: N,
        style: c
      }, null)]);
    };
  }
});
export {
  $ as default,
  w as vuePropsType
};
//# sourceMappingURL=navigation.js.map
