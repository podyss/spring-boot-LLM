import { InsetInputValue, Type, InsetInputChangeFoundationProps } from '@douyinfe/semi-foundation/lib/es/datePicker/inputFoundation';
import { InputProps } from '../input';
import { CombineProps } from '../interface';
export interface InsetDateInputProps {
    forwardRef: InputProps['forwardRef'];
    insetInputValue: InsetInputValue;
    placeholder: string;
    valuePath: string;
    onChange: (options: InsetInputChangeFoundationProps) => void;
    onFocus: InputProps['onFocus'];
}
export declare const vuePropsTypeInsetDateInput: CombineProps<InsetDateInputProps>;
declare const InsetDateInput: import("vue").DefineComponent<import("vue").ExtractPropTypes<CombineProps<InsetDateInputProps>>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<CombineProps<InsetDateInputProps>>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export interface InsetTimeInputProps {
    disabled: boolean;
    insetInputValue: InsetInputValue;
    placeholder: string;
    valuePath: string;
    type: Type;
    onChange: (options: InsetInputChangeFoundationProps) => void;
    onFocus: InputProps['onFocus'];
}
export declare const vuePropsTypeInsetTimeInput: CombineProps<InsetTimeInputProps>;
declare const InsetTimeInput: import("vue").DefineSetupFnComponent<{
    disabled: any;
    insetInputValue: any;
    placeholder: any;
    valuePath: any;
    type: any;
    onChange: any;
    onFocus: any;
}, {}, {}, {
    disabled: any;
    insetInputValue: any;
    placeholder: any;
    valuePath: any;
    type: any;
    onChange: any;
    onFocus: any;
} & {}, import("vue").PublicProps>;
export { InsetDateInput, InsetTimeInput };
