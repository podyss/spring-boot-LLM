import DatePicker, { DatePickerProps } from './datePicker';
export type { BaseValueType, DayStatusType, DisabledDateOptions, DisabledDateType, DisabledTimeType, InputSize, Position, PresetType, PresetsType, TriggerRenderProps, ValidateStatus, ValueType, } from '@douyinfe/semi-foundation/lib/es/datePicker/foundation';
export type { DateInputProps } from './dateInput';
export type { DatePickerProps } from './datePicker';
export type { MonthProps } from './month';
export type { MonthsGridProps } from './monthsGrid';
export type { QuickControlProps } from './quickControl';
export type { YearAndMonthProps } from './yearAndMonth';
export type { InsetInputProps } from '@douyinfe/semi-foundation/lib/es/datePicker/inputFoundation';
export type { DatePicker as BaseDatePicker };
export declare const vuePropsType: {
    'aria-describedby': import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    'aria-errormessage': import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    'aria-invalid': import("vue").PropType<boolean | "false" | "true" | "grammar" | "spelling"> | {
        type: import("vue").PropType<boolean | "false" | "true" | "grammar" | "spelling">;
        default?: any;
        required?: false;
    };
    'aria-labelledby': import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    'aria-required': import("vue").PropType<boolean | "false" | "true"> | {
        type: import("vue").PropType<boolean | "false" | "true">;
        default?: any;
        required?: false;
    };
    clearIcon: import("vue").PropType<import("../interface").VueJsxNode> | {
        type: import("vue").PropType<import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    timePickerOpts: import("vue").PropType<import("../timePicker").TimePickerProps> | {
        type: import("vue").PropType<import("../timePicker").TimePickerProps>;
        default?: any;
        required?: false;
    };
    bottomSlot: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)> | {
        type: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)>;
        default?: any;
        required?: false;
    };
    insetLabel: import("vue").PropType<import("../interface").VueJsxNode> | {
        type: import("vue").PropType<import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    insetLabelId: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    prefix: import("vue").PropType<import("../interface").VueJsxNode> | {
        type: import("vue").PropType<import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    topSlot: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)> | {
        type: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)>;
        default?: any;
        required?: false;
    };
    rightSlot: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)> | {
        type: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)>;
        default?: any;
        required?: false;
    };
    leftSlot: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)> | {
        type: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)>;
        default?: any;
        required?: false;
    };
    renderDate: import("vue").PropType<(dayNumber?: number, fullDate?: string) => import("../interface").VueJsxNode> | {
        type: import("vue").PropType<(dayNumber?: number, fullDate?: string) => import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    renderFullDate: import("vue").PropType<(dayNumber?: number, fullDate?: string, dayStatus?: import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DayStatusType) => import("../interface").VueJsxNode> | {
        type: import("vue").PropType<(dayNumber?: number, fullDate?: string, dayStatus?: import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DayStatusType) => import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    triggerRender: import("vue").PropType<(props: DatePickerProps) => import("../interface").VueJsxNode> | {
        type: import("vue").PropType<(props: DatePickerProps) => import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    onBlur: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    onClear: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    onFocus: import("vue").PropType<(e: MouseEvent, rangeType: import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").RangeType) => void> | {
        type: import("vue").PropType<(e: MouseEvent, rangeType: import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").RangeType) => void>;
        default?: any;
        required?: false;
    };
    onPresetClick: import("vue").PropType<(item: import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").PresetType, e: MouseEvent) => void> | {
        type: import("vue").PropType<(item: import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").PresetType, e: MouseEvent) => void>;
        default?: any;
        required?: false;
    };
    onClickOutSide: import("vue").PropType<(e: MouseEvent) => void> | {
        type: import("vue").PropType<(e: MouseEvent) => void>;
        default?: any;
        required?: false;
    };
    locale: import("vue").PropType<{
        placeholder: {
            date: string;
            dateTime: string;
            dateRange: [string, string];
            dateTimeRange: [string, string];
            monthRange: [string, string];
        };
        presets: string;
        footer: {
            confirm: string;
            cancel: string;
        };
        selectDate: string;
        selectTime: string;
        year: string;
        month: string;
        day: string;
        monthText: string;
        months: {
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            12: string;
        };
        fullMonths: {
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            12: string;
        };
        weeks: {
            Mon: string;
            Tue: string;
            Wed: string;
            Thu: string;
            Fri: string;
            Sat: string;
            Sun: string;
        };
        localeFormatToken: {
            FORMAT_SWITCH_DATE: string;
        };
    }> | {
        type: import("vue").PropType<{
            placeholder: {
                date: string;
                dateTime: string;
                dateRange: [string, string];
                dateTimeRange: [string, string];
                monthRange: [string, string];
            };
            presets: string;
            footer: {
                confirm: string;
                cancel: string;
            };
            selectDate: string;
            selectTime: string;
            year: string;
            month: string;
            day: string;
            monthText: string;
            months: {
                1: string;
                2: string;
                3: string;
                4: string;
                5: string;
                6: string;
                7: string;
                8: string;
                9: string;
                10: string;
                11: string;
                12: string;
            };
            fullMonths: {
                1: string;
                2: string;
                3: string;
                4: string;
                5: string;
                6: string;
                7: string;
                8: string;
                9: string;
                10: string;
                11: string;
                12: string;
            };
            weeks: {
                Mon: string;
                Tue: string;
                Wed: string;
                Thu: string;
                Fri: string;
                Sat: string;
                Sun: string;
            };
            localeFormatToken: {
                FORMAT_SWITCH_DATE: string;
            };
        }>;
        default?: any;
        required?: false;
    };
    dateFnsLocale: import("vue").PropType<globalThis.Locale> | {
        type: import("vue").PropType<globalThis.Locale>;
        default?: any;
        required?: false;
    };
    yearAndMonthOpts: import("vue").PropType<import("../scrollList").ScrollItemProps<any>> | {
        type: import("vue").PropType<import("../scrollList").ScrollItemProps<any>>;
        default?: any;
        required?: false;
    };
    dropdownMargin: import("vue").PropType<number | {
        marginLeft: number;
        marginTop: number;
        marginRight: number;
        marginBottom: number;
    }> | {
        type: import("vue").PropType<number | {
            marginLeft: number;
            marginTop: number;
            marginRight: number;
            marginBottom: number;
        }>;
        default?: any;
        required?: false;
    };
    id: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    autoAdjustOverflow: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    autoFocus: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    autoSwitchDate: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    borderless: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    defaultOpen: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    defaultPickerValue: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").ValueType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").ValueType>;
        default?: any;
        required?: false;
    };
    defaultValue: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").ValueType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").ValueType>;
        default?: any;
        required?: false;
    };
    density: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DensityType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DensityType>;
        default?: any;
        required?: false;
    };
    disabled: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    disabledDate: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DisabledDateType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DisabledDateType>;
        default?: any;
        required?: false;
    };
    disabledTime: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DisabledTimeType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DisabledTimeType>;
        default?: any;
        required?: false;
    };
    dropdownClassName: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    dropdownStyle: import("vue").PropType<Record<string, any>> | {
        type: import("vue").PropType<Record<string, any>>;
        default?: any;
        required?: false;
    };
    endDateOffset: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DateOffsetType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DateOffsetType>;
        default?: any;
        required?: false;
    };
    format: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    getPopupContainer: import("vue").PropType<() => HTMLElement> | {
        type: import("vue").PropType<() => HTMLElement>;
        default?: any;
        required?: false;
    };
    inputReadOnly: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    inputStyle: import("vue").PropType<Record<string, any>> | {
        type: import("vue").PropType<Record<string, any>>;
        default?: any;
        required?: false;
    };
    max: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
    motion: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    multiple: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    needConfirm: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    onChangeWithDateFirst: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    open: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    placeholder: import("vue").PropType<string | string[]> | {
        type: import("vue").PropType<string | string[]>;
        default?: any;
        required?: false;
    };
    position: import("vue").PropType<"bottom" | "left" | "right" | "top" | "topLeft" | "topRight" | "leftTop" | "leftBottom" | "rightTop" | "rightBottom" | "bottomLeft" | "bottomRight" | "leftTopOver" | "rightTopOver"> | {
        type: import("vue").PropType<"bottom" | "left" | "right" | "top" | "topLeft" | "topRight" | "leftTop" | "leftBottom" | "rightTop" | "rightBottom" | "bottomLeft" | "bottomRight" | "leftTopOver" | "rightTopOver">;
        default?: any;
        required?: false;
    };
    prefixCls: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    presets: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").PresetsType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").PresetsType>;
        default?: any;
        required?: false;
    };
    presetPosition: import("vue").PropType<"bottom" | "left" | "right" | "top"> | {
        type: import("vue").PropType<"bottom" | "left" | "right" | "top">;
        default?: any;
        required?: false;
    };
    showClear: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    size: import("vue").PropType<"small" | "default" | "large"> | {
        type: import("vue").PropType<"small" | "default" | "large">;
        default?: any;
        required?: false;
    };
    spacing: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
    startDateOffset: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DateOffsetType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DateOffsetType>;
        default?: any;
        required?: false;
    };
    stopPropagation: import("vue").PropType<string | boolean> | {
        type: import("vue").PropType<string | boolean>;
        default?: any;
        required?: false;
    };
    style: import("vue").PropType<Record<string, any>> | {
        type: import("vue").PropType<Record<string, any>>;
        default?: any;
        required?: false;
    };
    timeZone: import("vue").PropType<string | number> | {
        type: import("vue").PropType<string | number>;
        default?: any;
        required?: false;
    };
    type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/inputFoundation").Type> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/inputFoundation").Type>;
        default?: any;
        required?: false;
    };
    validateStatus: import("vue").PropType<"default" | "error" | "warning" | "success"> | {
        type: import("vue").PropType<"default" | "error" | "warning" | "success">;
        default?: any;
        required?: false;
    };
    value: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").ValueType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").ValueType>;
        default?: any;
        required?: false;
    };
    weekStartsOn: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/_utils/getMonthTable").WeekStartNumber> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/_utils/getMonthTable").WeekStartNumber>;
        default?: any;
        required?: false;
    };
    zIndex: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
    syncSwitchMonth: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    hideDisabledOptions: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    disabledTimePicker: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    localeCode: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    rangeSeparator: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    insetInput: import("vue").PropType<boolean | import("@douyinfe/semi-foundation/lib/es/datePicker/inputFoundation").InsetInputProps> | {
        type: import("vue").PropType<boolean | import("@douyinfe/semi-foundation/lib/es/datePicker/inputFoundation").InsetInputProps>;
        default?: any;
        required?: false;
    };
    preventScroll: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    onCancel: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnCancelType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnCancelType>;
        default?: any;
        required?: false;
    };
    onChange: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnChangeType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnChangeType>;
        default?: any;
        required?: false;
    };
    onOpenChange: import("vue").PropType<(status: boolean) => void> | {
        type: import("vue").PropType<(status: boolean) => void>;
        default?: any;
        required?: false;
    };
    onPanelChange: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnPanelChangeType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnPanelChangeType>;
        default?: any;
        required?: false;
    };
    onConfirm: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnConfirmType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnConfirmType>;
        default?: any;
        required?: false;
    };
    startYear: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
    endYear: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
};
declare const index: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    'aria-describedby': import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    'aria-errormessage': import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    'aria-invalid': import("vue").PropType<boolean | "false" | "true" | "grammar" | "spelling"> | {
        type: import("vue").PropType<boolean | "false" | "true" | "grammar" | "spelling">;
        default?: any;
        required?: false;
    };
    'aria-labelledby': import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    'aria-required': import("vue").PropType<boolean | "false" | "true"> | {
        type: import("vue").PropType<boolean | "false" | "true">;
        default?: any;
        required?: false;
    };
    clearIcon: import("vue").PropType<import("../interface").VueJsxNode> | {
        type: import("vue").PropType<import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    timePickerOpts: import("vue").PropType<import("../timePicker").TimePickerProps> | {
        type: import("vue").PropType<import("../timePicker").TimePickerProps>;
        default?: any;
        required?: false;
    };
    bottomSlot: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)> | {
        type: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)>;
        default?: any;
        required?: false;
    };
    insetLabel: import("vue").PropType<import("../interface").VueJsxNode> | {
        type: import("vue").PropType<import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    insetLabelId: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    prefix: import("vue").PropType<import("../interface").VueJsxNode> | {
        type: import("vue").PropType<import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    topSlot: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)> | {
        type: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)>;
        default?: any;
        required?: false;
    };
    rightSlot: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)> | {
        type: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)>;
        default?: any;
        required?: false;
    };
    leftSlot: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)> | {
        type: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)>;
        default?: any;
        required?: false;
    };
    renderDate: import("vue").PropType<(dayNumber?: number, fullDate?: string) => import("../interface").VueJsxNode> | {
        type: import("vue").PropType<(dayNumber?: number, fullDate?: string) => import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    renderFullDate: import("vue").PropType<(dayNumber?: number, fullDate?: string, dayStatus?: import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DayStatusType) => import("../interface").VueJsxNode> | {
        type: import("vue").PropType<(dayNumber?: number, fullDate?: string, dayStatus?: import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DayStatusType) => import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    triggerRender: import("vue").PropType<(props: DatePickerProps) => import("../interface").VueJsxNode> | {
        type: import("vue").PropType<(props: DatePickerProps) => import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    onBlur: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    onClear: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    onFocus: import("vue").PropType<(e: MouseEvent, rangeType: import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").RangeType) => void> | {
        type: import("vue").PropType<(e: MouseEvent, rangeType: import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").RangeType) => void>;
        default?: any;
        required?: false;
    };
    onPresetClick: import("vue").PropType<(item: import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").PresetType, e: MouseEvent) => void> | {
        type: import("vue").PropType<(item: import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").PresetType, e: MouseEvent) => void>;
        default?: any;
        required?: false;
    };
    onClickOutSide: import("vue").PropType<(e: MouseEvent) => void> | {
        type: import("vue").PropType<(e: MouseEvent) => void>;
        default?: any;
        required?: false;
    };
    locale: import("vue").PropType<{
        placeholder: {
            date: string;
            dateTime: string;
            dateRange: [string, string];
            dateTimeRange: [string, string];
            monthRange: [string, string];
        };
        presets: string;
        footer: {
            confirm: string;
            cancel: string;
        };
        selectDate: string;
        selectTime: string;
        year: string;
        month: string;
        day: string;
        monthText: string;
        months: {
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            12: string;
        };
        fullMonths: {
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            12: string;
        };
        weeks: {
            Mon: string;
            Tue: string;
            Wed: string;
            Thu: string;
            Fri: string;
            Sat: string;
            Sun: string;
        };
        localeFormatToken: {
            FORMAT_SWITCH_DATE: string;
        };
    }> | {
        type: import("vue").PropType<{
            placeholder: {
                date: string;
                dateTime: string;
                dateRange: [string, string];
                dateTimeRange: [string, string];
                monthRange: [string, string];
            };
            presets: string;
            footer: {
                confirm: string;
                cancel: string;
            };
            selectDate: string;
            selectTime: string;
            year: string;
            month: string;
            day: string;
            monthText: string;
            months: {
                1: string;
                2: string;
                3: string;
                4: string;
                5: string;
                6: string;
                7: string;
                8: string;
                9: string;
                10: string;
                11: string;
                12: string;
            };
            fullMonths: {
                1: string;
                2: string;
                3: string;
                4: string;
                5: string;
                6: string;
                7: string;
                8: string;
                9: string;
                10: string;
                11: string;
                12: string;
            };
            weeks: {
                Mon: string;
                Tue: string;
                Wed: string;
                Thu: string;
                Fri: string;
                Sat: string;
                Sun: string;
            };
            localeFormatToken: {
                FORMAT_SWITCH_DATE: string;
            };
        }>;
        default?: any;
        required?: false;
    };
    dateFnsLocale: import("vue").PropType<globalThis.Locale> | {
        type: import("vue").PropType<globalThis.Locale>;
        default?: any;
        required?: false;
    };
    yearAndMonthOpts: import("vue").PropType<import("../scrollList").ScrollItemProps<any>> | {
        type: import("vue").PropType<import("../scrollList").ScrollItemProps<any>>;
        default?: any;
        required?: false;
    };
    dropdownMargin: import("vue").PropType<number | {
        marginLeft: number;
        marginTop: number;
        marginRight: number;
        marginBottom: number;
    }> | {
        type: import("vue").PropType<number | {
            marginLeft: number;
            marginTop: number;
            marginRight: number;
            marginBottom: number;
        }>;
        default?: any;
        required?: false;
    };
    id: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    autoAdjustOverflow: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    autoFocus: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    autoSwitchDate: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    borderless: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    defaultOpen: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    defaultPickerValue: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").ValueType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").ValueType>;
        default?: any;
        required?: false;
    };
    defaultValue: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").ValueType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").ValueType>;
        default?: any;
        required?: false;
    };
    density: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DensityType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DensityType>;
        default?: any;
        required?: false;
    };
    disabled: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    disabledDate: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DisabledDateType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DisabledDateType>;
        default?: any;
        required?: false;
    };
    disabledTime: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DisabledTimeType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DisabledTimeType>;
        default?: any;
        required?: false;
    };
    dropdownClassName: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    dropdownStyle: import("vue").PropType<Record<string, any>> | {
        type: import("vue").PropType<Record<string, any>>;
        default?: any;
        required?: false;
    };
    endDateOffset: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DateOffsetType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DateOffsetType>;
        default?: any;
        required?: false;
    };
    format: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    getPopupContainer: import("vue").PropType<() => HTMLElement> | {
        type: import("vue").PropType<() => HTMLElement>;
        default?: any;
        required?: false;
    };
    inputReadOnly: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    inputStyle: import("vue").PropType<Record<string, any>> | {
        type: import("vue").PropType<Record<string, any>>;
        default?: any;
        required?: false;
    };
    max: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
    motion: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    multiple: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    needConfirm: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    onChangeWithDateFirst: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    open: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    placeholder: import("vue").PropType<string | string[]> | {
        type: import("vue").PropType<string | string[]>;
        default?: any;
        required?: false;
    };
    position: import("vue").PropType<"bottom" | "left" | "right" | "top" | "topLeft" | "topRight" | "leftTop" | "leftBottom" | "rightTop" | "rightBottom" | "bottomLeft" | "bottomRight" | "leftTopOver" | "rightTopOver"> | {
        type: import("vue").PropType<"bottom" | "left" | "right" | "top" | "topLeft" | "topRight" | "leftTop" | "leftBottom" | "rightTop" | "rightBottom" | "bottomLeft" | "bottomRight" | "leftTopOver" | "rightTopOver">;
        default?: any;
        required?: false;
    };
    prefixCls: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    presets: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").PresetsType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").PresetsType>;
        default?: any;
        required?: false;
    };
    presetPosition: import("vue").PropType<"bottom" | "left" | "right" | "top"> | {
        type: import("vue").PropType<"bottom" | "left" | "right" | "top">;
        default?: any;
        required?: false;
    };
    showClear: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    size: import("vue").PropType<"small" | "default" | "large"> | {
        type: import("vue").PropType<"small" | "default" | "large">;
        default?: any;
        required?: false;
    };
    spacing: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
    startDateOffset: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DateOffsetType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DateOffsetType>;
        default?: any;
        required?: false;
    };
    stopPropagation: import("vue").PropType<string | boolean> | {
        type: import("vue").PropType<string | boolean>;
        default?: any;
        required?: false;
    };
    style: import("vue").PropType<Record<string, any>> | {
        type: import("vue").PropType<Record<string, any>>;
        default?: any;
        required?: false;
    };
    timeZone: import("vue").PropType<string | number> | {
        type: import("vue").PropType<string | number>;
        default?: any;
        required?: false;
    };
    type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/inputFoundation").Type> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/inputFoundation").Type>;
        default?: any;
        required?: false;
    };
    validateStatus: import("vue").PropType<"default" | "error" | "warning" | "success"> | {
        type: import("vue").PropType<"default" | "error" | "warning" | "success">;
        default?: any;
        required?: false;
    };
    value: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").ValueType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").ValueType>;
        default?: any;
        required?: false;
    };
    weekStartsOn: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/_utils/getMonthTable").WeekStartNumber> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/_utils/getMonthTable").WeekStartNumber>;
        default?: any;
        required?: false;
    };
    zIndex: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
    syncSwitchMonth: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    hideDisabledOptions: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    disabledTimePicker: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    localeCode: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    rangeSeparator: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    insetInput: import("vue").PropType<boolean | import("@douyinfe/semi-foundation/lib/es/datePicker/inputFoundation").InsetInputProps> | {
        type: import("vue").PropType<boolean | import("@douyinfe/semi-foundation/lib/es/datePicker/inputFoundation").InsetInputProps>;
        default?: any;
        required?: false;
    };
    preventScroll: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    onCancel: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnCancelType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnCancelType>;
        default?: any;
        required?: false;
    };
    onChange: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnChangeType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnChangeType>;
        default?: any;
        required?: false;
    };
    onOpenChange: import("vue").PropType<(status: boolean) => void> | {
        type: import("vue").PropType<(status: boolean) => void>;
        default?: any;
        required?: false;
    };
    onPanelChange: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnPanelChangeType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnPanelChangeType>;
        default?: any;
        required?: false;
    };
    onConfirm: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnConfirmType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnConfirmType>;
        default?: any;
        required?: false;
    };
    startYear: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
    endYear: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    'aria-describedby': import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    'aria-errormessage': import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    'aria-invalid': import("vue").PropType<boolean | "false" | "true" | "grammar" | "spelling"> | {
        type: import("vue").PropType<boolean | "false" | "true" | "grammar" | "spelling">;
        default?: any;
        required?: false;
    };
    'aria-labelledby': import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    'aria-required': import("vue").PropType<boolean | "false" | "true"> | {
        type: import("vue").PropType<boolean | "false" | "true">;
        default?: any;
        required?: false;
    };
    clearIcon: import("vue").PropType<import("../interface").VueJsxNode> | {
        type: import("vue").PropType<import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    timePickerOpts: import("vue").PropType<import("../timePicker").TimePickerProps> | {
        type: import("vue").PropType<import("../timePicker").TimePickerProps>;
        default?: any;
        required?: false;
    };
    bottomSlot: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)> | {
        type: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)>;
        default?: any;
        required?: false;
    };
    insetLabel: import("vue").PropType<import("../interface").VueJsxNode> | {
        type: import("vue").PropType<import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    insetLabelId: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    prefix: import("vue").PropType<import("../interface").VueJsxNode> | {
        type: import("vue").PropType<import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    topSlot: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)> | {
        type: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)>;
        default?: any;
        required?: false;
    };
    rightSlot: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)> | {
        type: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)>;
        default?: any;
        required?: false;
    };
    leftSlot: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)> | {
        type: import("vue").PropType<import("../interface").VueJsxNode | (() => import("../interface").VueJsxNode)>;
        default?: any;
        required?: false;
    };
    renderDate: import("vue").PropType<(dayNumber?: number, fullDate?: string) => import("../interface").VueJsxNode> | {
        type: import("vue").PropType<(dayNumber?: number, fullDate?: string) => import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    renderFullDate: import("vue").PropType<(dayNumber?: number, fullDate?: string, dayStatus?: import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DayStatusType) => import("../interface").VueJsxNode> | {
        type: import("vue").PropType<(dayNumber?: number, fullDate?: string, dayStatus?: import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DayStatusType) => import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    triggerRender: import("vue").PropType<(props: DatePickerProps) => import("../interface").VueJsxNode> | {
        type: import("vue").PropType<(props: DatePickerProps) => import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    onBlur: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    onClear: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    onFocus: import("vue").PropType<(e: MouseEvent, rangeType: import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").RangeType) => void> | {
        type: import("vue").PropType<(e: MouseEvent, rangeType: import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").RangeType) => void>;
        default?: any;
        required?: false;
    };
    onPresetClick: import("vue").PropType<(item: import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").PresetType, e: MouseEvent) => void> | {
        type: import("vue").PropType<(item: import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").PresetType, e: MouseEvent) => void>;
        default?: any;
        required?: false;
    };
    onClickOutSide: import("vue").PropType<(e: MouseEvent) => void> | {
        type: import("vue").PropType<(e: MouseEvent) => void>;
        default?: any;
        required?: false;
    };
    locale: import("vue").PropType<{
        placeholder: {
            date: string;
            dateTime: string;
            dateRange: [string, string];
            dateTimeRange: [string, string];
            monthRange: [string, string];
        };
        presets: string;
        footer: {
            confirm: string;
            cancel: string;
        };
        selectDate: string;
        selectTime: string;
        year: string;
        month: string;
        day: string;
        monthText: string;
        months: {
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            12: string;
        };
        fullMonths: {
            1: string;
            2: string;
            3: string;
            4: string;
            5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            12: string;
        };
        weeks: {
            Mon: string;
            Tue: string;
            Wed: string;
            Thu: string;
            Fri: string;
            Sat: string;
            Sun: string;
        };
        localeFormatToken: {
            FORMAT_SWITCH_DATE: string;
        };
    }> | {
        type: import("vue").PropType<{
            placeholder: {
                date: string;
                dateTime: string;
                dateRange: [string, string];
                dateTimeRange: [string, string];
                monthRange: [string, string];
            };
            presets: string;
            footer: {
                confirm: string;
                cancel: string;
            };
            selectDate: string;
            selectTime: string;
            year: string;
            month: string;
            day: string;
            monthText: string;
            months: {
                1: string;
                2: string;
                3: string;
                4: string;
                5: string;
                6: string;
                7: string;
                8: string;
                9: string;
                10: string;
                11: string;
                12: string;
            };
            fullMonths: {
                1: string;
                2: string;
                3: string;
                4: string;
                5: string;
                6: string;
                7: string;
                8: string;
                9: string;
                10: string;
                11: string;
                12: string;
            };
            weeks: {
                Mon: string;
                Tue: string;
                Wed: string;
                Thu: string;
                Fri: string;
                Sat: string;
                Sun: string;
            };
            localeFormatToken: {
                FORMAT_SWITCH_DATE: string;
            };
        }>;
        default?: any;
        required?: false;
    };
    dateFnsLocale: import("vue").PropType<globalThis.Locale> | {
        type: import("vue").PropType<globalThis.Locale>;
        default?: any;
        required?: false;
    };
    yearAndMonthOpts: import("vue").PropType<import("../scrollList").ScrollItemProps<any>> | {
        type: import("vue").PropType<import("../scrollList").ScrollItemProps<any>>;
        default?: any;
        required?: false;
    };
    dropdownMargin: import("vue").PropType<number | {
        marginLeft: number;
        marginTop: number;
        marginRight: number;
        marginBottom: number;
    }> | {
        type: import("vue").PropType<number | {
            marginLeft: number;
            marginTop: number;
            marginRight: number;
            marginBottom: number;
        }>;
        default?: any;
        required?: false;
    };
    id: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    autoAdjustOverflow: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    autoFocus: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    autoSwitchDate: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    borderless: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    defaultOpen: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    defaultPickerValue: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").ValueType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").ValueType>;
        default?: any;
        required?: false;
    };
    defaultValue: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").ValueType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").ValueType>;
        default?: any;
        required?: false;
    };
    density: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DensityType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DensityType>;
        default?: any;
        required?: false;
    };
    disabled: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    disabledDate: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DisabledDateType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DisabledDateType>;
        default?: any;
        required?: false;
    };
    disabledTime: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DisabledTimeType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DisabledTimeType>;
        default?: any;
        required?: false;
    };
    dropdownClassName: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    dropdownStyle: import("vue").PropType<Record<string, any>> | {
        type: import("vue").PropType<Record<string, any>>;
        default?: any;
        required?: false;
    };
    endDateOffset: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DateOffsetType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DateOffsetType>;
        default?: any;
        required?: false;
    };
    format: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    getPopupContainer: import("vue").PropType<() => HTMLElement> | {
        type: import("vue").PropType<() => HTMLElement>;
        default?: any;
        required?: false;
    };
    inputReadOnly: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    inputStyle: import("vue").PropType<Record<string, any>> | {
        type: import("vue").PropType<Record<string, any>>;
        default?: any;
        required?: false;
    };
    max: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
    motion: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    multiple: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    needConfirm: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    onChangeWithDateFirst: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    open: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    placeholder: import("vue").PropType<string | string[]> | {
        type: import("vue").PropType<string | string[]>;
        default?: any;
        required?: false;
    };
    position: import("vue").PropType<"bottom" | "left" | "right" | "top" | "topLeft" | "topRight" | "leftTop" | "leftBottom" | "rightTop" | "rightBottom" | "bottomLeft" | "bottomRight" | "leftTopOver" | "rightTopOver"> | {
        type: import("vue").PropType<"bottom" | "left" | "right" | "top" | "topLeft" | "topRight" | "leftTop" | "leftBottom" | "rightTop" | "rightBottom" | "bottomLeft" | "bottomRight" | "leftTopOver" | "rightTopOver">;
        default?: any;
        required?: false;
    };
    prefixCls: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    presets: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").PresetsType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").PresetsType>;
        default?: any;
        required?: false;
    };
    presetPosition: import("vue").PropType<"bottom" | "left" | "right" | "top"> | {
        type: import("vue").PropType<"bottom" | "left" | "right" | "top">;
        default?: any;
        required?: false;
    };
    showClear: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    size: import("vue").PropType<"small" | "default" | "large"> | {
        type: import("vue").PropType<"small" | "default" | "large">;
        default?: any;
        required?: false;
    };
    spacing: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
    startDateOffset: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DateOffsetType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").DateOffsetType>;
        default?: any;
        required?: false;
    };
    stopPropagation: import("vue").PropType<string | boolean> | {
        type: import("vue").PropType<string | boolean>;
        default?: any;
        required?: false;
    };
    style: import("vue").PropType<Record<string, any>> | {
        type: import("vue").PropType<Record<string, any>>;
        default?: any;
        required?: false;
    };
    timeZone: import("vue").PropType<string | number> | {
        type: import("vue").PropType<string | number>;
        default?: any;
        required?: false;
    };
    type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/inputFoundation").Type> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/inputFoundation").Type>;
        default?: any;
        required?: false;
    };
    validateStatus: import("vue").PropType<"default" | "error" | "warning" | "success"> | {
        type: import("vue").PropType<"default" | "error" | "warning" | "success">;
        default?: any;
        required?: false;
    };
    value: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").ValueType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").ValueType>;
        default?: any;
        required?: false;
    };
    weekStartsOn: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/_utils/getMonthTable").WeekStartNumber> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/_utils/getMonthTable").WeekStartNumber>;
        default?: any;
        required?: false;
    };
    zIndex: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
    syncSwitchMonth: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    hideDisabledOptions: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    disabledTimePicker: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    localeCode: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    rangeSeparator: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    insetInput: import("vue").PropType<boolean | import("@douyinfe/semi-foundation/lib/es/datePicker/inputFoundation").InsetInputProps> | {
        type: import("vue").PropType<boolean | import("@douyinfe/semi-foundation/lib/es/datePicker/inputFoundation").InsetInputProps>;
        default?: any;
        required?: false;
    };
    preventScroll: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    onCancel: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnCancelType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnCancelType>;
        default?: any;
        required?: false;
    };
    onChange: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnChangeType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnChangeType>;
        default?: any;
        required?: false;
    };
    onOpenChange: import("vue").PropType<(status: boolean) => void> | {
        type: import("vue").PropType<(status: boolean) => void>;
        default?: any;
        required?: false;
    };
    onPanelChange: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnPanelChangeType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnPanelChangeType>;
        default?: any;
        required?: false;
    };
    onConfirm: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnConfirmType> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/datePicker/foundation").OnConfirmType>;
        default?: any;
        required?: false;
    };
    startYear: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
    endYear: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default index;
