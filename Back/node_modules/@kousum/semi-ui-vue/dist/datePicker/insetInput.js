import { defineComponent as l, createVNode as c } from "vue";
import { get as d } from "lodash";
import y from "../input";
const m = {
  forwardRef: {
    type: [Function, Object],
    required: !0
  },
  insetInputValue: {
    type: Object,
    required: !0
  },
  placeholder: {
    type: String,
    required: !0
  },
  valuePath: {
    type: String,
    required: !0
  },
  onChange: {
    type: Function,
    required: !0
  },
  onFocus: {
    type: Function,
    required: !0
  }
}, v = /* @__PURE__ */ l({
  props: m,
  name: "InsetDateInput",
  setup(n, {}) {
    const {
      insetInputValue: e,
      valuePath: t,
      onFocus: r,
      onChange: u,
      placeholder: o,
      forwardRef: p
    } = n, i = d(e, t);
    return () => c(y, {
      value: i,
      onChange: (s, a) => {
        u({
          value: s,
          event: a,
          insetInputValue: e,
          valuePath: t
        });
      },
      onFocus: r,
      placeholder: o,
      ref: p
    }, null);
  }
}), q = {
  disabled: {
    type: Boolean,
    required: !0
  },
  insetInputValue: {
    type: Object,
    required: !0
  },
  placeholder: {
    type: String,
    required: !0
  },
  valuePath: {
    type: String,
    required: !0
  },
  type: {
    type: String,
    required: !0
  },
  onChange: {
    type: Function,
    required: !0
  },
  onFocus: {
    type: Function,
    required: !0
  }
}, T = /* @__PURE__ */ l((n, {}) => {
  const {
    insetInputValue: e,
    valuePath: t,
    type: r,
    onFocus: u,
    onChange: o,
    placeholder: p,
    disabled: i
  } = n;
  if (!r.includes("Time"))
    return null;
  const a = d(e, t);
  return () => c(y, {
    value: a,
    onChange: (I, h) => {
      o({
        value: I,
        event: h,
        insetInputValue: e,
        valuePath: t
      });
    },
    onFocus: u,
    placeholder: p,
    disabled: i
  }, null);
}, {
  props: q,
  name: "InsetTimeInput"
});
export {
  v as InsetDateInput,
  T as InsetTimeInput,
  m as vuePropsTypeInsetDateInput,
  q as vuePropsTypeInsetTimeInput
};
//# sourceMappingURL=insetInput.js.map
