{"version":3,"file":"datePicker.js","sources":["../../src/components/datePicker/datePicker.tsx"],"sourcesContent":["import {\n  defineComponent,\n  h,\n  nextTick,\n  onMounted,\n  onUnmounted,\n  PropType,\n  reactive,\n  ref,\n  useSlots,\n  VNode,\n  watch,\n} from 'vue';\nimport classnames from 'classnames';\nimport { get, isDate, isEqual, isFunction, noop, stubFalse, pick, omit } from 'lodash';\nimport type {\n  DatePickerAdapter,\n  DatePickerFoundationProps,\n  DatePickerFoundationState,\n  DayStatusType,\n  PresetType,\n  RangeType,\n  Type,\n} from '@douyinfe/semi-foundation/datePicker/foundation';\nimport DatePickerFoundation from '@douyinfe/semi-foundation/datePicker/foundation';\n\nimport MonthGridFoundation from '@douyinfe/semi-foundation/datePicker/monthsGridFoundation';\n\nimport { cssClasses, numbers, strings } from '@douyinfe/semi-foundation/datePicker/constants';\nimport { numbers as popoverNumbers } from '@douyinfe/semi-foundation/popover/constants';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport Popover, { PopoverProps } from '../popover/index';\nimport type { DateInputProps } from './dateInput';\nimport DateInput from './dateInput';\nimport type { MonthsGridProps } from './monthsGrid';\nimport MonthsGrid from './monthsGrid';\nimport QuickControl from './quickControl';\nimport Footer from './footer';\nimport Trigger, { TriggerProps, vuePropsType } from '../trigger';\nimport type { YearAndMonthProps } from './yearAndMonth';\nimport YearAndMonth from './yearAndMonth';\nimport '@douyinfe/semi-foundation/datePicker/datePicker.scss';\nimport { Locale } from '../locale/interface';\nimport type { TimePickerProps } from '../timePicker';\nimport type { ScrollItemProps } from '../scrollList';\nimport type { InsetInputChangeProps, InsetInputValue } from '@douyinfe/semi-foundation/datePicker/inputFoundation';\nimport type { AriaAttributes } from '../AriaAttributes';\nimport * as PropTypes from '../PropTypes';\nimport { vuePropsMake } from '../PropTypes';\nimport { CombineProps, VueJsxNode } from '../interface';\nimport { useConfigContext } from '../configProvider/context/Consumer';\n\nconst triggerPropsKeys = Object.keys(vuePropsType)\nexport interface DatePickerProps extends DatePickerFoundationProps {\n  'aria-describedby'?: AriaAttributes['aria-describedby'];\n  'aria-errormessage'?: AriaAttributes['aria-errormessage'];\n  'aria-invalid'?: AriaAttributes['aria-invalid'];\n  'aria-labelledby'?: AriaAttributes['aria-labelledby'];\n  'aria-required'?: AriaAttributes['aria-required'];\n  clearIcon?: VueJsxNode;\n  timePickerOpts?: TimePickerProps;\n  bottomSlot?: VueJsxNode | (()=>VueJsxNode);\n  insetLabel?: VueJsxNode;\n  insetLabelId?: string;\n  prefix?: VueJsxNode;\n  topSlot?: VueJsxNode | (()=>VueJsxNode);\n  rightSlot?: VueJsxNode | (()=>VueJsxNode);\n  leftSlot?: VueJsxNode | (()=>VueJsxNode);\n  renderDate?: (dayNumber?: number, fullDate?: string) => VueJsxNode;\n  renderFullDate?: (dayNumber?: number, fullDate?: string, dayStatus?: DayStatusType) => VueJsxNode;\n  triggerRender?: (props: DatePickerProps) => VueJsxNode;\n  /**\n   * There are multiple input boxes when selecting a range, and the input boxes will be out of focus multiple times.\n   *\n   * Use `onOpenChange` or `onClickOutSide` instead\n   */\n  onBlur?: any;\n  onClear?: any;\n  /**\n   * There are multiple input boxes when selecting a range, and the input boxes will be focused multiple times.\n   *\n   * Use `onOpenChange` or `triggerRender` instead\n   */\n  onFocus?: (e: MouseEvent, rangeType: RangeType) => void;\n  onPresetClick?: (item: PresetType, e: MouseEvent) => void;\n  onClickOutSide?: (e: MouseEvent) => void;\n  locale?: Locale['DatePicker'];\n  dateFnsLocale?: Locale['dateFnsLocale'];\n  yearAndMonthOpts?: ScrollItemProps<any>;\n  dropdownMargin?: PopoverProps['margin'];\n  id?: string;\n}\n\nexport type DatePickerState = DatePickerFoundationState;\n\nconst propTypes: CombineProps<DatePickerProps> = {\n  'aria-describedby': PropTypes.string,\n  'aria-errormessage': PropTypes.string,\n  'aria-invalid': [PropTypes.bool, PropTypes.string] as PropType<DatePickerProps['aria-invalid']>,\n  'aria-labelledby': PropTypes.string,\n  'aria-required': PropTypes.bool,\n  borderless: PropTypes.bool,\n  type: String as PropType<DatePickerProps['type']>,\n  size: String as PropType<DatePickerProps['size']>,\n  density: String as PropType<DatePickerProps['density']>,\n  defaultValue: [PropTypes.string, PropTypes.number, PropTypes.object, PropTypes.array],\n  value: [PropTypes.string, PropTypes.number, PropTypes.object, PropTypes.array],\n  defaultPickerValue: [PropTypes.string, PropTypes.number, PropTypes.object, PropTypes.array],\n  disabledTime: PropTypes.func as PropType<DatePickerProps['disabledTime']>,\n  disabledTimePicker: PropTypes.bool,\n  hideDisabledOptions: PropTypes.bool,\n  format: PropTypes.string,\n  disabled: PropTypes.bool,\n  multiple: PropTypes.bool,\n  max: PropTypes.number, // only work when multiple is true\n  placeholder: [PropTypes.string, PropTypes.array],\n  presets: PropTypes.array,\n  onChange: PropTypes.func as PropType<DatePickerProps['onChange']>,\n  onChangeWithDateFirst: PropTypes.bool,\n  weekStartsOn: PropTypes.number as PropType<DatePickerProps['weekStartsOn']>,\n  disabledDate: PropTypes.func as PropType<DatePickerProps['disabledDate']>,\n  timePickerOpts: PropTypes.object, // When dateTime, dateTimeRange, pass through the props to timePicker\n  showClear: PropTypes.bool, // Whether to show the clear button\n  onOpenChange: PropTypes.func as PropType<DatePickerProps['onOpenChange']>,\n  open: PropTypes.bool,\n  defaultOpen: PropTypes.bool,\n  motion: [PropTypes.bool, PropTypes.func, PropTypes.object] as PropType<DatePickerProps['motion']>,\n  className: PropTypes.string,\n  prefixCls: PropTypes.string,\n  prefix: PropTypes.node,\n  insetLabel: PropTypes.node,\n  insetLabelId: PropTypes.string,\n  zIndex: PropTypes.number,\n  position: String as PropType<DatePickerProps['position']>,\n  getPopupContainer: PropTypes.func as PropType<DatePickerProps['getPopupContainer']>,\n  onCancel: PropTypes.func as PropType<DatePickerProps['onCancel']>,\n  onConfirm: PropTypes.func as PropType<DatePickerProps['onConfirm']>,\n  needConfirm: PropTypes.bool,\n  inputStyle: PropTypes.object,\n  timeZone: [PropTypes.string, PropTypes.number],\n  triggerRender: PropTypes.func as PropType<DatePickerProps['triggerRender']>,\n  stopPropagation: [PropTypes.bool, PropTypes.string],\n  autoAdjustOverflow: PropTypes.bool,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func as PropType<DatePickerProps['onFocus']>,\n  onClear: PropTypes.func,\n  style: PropTypes.object,\n  autoFocus: PropTypes.bool,\n  inputReadOnly: PropTypes.bool, // Text box can be entered\n  validateStatus: String as PropType<DatePickerProps['validateStatus']>,\n  renderDate: PropTypes.func as PropType<DatePickerProps['renderDate']>,\n  renderFullDate: PropTypes.func as PropType<DatePickerProps['renderFullDate']>,\n  spacing: PropTypes.number,\n  startDateOffset: PropTypes.func as PropType<DatePickerProps['startDateOffset']>,\n  endDateOffset: PropTypes.func as PropType<DatePickerProps['endDateOffset']>,\n  autoSwitchDate: PropTypes.bool,\n  dropdownClassName: PropTypes.string,\n  dropdownStyle: PropTypes.object,\n  topSlot: [PropTypes.func, ...PropTypes.node] as PropType<DatePickerProps['topSlot']>,\n  rightSlot: [PropTypes.func, ...PropTypes.node] as PropType<DatePickerProps['rightSlot']>,\n  leftSlot: [PropTypes.func, ...PropTypes.node] as PropType<DatePickerProps['leftSlot']>,\n  bottomSlot: [PropTypes.func, ...PropTypes.node] as PropType<DatePickerProps['bottomSlot']>,\n  dateFnsLocale: PropTypes.object, // isRequired, but no need to add isRequired key. ForwardStatics function pass static properties to index.jsx, so there is no need for user to pass the prop.\n  // Support synchronous switching of months\n  syncSwitchMonth: PropTypes.bool,\n  // Callback function for panel date switching\n  onPanelChange: PropTypes.func as PropType<DatePickerProps['onPanelChange']>,\n  rangeSeparator: PropTypes.string,\n  preventScroll: PropTypes.bool,\n  yearAndMonthOpts: PropTypes.object,\n  locale: Object,\n\n  clearIcon: PropTypes.node,\n  presetPosition: PropTypes.string as PropType<DatePickerProps['presetPosition']>,\n  dropdownMargin: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  id: PropTypes.string as PropType<DatePickerProps['id']>,\n  onPresetClick: PropTypes.func as PropType<DatePickerProps['onPresetClick']>,\n  onClickOutSide: PropTypes.func as PropType<DatePickerProps['onClickOutSide']>,\n  localeCode: PropTypes.string,\n  insetInput: [PropTypes.bool, PropTypes.object] as PropType<DatePickerProps['insetInput']>,\n  startYear: PropTypes.number,\n  endYear: PropTypes.number,\n};\n\nconst defaultProps = {\n  onChangeWithDateFirst: true,\n  borderless: false,\n  autoAdjustOverflow: true,\n  stopPropagation: true,\n  motion: true,\n  prefixCls: cssClasses.PREFIX,\n  presetPosition: 'bottom',\n  // position: 'bottomLeft',\n  zIndex: popoverNumbers.DEFAULT_Z_INDEX,\n  type: 'date',\n  size: 'default',\n  density: 'default',\n  multiple: false,\n  defaultOpen: false,\n  disabledHours: noop,\n  disabledMinutes: noop,\n  disabledSeconds: noop,\n  hideDisabledOptions: false,\n  onBlur: noop,\n  onFocus: noop,\n  onClear: noop,\n  onCancel: noop,\n  onConfirm: noop,\n  onChange: noop,\n  onOpenChange: noop,\n  onPanelChange: noop,\n  onPresetClick: noop,\n  weekStartsOn: numbers.WEEK_START_ON,\n  disabledDate: stubFalse,\n  disabledTime: stubFalse,\n  inputReadOnly: false,\n  spacing: numbers.SPACING,\n  autoSwitchDate: true,\n  syncSwitchMonth: false,\n  rangeSeparator: strings.DEFAULT_SEPARATOR_RANGE,\n  insetInput: false,\n  onClickOutSide: noop,\n};\nexport const vuePropsTypeDatePickerProps = vuePropsMake(propTypes, defaultProps);\n\nconst DatePicker = defineComponent({\n  props: {...vuePropsTypeDatePickerProps},\n  name: 'DatePicker',\n  setup(props, {expose}) {\n    const slots = useSlots();\n\n    let clickOutSideHandler: (e: MouseEvent) => void;\n    let _mounted: boolean;\n    const state = reactive<DatePickerState>({\n      panelShow: props.open || props.defaultOpen,\n      isRange: false,\n      inputValue: null, // Staging input values\n      value: [], // The currently selected date, each date is a Date object\n      cachedSelectedValue: [], // Save last selected date, maybe include null\n      prevTimeZone: null,\n      rangeInputFocus: undefined, // Optional'rangeStart ',' rangeEnd ', false\n      autofocus: props.autoFocus || (isRangeType(props.type, props.triggerRender) && (props.open || props.defaultOpen)),\n      insetInputValue: null,\n      triggerDisabled: undefined,\n    });\n\n    const triggerElRef = ref();\n    const panelRef = ref();\n    const monthGrid = ref();\n    const inputRef = ref();\n    const rangeInputStartRef = ref();\n    const rangeInputEndRef = ref();\n    // @ts-ignore ignore readonly\n    const focusRecordsRef = ref({\n      rangeStart: false,\n      rangeEnd: false,\n    });\n\n    const { adapter: adapterInject, isControlled, getDataAttr } = useBaseComponent<DatePickerProps>(props, state);\n\n    function adapter_(): DatePickerAdapter {\n      return {\n        ...adapterInject<DatePickerProps, DatePickerState>(),\n        togglePanel: (panelShow, cb) => {\n          state.panelShow = panelShow;\n          if (!panelShow) {\n            focusRecordsRef.value.rangeEnd = false;\n            focusRecordsRef.value.rangeStart = false;\n          }\n          nextTick(cb);\n        },\n        registerClickOutSide: () => {\n          if (clickOutSideHandler) {\n            adapter.unregisterClickOutSide();\n            clickOutSideHandler = null;\n          }\n          clickOutSideHandler = (e) => {\n            const triggerEl = triggerElRef.value;\n            const panelEl = panelRef.value;\n            const target = e.target as Element;\n            const path = (e.composedPath && e.composedPath()) || [target];\n            if (\n              !(triggerEl && triggerEl.contains(target)) &&\n              !(panelEl && panelEl.contains(target)) &&\n              !(path.includes(triggerEl) || path.includes(panelEl))\n            ) {\n              props.onClickOutSide(e);\n              if (!adapter.needConfirm()) {\n                foundation.closePanel();\n              }\n            }\n          };\n          document.addEventListener('mousedown', clickOutSideHandler);\n        },\n        unregisterClickOutSide: () => {\n          document.removeEventListener('mousedown', clickOutSideHandler);\n        },\n        notifyBlur: (...args) => props.onBlur(...args),\n        notifyFocus: (...args) => {\n          props.onFocus(...args);\n        },\n        notifyClear: (...args) => props.onClear(...args),\n        notifyChange: (...args) => props.onChange(...args),\n        notifyCancel: (...args) => props.onCancel(...args),\n        notifyConfirm: (...args) => props.onConfirm(...args),\n        notifyOpenChange: (...args) => props.onOpenChange(...args),\n        notifyPresetsClick: (...args) => props.onPresetClick(...args),\n        updateValue: (value) => (state.value = value),\n        updatePrevTimezone: (prevTimeZone) => (state.prevTimeZone = prevTimeZone),\n        updateCachedSelectedValue: (cachedSelectedValue) => {\n          let _cachedSelectedValue = cachedSelectedValue;\n          if (cachedSelectedValue && !Array.isArray(cachedSelectedValue)) {\n            _cachedSelectedValue = [...(cachedSelectedValue as any)];\n          }\n          state.cachedSelectedValue = _cachedSelectedValue;\n        },\n        updateInputValue: (inputValue) => {\n          state.inputValue = inputValue;\n        },\n        updateInsetInputValue: (insetInputValue: InsetInputValue) => {\n          const { insetInput } = props;\n          if (insetInput && !isEqual(insetInputValue, state.insetInputValue)) {\n            state.insetInputValue = insetInputValue;\n          }\n        },\n        needConfirm: () => ['dateTime', 'dateTimeRange'].includes(props.type) && props.needConfirm === true,\n        typeIsYearOrMonth: () => ['month', 'year', 'monthRange'].includes(props.type),\n        // setMotionEnd: motionEnd => state.motionEnd = motionEnd,\n        setRangeInputFocus: (rangeInputFocus) => {\n          const { preventScroll } = props;\n          if (rangeInputFocus !== state.rangeInputFocus) {\n            state.rangeInputFocus = rangeInputFocus;\n          }\n          switch (rangeInputFocus) {\n            case 'rangeStart':\n              const inputStartNode = rangeInputStartRef.value as HTMLInputElement;\n              inputStartNode && inputStartNode.focus({ preventScroll });\n              /**\n               * 解决选择完startDate，切换到endDate后panel被立马关闭的问题。\n               * 用户打开panel，选了startDate后，会执行setRangeInputFocus('rangeEnd'),focus到endDateInput，\n               * 同时会走到datePicker/foundation.js中的handleSelectedChange方法，在这个方法里会根据focusRecordsRef来判断是否可以关闭panel。\n               * 如果在setRangeInputFocus里同步修改了focusRecordsRef的状态为true，那在handleSelectedChange里会误判startDate和endDate都已经完成选择，\n               * 导致endDate还没选就关闭了panel\n               *\n               * Fix the problem that the panel is closed immediately after switching to endDate after starting Date is selected.\n               * The user opens the panel and after starting Date is selected, setRangeInputFocus ('rangeEnd') will be executed, focus to endDateInput,\n               * At the same time, it will go to the handleSelectedChange method in datePicker/foundation.js, where it will be determined whether the panel can be closed according to focusRecordsRef.\n               * If the status of focusRecordsRef is modified synchronously in setRangeInputFocus to true, then in handleSelectedChange it will be misjudged that both begDate and endDate have completed the selection,\n               * resulting in the panel being closed before endDate is selected\n               */\n              setTimeout(() => {\n                focusRecordsRef.value.rangeStart = true;\n              }, 0);\n              break;\n            case 'rangeEnd':\n              // console.log(rangeInputEndRef.value)\n              const inputEndNode = rangeInputEndRef.value as HTMLInputElement;\n              inputEndNode && inputEndNode.focus({ preventScroll });\n              /**\n               * 解决选择完startDate，切换到endDate后panel被立马关闭的问题。\n               * 用户打开panel，选了startDate后，会执行setRangeInputFocus('rangeEnd'),focus到endDateInput，\n               * 同时会走到datePicker/foundation.js中的handleSelectedChange方法，在这个方法里会根据focusRecordsRef来判断是否可以关闭panel。\n               * 如果在setRangeInputFocus里同步修改了focusRecordsRef的状态为true，那在handleSelectedChange里会误判startDate和endDate都已经完成选择，\n               * 导致endDate还没选就关闭了panel\n               *\n               * Fix the problem that the panel is closed immediately after switching to endDate after starting Date is selected.\n               * The user opens the panel and after starting Date is selected, setRangeInputFocus ('rangeEnd') will be executed, focus to endDateInput,\n               * At the same time, it will go to the handleSelectedChange method in datePicker/foundation.js, where it will be determined whether the panel can be closed according to focusRecordsRef.\n               * If the status of focusRecordsRef is modified synchronously in setRangeInputFocus to true, then in handleSelectedChange it will be misjudged that both begDate and endDate have completed the selection,\n               * resulting in the panel being closed before endDate is selected\n               */\n              setTimeout(() => {\n                focusRecordsRef.value.rangeEnd = true;\n              }, 0);\n              break;\n            default:\n              return;\n          }\n        },\n        couldPanelClosed: () => focusRecordsRef.value.rangeStart && focusRecordsRef.value.rangeEnd,\n        isEventTarget: (e) => e && e.target === e.currentTarget,\n        setInsetInputFocus: () => {\n          const { preventScroll } = props;\n          const { rangeInputFocus } = state;\n          switch (rangeInputFocus) {\n            case 'rangeEnd':\n              if (document.activeElement !== rangeInputEndRef.value) {\n                const inputEndNode = rangeInputEndRef.value as HTMLInputElement;\n                inputEndNode && inputEndNode.focus({ preventScroll });\n              }\n              break;\n            case 'rangeStart':\n            default:\n              if (document.activeElement !== rangeInputEndRef.value) {\n                const inputStartNode = rangeInputStartRef.value as HTMLInputElement;\n                inputStartNode && inputStartNode.focus({ preventScroll });\n              }\n              break;\n          }\n        },\n\n        setInputFocus: () => {\n          const { preventScroll } = props;\n          const inputNode = inputRef.value as HTMLInputElement;\n          inputNode && inputNode.focus({ preventScroll });\n        },\n        setInputBlur: () => {\n          const inputNode = inputRef.value as HTMLInputElement;\n          inputNode && inputNode.blur();\n        },\n        setRangeInputBlur: () => {\n          const { rangeInputFocus } = state;\n          if (rangeInputFocus === 'rangeStart') {\n            const inputStartNode = rangeInputStartRef.value as HTMLInputElement;\n            inputStartNode && inputStartNode.blur();\n          } else if (rangeInputFocus === 'rangeEnd') {\n            const inputEndNode = rangeInputEndRef.value as HTMLInputElement;\n            inputEndNode && inputEndNode.blur();\n          }\n          adapter.setRangeInputFocus(false);\n        },\n        setTriggerDisabled: (disabled: boolean) => {\n          state.triggerDisabled = disabled;\n        },\n      };\n    }\n    const adapter = adapter_();\n    const foundation = new DatePickerFoundation(adapter);\n\n    adapter.setCache('cachedSelectedValue', null);\n\n    function isRangeType(type: Type, triggerRender: DatePickerProps['triggerRender']) {\n      return /range/i.test(type) && !isFunction(triggerRender);\n    }\n\n    watch(\n      () => props.value,\n      (value, oldValue, onCleanup) => {\n        propsChange([oldValue, props.timeZone]);\n      },\n      { immediate: true }\n    );\n    watch(\n      () => props.timeZone,\n      (value, oldValue, onCleanup) => {\n        propsChange([props.value, oldValue]);\n      },\n      { immediate: true }\n    );\n\n    function propsChange([prevPropsValue, prevPropsTimeZone]) {\n      if (!isEqual(prevPropsValue, props.value)) {\n        foundation.initFromProps({\n          ...(props as any),\n        });\n      } else if (props.timeZone !== prevPropsTimeZone) {\n        foundation.initFromProps({\n          value: state.value,\n          timeZone: props.timeZone,\n          prevTimeZone: prevPropsTimeZone,\n        });\n      }\n    }\n\n    watch(\n      () => props.open,\n      () => {\n        foundation.initPanelOpenStatus();\n        if (!props.open) {\n          foundation.clearRangeInputFocus();\n        }\n      },\n      { immediate: true }\n    );\n\n    onMounted(() => {\n      _mounted = true;\n      // TODO\n      // super.componentDidMount();\n    });\n\n    onUnmounted(() => {\n      _mounted = false;\n      // TODO\n      // super.componentWillUnmount();\n    });\n\n\n    function open() {\n      foundation.open();\n    }\n\n    function close() {\n      foundation.close();\n    }\n\n    /**\n     *\n     * When selecting a range, the default focus is on the start input box, passing in `rangeEnd` can focus on the end input box\n     *\n     * When `insetInput` is `true`, due to trigger disabled, the cursor will focus on the input box of the popup layer panel\n     *\n     * 范围选择时，默认聚焦在开始输入框，传入 `rangeEnd` 可以聚焦在结束输入框\n     *\n     * `insetInput` 打开时，由于 trigger 禁用，会把焦点放在弹出面板的输入框上\n     */\n    function focus(focusType?: Exclude<RangeType, false>) {\n      foundation.focus(focusType);\n    }\n\n    function blur() {\n      foundation.blur();\n    }\n\n    expose({\n      open,\n      close,\n      focus,\n      blur,\n    })\n\n\n\n    const setTriggerRef = (node: HTMLDivElement) => (triggerElRef.value = node);\n\n    // Called when changes are selected by clicking on the selected date\n    const handleSelectedChange: MonthsGridProps['onChange'] = (v, options) =>\n      foundation.handleSelectedChange(v, options);\n\n    // Called when the year and month change\n    const handleYMSelectedChange: YearAndMonthProps['onSelect'] = (item) => foundation.handleYMSelectedChange(item);\n\n    const disabledDisposeDate: MonthsGridProps['disabledDate'] = (date, ...rest) =>\n      foundation.disabledDisposeDate(date, ...rest);\n    const disabledDisposeTime: MonthsGridProps['disabledTime'] = (date, ...rest) =>\n      foundation.disabledDisposeTime(date, ...rest);\n\n    function renderMonthGrid(locale: Locale['DatePicker'], localeCode: string, dateFnsLocale: Locale['dateFnsLocale']) {\n      const {\n        type,\n        multiple,\n        max,\n        weekStartsOn,\n        timePickerOpts,\n        defaultPickerValue,\n        format,\n        hideDisabledOptions,\n        disabledTimePicker,\n        renderDate,\n        renderFullDate,\n        startDateOffset,\n        endDateOffset,\n        autoSwitchDate,\n        density,\n        syncSwitchMonth,\n        onPanelChange,\n        timeZone,\n        triggerRender,\n        insetInput,\n        presetPosition,\n        yearAndMonthOpts,\n        startYear,\n        endYear,\n      } = props;\n      const { cachedSelectedValue, rangeInputFocus } = state;\n\n      const defaultValue = cachedSelectedValue;\n      return (\n        <MonthsGrid\n          ref={monthGrid}\n          locale={locale}\n          localeCode={localeCode}\n          dateFnsLocale={dateFnsLocale}\n          weekStartsOn={weekStartsOn}\n          type={type}\n          multiple={multiple}\n          max={max}\n          format={format}\n          disabledDate={disabledDisposeDate}\n          hideDisabledOptions={hideDisabledOptions}\n          disabledTimePicker={disabledTimePicker}\n          disabledTime={disabledDisposeTime}\n          defaultValue={defaultValue}\n          defaultPickerValue={defaultPickerValue}\n          timePickerOpts={timePickerOpts}\n          isControlledComponent={!adapter.needConfirm() && isControlled('value')}\n          onChange={handleSelectedChange}\n          renderDate={renderDate}\n          renderFullDate={renderFullDate}\n          startDateOffset={startDateOffset}\n          endDateOffset={endDateOffset}\n          autoSwitchDate={autoSwitchDate}\n          density={density}\n          rangeInputFocus={rangeInputFocus}\n          setRangeInputFocus={handleSetRangeFocus}\n          isAnotherPanelHasOpened={isAnotherPanelHasOpened}\n          syncSwitchMonth={syncSwitchMonth}\n          onPanelChange={onPanelChange}\n          timeZone={timeZone}\n          focusRecordsRef={focusRecordsRef}\n          triggerRender={triggerRender}\n          insetInput={insetInput}\n          presetPosition={presetPosition}\n          renderQuickControls={renderQuickControls()}\n          renderDateInput={renderDateInput()}\n          yearAndMonthOpts={yearAndMonthOpts}\n          startYear={startYear}\n          endYear={endYear}\n        />\n      );\n    }\n\n    function renderQuickControls() {\n      const { presets, type, presetPosition, insetInput, locale } = props;\n      return (\n        <QuickControl\n          type={type}\n          presets={presets}\n          insetInput={insetInput}\n          presetPosition={presetPosition}\n          onPresetClick={(item, e) => foundation.handlePresetClick(item, e)}\n          locale={locale}\n        />\n      );\n    }\n    function renderDateInput() {\n      const { insetInput, dateFnsLocale, density, type, format, rangeSeparator, defaultPickerValue } = props;\n      const { insetInputValue, value } = state;\n\n      const props_: DateInputProps = {\n        dateFnsLocale,\n        format,\n        insetInputValue,\n        rangeSeparator,\n        type,\n        value: value as Date[],\n        handleInsetDateFocus: handleInsetDateFocus,\n        handleInsetTimeFocus: handleInsetTimeFocus,\n        onInsetInputChange: handleInsetInputChange,\n        rangeInputStartRef: rangeInputStartRef,\n        rangeInputEndRef: rangeInputEndRef,\n        density,\n        defaultPickerValue,\n      };\n\n      return insetInput ? <DateInput {...props_} insetInput={insetInput} /> : null;\n    }\n\n    const handleOpenPanel = () => foundation.openPanel();\n    const handleInputChange: DatePickerFoundation['handleInputChange'] = (...args) =>\n      foundation.handleInputChange(...args);\n    const handleInsetInputChange = (options: InsetInputChangeProps) => foundation.handleInsetInputChange(options);\n    const handleInputComplete: DatePickerFoundation['handleInputComplete'] = (v) => foundation.handleInputComplete(v);\n    const handleInputBlur: DateInputProps['onBlur'] = (e) => foundation.handleInputBlur(get(e, 'target.value'), e);\n    const handleInputFocus: DatePickerFoundation['handleInputFocus'] = (...args) => {\n      foundation.handleInputFocus(...args);\n    };\n    const handleInputClear: DatePickerFoundation['handleInputClear'] = (e) => foundation.handleInputClear(e);\n    const handleTriggerWrapperClick: DatePickerFoundation['handleTriggerWrapperClick'] = (e) => {\n      foundation.handleTriggerWrapperClick(e);\n    };\n    const handleSetRangeFocus: DatePickerFoundation['handleSetRangeFocus'] = (rangeInputFocus) =>\n      foundation.handleSetRangeFocus(rangeInputFocus);\n    const handleRangeInputBlur = (value: any, e: any) => foundation.handleRangeInputBlur(value, e);\n    const handleRangeInputClear: DatePickerFoundation['handleRangeInputClear'] = (e) =>\n      foundation.handleRangeInputClear(e);\n    const handleRangeEndTabPress: DatePickerFoundation['handleRangeEndTabPress'] = (e) =>\n      foundation.handleRangeEndTabPress(e);\n    const isAnotherPanelHasOpened = (currentRangeInput: RangeType) => {\n      if (currentRangeInput === 'rangeStart') {\n        return focusRecordsRef.value.rangeEnd;\n      } else {\n        return focusRecordsRef.value.rangeStart;\n      }\n    };\n    const handleInsetDateFocus = (e: FocusEvent, rangeType: 'rangeStart' | 'rangeEnd') => {\n      const monthGridFoundation = get(this, 'monthGrid.current.foundation') as MonthGridFoundation;\n      if (monthGridFoundation) {\n        monthGridFoundation.showDatePanel(strings.PANEL_TYPE_LEFT);\n        monthGridFoundation.showDatePanel(strings.PANEL_TYPE_RIGHT);\n      }\n      handleInputFocus(e, rangeType);\n    };\n\n    const handleInsetTimeFocus = () => {\n      const monthGridFoundation = get(this, 'monthGrid.current.foundation') as MonthGridFoundation;\n      if (monthGridFoundation) {\n        monthGridFoundation.showTimePicker(strings.PANEL_TYPE_LEFT);\n        monthGridFoundation.showTimePicker(strings.PANEL_TYPE_RIGHT);\n      }\n    };\n    const handlePanelVisibleChange = (visible: boolean) => {\n      foundation.handlePanelVisibleChange(visible);\n    };\n\n    function renderInner(extraProps?: Partial<DatePickerProps>) {\n      const {\n        clearIcon,\n        type,\n        format,\n        multiple,\n        disabled,\n        showClear,\n        insetLabel,\n        insetLabelId,\n        placeholder,\n        validateStatus,\n        inputStyle,\n        prefix,\n        locale,\n        dateFnsLocale,\n        triggerRender,\n        size,\n        inputReadOnly,\n        rangeSeparator,\n        insetInput,\n        defaultPickerValue,\n        borderless,\n      } = props;\n      const { value, inputValue, rangeInputFocus, triggerDisabled } = state;\n      // This class is not needed when triggerRender is function\n      const isRangeType_ = isRangeType(type, triggerRender);\n      const inputDisabled = disabled || (insetInput && triggerDisabled);\n      const inputCls = classnames(`${cssClasses.PREFIX}-input`, {\n        [`${cssClasses.PREFIX}-range-input`]: isRangeType_,\n        [`${cssClasses.PREFIX}-range-input-${size}`]: isRangeType_ && size,\n        [`${cssClasses.PREFIX}-range-input-active`]: isRangeType_ && rangeInputFocus && !inputDisabled,\n        [`${cssClasses.PREFIX}-range-input-disabled`]: isRangeType_ && inputDisabled,\n        [`${cssClasses.PREFIX}-range-input-${validateStatus}`]: isRangeType_ && validateStatus,\n        [`${cssClasses.PREFIX}-borderless`]: borderless,\n      });\n      const phText = placeholder || locale.placeholder[type]; // i18n\n      // These values should be passed to triggerRender, do not delete any key if it is not necessary\n      const props_: DateInputProps = {\n        ...extraProps,\n        showClearIgnoreDisabled: Boolean(insetInput),\n        placeholder: phText,\n        clearIcon,\n        disabled: inputDisabled,\n        inputValue,\n        value: value as Date[],\n        defaultPickerValue,\n        onChange: handleInputChange,\n        onEnterPress: handleInputComplete,\n        // TODO: remove in next major version\n        block: true,\n        inputStyle,\n        showClear,\n        insetLabel: insetLabel as VNode,\n        insetLabelId,\n        type,\n        format,\n        multiple,\n        validateStatus,\n        inputReadOnly: inputReadOnly || Boolean(insetInput),\n        // onClick: handleOpenPanel,\n        onBlur: handleInputBlur,\n        onFocus: handleInputFocus,\n        onClear: handleInputClear,\n        prefix: prefix as VNode,\n        size,\n        autofocus: state.autofocus,\n        dateFnsLocale,\n        rangeInputFocus,\n        rangeSeparator,\n        onRangeBlur: handleRangeInputBlur,\n        onRangeClear: handleRangeInputClear,\n        onRangeEndTabPress: handleRangeEndTabPress,\n        rangeInputStartRef: insetInput ? null : rangeInputStartRef,\n        rangeInputEndRef: insetInput ? null : rangeInputEndRef,\n      };\n\n      return (\n        <div\n          // tooltip will mount a11y props to children\n          // eslint-disable-next-line jsx-a11y/role-has-required-aria-props\n          role=\"combobox\"\n          aria-label={Array.isArray(value) && value.length ? 'Change date' : 'Choose date'}\n          aria-disabled={disabled}\n          onClick={handleTriggerWrapperClick}\n          class={inputCls}\n        >\n          {typeof triggerRender === 'function' ? (\n            <Trigger\n              {...(pick(props_, ...triggerPropsKeys) as TriggerProps)}\n              triggerRender={triggerRender}\n              componentName=\"DatePicker\"\n              componentProps={{ ...adapter.getProps() }}\n            />\n          ) : (\n            <DateInput {...props_} />\n          )}\n        </div>\n      );\n    }\n\n    const handleConfirm = (e: MouseEvent) => foundation.handleConfirm();\n\n    const handleCancel = (e: MouseEvent) => foundation.handleCancel();\n\n\n    const renderFooter = (locale: Locale['DatePicker'], localeCode: string) => {\n      if (adapter.needConfirm()) {\n        return (\n          <Footer\n            prefixCls={props.prefixCls}\n            locale={locale}\n            localeCode={localeCode}\n            onConfirmClick={handleConfirm}\n            onCancelClick={handleCancel}\n          />\n        );\n      }\n\n      return null;\n    };\n\n    const renderPanel = (locale: Locale['DatePicker'], localeCode: string, dateFnsLocale: Locale['dateFnsLocale']) => {\n      const {\n        dropdownClassName,\n        dropdownStyle,\n        density,\n        topSlot,\n        bottomSlot,\n        presetPosition,\n        type,\n        leftSlot,\n        rightSlot,\n      } = props;\n      const wrapCls = classnames(\n        cssClasses.PREFIX,\n        {\n          [cssClasses.PANEL_YAM]: adapter.typeIsYearOrMonth(),\n          [`${cssClasses.PREFIX}-compact`]: density === 'compact',\n        },\n        dropdownClassName\n      );\n\n      return (\n        <div ref={panelRef} class={wrapCls} style={dropdownStyle} x-type={type}>\n          <div class={`${cssClasses.PREFIX}-container`}>\n            {leftSlot && (\n              <div class={`${cssClasses.PREFIX}-leftSlot`} x-semi-prop=\"leftSlot\">\n                {leftSlot}\n              </div>\n            )}\n            <div>\n              {topSlot && (\n                <div class={`${cssClasses.PREFIX}-topSlot`} x-semi-prop=\"topSlot\">\n                  {topSlot}\n                </div>\n              )}\n              {/* todo: monthRange does not support presetPosition temporarily */}\n              {presetPosition === 'top' && type !== 'monthRange' && renderQuickControls()}\n              {adapter.typeIsYearOrMonth()\n                ? renderYearMonthPanel(locale, localeCode)\n                : renderMonthGrid(locale, localeCode, dateFnsLocale)}\n              {presetPosition === 'bottom' && type !== 'monthRange' && renderQuickControls()}\n              {bottomSlot && (\n                <div class={`${cssClasses.PREFIX}-bottomSlot`} x-semi-prop=\"bottomSlot\">\n                  {bottomSlot}\n                </div>\n              )}\n            </div>\n            {rightSlot && (\n              <div class={`${cssClasses.PREFIX}-rightSlot`} x-semi-prop=\"rightSlot\">\n                {rightSlot}\n              </div>\n            )}\n          </div>\n          {renderFooter(locale, localeCode)}\n        </div>\n      );\n    };\n\n    const renderYearMonthPanel = (locale: Locale['DatePicker'], localeCode: string) => {\n      const { density, presetPosition, yearAndMonthOpts, type, startYear, endYear } = props;\n\n      const date = state.value[0];\n      const year = { left: 0, right: 0 };\n      const month = { left: 0, right: 0 };\n\n      if (isDate(date)) {\n        year.left = date.getFullYear();\n        month.left = date.getMonth() + 1;\n      }\n\n      if (type === 'monthRange') {\n        const dateRight = state.value[1];\n        if (isDate(dateRight)) {\n          year.right = dateRight.getFullYear();\n          month.right = dateRight.getMonth() + 1;\n        }\n      }\n\n      return (\n        <YearAndMonth\n          locale={locale}\n          localeCode={localeCode}\n          disabledDate={disabledDisposeDate}\n          noBackBtn\n          monthCycled\n          onSelect={handleYMSelectedChange}\n          currentYear={year}\n          currentMonth={month}\n          density={density}\n          presetPosition={presetPosition}\n          renderQuickControls={renderQuickControls()}\n          renderDateInput={renderDateInput()}\n          type={type}\n          yearAndMonthOpts={yearAndMonthOpts}\n          startYear={startYear}\n          endYear={endYear}\n        />\n      );\n    };\n\n    // rtl changes the default position\n    const { context } = useConfigContext();\n    const wrapPopover = (children: VueJsxNode) => {\n      const { panelShow } = state;\n      // TODO\n      let direction = context.value.direction;\n      const defaultPosition = direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n      const {\n        motion,\n        zIndex,\n        position = defaultPosition,\n        getPopupContainer,\n        locale,\n        localeCode,\n        dateFnsLocale,\n        stopPropagation,\n        autoAdjustOverflow,\n        spacing,\n        dropdownMargin,\n      } = props;\n      // const mergedMotion = foundation.getMergedMotion(motion);\n      return (\n        <Popover\n          getPopupContainer={getPopupContainer}\n          // wrapWhenSpecial={false}\n          autoAdjustOverflow={autoAdjustOverflow}\n          zIndex={zIndex}\n          motion={motion}\n          margin={dropdownMargin}\n          content={renderPanel(locale, localeCode, dateFnsLocale)}\n          trigger=\"custom\"\n          position={position}\n          visible={panelShow}\n          stopPropagation={stopPropagation}\n          spacing={spacing}\n          onVisibleChange={handlePanelVisibleChange}\n        >\n          {children}\n        </Popover>\n      );\n    };\n\n    return () => {\n      const { style, className, prefixCls, type, ...rest } = props;\n      const outerProps = {\n        style,\n        class: classnames(className, { [prefixCls]: true }),\n        ref: setTriggerRef,\n        'aria-invalid': props['aria-invalid'],\n        'aria-errormessage': props['aria-errormessage'],\n        'aria-labelledby': props['aria-labelledby'],\n        'aria-describedby': props['aria-describedby'],\n        'aria-required': props['aria-required'],\n        ...getDataAttr(),\n      };\n\n      const innerPropKeys: string[] = [];\n      if (!type.toLowerCase().includes('range')) {\n        innerPropKeys.push('borderless');\n      }\n      const inner = renderInner(pick(props, innerPropKeys));\n      const wrappedInner = wrapPopover(inner);\n\n      // @ts-ignore\n      return <div {...outerProps}>{wrappedInner}</div>;\n    };\n  },\n});\n\nexport default DatePicker;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","triggerPropsKeys","keys","vuePropsType","propTypes","PropTypes","string","bool","borderless","type","String","size","density","defaultValue","number","object","array","value","defaultPickerValue","disabledTime","func","disabledTimePicker","hideDisabledOptions","format","disabled","multiple","max","placeholder","presets","onChange","onChangeWithDateFirst","weekStartsOn","disabledDate","timePickerOpts","showClear","onOpenChange","open","defaultOpen","motion","className","prefixCls","prefix","node","insetLabel","insetLabelId","zIndex","position","getPopupContainer","onCancel","onConfirm","needConfirm","inputStyle","timeZone","triggerRender","stopPropagation","autoAdjustOverflow","onBlur","onFocus","onClear","style","autoFocus","inputReadOnly","validateStatus","renderDate","renderFullDate","spacing","startDateOffset","endDateOffset","autoSwitchDate","dropdownClassName","dropdownStyle","topSlot","rightSlot","leftSlot","bottomSlot","dateFnsLocale","syncSwitchMonth","onPanelChange","rangeSeparator","preventScroll","yearAndMonthOpts","locale","clearIcon","presetPosition","dropdownMargin","oneOfType","id","onPresetClick","onClickOutSide","localeCode","insetInput","startYear","endYear","defaultProps","cssClasses","PREFIX","popoverNumbers","DEFAULT_Z_INDEX","disabledHours","noop","disabledMinutes","disabledSeconds","numbers","WEEK_START_ON","stubFalse","SPACING","strings","DEFAULT_SEPARATOR_RANGE","vuePropsTypeDatePickerProps","vuePropsMake","DatePicker","defineComponent","props","name","setup","expose","useSlots","clickOutSideHandler","state","reactive","panelShow","isRange","inputValue","cachedSelectedValue","prevTimeZone","rangeInputFocus","undefined","autofocus","isRangeType","insetInputValue","triggerDisabled","triggerElRef","ref","panelRef","monthGrid","inputRef","rangeInputStartRef","rangeInputEndRef","focusRecordsRef","rangeStart","rangeEnd","adapter","adapterInject","isControlled","getDataAttr","useBaseComponent","adapter_","togglePanel","cb","nextTick","registerClickOutSide","unregisterClickOutSide","e","triggerEl","panelEl","target","path","composedPath","contains","includes","foundation","closePanel","document","addEventListener","removeEventListener","notifyBlur","args","notifyFocus","notifyClear","notifyChange","notifyCancel","notifyConfirm","notifyOpenChange","notifyPresetsClick","updateValue","updatePrevTimezone","updateCachedSelectedValue","_cachedSelectedValue","Array","isArray","updateInputValue","updateInsetInputValue","isEqual","typeIsYearOrMonth","setRangeInputFocus","inputStartNode","focus","setTimeout","inputEndNode","couldPanelClosed","isEventTarget","currentTarget","setInsetInputFocus","activeElement","setInputFocus","inputNode","setInputBlur","blur","setRangeInputBlur","setTriggerDisabled","DatePickerFoundation","setCache","test","isFunction","watch","oldValue","onCleanup","propsChange","immediate","prevPropsValue","prevPropsTimeZone","initFromProps","initPanelOpenStatus","clearRangeInputFocus","onMounted","onUnmounted","close","focusType","setTriggerRef","handleSelectedChange","v","options","handleYMSelectedChange","item","disabledDisposeDate","date","rest","disabledDisposeTime","renderMonthGrid","_createVNode","MonthsGrid","handleSetRangeFocus","isAnotherPanelHasOpened","renderQuickControls","renderDateInput","QuickControl","handlePresetClick","DateInput","_mergeProps","handleInsetDateFocus","handleInsetTimeFocus","onInsetInputChange","handleInsetInputChange","handleInputChange","handleInputComplete","handleInputBlur","get","handleInputFocus","handleInputClear","handleTriggerWrapperClick","handleRangeInputBlur","handleRangeInputClear","handleRangeEndTabPress","currentRangeInput","rangeType","monthGridFoundation","showDatePanel","PANEL_TYPE_LEFT","PANEL_TYPE_RIGHT","showTimePicker","handlePanelVisibleChange","visible","renderInner","extraProps","isRangeType_","inputDisabled","inputCls","classnames","phText","props_","showClearIgnoreDisabled","Boolean","onEnterPress","block","onRangeBlur","onRangeClear","onRangeEndTabPress","length","Trigger","pick","getProps","handleConfirm","handleCancel","renderFooter","Footer","renderPanel","wrapCls","PANEL_YAM","renderYearMonthPanel","year","left","right","month","isDate","getFullYear","getMonth","dateRight","YearAndMonth","context","useConfigContext","wrapPopover","children","defaultPosition","direction","Popover","default","outerProps","class","innerPropKeys","toLowerCase","push","inner","wrappedInner"],"mappings":"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"}