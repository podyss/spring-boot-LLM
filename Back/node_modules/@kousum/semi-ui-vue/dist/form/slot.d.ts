import { LabelProps } from './label';
import { ErrorMessageProps } from './errorMessage';
import { CSSProperties, PropType } from 'vue';
import { VueJsxNode } from '../interface';
export interface SlotProps {
    className?: string;
    style?: CSSProperties;
    label?: LabelProps | VueJsxNode;
    noLabel?: boolean;
    labelPosition?: 'top' | 'left';
    error?: ErrorMessageProps | string;
}
declare const Slot: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    label: PropType<VueJsxNode | LabelProps> | {
        type: PropType<VueJsxNode | LabelProps>;
        default?: any;
        required?: false;
    };
    noLabel: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    labelPosition: PropType<"left" | "top"> | {
        type: PropType<"left" | "top">;
        default?: any;
        required?: false;
    };
    error: PropType<string | ErrorMessageProps> | {
        type: PropType<string | ErrorMessageProps>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    label: PropType<VueJsxNode | LabelProps> | {
        type: PropType<VueJsxNode | LabelProps>;
        default?: any;
        required?: false;
    };
    noLabel: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    labelPosition: PropType<"left" | "top"> | {
        type: PropType<"left" | "top">;
        default?: any;
        required?: false;
    };
    error: PropType<string | ErrorMessageProps> | {
        type: PropType<string | ErrorMessageProps>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default Slot;
