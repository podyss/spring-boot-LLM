{"version":3,"file":"index.js","sources":["../../src/components/form/index.tsx"],"sourcesContent":["/**\n * The early design of Semi Form was inspired by informed （https://github.com/joepuzzo/informed） and formik（https://github.com/formium/formik）\n * The informed API design is very concise, and formik has very clear naming of the form status.\n * However, due to the requirements of convenient scalability (we need to split into F/A architecture), in additional they have their own binding verification library,\n * we cannot directly reuse such libraries.\n * So we fully absorbed these excellent api designs. Combining the technical principles of the two to implement our own code,\n */\n\n// FormComponent\nimport Form from './baseForm';\nimport ArrayField from './arrayField';\n\n// Form Hooks\nimport { useFormApi, useFormState, useFieldState, useFieldApi } from './hooks/index';\n\n// Form Hoc\nimport withField from './hoc/withField';\nimport withFormState from './hoc/withFormState';\nimport withFormApi from './hoc/withFormApi';\nimport {\n    FormAutoComplete,\n    FormCascader,\n    FormCheckbox,\n    FormCheckboxGroup, FormDatePicker,\n    FormInput,\n    FormInputNumber,\n    FormRadio,\n    FormRadioGroup,\n    FormRating,\n    FormSelect,\n    FormSlider,\n    FormSwitch,\n    FormTagInput,\n    FormTextArea,\n    FormTimePicker,\n    FormTreeSelect,\n    FormUpload,\n    FormSelectOption,\n    FormSelectOptionGroup\n} from \"./field\";\nimport FormInputGroup from \"./group\";\nimport ErrorMessage from './errorMessage';\nimport Label from './label';\nimport Section from './section';\nimport Slot from './slot';\nexport type { FormApi, FormFCChild } from './interface';\n\n\n\nexport {\n    FormTextArea,\n    FormInputNumber,\n    FormSelect,\n    FormInput,\n    FormSelectOption,\n    FormSelectOptionGroup,\n\n    FormAutoComplete,\n    FormCascader,\n    FormCheckbox,\n    FormCheckboxGroup, FormDatePicker,\n    FormRadio,\n    FormRadioGroup,\n    FormRating,\n    FormSlider,\n    FormSwitch,\n    FormTagInput,\n    FormTimePicker,\n    FormTreeSelect,\n    FormUpload,\n    Label as FormLabel,\n    Slot as FormSlot\n}\nexport const Checkbox = FormCheckbox;\nexport const CheckboxGroup = FormCheckboxGroup;\nexport const Radio = FormRadio;\nexport const RadioGroup = FormRadioGroup;\nexport const DatePicker = FormDatePicker;\nexport const TimePicker = FormTimePicker;\nexport const Switch = FormSwitch;\nexport const Slider = FormSlider;\nexport const TreeSelect = FormTreeSelect;\nexport const Cascader = FormCascader;\nexport const Rating = FormRating;\nexport const AutoComplete = FormAutoComplete;\nexport const Upload = FormUpload;\nexport const TagInput = FormTagInput;\nexport const InputGroup = FormInputGroup;\n\n\nexport type FormType = typeof Form & {\n    TextArea: typeof FormTextArea;\n    InputNumber: typeof FormInputNumber;\n    Select: typeof FormSelect;\n    Input: typeof FormInput;\n    SelectOption: typeof FormSelectOption;\n    SelectOptionGroup: typeof FormSelectOptionGroup;\n    AutoComplete: typeof FormAutoComplete;\n    Cascader: typeof FormCascader;\n    Checkbox: typeof FormCheckbox;\n    CheckboxGroup: typeof FormCheckboxGroup;\n    DatePicker: typeof FormDatePicker;\n    Radio: typeof FormRadio;\n    RadioGroup: typeof FormRadioGroup;\n    Rating: typeof FormRating;\n    Slider: typeof FormSlider;\n    Switch: typeof FormSwitch;\n    TagInput: typeof FormTagInput;\n    TimePicker: typeof FormTimePicker;\n    TreeSelect: typeof FormTreeSelect;\n    Upload: typeof FormUpload,\n    ErrorMessage: typeof ErrorMessage,\n    InputGroup: typeof InputGroup,\n    Label: typeof Label,\n    Section: typeof Section,\n    Slot: typeof Slot,\n}\nconst BaseForm = Form as FormType\nBaseForm.TextArea = FormTextArea\nBaseForm.InputNumber = FormInputNumber\nBaseForm.Select = FormSelect\nBaseForm.Input = FormInput\nBaseForm.SelectOption = FormSelectOption\nBaseForm.SelectOptionGroup = FormSelectOptionGroup\nBaseForm.AutoComplete = FormAutoComplete\nBaseForm.Cascader = FormCascader\nBaseForm.Checkbox = FormCheckbox\nBaseForm.CheckboxGroup = FormCheckboxGroup\nBaseForm.DatePicker = FormDatePicker\nBaseForm.Radio = FormRadio\nBaseForm.RadioGroup = FormRadioGroup\nBaseForm.Rating = FormRating\nBaseForm.Slider = FormSlider\nBaseForm.Switch = FormSwitch\nBaseForm.TagInput = FormTagInput;\nBaseForm.TimePicker = FormTimePicker;\nBaseForm.TreeSelect = FormTreeSelect;\nBaseForm.Upload = FormUpload;\nBaseForm.ErrorMessage = ErrorMessage;\nBaseForm.InputGroup = InputGroup;\nBaseForm.Label = Label;\nBaseForm.Section = Section;\nBaseForm.Slot = Slot;\n\nexport default BaseForm;\nexport {\n    BaseForm as Form,\n    ArrayField,\n    withField,\n    useFormApi,\n    useFormState,\n    useFieldApi,\n    useFieldState,\n    withFormState,\n    withFormApi\n};\n\nexport * from './interface';\nexport type { ArrayFieldProps } from './arrayField';\nexport type { ReactFieldError, ErrorMessageProps } from './errorMessage';\nexport type { InputGroupProps } from './group';\nexport type { LabelProps } from './label';\nexport type { SectionProps } from './section';\nexport type { SlotProps } from './slot';\n"],"names":["Checkbox","FormCheckbox","CheckboxGroup","FormCheckboxGroup","Radio","FormRadio","RadioGroup","FormRadioGroup","DatePicker","FormDatePicker","TimePicker","FormTimePicker","Switch","FormSwitch","Slider","FormSlider","TreeSelect","FormTreeSelect","Cascader","FormCascader","Rating","FormRating","AutoComplete","FormAutoComplete","Upload","FormUpload","TagInput","FormTagInput","InputGroup","FormInputGroup","BaseForm","Form","TextArea","FormTextArea","InputNumber","FormInputNumber","Select","FormSelect","Input","FormInput","SelectOption","FormSelectOption","SelectOptionGroup","FormSelectOptionGroup","ErrorMessage","Label","Section","Slot"],"mappings":";;;;;;;;;;;;;;;;AAyEO,MAAMA,IAAWC,GACXC,IAAgBC,GAChBC,IAAQC,GACRC,IAAaC,GACbC,IAAaC,GACbC,IAAaC,GACbC,IAASC,GACTC,IAASC,GACTC,IAAaC,GACbC,IAAWC,GACXC,IAASC,GACTC,IAAeC,GACfC,IAASC,GACTC,IAAWC,GACXC,IAAaC,GA8BpBC,IAAWC;AACjBD,EAASE,WAAWC;AACpBH,EAASI,cAAcC;AACvBL,EAASM,SAASC;AAClBP,EAASQ,QAAQC;AACjBT,EAASU,eAAeC;AACxBX,EAASY,oBAAoBC;AAC7Bb,EAASR,eAAeC;AACxBO,EAASZ,WAAWC;AACpBW,EAAS9B,WAAWC;AACpB6B,EAAS5B,gBAAgBC;AACzB2B,EAAStB,aAAaC;AACtBqB,EAAS1B,QAAQC;AACjByB,EAASxB,aAAaC;AACtBuB,EAASV,SAASC;AAClBS,EAAShB,SAASC;AAClBe,EAASlB,SAASC;AAClBiB,EAASJ,WAAWC;AACpBG,EAASpB,aAAaC;AACtBmB,EAASd,aAAaC;AACtBa,EAASN,SAASC;AAClBK,EAASc,eAAeA;AACxBd,EAASF,aAAaA;AACtBE,EAASe,QAAQA;AACjBf,EAASgB,UAAUA;AACnBhB,EAASiB,OAAOA;"}