{"version":3,"file":"slot.js","sources":["../../src/components/form/slot.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport { cssClasses } from '@douyinfe/semi-foundation/form/constants';\nimport { isString, isNumber, isObject } from 'lodash';\nimport Label, { LabelProps } from './label';\nimport { Col } from '../grid';\nimport ErrorMessage, { ErrorMessageProps } from './errorMessage';\nimport { h, Fragment, CSSProperties, isVNode, defineComponent, PropType } from 'vue';\nimport { CombineProps, VueJsxNode } from '../interface';\nimport { useFormUpdaterContext } from './context/FormUpdaterContext/Consumer';\nimport { getFragmentChildren } from '../_utils';\n\n\nconst prefix = cssClasses.PREFIX;\n\nexport interface SlotProps {\n  className?: string;\n  style?: CSSProperties;\n  label?: LabelProps | VueJsxNode;\n  noLabel?: boolean;\n  labelPosition?: 'top' | 'left';\n  error?: ErrorMessageProps | string;\n  // children?: VueJsxNode;\n}\nconst vuePropsType: CombineProps<SlotProps> = {\n  className: String,\n  style: Object,\n  label: [String, Number, Function, Array, Object],\n  noLabel: Boolean,\n  labelPosition: String as PropType<SlotProps['labelPosition']>,\n  error: [Object, String],\n}\nconst Slot = defineComponent({\n  props: {\n    ...vuePropsType\n  },\n  setup(props, {slots}) {\n    const { context: updater } = useFormUpdaterContext();\n    return () => {\n      const children = getFragmentChildren(slots)\n      let labelCol, wrapperCol, labelWidth, labelAlign, content;\n      let labelPosition = 'top';\n\n      try {\n        const formProps = updater.value.getFormProps([\n          'labelPosition',\n          'labelWidth',\n          'labelAlign',\n          'labelCol',\n          'wrapperCol',\n        ]);\n        labelCol = formProps.labelCol;\n        wrapperCol = formProps.wrapperCol;\n        labelWidth = formProps.labelWidth;\n        labelAlign = formProps.labelAlign;\n        labelPosition = formProps.labelPosition ? formProps.labelPosition : labelPosition;\n      } catch (error) {}\n\n      // eslint-disable-next-line react/destructuring-assignment\n      props.labelPosition ? (labelPosition = props.labelPosition) : null;\n\n      let { label, className, style, error, noLabel, ...rest } = props;\n\n      const appendCol = labelCol && wrapperCol;\n\n      const slotCls = classNames(\n        {\n          [`${prefix}-field`]: true,\n          [`${prefix}-slot`]: true,\n        },\n        className\n      );\n\n      const labelColCls = classNames({\n        [`${prefix}-col-${labelAlign}`]: true,\n      });\n\n      switch (true) {\n        case isObject(label) && !isVNode(label):\n          // do nothing\n          break;\n        case isString(label) || isNumber(label):\n          // @ts-ignore skip type check, the actual type is already determined\n          label = { text: label };\n          break;\n        case isVNode(label):\n          // @ts-ignore skip type check, the actual type is already determined\n          label = { text: label };\n          break;\n        default:\n          break;\n      }\n\n      let slotError = null;\n      if (typeof error !== undefined) {\n        let emProps = {};\n        switch (true) {\n          case isObject(error) && !isVNode(error):\n            // do nothing\n            emProps = error;\n            break;\n          case isString(error) || isNumber(error):\n            emProps = { error };\n            break;\n          case isVNode(error):\n            emProps = { error };\n            break;\n          default:\n            break;\n        }\n        slotError = <ErrorMessage {...emProps} />;\n      }\n\n      let mergeLabelProps = {\n        align: labelAlign,\n        width: labelWidth,\n        // @ts-ignore: After the above switch statement, label must be of object type\n        ...label,\n      };\n\n      let mainCls = classNames({\n        [`${prefix}-field-main`]: true,\n        [`${prefix}-slot-main`]: true,\n      });\n\n      switch (true) {\n        case !appendCol && !noLabel:\n          content = (\n            <>\n              <Label {...mergeLabelProps} />\n              <div class={mainCls}>\n                {children}\n                {slotError}\n              </div>\n            </>\n          );\n          break;\n        case !appendCol && noLabel:\n          content = (\n            <>\n              <div class={mainCls}>\n                {children}\n                {slotError}\n              </div>\n            </>\n          );\n          break;\n        case appendCol && labelPosition === 'top':\n          // When labelPosition is top, you need to add an overflow hidden div to the label, otherwise it will be arranged horizontally\n          content = (\n            <>\n              <div style={{ overflow: 'hidden' }}>\n                <Col {...labelCol} className={labelColCls}>\n                  <Label {...mergeLabelProps} />\n                </Col>\n              </div>\n              <Col>\n                {children}\n                {slotError}\n              </Col>\n            </>\n          );\n          break;\n        case appendCol && labelPosition !== 'top':\n          content = (\n            <>\n              <Col {...labelCol} className={labelColCls}>\n                <Label {...mergeLabelProps} />\n              </Col>\n              <Col>\n                {children}\n                {slotError}\n              </Col>\n            </>\n          );\n          break;\n        default:\n          break;\n      }\n\n      return (\n        <div class={slotCls} x-label-pos={labelPosition} style={style}>\n          {content}\n        </div>\n      );\n    };\n  },\n});\n\nexport default Slot;\n"],"names":["prefix","cssClasses","PREFIX","vuePropsType","className","String","style","Object","label","Number","Function","Array","noLabel","Boolean","labelPosition","error","Slot","defineComponent","props","setup","slots","context","updater","useFormUpdaterContext","children","getFragmentChildren","labelCol","wrapperCol","labelWidth","labelAlign","content","formProps","value","getFormProps","rest","appendCol","slotCls","classNames","labelColCls","isObject","isVNode","isString","isNumber","text","slotError","undefined","emProps","_createVNode","ErrorMessage","mergeLabelProps","align","width","mainCls","_Fragment","Label","overflow","Col","_mergeProps","default"],"mappings":"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"}