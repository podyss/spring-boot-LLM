import { CombineProps, VueJsxNode } from '../interface';
import { CSSProperties } from 'vue';
import type { BasicFieldError } from '@douyinfe/semi-foundation/lib/es/form/interface';
export type ReactFieldError = BasicFieldError | VueJsxNode;
export interface ErrorMessageProps {
    error?: ReactFieldError;
    className?: string;
    style?: CSSProperties;
    showValidateIcon?: boolean;
    validateStatus?: string;
    helpText?: VueJsxNode;
    isInInputGroup?: boolean;
    errorMessageId?: string;
    helpTextId?: string;
}
export declare const vuePropsType: CombineProps<ErrorMessageProps>;
declare const ErrorMessage: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    error: import("vue").PropType<ReactFieldError> | {
        type: import("vue").PropType<ReactFieldError>;
        default?: any;
        required?: false;
    };
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    style: import("vue").PropType<CSSProperties> | {
        type: import("vue").PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    showValidateIcon: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    validateStatus: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    helpText: import("vue").PropType<VueJsxNode> | {
        type: import("vue").PropType<VueJsxNode>;
        default?: any;
        required?: false;
    };
    isInInputGroup: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    errorMessageId: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    helpTextId: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    error: import("vue").PropType<ReactFieldError> | {
        type: import("vue").PropType<ReactFieldError>;
        default?: any;
        required?: false;
    };
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    style: import("vue").PropType<CSSProperties> | {
        type: import("vue").PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    showValidateIcon: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    validateStatus: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    helpText: import("vue").PropType<VueJsxNode> | {
        type: import("vue").PropType<VueJsxNode>;
        default?: any;
        required?: false;
    };
    isInInputGroup: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    errorMessageId: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    helpTextId: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default ErrorMessage;
