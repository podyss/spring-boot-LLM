{"version":3,"file":"baseForm.js","sources":["../../src/components/form/baseForm.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport FormFoundation from '@douyinfe/semi-foundation/form/foundation';\nimport type { BaseFormAdapter } from '@douyinfe/semi-foundation/form/foundation';\nimport { strings, cssClasses } from '@douyinfe/semi-foundation/form/constants';\nimport { getUuidv4 } from '@douyinfe/semi-foundation/utils/uuid';\nimport warning from '@douyinfe/semi-foundation/utils/warning';\nimport { FormStateContext, FormApiContext, FormUpdaterContext } from './context';\nimport { isEmptyChildren } from '../_base/reactUtils';\nimport Row from '../grid/row';\nimport { cloneDeep } from '../_utils/index';\nimport { noop } from 'lodash';\nimport '@douyinfe/semi-foundation/form/form.scss';\nimport type { BaseFormProps, FormState, FormApi, ErrorMsg, FormFCChild } from './interface';\nimport {\n  ComponentObjectPropsOptions,\n  createVNode,\n  CSSProperties,\n  defineComponent,\n  getCurrentInstance,\n  h,\n  nextTick,\n  onMounted,\n  onUnmounted,\n  PropType,\n  reactive,\n  useSlots,\n} from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport { CombineProps } from '../interface';\nimport ErrorMessage, { ReactFieldError } from './errorMessage';\nconst prefix = cssClasses.PREFIX;\n\ninterface BaseFormState {\n  formId: string;\n}\n\nconst propTypes: CombineProps<BaseFormProps> = {\n  'aria-label': PropTypes.string,\n  onSubmit: PropTypes.func as PropType<BaseFormProps['onSubmit']>,\n  onSubmitFail: PropTypes.func as PropType<BaseFormProps['onSubmitFail']>,\n  /* Triggered from update, including field mount/unmount/value change/blur/verification status change/error prompt change, input parameter is formState, currentField */\n  onChange: PropTypes.func as PropType<BaseFormProps['onChange']>,\n  onReset: PropTypes.func as PropType<BaseFormProps['onReset']>,\n  // Triggered when the value of the form is updated, only when the value of the subfield changes. The entry parameter is formState.values\n  onValueChange: PropTypes.func as PropType<BaseFormProps['onValueChange']>,\n  onErrorChange: PropTypes.func as PropType<BaseFormProps['onErrorChange']>,\n  autoScrollToError: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  allowEmpty: PropTypes.bool,\n  className: PropTypes.string,\n  component: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  disabled: PropTypes.bool,\n  extraTextPosition: PropTypes.string as PropType<BaseFormProps['extraTextPosition']>,\n  getFormApi: PropTypes.func as PropType<BaseFormProps['getFormApi']>,\n  initValues: PropTypes.object,\n  validateFields: PropTypes.func as PropType<BaseFormProps['validateFields']>,\n  layout: PropTypes.string as PropType<BaseFormProps['layout']>,\n  labelPosition: PropTypes.string as PropType<BaseFormProps['labelPosition']>,\n  labelWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  labelAlign: PropTypes.string as PropType<BaseFormProps['labelAlign']>,\n  labelCol: PropTypes.object, // Control labelCol {span: number, offset: number} for all field child nodes\n  render: PropTypes.func as PropType<BaseFormProps['render']>,\n  style: PropTypes.object,\n  showValidateIcon: PropTypes.bool,\n  stopValidateWithError: PropTypes.bool as PropType<BaseFormProps['stopValidateWithError']>,\n  stopPropagation: PropTypes.object as PropType<BaseFormProps['stopPropagation']>,\n  id: PropTypes.string,\n  wrapperCol: PropTypes.object, // Control wrapperCol {span: number, offset: number} for all field child nodes\n  trigger: [String, Array] as PropType<BaseFormProps['trigger']>,\n};\n\nconst defaultProps = {\n  onChange: noop,\n  onSubmitFail: noop,\n  onSubmit: noop,\n  onReset: noop,\n  onValueChange: noop,\n  onErrorChange: noop,\n  layout: 'vertical',\n  labelPosition: 'top',\n  allowEmpty: false,\n  autoScrollToError: false,\n  showValidateIcon: true,\n};\nexport const vuePropsType = vuePropsMake<BaseFormProps>(propTypes, defaultProps);\nconst Form = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Form',\n  setup(props, {expose}) {\n    const slots = useSlots();\n    let currentInstance = getCurrentInstance();\n\n    const state = reactive<BaseFormState>({\n      formId: '',\n    });\n\n    warning(\n      Boolean(props.component && props.render),\n      '[Semi Form] You should not use <Form component> and <Form render> in ths same time; <Form render> will be ignored'\n    );\n    warning(\n      props.component && slots.default && !isEmptyChildren(slots.default()),\n      '[Semi Form] You should not use <Form component> and <Form>{children}</Form> in ths same time; <Form>{slots.default()}</Form> will be ignored'\n    );\n    warning(\n      props.render && slots.default && !isEmptyChildren(slots.default()),\n      '[Semi Form] You should not use <Form render> and <Form>{children}</Form> in ths same time; <Form>{slots.default()}</Form> will be ignored'\n    );\n\n    const { adapter: adapterInject } = useBaseComponent<BaseFormProps>(props, state);\n    function adapter_(): BaseFormAdapter<BaseFormProps, BaseFormState> {\n      return {\n        ...adapterInject<BaseFormProps, BaseFormState>(),\n        cloneDeep,\n        notifySubmit: (values: any, e: any) => {\n          props.onSubmit(values, e);\n        },\n        notifySubmitFail: (errors, values: any, e: any) => {\n          props.onSubmitFail(errors, values, e);\n        },\n        forceUpdate: (callback?: () => void) => {\n          // TODO 重新渲染\n          // adapter.forceUpdate(callback);\n          // currentInstance.update()\n          // vue3 强制刷新\n          // fix: 组件卸载时可能会重复执行 hmr\n          nextTick(() => {\n            currentInstance.proxy.$forceUpdate();\n            nextTick(() => {\n              callback?.();\n            });\n          });\n        },\n        notifyChange: (formState: FormState) => {\n          props.onChange(formState);\n        },\n        notifyValueChange: (values: any, changedValues: any) => {\n          props.onValueChange(values, changedValues);\n        },\n        notifyErrorChange: (errors: Record<any, ReactFieldError>, changedError: Partial<Record<any, ReactFieldError>>) => {\n          props.onErrorChange(errors, changedError);\n        },\n        notifyReset: () => {\n          props.onReset();\n        },\n        initFormId: () => {\n          state.formId = getUuidv4();\n        },\n        getInitValues: () => props.initValues,\n        getFormProps: (keys: undefined | string | Array<string>) => {\n          if (typeof keys === 'undefined') {\n            return props;\n          } else if (typeof keys === 'string') {\n            return props[keys];\n          } else {\n            const props_ = {};\n            keys.forEach((key) => {\n              props_[key] = props[key];\n            });\n            return props_;\n          }\n        },\n        getAllErrorDOM: () => {\n          const { formId } = state;\n          const { id } = props;\n          const xId = id ? id : formId;\n          return document.querySelectorAll(`form[x-form-id=\"${xId}\"] .${cssClasses.PREFIX}-field-error-message`);\n        },\n        getFieldDOM: (field: string) => document.querySelector(`.${cssClasses.PREFIX}-field[x-field-id=\"${field}\"]`),\n        getFieldErrorDOM: (field: string) => {\n          const { formId } = state;\n          const { id } = props;\n          const xId = id ? id : formId;\n          let selector = `form[x-form-id=\"${xId}\"] .${cssClasses.PREFIX}-field[x-field-id=\"${field}\"] .${cssClasses.PREFIX}-field-error-message`;\n          return document.querySelector(selector);\n        },\n      };\n    }\n    const adapter = adapter_();\n    const foundation = new FormFoundation(adapter);\n    let formApi = foundation.getFormApi();\n    expose({\n      formApi\n    })\n\n    if (props.getFormApi) {\n      props.getFormApi(formApi as unknown as FormApi<any>);\n    }\n\n    onMounted(() => {\n      foundation.init();\n    });\n\n    onUnmounted(() => {\n      foundation.destroy();\n    });\n\n    function content() {\n      const { component, render } = props;\n      const formState = foundation.getFormState();\n      const props_ = {\n        formState,\n        formApi: foundation.getFormApi(),\n        values: formState.values,\n      };\n      if (component) {\n        return createVNode(component, props_);\n      }\n      if (render) {\n        return render(props_ as unknown as FormFCChild);\n      }\n      return slots.default?.(props_);\n    }\n\n    function submit(e: Event) {\n      e.preventDefault();\n      if (props.stopPropagation && props.stopPropagation.submit) {\n        e.stopPropagation();\n      }\n      foundation.submit(e);\n    }\n\n    function reset(e: Event) {\n      e.preventDefault();\n      if (props.stopPropagation && props.stopPropagation.reset) {\n        e.stopPropagation();\n      }\n      foundation.reset();\n    }\n\n    return () => {\n      const needClone = false;\n      const formState = foundation.getFormState(needClone);\n      const updaterApi = foundation.getModifyFormStateApi();\n      const { formId } = state;\n      // const children = slots.default?.()\n      const {\n        getFormApi,\n        onChange,\n        onSubmit,\n        onSubmitFail,\n        onErrorChange,\n        onValueChange,\n        component,\n        render,\n        validateFields,\n        initValues,\n        layout,\n        style,\n        className,\n        labelPosition,\n        labelWidth,\n        labelAlign,\n        labelCol,\n        wrapperCol,\n        allowEmpty,\n        autoScrollToError,\n        showValidateIcon,\n        stopValidateWithError,\n        extraTextPosition,\n        id,\n        trigger,\n        ...rest\n      } = props;\n\n      const formCls = classNames(prefix, className, {\n        [prefix + '-vertical']: layout === 'vertical',\n        [prefix + '-horizontal']: layout === 'horizontal',\n      });\n\n      const shouldAppendRow = wrapperCol && labelCol;\n\n      const formContent = (\n        <form style={style} {...rest} onReset={reset} onSubmit={submit} class={formCls} id={id ? id : formId} x-form-id={id ? id : formId}>\n          {content()}\n        </form>\n      );\n      const withRowForm = <Row>{formContent}</Row>;\n      return (\n        <FormUpdaterContext.Provider value={updaterApi}>\n          <FormApiContext.Provider value={formApi as any}>\n            <FormStateContext.Provider value={formState}>\n              {shouldAppendRow ? withRowForm : formContent}\n            </FormStateContext.Provider>\n          </FormApiContext.Provider>\n        </FormUpdaterContext.Provider>\n      );\n    };\n  },\n});\n\nexport default Form;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","prefix","cssClasses","PREFIX","propTypes","PropTypes","string","onSubmit","func","onSubmitFail","onChange","onReset","onValueChange","onErrorChange","autoScrollToError","oneOfType","bool","object","allowEmpty","className","component","node","disabled","extraTextPosition","getFormApi","initValues","validateFields","layout","labelPosition","labelWidth","number","labelAlign","labelCol","render","style","showValidateIcon","stopValidateWithError","stopPropagation","id","wrapperCol","trigger","String","Array","defaultProps","noop","vuePropsType","vuePropsMake","Form","defineComponent","props","name","setup","expose","slots","useSlots","currentInstance","getCurrentInstance","state","reactive","formId","warning","Boolean","default","isEmptyChildren","adapter","adapterInject","useBaseComponent","adapter_","cloneDeep","notifySubmit","values","e","notifySubmitFail","errors","forceUpdate","callback","nextTick","proxy","$forceUpdate","notifyChange","formState","notifyValueChange","changedValues","notifyErrorChange","changedError","notifyReset","initFormId","getUuidv4","getInitValues","getFormProps","keys","props_","forEach","key","getAllErrorDOM","xId","document","querySelectorAll","getFieldDOM","field","querySelector","getFieldErrorDOM","selector","foundation","FormFoundation","formApi","onMounted","init","onUnmounted","destroy","content","getFormState","createVNode","submit","preventDefault","reset","needClone","updaterApi","getModifyFormStateApi","rest","formCls","classNames","shouldAppendRow","formContent","_createVNode","_mergeProps","withRowForm","Row","FormUpdaterContext","Provider","FormApiContext","FormStateContext"],"mappings":"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"}