{"version":3,"file":"errorMessage.js","sources":["../../src/components/form/errorMessage.tsx"],"sourcesContent":["/* eslint-disable prefer-template */\nimport classNames from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport { cssClasses } from '@douyinfe/semi-foundation/form/constants';\nimport { IconAlertTriangle, IconAlertCircle } from '@kousum/semi-icons-vue';\nimport { CombineProps, VueJsxNode } from '../interface';\nimport { cloneVNode, ComponentObjectPropsOptions, CSSProperties, defineComponent, h, isVNode, useSlots } from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport type { BasicFieldError } from '@douyinfe/semi-foundation/form/interface';\n\nconst prefix = cssClasses.PREFIX;\n\nexport type ReactFieldError = BasicFieldError | VueJsxNode;\n\nexport interface ErrorMessageProps {\n  error?: ReactFieldError;\n  className?: string;\n  style?: CSSProperties;\n  showValidateIcon?: boolean;\n  validateStatus?: string;\n  helpText?: VueJsxNode;\n  isInInputGroup?: boolean;\n  errorMessageId?: string;\n  helpTextId?: string;\n}\n\nconst propTypes: CombineProps<ErrorMessageProps> = {\n  error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.array, PropTypes.node]),\n  className: PropTypes.string,\n  style: PropTypes.object,\n  validateStatus: PropTypes.string,\n  showValidateIcon: PropTypes.bool,\n  helpText: PropTypes.node,\n  isInInputGroup: PropTypes.bool,\n  // internal props\n  errorMessageId: PropTypes.string,\n  helpTextId: PropTypes.string,\n};\n\nexport const vuePropsType = vuePropsMake(propTypes, {});\nconst ErrorMessage = defineComponent({\n  props: { ...vuePropsType },\n  name: 'ErrorMessage',\n  setup(props, {}) {\n    const slots = useSlots();\n\n    function generatorText(error: ReactFieldError) {\n      const { helpTextId, errorMessageId } = props;\n      const propsError = props.error;\n      let id = errorMessageId;\n      if (!propsError) {\n        id = helpTextId;\n      }\n      if (typeof error === 'string') {\n        return <span id={id}>{error}</span>;\n      } else if (Array.isArray(error)) {\n        const err = error.filter((e) => e);\n        return err.length ? <span id={id}>{err.join(', ')}</span> : null;\n      } else if (isVNode(error)) {\n        return error;\n      }\n      return null;\n    }\n\n    return () => {\n      const { error, className, style, validateStatus, helpText, showValidateIcon, isInInputGroup } = props;\n      const cls = classNames(\n        {\n          [prefix + '-field-error-message']: Boolean(error),\n          [prefix + '-field-help-text']: Boolean(helpText),\n        },\n        className\n      );\n\n      if (!error && !helpText) {\n        return null;\n      }\n      const iconMap = {\n        warning: <IconAlertTriangle />,\n        error: <IconAlertCircle />,\n      };\n      const text = error ? generatorText(error) : generatorText(helpText);\n      const iconCls = `${prefix}-field-validate-status-icon`;\n      let icon = null;\n      if (isInInputGroup) {\n        icon = <IconAlertCircle className={iconCls} />;\n      } else {\n        if (iconMap[validateStatus]) {\n          icon = cloneVNode(iconMap[validateStatus], { class: iconCls });\n        }\n      }\n\n      return (\n        <div class={cls} style={style}>\n          {showValidateIcon && text ? icon : null}\n          {text}\n        </div>\n      );\n    };\n  },\n});\n\nexport default ErrorMessage;\n"],"names":["prefix","cssClasses","PREFIX","propTypes","error","PropTypes","oneOfType","bool","string","array","node","className","style","object","validateStatus","showValidateIcon","helpText","isInInputGroup","errorMessageId","helpTextId","vuePropsType","vuePropsMake","ErrorMessage","defineComponent","props","name","setup","useSlots","generatorText","propsError","id","_createVNode","Array","isArray","err","filter","e","length","join","isVNode","cls","classNames","Boolean","iconMap","warning","IconAlertTriangle","IconAlertCircle","text","iconCls","icon","cloneVNode","class"],"mappings":";;;;;;AAUA,MAAMA,IAASC,EAAWC,QAgBpBC,IAA6C;AAAA,EACjDC,OAAOC,EAAUC,UAAU,CAACD,EAAUE,MAAMF,EAAUG,QAAQH,EAAUI,OAAOJ,EAAUK,IAAI,CAAC;AAAA,EAC9FC,WAAWN,EAAUG;AAAAA,EACrBI,OAAOP,EAAUQ;AAAAA,EACjBC,gBAAgBT,EAAUG;AAAAA,EAC1BO,kBAAkBV,EAAUE;AAAAA,EAC5BS,UAAUX,EAAUK;AAAAA,EACpBO,gBAAgBZ,EAAUE;AAAAA;AAAAA,EAE1BW,gBAAgBb,EAAUG;AAAAA,EAC1BW,YAAYd,EAAUG;AACxB,GAEaY,IAAeC,EAAalB,GAAW,EAAE,GAChDmB,IAAeC,gBAAAA,EAAgB;AAAA,EACnCC,OAAO;AAAA,IAAE,GAAGJ;AAAAA,EAAc;AAAA,EAC1BK,MAAM;AAAA,EACNC,MAAMF,GAAO,IAAI;AACDG,IAAAA,EAAU;AAExB,aAASC,EAAcxB,GAAwB;AAC7C,YAAM;AAAA,QAAEe,YAAAA;AAAAA,QAAYD,gBAAAA;AAAAA,MAAgB,IAAGM,GACjCK,IAAaL,EAAMpB;AACzB,UAAI0B,IAAKZ;AAIT,UAHKW,MACHC,IAAKX,IAEH,OAAOf,KAAU;AACnB,eAAA2B,EAAA,QAAA;AAAA,UAAA,IAAiBD;AAAAA,QAAE,GAAA,CAAG1B,CAAK,CAAA;AACtB,UAAI4B,MAAMC,QAAQ7B,CAAK,GAAG;AAC/B,cAAM8B,IAAM9B,EAAM+B,OAAQC,CAAAA,MAAMA,CAAC;AACjC,eAAOF,EAAIG,SAAMN,EAAA,QAAA;AAAA,UAAA,IAAaD;AAAAA,QAAE,GAAA,CAAGI,EAAII,KAAK,IAAI,CAAC,KAAW;AAAA,MAC9D,WAAWC,EAAQnC,CAAK;AACtB,eAAOA;AAET,aAAO;AAAA,IACT;AAEA,WAAO,MAAM;AACX,YAAM;AAAA,QAAEA,OAAAA;AAAAA,QAAOO,WAAAA;AAAAA,QAAWC,OAAAA;AAAAA,QAAOE,gBAAAA;AAAAA,QAAgBE,UAAAA;AAAAA,QAAUD,kBAAAA;AAAAA,QAAkBE,gBAAAA;AAAAA,MAAgB,IAAGO,GAC1FgB,IAAMC,EACV;AAAA,QACE,CAACzC,IAAS,sBAAsB,GAAG0C,EAAQtC;AAAAA,QAC3C,CAACJ,IAAS,kBAAkB,GAAG0C,EAAQ1B;AAAAA,MACxC,GACDL,CACF;AAEA,UAAI,CAACP,KAAS,CAACY;AACb,eAAO;AAET,YAAM2B,IAAU;AAAA,QACdC,SAAOb,EAAAc,GAAuB,MAAA,IAAA;AAAA,QAC9BzC,OAAK2B,EAAAe,GAAA,MAAA,IAAA;AAAA,SAEDC,IAAenB,EAARxB,KAA6CY,CAAlB,GAClCgC,IAAU,GAAGhD,CAAM;AACzB,UAAIiD,IAAO;AACX,aAAIhC,IACFgC,IAAIlB,EAAAe,GAAA;AAAA,QAAA,WAA+BE;AAAAA,MAAW,GAAA,IAAA,IAE1CL,EAAQ7B,CAAc,MACxBmC,IAAOC,EAAWP,EAAQ7B,CAAc,GAAG;AAAA,QAAEqC,OAAOH;AAAAA,MAAQ,CAAC,IAIjEjB,EAAA,OAAA;AAAA,QAAA,OACcS;AAAAA,QAAG,OAAS5B;AAAAA,SACrBG,CAAAA,KAAoBgC,IAAOE,IAAO,MAClCF,CAAI,CAAA;AAAA;EAIb;AACF,CAAC;"}