{"version":3,"file":"useFieldApi.js","sources":["../../../src/components/form/hooks/useFieldApi.tsx"],"sourcesContent":["import useFormApi from './useFormApi';\nimport { FormApi } from '../interface';\nimport { ReactFieldError as FieldError } from '../errorMessage';\nimport {Ref} from \"vue\";\n\nconst buildFieldApi = (formApi: Ref<FormApi>, field: string) => ({\n    getError: () => formApi.value.getError(field),\n    setError: (error: FieldError) => formApi.value.setError(field, error),\n    getTouched: () => formApi.value.getTouched(field),\n    setTouched: (isTouched: boolean) => formApi.value.setTouched(field, isTouched),\n    getValue: () => formApi.value.getValue(field),\n    setValue: (value: any) => formApi.value.setValue(field, value),\n});\n\nfunction useFieldApi(field: string) {\n    const {context:formApi} = useFormApi();\n    const fieldApi = buildFieldApi(formApi, field);\n    return fieldApi;\n}\n\nexport default useFieldApi;\n"],"names":["buildFieldApi","formApi","field","getError","value","setError","error","getTouched","setTouched","isTouched","getValue","setValue","useFieldApi","context","useFormApi"],"mappings":";AAKA,MAAMA,IAAgBA,CAACC,GAAuBC,OAAmB;AAAA,EAC7DC,UAAUA,MAAMF,EAAQG,MAAMD,SAASD,CAAK;AAAA,EAC5CG,UAAWC,CAAAA,MAAsBL,EAAQG,MAAMC,SAASH,GAAOI,CAAK;AAAA,EACpEC,YAAYA,MAAMN,EAAQG,MAAMG,WAAWL,CAAK;AAAA,EAChDM,YAAaC,CAAAA,MAAuBR,EAAQG,MAAMI,WAAWN,GAAOO,CAAS;AAAA,EAC7EC,UAAUA,MAAMT,EAAQG,MAAMM,SAASR,CAAK;AAAA,EAC5CS,UAAWP,CAAAA,MAAeH,EAAQG,MAAMO,SAAST,GAAOE,CAAK;AACjE;AAEA,SAASQ,EAAYV,GAAe;AAChC,QAAM;AAAA,IAACW,SAAQZ;AAAAA,EAAQ,IAAGa,EAAU;AAEpC,SADiBd,EAAcC,GAASC,CAAK;AAEjD;"}