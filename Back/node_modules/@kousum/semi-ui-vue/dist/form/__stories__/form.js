import { createVNode as o } from "vue";
import t from "../__test__/FormDemo";
import r from "../__test__/WithFieldDemo";
import i from "../__test__/WithFieldDemo2";
import a from "../__test__/WithFormApiDemo";
import s from "../__test__/WithFormStateDemo";
const W = {
  /* ðŸ‘‡ The title prop is optional.
   * See https://storybook.js.org/docs/7.0/vue/configure/overview#configure-story-loading
   * to learn how to generate automatic titles
   */
  title: "Bè¾“å…¥ç±»/Form",
  render: (m) => ({
    setup() {
      const e = {
        FormDemo: t,
        WithFieldDemo: r,
        WithFieldDemo2: i,
        WithFormApiDemo: a,
        WithFormStateDemo: s
      }[m.demoName];
      return () => o("div", {
        style: {
          padding: "10px"
        }
      }, [o(e, null, null)]);
    }
  }),
  parameters: {
    // More on how to position stories at: https://storybook.js.org/docs/7.0/react/configure/story-layout
    layout: "fullscreen"
  },
  // This component will have an automatically generated docsPage entry: https://storybook.js.org/docs/7.0/vue/writing-docs/docs-page
  tags: ["autodocs"]
}, D = {
  args: {
    demoName: "FormDemo"
  }
}, f = {
  args: {
    demoName: "WithFieldDemo"
  }
}, u = {
  args: {
    demoName: "WithFieldDemo2"
  }
}, g = {
  args: {
    demoName: "WithFormApiDemo"
  }
}, N = {
  args: {
    demoName: "WithFormStateDemo"
  }
};
export {
  D as Form,
  f as WithField,
  u as WithField2,
  g as WithFormApi,
  N as WithFormState,
  W as default
};
//# sourceMappingURL=form.js.map
