{"version":3,"file":"index.js","sources":["../../src/components/collapsible/index.tsx"],"sourcesContent":["import type {\n  CollapsibleAdapter,\n  CollapsibleFoundationProps,\n  CollapsibleFoundationState,\n} from '@douyinfe/semi-foundation/collapsible/foundation';\nimport CollapsibleFoundation from '@douyinfe/semi-foundation/collapsible/foundation';\nimport * as PropTypes from '../PropTypes';\nimport { vuePropsMake } from '../PropTypes';\nimport cls from 'classnames';\nimport { cssClasses } from '@douyinfe/semi-foundation/collapsible/constants';\nimport '@douyinfe/semi-foundation/collapsible/collapsible.scss';\nimport {\n  ComponentObjectPropsOptions,\n  CSSProperties,\n  defineComponent,\n  h,\n  onBeforeUnmount,\n  onMounted, PropType,\n  reactive,\n  ref,\n  useSlots,\n  watch,\n} from 'vue';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport { CombineProps } from '../interface';\n\nexport interface CollapsibleProps extends CollapsibleFoundationProps {\n  motion?: boolean;\n  isOpen?: boolean;\n  duration?: number;\n  keepDOM?: boolean;\n  lazyRender?: boolean;\n  className?: string;\n  style?: CSSProperties;\n  collapseHeight?: number;\n  reCalcKey?: number | string;\n  id?: string;\n  onMotionEnd?: () => void;\n}\n\ninterface CollapsibleState extends CollapsibleFoundationState {\n  domInRenderTree: boolean;\n  domHeight: number;\n  visible: boolean;\n  isTransitioning: boolean;\n}\nconst propTypes: CombineProps<CollapsibleProps> = {\n  motion: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  duration: PropTypes.number,\n  keepDOM: PropTypes.bool,\n  lazyRender: PropTypes.bool,\n  collapseHeight: PropTypes.number,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  reCalcKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  id: PropTypes.string,\n  onMotionEnd: PropTypes.func as PropType<CollapsibleProps['onMotionEnd']>  ,\n  fade: PropTypes.bool,\n};\nconst defaultProps = {\n  isOpen: false,\n  duration: 250,\n  motion: true,\n  keepDOM: false,\n  lazyRender: false,\n  collapseHeight: 0,\n  fade: false,\n};\nexport const vuePropsType = vuePropsMake<CollapsibleProps>(propTypes, defaultProps);\nconst Collapsible = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Collapsible',\n  setup(props, {}) {\n    const slots = useSlots();\n\n    const domRef = ref();\n    let resizeObserver: ResizeObserver | null;\n    let hasBeenRendered: boolean = false;\n\n    const state = reactive<CollapsibleState>({\n      domInRenderTree: false,\n      domHeight: 0,\n      visible: props.isOpen,\n      isTransitioning: false,\n    });\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent<CollapsibleProps>(props, state);\n    function adapter_(): CollapsibleAdapter<CollapsibleProps, CollapsibleState> {\n      return {\n        ...adapterInject(),\n        setDOMInRenderTree: (domInRenderTree) => {\n          if (state.domInRenderTree !== domInRenderTree) {\n            state.domInRenderTree = domInRenderTree;\n          }\n        },\n        setDOMHeight: (domHeight) => {\n          if (state.domHeight !== domHeight) {\n            state.domHeight = domHeight;\n          }\n        },\n        setVisible: (visible) => {\n          if (state.visible !== visible) {\n            state.visible = visible;\n          }\n        },\n        setIsTransitioning: (isTransitioning) => {\n          if (state.isTransitioning !== isTransitioning) {\n            state.isTransitioning = isTransitioning;\n          }\n        },\n      };\n    }\n\n    const adapter = adapter_();\n    const foundation = new CollapsibleFoundation(adapter);\n    const getEntryInfo = (entry: ResizeObserverEntry) => {\n      //judge whether parent or self display none\n      let inRenderTree: boolean;\n      if (entry.borderBoxSize) {\n        inRenderTree = !(entry.borderBoxSize[0].blockSize === 0 && entry.borderBoxSize[0].inlineSize === 0);\n      } else {\n        inRenderTree = !(entry.contentRect.height === 0 && entry.contentRect.width === 0);\n      }\n\n      let height = 0;\n      if (entry.borderBoxSize) {\n        height = Math.ceil(entry.borderBoxSize[0].blockSize);\n      } else {\n        const target = entry.target as HTMLElement;\n        height = target.clientHeight;\n      }\n\n      return {\n        isShown: inRenderTree,\n        height,\n      };\n    };\n\n    onMounted(() => {\n      // super.componentDidMount();\n      resizeObserver = new ResizeObserver(handleResize);\n      resizeObserver.observe(domRef.value);\n      const domInRenderTree = isChildrenInRenderTree();\n      foundation.updateDOMInRenderTree(domInRenderTree);\n      if (domInRenderTree) {\n        foundation.updateDOMHeight(domRef.value.scrollHeight);\n      }\n    });\n\n    watch(\n      () => props.reCalcKey,\n      (value, oldValue, onCleanup) => {\n        foundation.updateDOMHeight(domRef.value.scrollHeight);\n      }\n    );\n    watch(\n      () => state.domInRenderTree,\n      (value, oldValue, onCleanup) => {\n        if (state.domInRenderTree) {\n          foundation.updateDOMHeight(domRef.value.scrollHeight);\n        }\n      }\n    );\n    watch(\n      () => props.isOpen,\n      (value, oldValue, onCleanup) => {\n        if (props.isOpen || !props.motion) {\n          foundation.updateVisible(props.isOpen);\n        }\n      }\n    );\n\n    watch([() => props.isOpen, () => props.motion], (value, oldValue, onCleanup) => {\n      if (props.motion && oldValue[0] !== props.isOpen) {\n        foundation.updateIsTransitioning(true);\n      }\n    });\n\n    onBeforeUnmount(() => {\n      // super.componentWillUnmount();\n      resizeObserver.disconnect();\n    });\n\n    const handleResize = (entryList: ResizeObserverEntry[]) => {\n      const entry = entryList[0];\n      if (entry) {\n        const entryInfo = getEntryInfo(entry);\n        foundation.updateDOMHeight(entryInfo.height);\n        foundation.updateDOMInRenderTree(entryInfo.isShown);\n      }\n    };\n\n    const isChildrenInRenderTree = () => {\n      if (domRef.value) {\n        return domRef.value.offsetHeight > 0;\n      }\n      return false;\n    };\n\n    return () => {\n      const wrapperStyle: CSSProperties = {\n        overflow: 'hidden',\n        height: (props.isOpen ? state.domHeight : props.collapseHeight) + 'px',\n        opacity: props.isOpen || !props.fade || props.collapseHeight !== 0 ? 1 : 0,\n        transitionDuration: `${props.motion && state.isTransitioning ? props.duration : 0}ms`,\n        ...props.style,\n      };\n      const wrapperCls = cls(\n        `${cssClasses.PREFIX}-wrapper`,\n        {\n          [`${cssClasses.PREFIX}-transition`]: props.motion && state.isTransitioning,\n        },\n        props.className\n      );\n\n      const children = slots.default?.();\n      const shouldRender =\n        (props.keepDOM && (props.lazyRender ? hasBeenRendered : true)) ||\n        props.collapseHeight !== 0 ||\n        state.visible ||\n        props.isOpen;\n\n      if (shouldRender && !hasBeenRendered) {\n        hasBeenRendered = true;\n      }\n\n      return (\n        <div\n          class={wrapperCls}\n          style={wrapperStyle}\n          onTransitionend={() => {\n            if (!props.isOpen) {\n              foundation.updateVisible(false);\n            }\n            foundation.updateIsTransitioning(false);\n            props.onMotionEnd?.();\n          }}\n          {...getDataAttr()}\n        >\n          <div x-semi-prop=\"children\" ref={domRef} style={{ overflow: 'hidden' }} id={props.id}>\n            {shouldRender && children}\n          </div>\n        </div>\n      );\n    };\n  },\n});\n\nexport default Collapsible;\n"],"names":["propTypes","motion","PropTypes","bool","isOpen","duration","number","keepDOM","lazyRender","collapseHeight","style","object","className","string","reCalcKey","oneOfType","id","onMotionEnd","func","fade","defaultProps","vuePropsType","vuePropsMake","Collapsible","defineComponent","props","name","setup","slots","useSlots","domRef","ref","resizeObserver","hasBeenRendered","state","reactive","domInRenderTree","domHeight","visible","isTransitioning","adapter","adapterInject","getDataAttr","useBaseComponent","adapter_","setDOMInRenderTree","setDOMHeight","setVisible","setIsTransitioning","foundation","CollapsibleFoundation","getEntryInfo","entry","inRenderTree","borderBoxSize","blockSize","inlineSize","contentRect","height","width","Math","ceil","target","clientHeight","isShown","onMounted","ResizeObserver","handleResize","observe","value","isChildrenInRenderTree","updateDOMInRenderTree","updateDOMHeight","scrollHeight","watch","oldValue","onCleanup","updateVisible","updateIsTransitioning","onBeforeUnmount","disconnect","entryList","entryInfo","offsetHeight","wrapperStyle","overflow","opacity","transitionDuration","wrapperCls","cls","cssClasses","PREFIX","children","default","shouldRender","_createVNode","_mergeProps","onTransitionend"],"mappings":"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"}