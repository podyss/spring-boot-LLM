/**
 * Implementation reference from: https://github.com/ant-design/ant-design/blob/master/components/grid/col.tsx
 */
import { CSSProperties, PropType } from 'vue';
import { CombineProps } from '../interface';
export interface ColSize {
    span?: number;
    order?: number;
    offset?: number;
    push?: number;
    pull?: number;
}
export interface ColProps {
    span?: number;
    order?: number;
    offset?: number;
    push?: number;
    pull?: number;
    className?: string;
    prefixCls?: string;
    style?: CSSProperties;
    xs?: number | ColSize;
    sm?: number | ColSize;
    md?: number | ColSize;
    lg?: number | ColSize;
    xl?: number | ColSize;
    xxl?: number | ColSize;
}
export declare const vuePropsType: CombineProps<ColProps>;
declare const Col: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    span: PropType<number> | {
        type: PropType<number>;
        default?: any;
        required?: false;
    };
    order: PropType<number> | {
        type: PropType<number>;
        default?: any;
        required?: false;
    };
    offset: PropType<number> | {
        type: PropType<number>;
        default?: any;
        required?: false;
    };
    push: PropType<number> | {
        type: PropType<number>;
        default?: any;
        required?: false;
    };
    pull: PropType<number> | {
        type: PropType<number>;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    prefixCls: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    xs: PropType<number | ColSize> | {
        type: PropType<number | ColSize>;
        default?: any;
        required?: false;
    };
    sm: PropType<number | ColSize> | {
        type: PropType<number | ColSize>;
        default?: any;
        required?: false;
    };
    md: PropType<number | ColSize> | {
        type: PropType<number | ColSize>;
        default?: any;
        required?: false;
    };
    lg: PropType<number | ColSize> | {
        type: PropType<number | ColSize>;
        default?: any;
        required?: false;
    };
    xl: PropType<number | ColSize> | {
        type: PropType<number | ColSize>;
        default?: any;
        required?: false;
    };
    xxl: PropType<number | ColSize> | {
        type: PropType<number | ColSize>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    span: PropType<number> | {
        type: PropType<number>;
        default?: any;
        required?: false;
    };
    order: PropType<number> | {
        type: PropType<number>;
        default?: any;
        required?: false;
    };
    offset: PropType<number> | {
        type: PropType<number>;
        default?: any;
        required?: false;
    };
    push: PropType<number> | {
        type: PropType<number>;
        default?: any;
        required?: false;
    };
    pull: PropType<number> | {
        type: PropType<number>;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    prefixCls: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    xs: PropType<number | ColSize> | {
        type: PropType<number | ColSize>;
        default?: any;
        required?: false;
    };
    sm: PropType<number | ColSize> | {
        type: PropType<number | ColSize>;
        default?: any;
        required?: false;
    };
    md: PropType<number | ColSize> | {
        type: PropType<number | ColSize>;
        default?: any;
        required?: false;
    };
    lg: PropType<number | ColSize> | {
        type: PropType<number | ColSize>;
        default?: any;
        required?: false;
    };
    xl: PropType<number | ColSize> | {
        type: PropType<number | ColSize>;
        default?: any;
        required?: false;
    };
    xxl: PropType<number | ColSize> | {
        type: PropType<number | ColSize>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default Col;
