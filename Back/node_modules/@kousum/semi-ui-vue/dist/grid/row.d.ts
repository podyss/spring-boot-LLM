import { CSSProperties, PropType } from 'vue';
import '@douyinfe/semi-foundation/lib/es/grid/grid.css';
import { CombineProps } from '../interface';
export declare const RowContext: {
    gutters: Gutter | [Gutter, Gutter];
};
export type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';
export type Gutter = number | Partial<Record<Breakpoint, number>>;
export interface RowProps {
    type?: 'flex';
    align?: 'top' | 'middle' | 'bottom';
    justify?: 'start' | 'end' | 'center' | 'space-around' | 'space-between';
    className?: string;
    style?: CSSProperties;
    gutter?: Gutter | [Gutter, Gutter];
    prefixCls?: string;
}
export interface RowState {
    screens: Partial<Record<Breakpoint, boolean>>;
}
export declare const vuePropsType: CombineProps<RowProps>;
declare const Row: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    type: PropType<"flex"> | {
        type: PropType<"flex">;
        default?: any;
        required?: false;
    };
    align: PropType<"middle" | "bottom" | "top"> | {
        type: PropType<"middle" | "bottom" | "top">;
        default?: any;
        required?: false;
    };
    justify: PropType<"end" | "start" | "center" | "space-around" | "space-between"> | {
        type: PropType<"end" | "start" | "center" | "space-around" | "space-between">;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    gutter: PropType<Gutter | [Gutter, Gutter]> | {
        type: PropType<Gutter | [Gutter, Gutter]>;
        default?: any;
        required?: false;
    };
    prefixCls: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    type: PropType<"flex"> | {
        type: PropType<"flex">;
        default?: any;
        required?: false;
    };
    align: PropType<"middle" | "bottom" | "top"> | {
        type: PropType<"middle" | "bottom" | "top">;
        default?: any;
        required?: false;
    };
    justify: PropType<"end" | "start" | "center" | "space-around" | "space-between"> | {
        type: PropType<"end" | "start" | "center" | "space-around" | "space-between">;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    gutter: PropType<Gutter | [Gutter, Gutter]> | {
        type: PropType<Gutter | [Gutter, Gutter]>;
        default?: any;
        required?: false;
    };
    prefixCls: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default Row;
