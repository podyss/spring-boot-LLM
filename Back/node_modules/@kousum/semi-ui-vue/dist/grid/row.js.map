{"version":3,"file":"row.js","sources":["../../src/components/grid/row.tsx"],"sourcesContent":["import {\n  defineComponent,\n  ref,\n  h,\n  Fragment,\n  CSSProperties,\n  reactive,\n  onMounted,\n  onUnmounted,\n  provide,\n  PropType,\n} from 'vue';\nimport classnames from 'classnames';\n\nimport { cssClasses } from '@douyinfe/semi-foundation/grid/constants';\nimport '@douyinfe/semi-foundation/grid/grid.scss';\nimport { registerMediaQuery } from '../_utils/index';\nimport { ComponentObjectPropsOptions } from 'vue';\nimport { CombineProps } from '../interface';\n\nconst responsiveArray = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\n\nexport const RowContext: { gutters: Gutter | [Gutter, Gutter] } = null;\n\nexport type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\n\nexport type Gutter = number | Partial<Record<Breakpoint, number>>;\n\nexport interface RowProps {\n  type?: 'flex';\n  align?: 'top' | 'middle' | 'bottom';\n  justify?: 'start' | 'end' | 'center' | 'space-around' | 'space-between';\n  className?: string;\n  style?: CSSProperties;\n  gutter?: Gutter | [Gutter, Gutter];\n  prefixCls?: string;\n}\n\nexport interface RowState {\n  screens: Partial<Record<Breakpoint, boolean>>;\n}\n\nconst responsiveMap = {\n  xs: '(max-width: 575px)',\n  sm: '(min-width: 576px)',\n  md: '(min-width: 768px)',\n  lg: '(min-width: 992px)',\n  xl: '(min-width: 1200px)',\n  xxl: '(min-width: 1600px)',\n};\n\nexport const vuePropsType: CombineProps<RowProps> = {\n  type: String as PropType<RowProps['type']>,\n  align: String as PropType<RowProps['align']>,\n  justify: String as PropType<RowProps['justify']>,\n  className: String,\n  style: [String, Object] as PropType<RowProps['style']>,\n  gutter: [Number, Array] as PropType<RowProps['gutter']>,\n  prefixCls: {\n    type: String,\n    default: cssClasses.PREFIX,\n  },\n};\nconst Row = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Row',\n  setup(props, { slots }) {\n    const RowContext = {\n      prefixCls: cssClasses.PREFIX,\n    };\n\n    const state = reactive({\n      screens: {\n        xs: true,\n        sm: true,\n        md: true,\n        lg: true,\n        xl: true,\n        xxl: true,\n      },\n    });\n\n    let unRegisters: Array<() => void> = [];\n\n    onMounted(() => {\n      unRegisters = Object.keys(responsiveMap).map((screen) =>\n        registerMediaQuery(responsiveMap[screen], {\n          match: () => {\n            if (typeof props.gutter !== 'object') {\n              return;\n            }\n            state.screens[screen] = true;\n          },\n          unmatch: () => {\n            if (typeof props.gutter !== 'object') {\n              return;\n            }\n            state.screens[screen] = true;\n          },\n        })\n      );\n    });\n\n    onUnmounted(() => {\n      unRegisters.forEach((unRegister) => unRegister());\n    });\n\n    function getGutter() {\n      const { gutter = 0 } = props;\n      const results: [number, number] = [0, 0];\n      const normalizedGutter = Array.isArray(gutter) ? gutter.slice(0, 2) : [gutter, 0];\n      normalizedGutter.forEach((g, index) => {\n        if (typeof g === 'object') {\n          for (let i = 0; i < responsiveArray.length; i++) {\n            const breakpoint = responsiveArray[i];\n            if (state.screens[breakpoint] && g[breakpoint] !== undefined) {\n              results[index] = g[breakpoint];\n              break;\n            }\n          }\n        } else {\n          results[index] = g || 0;\n        }\n      });\n      return results;\n    }\n\n    provide('gutters', getGutter());\n\n    return () => {\n      const { prefixCls, type, justify, align, className, style, ...others } = props;\n      const gutters = getGutter();\n\n      const prefix = `${prefixCls}-row`;\n\n      const classes = classnames(\n        {\n          [prefix]: type !== 'flex',\n          [`${prefix}-${type}`]: type,\n          [`${prefix}-${type}-${justify}`]: type && justify,\n          [`${prefix}-${type}-${align}`]: type && align,\n        },\n        className\n      );\n      const rowStyle = {\n        ...(gutters[0] > 0\n          ? {\n              marginLeft: gutters[0] / -2,\n              marginRight: gutters[0] / -2,\n            }\n          : {}),\n        ...(gutters[1] > 0\n          ? {\n              marginTop: gutters[1] / -2,\n              marginBottom: gutters[1] / -2,\n            }\n          : {}),\n        ...style,\n      };\n\n      const otherProps = { ...others };\n      delete otherProps.gutter;\n      return (\n        <div {...otherProps} class={classes} style={rowStyle}>\n          {slots.default ? slots.default() : null}\n        </div>\n      );\n    };\n  },\n});\n\nexport default Row;\n"],"names":["responsiveArray","RowContext","responsiveMap","xs","sm","md","lg","xl","xxl","vuePropsType","type","String","align","justify","className","style","Object","gutter","Number","Array","prefixCls","default","cssClasses","PREFIX","Row","defineComponent","props","name","setup","slots","state","reactive","screens","unRegisters","onMounted","keys","map","screen","registerMediaQuery","match","unmatch","onUnmounted","forEach","unRegister","getGutter","results","normalizedGutter","isArray","slice","g","index","i","length","breakpoint","undefined","provide","others","gutters","prefix","classes","classnames","rowStyle","marginLeft","marginRight","marginTop","marginBottom","otherProps","_createVNode","_mergeProps"],"mappings":"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"}