{"version":3,"file":"index.js","sources":["../../src/components/timeline/index.tsx"],"sourcesContent":["import cls from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport '@douyinfe/semi-foundation/timeline/timeline.scss';\nimport { cssClasses, strings } from '@douyinfe/semi-foundation/timeline/constants';\nimport Item, { TimelineItemProps } from './item';\nimport {\n  cloneVNode,\n  ComponentObjectPropsOptions,\n  CSSProperties,\n  defineComponent,\n  h,\n  isVNode,\n  PropType,\n  useAttrs,\n  useSlots,\n  VNode,\n} from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { AriaAttributes } from '../AriaAttributes';\nimport { CombineProps, VueJsxNode } from '../interface';\nimport getDataAttr from '@douyinfe/semi-foundation/utils/getDataAttr';\n\nexport type { TimelineItemProps } from './item';\n\nexport interface Data extends TimelineItemProps {\n  content: VueJsxNode;\n}\n\nexport interface TimelineProps extends Pick<AriaAttributes, 'aria-label'> {\n  mode?: 'left' | 'right' | 'center' | 'alternate';\n  className?: string;\n  style?: CSSProperties;\n  dataSource?: Data[];\n}\n\nconst prefixCls = cssClasses.PREFIX;\n\nconst propTypes: CombineProps<TimelineProps> = {\n  mode: PropTypes.string as PropType<TimelineProps['mode']>,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  dataSource: PropTypes.array,\n  'aria-label': PropTypes.string,\n};\nconst defaultProps = {\n  mode: 'left',\n};\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst Timeline = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Timeline',\n  setup(props, {}) {\n    const slots = useSlots();\n    const attr = useAttrs();\n\n    const getPosCls = (ele: VNode, idx: number) => {\n      const { mode } = props;\n      if (mode === 'alternate') {\n        if (ele.props.position) {\n          return `${prefixCls}-item-${ele.props.position}`;\n        }\n        return idx % 2 === 0 ? `${prefixCls}-item-left` : `${prefixCls}-item-right`;\n      }\n      if (mode === 'center') {\n        if (ele.props.position) {\n          return `${prefixCls}-item-${ele.props.position}`;\n        }\n        return `${prefixCls}-item-left`;\n      }\n      if (mode === 'left' || mode === 'right') {\n        return `${prefixCls}-item-${mode}`;\n      }\n      if (ele.props.position) {\n        return `${prefixCls}-item-${ele.props.position}`;\n      }\n      return '';\n    };\n\n    const addClassName = (items: VNode[]) =>\n      items.map((ele, idx) => {\n        if (isVNode(ele)) {\n          return cloneVNode(ele, {\n            // @ts-ignore\n            className: cls(ele.props.class, getPosCls(ele, idx)),\n          });\n        }\n        return ele;\n      });\n\n    return () => {\n      const children = slots.default?.();\n      const { className, style, mode, dataSource, ...rest } = props;\n      const classString = cls(prefixCls, className, { [`${prefixCls}-${mode}`]: mode });\n      let childrenList;\n      if (dataSource && dataSource.length) {\n        const items = dataSource.map((item, index) => (\n          <Item key={`timeline-item-${index}`} {...item}>\n            {item.content}\n          </Item>\n        ));\n        childrenList = addClassName(items);\n      }\n      const items = childrenList || addClassName(children);\n\n      return (\n        <ul aria-label={props['aria-label']} style={style} class={classString} {...getDataAttr({ ...rest, ...attr })}>\n          {items}\n        </ul>\n      );\n    };\n  },\n});\n\nexport type TimeLineType = typeof Timeline & {\n  Item: typeof Item\n}\nconst BaseTimeline = Timeline as TimeLineType\nBaseTimeline.Item = Item\nexport default BaseTimeline;\nexport { Item as TimelineItem };\n"],"names":["prefixCls","cssClasses","PREFIX","propTypes","mode","PropTypes","string","className","style","object","dataSource","array","defaultProps","vuePropsType","vuePropsMake","Timeline","defineComponent","props","name","setup","slots","useSlots","attr","useAttrs","getPosCls","ele","idx","position","addClassName","items","map","isVNode","cloneVNode","cls","class","children","default","rest","classString","childrenList","length","item","index","_createVNode","Item","_mergeProps","content","getDataAttr","BaseTimeline"],"mappings":";;;;;;;;;AAmCA,MAAMA,IAAYC,EAAWC,QAEvBC,IAAyC;AAAA,EAC7CC,MAAMC,EAAUC;AAAAA,EAChBC,WAAWF,EAAUC;AAAAA,EACrBE,OAAOH,EAAUI;AAAAA,EACjBC,YAAYL,EAAUM;AAAAA,EACtB,cAAcN,EAAUC;AAC1B,GACMM,IAAe;AAAA,EACnBR,MAAM;AACR,GACaS,IAAeC,EAAaX,GAAWS,CAAY,GAC1DG,IAAWC,gBAAAA,EAAgB;AAAA,EAC/BC,OAAO;AAAA,IAAE,GAAGJ;AAAAA,EAAc;AAAA,EAC1BK,MAAM;AAAA,EACNC,MAAMF,GAAO,IAAI;AACf,UAAMG,IAAQC,KACRC,IAAOC,KAEPC,IAAYA,CAACC,GAAYC,MAAgB;AAC7C,YAAM;AAAA,QAAEtB,MAAAA;AAAAA,MAAM,IAAGa;AACjB,aAAIb,MAAS,cACPqB,EAAIR,MAAMU,WACL,GAAG3B,CAAS,SAASyB,EAAIR,MAAMU,QAAQ,KAEzCD,IAAM,MAAM,IAAI,GAAG1B,CAAS,eAAe,GAAGA,CAAS,gBAE5DI,MAAS,WACPqB,EAAIR,MAAMU,WACL,GAAG3B,CAAS,SAASyB,EAAIR,MAAMU,QAAQ,KAEzC,GAAG3B,CAAS,eAEjBI,MAAS,UAAUA,MAAS,UACvB,GAAGJ,CAAS,SAASI,CAAI,KAE9BqB,EAAIR,MAAMU,WACL,GAAG3B,CAAS,SAASyB,EAAIR,MAAMU,QAAQ,KAEzC;AAAA,OAGHC,IAAgBC,CAAAA,MACpBA,EAAMC,IAAI,CAACL,GAAKC,MACVK,EAAQN,CAAG,IACNO,EAAWP,GAAK;AAAA;AAAA,MAErBlB,WAAW0B,EAAIR,EAAIR,MAAMiB,OAAOV,EAAUC,GAAKC,CAAG,CAAC;AAAA,IACrD,CAAC,IAEID,CACR;AAEH,WAAO,MAAM;;AACX,YAAMU,KAAWf,IAAAA,EAAMgB,YAANhB,gBAAAA,EAAAA,KAAAA,IACX;AAAA,QAAEb,WAAAA;AAAAA,QAAWC,OAAAA;AAAAA,QAAOJ,MAAAA;AAAAA,QAAMM,YAAAA;AAAAA,QAAY,GAAG2B;AAAAA,MAAM,IAAGpB,GAClDqB,IAAcL,EAAIjC,GAAWO,GAAW;AAAA,QAAE,CAAC,GAAGP,CAAS,IAAII,CAAI,EAAE,GAAGA;AAAAA,MAAK,CAAC;AAChF,UAAImC;AACJ,UAAI7B,KAAcA,EAAW8B,QAAQ;AACnC,cAAMX,IAAQnB,EAAWoB,IAAI,CAACW,GAAMC,MAAKC,EAAAC,GAAAC,EAAA;AAAA,UAAA,KAC5B,iBAAiBH,CAAK;AAAA,QAAE,GAAMD,CAAI,GAAA;AAAA,UAAAL,SAAAA,MAC1CK,CAAAA,EAAKK,OAAO;AAAA,QAAA,CAAA,CAEhB;AACDP,QAAAA,IAAeX,EAAaC,CAAK;AAAA,MACnC;AACA,YAAMA,IAAQU,KAAgBX,EAAaO,CAAQ;AAEnD,aAAAQ,QAAAE,EAAA;AAAA,QAAA,cACkB5B,EAAM,YAAY;AAAA,QAAC,OAAST;AAAAA,QAAK,OAAS8B;AAAAA,MAAW,GAAMS,EAAY;AAAA,QAAE,GAAGV;AAAAA,QAAM,GAAGf;AAAAA,OAAM,CAAC,IACzGO,CAAK,CAAA;AAAA;EAId;AACF,CAAC,GAKKmB,IAAejC;AACrBiC,EAAaJ,OAAOA;"}