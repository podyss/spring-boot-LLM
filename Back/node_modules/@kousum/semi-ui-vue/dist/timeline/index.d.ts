import '@douyinfe/semi-foundation/lib/es/timeline/timeline.css';
import Item, { TimelineItemProps } from './item';
import { CSSProperties, PropType } from 'vue';
import { AriaAttributes } from '../AriaAttributes';
import { CombineProps, VueJsxNode } from '../interface';
export type { TimelineItemProps } from './item';
export interface Data extends TimelineItemProps {
    content: VueJsxNode;
}
export interface TimelineProps extends Pick<AriaAttributes, 'aria-label'> {
    mode?: 'left' | 'right' | 'center' | 'alternate';
    className?: string;
    style?: CSSProperties;
    dataSource?: Data[];
}
export declare const vuePropsType: CombineProps<TimelineProps>;
declare const Timeline: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    mode: PropType<"alternate" | "left" | "right" | "center"> | {
        type: PropType<"alternate" | "left" | "right" | "center">;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    dataSource: PropType<Data[]> | {
        type: PropType<Data[]>;
        default?: any;
        required?: false;
    };
    'aria-label': PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    mode: PropType<"alternate" | "left" | "right" | "center"> | {
        type: PropType<"alternate" | "left" | "right" | "center">;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    dataSource: PropType<Data[]> | {
        type: PropType<Data[]>;
        default?: any;
        required?: false;
    };
    'aria-label': PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export type TimeLineType = typeof Timeline & {
    Item: typeof Item;
};
declare const BaseTimeline: TimeLineType;
export default BaseTimeline;
export { Item as TimelineItem };
