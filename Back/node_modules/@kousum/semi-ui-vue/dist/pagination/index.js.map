{"version":3,"file":"index.js","sources":["../../src/components/pagination/index.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport { FixedSizeList as List } from '@kousum/vue3-window';\nimport { noop } from 'lodash';\n\nimport PaginationFoundation, {\n  AdapterPageList,\n  KeyDownHandler,\n  PageList,\n  PaginationAdapter,\n} from '@douyinfe/semi-foundation/pagination/foundation';\nimport { cssClasses, numbers } from '@douyinfe/semi-foundation/pagination/constants';\nimport '@douyinfe/semi-foundation/pagination/pagination.scss';\nimport { numbers as popoverNumbers } from '@douyinfe/semi-foundation/popover/constants';\nimport { IconChevronLeft, IconChevronRight } from '@kousum/semi-icons-vue';\nimport warning from '@douyinfe/semi-foundation/utils/warning';\n\nimport LocaleConsumer from '../locale/localeConsumer';\nimport { Locale } from '../locale/interface';\nimport Select, { SelectOption } from '../select/index';\nimport InputNumber from '../inputNumber/index';\nimport Popover from '../popover/index';\nimport { Position } from '../tooltip';\nimport { CombineProps, VueJsxNode } from '../interface';\nimport {\n  ComponentObjectPropsOptions,\n  CSSProperties,\n  defineComponent,\n  h,\n  onMounted,\n  onUnmounted,\n  PropType,\n  reactive,\n  useSlots,\n  VNode,\n  watch,\n} from 'vue';\nimport { useConfigContext } from '../configProvider/context/Consumer';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport { vuePropsMake } from '../PropTypes';\n\nconst prefixCls = cssClasses.PREFIX;\n\nexport interface PaginationProps {\n  total?: number;\n  showTotal?: boolean;\n  pageSize?: number;\n  pageSizeOpts?: Array<number>;\n  size?: 'small' | 'default';\n  currentPage?: number;\n  defaultCurrentPage?: number;\n  onPageChange?: (currentPage: number) => void;\n  onPageSizeChange?: (newPageSize: number) => void;\n  onChange?: (currentPage: number, pageSize: number) => void;\n  prevText?: VueJsxNode;\n  nextText?: VueJsxNode;\n  showSizeChanger?: boolean;\n  showQuickJumper?: boolean;\n  popoverZIndex?: number;\n  popoverPosition?: PopoverPosition;\n  style?: CSSProperties;\n  className?: string;\n  hideOnSinglePage?: boolean;\n  hoverShowPageSelect?: boolean;\n  disabled?: boolean;\n\n  position?: string;\n}\n\nexport interface PaginationState {\n  total: number;\n  showTotal: boolean;\n  currentPage: number;\n  pageSize: number;\n  pageList: PageList;\n  prevDisabled: boolean;\n  quickJumpPage: string | number;\n  nextDisabled: boolean;\n  restLeftPageList: number[];\n  restRightPageList: number[];\n  allPageNumbers: number[];\n}\n\nexport type PaginationLocale = Locale['Pagination'];\nexport type PopoverPosition = Position;\nexport type { PageList };\n\nconst propTypes: CombineProps<PaginationProps> = {\n  total: PropTypes.number,\n  showTotal: PropTypes.bool,\n  pageSize: PropTypes.number,\n  pageSizeOpts: PropTypes.array,\n  size: PropTypes.string as PropType<PaginationProps['size']>,\n  currentPage: PropTypes.number,\n  defaultCurrentPage: PropTypes.number,\n  onPageChange: PropTypes.func as PropType<PaginationProps['onPageChange']>,\n  onPageSizeChange: PropTypes.func as PropType<PaginationProps['onPageSizeChange']>,\n  onChange: PropTypes.func as PropType<PaginationProps['onChange']>,\n  prevText: PropTypes.node,\n  nextText: PropTypes.node,\n  showSizeChanger: PropTypes.bool,\n  popoverZIndex: PropTypes.number,\n  popoverPosition: PropTypes.string as PropType<PaginationProps['popoverPosition']>,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  hideOnSinglePage: PropTypes.bool,\n  hoverShowPageSelect: PropTypes.bool,\n  showQuickJumper: PropTypes.bool,\n  disabled: PropTypes.bool,\n\n  position: PropTypes.string as PropType<PaginationProps['position']>,\n};\n\nconst defaultProps = {\n  total: 1,\n  popoverZIndex: popoverNumbers.DEFAULT_Z_INDEX,\n  showTotal: false,\n  pageSize: null as null,\n  pageSizeOpts: numbers.PAGE_SIZE_OPTION,\n  defaultCurrentPage: 1,\n  size: 'default',\n  onPageChange: noop,\n  onPageSizeChange: noop,\n  onChange: noop,\n  showSizeChanger: false,\n  className: '',\n  hideOnSinglePage: false,\n  showQuickJumper: false,\n  disabled: false,\n};\nexport const vuePropsType = vuePropsMake<PaginationProps>(propTypes, defaultProps);\nconst Pagination = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Pagination',\n  setup(props, {}) {\n    const slots = useSlots();\n    const { context } = useConfigContext();\n    const total = props.total;\n\n    const pageSize = props.pageSize || props.pageSizeOpts[0] || numbers.DEFAULT_PAGE_SIZE; // Use pageSize first, use the first of pageSizeOpts when not, use the default value when none\n\n    const shouldFillAllNumber = props.size === 'small' && props.hoverShowPageSelect && !props.disabled;\n\n    const state = reactive<PaginationState>({\n      total,\n      showTotal: props.showTotal,\n      currentPage: props.currentPage || props.defaultCurrentPage,\n      pageSize,\n      pageList: [],\n      prevDisabled: false,\n      nextDisabled: false,\n      restLeftPageList: [],\n      restRightPageList: [],\n      quickJumpPage: '',\n      allPageNumbers: shouldFillAllNumber ? Array.from({ length: Math.ceil(total / pageSize) }, (v, i) => i + 1) : [], // only need to count in smallPage mode, when props.size = small\n    });\n\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent<PaginationProps>(props, state);\n    function adapter_(): PaginationAdapter<PaginationProps, PaginationState> {\n      return {\n        ...adapterInject(),\n        setPageList: (pageListState: AdapterPageList) => {\n          const { pageList, restLeftPageList, restRightPageList } = pageListState;\n          state.pageList = pageList;\n          state.restLeftPageList = restLeftPageList;\n          state.restRightPageList = restRightPageList;\n        },\n        setDisabled: (prevIsDisabled: boolean, nextIsDisabled: boolean) => {\n          state.prevDisabled = prevIsDisabled;\n          state.nextDisabled = nextIsDisabled;\n        },\n        updateTotal: (total: number) => (state.total = total),\n        updatePageSize: (pageSize: number) => (state.pageSize = pageSize),\n        updateQuickJumpPage: (quickJumpPage: string | number) => (state.quickJumpPage = quickJumpPage),\n        // updateRestPageList: () => {},\n        setCurrentPage: (pageIndex: number) => {\n          state.currentPage = pageIndex;\n        },\n        registerKeyDownHandler: (handler: KeyDownHandler) => {\n          document.addEventListener('keydown', handler);\n        },\n        updateAllPageNumbers: (allPageNumbers: number[]) => (state.allPageNumbers = allPageNumbers),\n        unregisterKeyDownHandler: (handler: KeyDownHandler) => {\n          document.removeEventListener('keydown', handler);\n        },\n        notifyPageChange: (pageIndex: number) => {\n          props.onPageChange(pageIndex);\n        },\n        notifyPageSizeChange: (pageSize: number) => {\n          props.onPageSizeChange(pageSize);\n        },\n        notifyChange: (pageIndex: number, pageSize: number) => {\n          props.onChange(pageIndex, pageSize);\n        },\n      };\n    }\n\n    const adapter = adapter_();\n    const foundation = new PaginationFoundation(adapter);\n    warning(\n      Boolean(props.showSizeChanger && props.hideOnSinglePage),\n      '[Semi Pagination] You should not use showSizeChanger and hideOnSinglePage in ths same time. At this time, hideOnSinglePage no longer takes effect, otherwise there may be a problem that the switch entry disappears'\n    );\n    onMounted(() => {\n      foundation.init();\n    });\n    onUnmounted(() => {\n      foundation.destroy();\n    });\n    watch(\n      [() => props.currentPage, () => props.total, () => props.pageSize],\n      (value, [prevPropsCurrentPage, prevPropsTotal, prevPropsPageSize], onCleanup) => {\n        const pagerProps = {\n          currentPage: props.currentPage,\n          total: props.total,\n          pageSize: props.pageSize,\n        };\n\n        let pagerHasChanged = false;\n        let allPageNumberNeedUpdate = false;\n\n        if (prevPropsCurrentPage !== props.currentPage) {\n          pagerHasChanged = true;\n          // foundation.updatePage(props.currentPage);\n        }\n\n        if (prevPropsTotal !== props.total) {\n          pagerHasChanged = true;\n          allPageNumberNeedUpdate = true;\n        }\n\n        if (prevPropsPageSize !== props.pageSize) {\n          pagerHasChanged = true;\n          allPageNumberNeedUpdate = true;\n        }\n\n        if (pagerHasChanged) {\n          foundation.updatePage(pagerProps.currentPage, pagerProps.total, pagerProps.pageSize);\n        }\n\n        if (allPageNumberNeedUpdate) {\n          foundation.updateAllPageNumbers(pagerProps.total, pagerProps.pageSize);\n        }\n      }\n    );\n\n    function renderPrevBtn() {\n      const { prevText, disabled } = props;\n      const { prevDisabled } = state;\n      const isDisabled = prevDisabled || disabled;\n      const preClassName = classNames({\n        [`${prefixCls}-item`]: true,\n        [`${prefixCls}-prev`]: true,\n        [`${prefixCls}-item-disabled`]: isDisabled,\n      });\n      return (\n        <li\n          role=\"button\"\n          aria-disabled={isDisabled ? true : false}\n          aria-label=\"Previous\"\n          onClick={(e) => !isDisabled && foundation.goPrev()}\n          class={preClassName}\n          x-semi-prop=\"prevText\"\n        >\n          {prevText || <IconChevronLeft size=\"large\" />}\n        </li>\n      );\n    }\n\n    function renderNextBtn() {\n      const { nextText, disabled } = props;\n      const { nextDisabled } = state;\n      const isDisabled = nextDisabled || disabled;\n      const nextClassName = classNames({\n        [`${prefixCls}-item`]: true,\n        [`${prefixCls}-item-disabled`]: isDisabled,\n        [`${prefixCls}-next`]: true,\n      });\n      return (\n        <li\n          role=\"button\"\n          aria-disabled={isDisabled ? true : false}\n          aria-label=\"Next\"\n          onClick={(e) => !isDisabled && foundation.goNext()}\n          class={nextClassName}\n          x-semi-prop=\"nextText\"\n        >\n          {nextText || <IconChevronRight size=\"large\" />}\n        </li>\n      );\n    }\n\n    function renderPageSizeSwitch(locale: PaginationLocale) {\n      // rtl modify the default position\n      const { direction } = context.value;\n      const defaultPopoverPosition = direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n      const { showSizeChanger, popoverPosition = defaultPopoverPosition, disabled, popoverZIndex } = props;\n      const { pageSize } = state;\n      const switchCls = classNames(`${prefixCls}-switch`);\n      if (!showSizeChanger) {\n        return null;\n      }\n\n      const newPageSizeOpts = foundation.pageSizeInOpts();\n      const pageSizeToken = locale.pageSize;\n      const options = newPageSizeOpts.map((size: number) => (\n        <SelectOption value={size} key={size}>\n          <span>{pageSizeToken.replace('${pageSize}', size.toString())}</span>\n        </SelectOption>\n      ));\n      return (\n        <div class={switchCls}>\n          <Select\n            aria-label=\"Page size selector\"\n            disabled={disabled}\n            onChange={(newPageSize) => {\n              foundation.changePageSize(newPageSize as any);\n            }}\n            value={pageSize}\n            key={pageSize}\n            position={popoverPosition || 'bottomRight'}\n            clickToHide\n            zIndex={popoverZIndex}\n            dropdownClassName={`${prefixCls}-select-dropdown`}\n          >\n            {options}\n          </Select>\n        </div>\n      );\n    }\n\n    function renderQuickJump(locale: PaginationLocale) {\n      const { showQuickJumper, disabled } = props;\n      const { quickJumpPage, total, pageSize } = state;\n      if (!showQuickJumper) {\n        return null;\n      }\n      const totalPageNum = foundation._getTotalPageNumber(total, pageSize);\n      const isDisabled = totalPageNum === 1 || disabled;\n      const quickJumpCls = classNames({\n        [`${prefixCls}-quickjump`]: true,\n        [`${prefixCls}-quickjump-disabled`]: isDisabled,\n      });\n\n      return (\n        <div class={quickJumpCls}>\n          <span>{locale.jumpTo}</span>\n          <InputNumber\n            value={quickJumpPage}\n            className={`${prefixCls}-quickjump-input-number`}\n            hideButtons\n            disabled={isDisabled}\n            onBlur={(e: FocusEvent) => foundation.handleQuickJumpBlur()}\n            onEnterPress={(e: KeyboardEvent) => foundation.handleQuickJumpEnterPress((e.target as any).value)}\n            onChange={(v: string | number) => foundation.handleQuickJumpNumberChange(v)}\n          />\n          <span>{locale.page}</span>\n        </div>\n      );\n    }\n\n    function renderPageList() {\n      const { pageList, currentPage, restLeftPageList, restRightPageList } = state;\n      const { popoverPosition, popoverZIndex, disabled } = props;\n\n      return pageList.map((page, i) => {\n        const pageListClassName = classNames(`${prefixCls}-item`, {\n          [`${prefixCls}-item-active`]: currentPage === page,\n          [`${prefixCls}-item-all-disabled`]: disabled,\n          [`${prefixCls}-item-all-disabled-active`]: currentPage === page && disabled,\n          // [`${prefixCls}-item-rest-opening`]: (i < 3 && isLeftRestHover && page ==='...') || (i > 3 && isRightRestHover && page === '...')\n        });\n        const pageEl = (\n          <li\n            key={`${page}${i}`}\n            onClick={() => !disabled && foundation.goPage(page)}\n            class={pageListClassName}\n            aria-label={page === '...' ? 'More' : `Page ${page}`}\n            aria-current={currentPage === page ? 'page' : false}\n          >\n            {page}\n          </li>\n        );\n        if (page === '...' && !disabled) {\n          let content;\n          i < 3 ? (content = restLeftPageList) : (content = restRightPageList);\n          return (\n            <Popover\n              rePosKey={props.currentPage}\n              trigger=\"hover\"\n              // onVisibleChange={visible=>handleRestHover(visible, i < 3 ? 'left' : 'right')}\n              content={renderRestPageList(content)}\n              key={`${page}${i}`}\n              position={popoverPosition}\n              zIndex={popoverZIndex}\n            >\n              {pageEl}\n            </Popover>\n          );\n        }\n        return pageEl;\n      });\n    }\n\n    function renderRestPageList(restList: ('...' | number)[]) {\n      // The number of pages may be tens of thousands, here is virtualized with the help of react-window\n      const { direction } = context.value;\n      const className = classNames(`${prefixCls}-rest-item`);\n      const count = restList.length;\n      const row = (item: { index: number; style: CSSProperties }) => {\n        const { index, style } = item;\n        const page = restList[index];\n        return (\n          <div\n            role=\"listitem\"\n            key={`${page}${index}`}\n            class={className}\n            onClick={() => foundation.goPage(page)}\n            style={style}\n            aria-label={`${page}`}\n          >\n            {page}\n          </div>\n        );\n      };\n      const itemHeight = 32;\n      const listHeight = count >= 5 ? itemHeight * 5 : itemHeight * count;\n      return (\n        // @ts-ignore skip type check cause react-window not update with @types/react 18\n        <List\n          className={`${prefixCls}-rest-list`}\n          itemData={restList}\n          itemSize={itemHeight}\n          width={78}\n          itemCount={count}\n          height={listHeight}\n          style={{ direction }}\n        >\n          {row}\n        </List>\n      );\n    }\n\n    function renderSmallPageSelect(content: VNode) {\n      const allPageNumbers = state.allPageNumbers;\n      const pageList = renderRestPageList(allPageNumbers);\n\n      return <Popover content={pageList}>{content}</Popover>;\n    }\n\n    function renderSmallPage(locale: PaginationLocale) {\n      const { className, style, hideOnSinglePage, hoverShowPageSelect, showSizeChanger, disabled, ...rest } = props;\n      const paginationCls = classNames(`${prefixCls}-small`, prefixCls, className, {\n        [`${prefixCls}-disabled`]: disabled,\n      });\n      const { currentPage, total, pageSize } = state;\n      const totalPageNum = Math.ceil(total / pageSize);\n      if (totalPageNum < 2 && hideOnSinglePage && !showSizeChanger) {\n        return null;\n      }\n\n      const pageCls = classNames({\n        [`${prefixCls}-item`]: true,\n        [`${prefixCls}-item-small`]: true,\n        [`${prefixCls}-item-all-disabled`]: disabled,\n      });\n\n      const content = (\n        <div class={pageCls}>\n          {currentPage}/{totalPageNum}{' '}\n        </div>\n      );\n\n      return (\n        <div class={paginationCls} style={style} {...getDataAttr()}>\n          {renderPrevBtn()}\n          {hoverShowPageSelect && !disabled ? renderSmallPageSelect(content) : content}\n          {renderNextBtn()}\n          {renderQuickJump(locale)}\n        </div>\n      );\n    }\n\n    function renderDefaultPage(locale: PaginationLocale) {\n      const { total, pageSize } = state;\n      const { showTotal, className, style, hideOnSinglePage, showSizeChanger, disabled, ...rest } = props;\n      const paginationCls = classNames(className, `${prefixCls}`, { [`${prefixCls}-disabled`]: disabled });\n      const showTotalCls = `${prefixCls}-total`;\n      const totalPageNum = Math.ceil(total / pageSize);\n      if (totalPageNum < 2 && hideOnSinglePage && !showSizeChanger) {\n        return null;\n      }\n      const totalNum = Math.ceil(total / pageSize);\n      const totalToken = locale.total.replace('${total}', totalNum.toString());\n\n      return (\n        <ul class={paginationCls} style={style} {...getDataAttr()}>\n          {showTotal ? <span class={showTotalCls}>{totalToken}</span> : null}\n          {renderPrevBtn()}\n          {renderPageList()}\n          {renderNextBtn()}\n          {renderPageSizeSwitch(locale)}\n          {renderQuickJump(locale)}\n        </ul>\n      );\n    }\n\n    return () => {\n      const { size } = props;\n      return (\n        <LocaleConsumer componentName=\"Pagination\">\n          {(locale: PaginationLocale) => (size === 'small' ? renderSmallPage(locale) : renderDefaultPage(locale))}\n        </LocaleConsumer>\n      );\n    };\n  },\n});\n\nexport default Pagination;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","prefixCls","cssClasses","PREFIX","propTypes","total","PropTypes","number","showTotal","bool","pageSize","pageSizeOpts","array","size","string","currentPage","defaultCurrentPage","onPageChange","func","onPageSizeChange","onChange","prevText","node","nextText","showSizeChanger","popoverZIndex","popoverPosition","style","object","className","hideOnSinglePage","hoverShowPageSelect","showQuickJumper","disabled","position","defaultProps","popoverNumbers","DEFAULT_Z_INDEX","numbers","PAGE_SIZE_OPTION","noop","vuePropsType","vuePropsMake","Pagination","defineComponent","props","name","setup","useSlots","context","useConfigContext","DEFAULT_PAGE_SIZE","shouldFillAllNumber","state","reactive","pageList","prevDisabled","nextDisabled","restLeftPageList","restRightPageList","quickJumpPage","allPageNumbers","Array","from","length","Math","ceil","v","i","adapter","adapterInject","getDataAttr","useBaseComponent","adapter_","setPageList","pageListState","setDisabled","prevIsDisabled","nextIsDisabled","updateTotal","updatePageSize","updateQuickJumpPage","setCurrentPage","pageIndex","registerKeyDownHandler","handler","document","addEventListener","updateAllPageNumbers","unregisterKeyDownHandler","removeEventListener","notifyPageChange","notifyPageSizeChange","notifyChange","foundation","PaginationFoundation","warning","Boolean","onMounted","init","onUnmounted","destroy","watch","value","prevPropsCurrentPage","prevPropsTotal","prevPropsPageSize","onCleanup","pagerProps","pagerHasChanged","allPageNumberNeedUpdate","updatePage","renderPrevBtn","isDisabled","preClassName","classNames","_createVNode","e","goPrev","IconChevronLeft","renderNextBtn","nextClassName","goNext","IconChevronRight","renderPageSizeSwitch","locale","direction","defaultPopoverPosition","switchCls","newPageSizeOpts","pageSizeInOpts","pageSizeToken","options","map","SelectOption","default","replace","Select","newPageSize","changePageSize","renderQuickJump","_getTotalPageNumber","quickJumpCls","jumpTo","InputNumber","handleQuickJumpBlur","handleQuickJumpEnterPress","target","handleQuickJumpNumberChange","page","renderPageList","pageListClassName","pageEl","onClick","goPage","content","Popover","renderRestPageList","restList","count","row","item","index","itemHeight","listHeight","List","renderSmallPageSelect","renderSmallPage","rest","paginationCls","totalPageNum","pageCls","_createTextVNode","_mergeProps","renderDefaultPage","showTotalCls","totalNum","totalToken","LocaleConsumer"],"mappings":"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"}