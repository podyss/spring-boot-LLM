import '@douyinfe/semi-foundation/lib/es/backtop/backtop.css';
import { CSSProperties, PropType } from 'vue';
import { CombineProps } from '../interface';
export interface BackTopProps {
    target?: () => any;
    visibilityHeight?: number;
    duration?: number;
    onClick?: (e: MouseEvent) => void;
    style?: CSSProperties;
    className?: string;
}
export interface BackTopState {
    visible?: boolean;
}
export declare const vuePropsType: CombineProps<BackTopProps>;
declare const BackTop: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    target: PropType<() => any> | {
        type: PropType<() => any>;
        default?: any;
        required?: false;
    };
    visibilityHeight: PropType<number> | {
        type: PropType<number>;
        default?: any;
        required?: false;
    };
    duration: PropType<number> | {
        type: PropType<number>;
        default?: any;
        required?: false;
    };
    onClick: PropType<(e: MouseEvent) => void> | {
        type: PropType<(e: MouseEvent) => void>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    target: PropType<() => any> | {
        type: PropType<() => any>;
        default?: any;
        required?: false;
    };
    visibilityHeight: PropType<number> | {
        type: PropType<number>;
        default?: any;
        required?: false;
    };
    duration: PropType<number> | {
        type: PropType<number>;
        default?: any;
        required?: false;
    };
    onClick: PropType<(e: MouseEvent) => void> | {
        type: PropType<(e: MouseEvent) => void>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default BackTop;
