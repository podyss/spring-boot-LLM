import { NavProps, ItemKey } from './index';
import { Locale } from '../locale/interface';
import type { DropdownProps } from '../dropdown';
export interface NavContextType {
    isCollapsed?: boolean;
    mode?: NavProps['mode'];
    openKeys?: ItemKey[];
    onCollapseChange?: NavProps['onCollapseChange'];
    prefixCls?: string;
    selectedKeys?: ItemKey[];
    toggleIconPosition?: string;
    selectedKeysIsControlled?: boolean;
    openKeysIsControlled?: boolean;
    limitIndent?: boolean;
    isInSubNav?: boolean;
    locale?: Locale['Navigation'];
    subNavMotion?: NavProps['subNavMotion'];
    subNavCloseDelay?: NavProps['subNavCloseDelay'];
    subNavOpenDelay?: NavProps['subNavOpenDelay'];
    canUpdateOpenKeys?: boolean;
    renderWrapper?: NavProps['renderWrapper'];
    getPopupContainer?: DropdownProps['getPopupContainer'];
    tooltipShowDelay?: number;
    tooltipHideDelay?: number;
}
declare const NavContext: {
    Consumer: import("vue").DefineSetupFnComponent<Record<string, any>, {}, {}, Record<string, any> & {}, import("vue").PublicProps>;
    Provider: import("vue").DefineSetupFnComponent<{
        value: any;
    }, {}, {}, {
        value: any;
    } & {}, import("vue").PublicProps>;
};
export default NavContext;
