import '@douyinfe/semi-foundation/lib/es/navigation/navigation.css';
import { BaseProps } from '../_base/baseComponent';
import { VNode, PropType } from 'vue';
import { CombineProps } from '../interface';
export type Logo = VNode;
export interface NavHeaderProps extends BaseProps {
    link?: string;
    linkOptions?: any;
    logo?: Logo;
    prefixCls?: string;
    text?: VNode;
    class?: string;
}
export declare const vuePropsType: CombineProps<NavHeaderProps>;
declare const NavHeader: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    link: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    linkOptions: PropType<any> | {
        type: PropType<any>;
        default?: any;
        required?: false;
    };
    logo: PropType<Logo> | {
        type: PropType<Logo>;
        default?: any;
        required?: false;
    };
    prefixCls: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    text: PropType<VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>> | {
        type: PropType<VNode<import("vue").RendererNode, import("vue").RendererElement, {
            [key: string]: any;
        }>>;
        default?: any;
        required?: false;
    };
    class: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    style: PropType<import("vue").CSSProperties> | {
        type: PropType<import("vue").CSSProperties>;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    link: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    linkOptions: PropType<any> | {
        type: PropType<any>;
        default?: any;
        required?: false;
    };
    logo: PropType<Logo> | {
        type: PropType<Logo>;
        default?: any;
        required?: false;
    };
    prefixCls: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    text: PropType<VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>> | {
        type: PropType<VNode<import("vue").RendererNode, import("vue").RendererElement, {
            [key: string]: any;
        }>>;
        default?: any;
        required?: false;
    };
    class: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    style: PropType<import("vue").CSSProperties> | {
        type: PropType<import("vue").CSSProperties>;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default NavHeader;
