{"version":3,"file":"CollapseButton.js","sources":["../../src/components/navigation/CollapseButton.tsx"],"sourcesContent":["import { ComponentObjectPropsOptions, defineComponent, FunctionalComponent, h, PropType, VNode } from 'vue';\nimport { noop } from 'lodash';\nimport { IconSidebar } from '@kousum/semi-icons-vue';\nimport Button from '../button';\nimport Tooltip from '../tooltip';\nimport { Locale } from '../locale/interface';\nimport { CombineProps, VueJsxNode } from '../interface';\n\nexport interface CollapseButtonProps {\n  prefixCls?: string;\n  locale?: Locale['Navigation'];\n\n  collapseText?(isCollapsed: boolean): VueJsxNode;\n\n  isCollapsed?: boolean;\n\n  onClick?(e: boolean): void;\n}\n\nconst vuePropsType: CombineProps<CollapseButtonProps> = {\n  prefixCls: String,\n  locale: Object,\n  collapseText: Function as PropType<CollapseButtonProps['collapseText']>,\n  isCollapsed: {\n    type: Boolean,\n    default: undefined,\n  },\n  onClick: Function as PropType<CollapseButtonProps['onClick']>,\n};\nconst CollapseButton = defineComponent({\n  props: { ...vuePropsType },\n  name: 'CollapseButton',\n  setup(props, ctx) {\n    const handleClick = () => {\n      if (typeof props.onClick === 'function') {\n        props.onClick(!props.isCollapsed);\n      }\n    };\n\n    const btnProps = {\n      icon: <IconSidebar />,\n      type: 'tertiary',\n      theme: 'borderless',\n      onClick: handleClick,\n    };\n\n    return () => {\n      const { prefixCls, locale, collapseText, isCollapsed, onClick = noop } = props;\n      let finalCollapseText: VueJsxNode = isCollapsed ? locale?.expandText : locale?.collapseText;\n\n      if (typeof collapseText === 'function') {\n        finalCollapseText = collapseText(isCollapsed);\n      }\n\n      return (\n        <div class={`${prefixCls}-collapse-btn`}>\n          {isCollapsed ? (\n            <Tooltip content={finalCollapseText} position=\"right\">\n              <Button {...(btnProps as any)} />\n            </Tooltip>\n          ) : (\n            <Button {...(btnProps as any)}>{finalCollapseText}</Button>\n          )}\n        </div>\n      );\n    };\n  },\n});\n\nexport default CollapseButton;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","vuePropsType","prefixCls","String","locale","collapseText","Function","isCollapsed","type","Boolean","default","undefined","onClick","CollapseButton","defineComponent","props","name","setup","ctx","handleClick","btnProps","icon","_createVNode","IconSidebar","theme","noop","finalCollapseText","expandText","Tooltip","Button"],"mappings":";;;;;AAIiC,SAAAA,EAAAC,GAAA;AAAA,SAAA,OAAAA,KAAA,cAAAC,OAAAC,UAAAC,SAAAC,KAAAJ,CAAA,MAAAK,qBAAAA,CAAAA,EAAAL,CAAA;AAAA;AAejC,MAAMM,IAAkD;AAAA,EACtDC,WAAWC;AAAAA,EACXC,QAAQR;AAAAA,EACRS,cAAcC;AAAAA,EACdC,aAAa;AAAA,IACXC,MAAMC;AAAAA,IACNC,SAASC;AAAAA,EACV;AAAA,EACDC,SAASN;AACX,GACMO,IAAiBC,gBAAAA,EAAgB;AAAA,EACrCC,OAAO;AAAA,IAAE,GAAGd;AAAAA,EAAc;AAAA,EAC1Be,MAAM;AAAA,EACNC,MAAMF,GAAOG,GAAK;AAChB,UAAMC,IAAcA,MAAM;AACxB,MAAI,OAAOJ,EAAMH,WAAY,cAC3BG,EAAMH,QAAQ,CAACG,EAAMR,WAAW;AAAA,OAI9Ba,IAAW;AAAA,MACfC,MAAIC,EAAAC,GAAiB,MAAA,IAAA;AAAA,MACrBf,MAAM;AAAA,MACNgB,OAAO;AAAA,MACPZ,SAASO;AAAAA;AAGX,WAAO,MAAM;AACX,YAAM;AAAA,QAAEjB,WAAAA;AAAAA,QAAWE,QAAAA;AAAAA,QAAQC,cAAAA;AAAAA,QAAcE,aAAAA;AAAAA,QAAaK,SAAAA,IAAUa;AAAAA,MAAM,IAAGV;AACzE,UAAIW,IAAgCnB,IAAcH,KAAAA,gBAAAA,EAAQuB,aAAavB,KAAAA,gBAAAA,EAAQC;AAE/E,aAAI,OAAOA,KAAiB,eAC1BqB,IAAoBrB,EAAaE,CAAW,IAG9Ce,EAAA,OAAA;AAAA,QAAA,OACc,GAAGpB,CAAS;AAAA,MAAe,GAAA,CACpCK,IAAWe,EAAAM,GAAA;AAAA,QAAA,SACQF;AAAAA,QAAiB,UAAA;AAAA,MAAA,GAAA;AAAA,QAAAhB,SAAAA,MAAA,CAAAY,EAAAO,GACpBT,GAAQ,IAAA,CAAA;AAAA,OAAAE,IAAAA,EAAAO,GAGVT,GAAQ1B,EAAWgC,CAAiB,IAAjBA,IAAiB;AAAA,QAAAhB,SAAAA,MAAA,CAAjBgB,CAAiB;AAAA,MAClD,CAAA,CAAA,CAAA;AAAA;EAIT;AACF,CAAC;"}