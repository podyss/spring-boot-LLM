{"version":3,"file":"index.js","sources":["../../src/components/navigation/index.tsx"],"sourcesContent":["import {\n  ComponentObjectPropsOptions,\n  CSSProperties,\n  defineComponent,\n  Fragment,\n  h,\n  isVNode,\n  PropType,\n  reactive,\n  useSlots,\n  VNode,\n  watch,\n  watchEffect,\n} from 'vue';\nimport { BaseProps, useBaseComponent, useHasInProps } from '../_base/baseComponent';\nimport * as PropTypes from '../PropTypes';\nimport { vuePropsMake } from '../PropTypes';\nimport cls from 'classnames';\nimport { get, isEqual, noop } from 'lodash';\n\nimport NavigationFoundation, { NavigationAdapter } from '@douyinfe/semi-foundation/navigation/foundation';\nimport { cssClasses, numbers, strings } from '@douyinfe/semi-foundation/navigation/constants';\n\nimport type { SubNavProps, ToggleIcon } from './SubNav';\nimport SubNav from './SubNav';\nimport type { NavItemProps, ItemKey } from './Item';\nimport Item from './Item';\nimport type { NavFooterProps } from './Footer';\nimport Footer from './Footer';\nimport type { NavHeaderProps } from './Header';\nimport Header from './Header';\nimport NavContext from './nav-context';\nimport '@douyinfe/semi-foundation/navigation/navigation.scss';\nimport { DropdownProps } from '../dropdown';\nimport { Motion } from '../_base/base';\nimport LocaleConsumer from '../locale/localeConsumer';\nimport { CombineProps, VueJsxNode } from '../interface';\nimport { NavFooter, NavHeader, NavItem } from '../index';\nimport { getFragmentChildren } from '../_utils';\n\nexport type Mode = 'vertical' | 'horizontal';\nexport { NavFooterProps, NavHeaderProps, ToggleIcon, ItemKey, SubNavProps, NavItemProps };\nexport interface OnSelectedData {\n  itemKey: ItemKey;\n  selectedKeys: (string | number)[];\n  selectedItems: (NavItemProps | SubNavProps)[];\n  domEvent: MouseEvent;\n  isOpen: boolean;\n}\n\nexport interface SubNavPropsWithItems extends SubNavProps {\n  items?: (SubNavPropsWithItems | string)[];\n}\n\nexport interface NavItemPropsWithItems extends NavItemProps {\n  items?: (NavItemPropsWithItems | string)[];\n}\n\nexport type NavItems = (string | SubNavPropsWithItems | NavItemPropsWithItems)[];\n\nexport interface NavProps extends BaseProps {\n  bodyStyle?: CSSProperties;\n  children?: VNode[];\n  defaultIsCollapsed?: boolean;\n  defaultOpenKeys?: string[];\n  defaultSelectedKeys?: string[];\n  subDropdownProps?: DropdownProps;\n  expandIcon?: VueJsxNode;\n  footer?: VNode | NavFooterProps;\n  header?: VNode | NavHeaderProps;\n  isCollapsed?: boolean;\n  items?: NavItems;\n  limitIndent?: boolean;\n  mode?: Mode;\n  multiple?: boolean;\n  openKeys?: string[];\n  prefixCls?: string;\n  selectedKeys?: string[];\n  subNavCloseDelay?: number;\n  subNavMotion?: Motion;\n  subNavOpenDelay?: number;\n  toggleIconPosition?: string;\n  tooltipHideDelay?: number;\n  tooltipShowDelay?: number;\n  getPopupContainer?: () => HTMLElement;\n  onClick?: (data: { itemKey: ItemKey; domEvent: MouseEvent; isOpen: boolean }) => void;\n  onCollapseChange?: (isCollapse: boolean) => void;\n  onDeselect?: (data?: any) => void;\n  onOpenChange?: (data: {\n    itemKey: ItemKey;\n    openKeys: ItemKey[];\n    domEvent: MouseEvent;\n    isOpen: boolean;\n  }) => void;\n  onSelect?: (data: OnSelectedData) => void;\n  renderWrapper?: ({\n    itemElement,\n    isSubNav,\n    isInSubNav,\n    props,\n  }: {\n    itemElement: VNode;\n    isInSubNav: boolean;\n    isSubNav: boolean;\n    props: NavItemProps | SubNavProps;\n  }) => VNode;\n}\n\nexport interface NavState {\n  isCollapsed: boolean;\n  // calc state\n  openKeys: ItemKey[];\n  items: any[];\n  itemKeysMap: { [itemKey: string]: ItemKey[] };\n  selectedKeys: ItemKey[];\n}\n\nconst { hasOwnProperty } = Object.prototype;\n\nconst propTypes: CombineProps<NavProps> = {\n  // Initial expanded SubNav navigation key array\n  defaultOpenKeys: Array,\n  openKeys: Array,\n  // Initial selected navigation key array\n  defaultSelectedKeys: Array,\n  subDropdownProps: Object,\n  selectedKeys: Array,\n  // Navigation type, now supports vertical, horizontal\n  mode: String as PropType<NavProps['mode']>,\n  // Triggered when selecting a navigation item\n  onSelect: PropTypes.func as PropType<NavProps['onSelect']>,\n  // Triggered when clicking a navigation item\n  onClick: PropTypes.func as PropType<NavProps['onClick']>,\n  // SubNav expand/close callback\n  onOpenChange: PropTypes.func as PropType<NavProps['onOpenChange']>,\n  // Array of options (nested options can continue)\n  items: PropTypes.array,\n  // Is it in the state of being stowed to the sidebar\n  isCollapsed: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  defaultIsCollapsed: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  onCollapseChange: PropTypes.func as PropType<NavProps['onCollapseChange']>,\n  multiple: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  onDeselect: PropTypes.func as PropType<NavProps['onDeselect']>,\n  subNavMotion: [PropTypes.bool, PropTypes.object, PropTypes.func],\n  subNavCloseDelay: PropTypes.number,\n  subNavOpenDelay: PropTypes.number,\n  tooltipShowDelay: PropTypes.number,\n  tooltipHideDelay: PropTypes.number,\n  children: PropTypes.node as PropType<NavProps['children']>,\n  style: PropTypes.object,\n  bodyStyle: PropTypes.object,\n  className: PropTypes.string,\n  toggleIconPosition: PropTypes.string,\n  prefixCls: PropTypes.string,\n  header: PropTypes.node as PropType<NavProps['header']>,\n  footer: PropTypes.node as PropType<NavProps['footer']>,\n  limitIndent: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  getPopupContainer: PropTypes.func as PropType<NavProps['getPopupContainer']>,\n  expandIcon: PropTypes.node as PropType<NavProps['expandIcon']>,\n  renderWrapper: PropTypes.func as PropType<NavProps['renderWrapper']>,\n};\n\nconst defaultProps = {\n  subNavCloseDelay: numbers.DEFAULT_SUBNAV_CLOSE_DELAY,\n  subNavOpenDelay: numbers.DEFAULT_SUBNAV_OPEN_DELAY,\n  tooltipHideDelay: numbers.DEFAULT_TOOLTIP_HIDE_DELAY,\n  tooltipShowDelay: numbers.DEFAULT_TOOLTIP_SHOW_DELAY,\n  onCollapseChange: noop,\n  onSelect: noop,\n  onClick: noop,\n  onOpenChange: noop,\n  toggleIconPosition: 'right',\n  limitIndent: true,\n  prefixCls: cssClasses.PREFIX,\n  subNavMotion: true,\n  // isOpen: false,\n  mode: strings.MODE_VERTICAL,\n  // defaultOpenKeys: [],\n  // defaultSelectedKeys: [],\n  // items: [],\n};\n\nexport const vuePropsType = vuePropsMake<NavProps>(propTypes, defaultProps);\nconst index = defineComponent({\n  props: { ...vuePropsType, children: Array as PropType<VNode[]>, },\n  name: 'NavigationIndex',\n  setup(props, { slots }) {\n    const slots_ = useSlots();\n    let itemsChanged: boolean = true;\n\n    const state = reactive<NavState>({\n      isCollapsed: false,\n      itemKeysMap: {},\n      items: [],\n      openKeys: [],\n      selectedKeys: [],\n    });\n\n    const { adapter: adapterInject, isControlled, getDataAttr, } = useBaseComponent<NavProps>(props, state);\n\n    let initState = {\n      isCollapsed: Boolean(isControlled('isCollapsed') ? props.isCollapsed : props.defaultIsCollapsed),\n      // calc state\n      openKeys: [],\n      items: [],\n      itemKeysMap: {}, // itemKey to parentKeys\n      selectedKeys: [],\n    };\n\n    Object.keys(initState).forEach((key) => {\n      state[key] = initState[key];\n    });\n\n    function createAddKeysFn(keyName: string | number) {\n      return function (...keys: (string | number)[]) {\n        const handleKeys = new Set(state[keyName]);\n\n        keys.forEach((key) => key && handleKeys.add(key));\n\n        state[keyName] = Array.from(handleKeys);\n      };\n    }\n\n    function createRemoveKeysFn(keyName: string) {\n      return function (...keys: string[]) {\n        const handleKeys = new Set(state[keyName]);\n\n        keys.forEach((key) => key && handleKeys.delete(key));\n\n        state[keyName] = Array.from(handleKeys);\n      };\n    }\n\n    function adapter_(): NavigationAdapter<NavProps, NavState> {\n      return {\n        ...adapterInject<NavProps, NavState>(),\n        notifySelect: (...args) => props.onSelect(...args),\n        notifyOpenChange: (...args) => props.onOpenChange(...args),\n        setIsCollapsed: (isCollapsed) => {\n          return (state.isCollapsed = isCollapsed);\n        },\n        notifyCollapseChange: (...args) => {\n          props.onCollapseChange(...args);\n        },\n        updateItems: (items) => (state.items = [...items]),\n        setItemKeysMap: (itemKeysMap) => (state.itemKeysMap = { ...itemKeysMap }),\n        addSelectedKeys: createAddKeysFn('selectedKeys'),\n        removeSelectedKeys: createRemoveKeysFn('selectedKeys'),\n\n        /**\n         * when `includeParentKeys` is `true`, select a nested nav item will select parent nav sub\n         */\n        updateSelectedKeys: (selectedKeys: (string | number)[], includeParentKeys = true) => {\n          let willUpdateSelectedKeys = selectedKeys;\n          if (includeParentKeys) {\n            const parentSelectKeys = foundation.selectLevelZeroParentKeys(null, selectedKeys);\n            willUpdateSelectedKeys = Array.from(new Set(selectedKeys.concat(parentSelectKeys)));\n          }\n          state.selectedKeys = willUpdateSelectedKeys;\n        },\n\n        updateOpenKeys: (openKeys) => (state.openKeys = [...openKeys]),\n        addOpenKeys: createAddKeysFn('openKeys'),\n        removeOpenKeys: createRemoveKeysFn('openKeys'),\n        setItemsChanged: (isChanged) => {\n          itemsChanged = isChanged;\n        },\n      };\n    }\n\n    const adapter = adapter_();\n\n    const foundation = new NavigationFoundation(adapter);\n    if ((props.items && props.items.length) || props.children) {\n      const calcState = foundation.init('constructor');\n      let newInitState = {\n        ...initState,\n        ...calcState,\n      };\n\n      Object.keys(newInitState).forEach((key) => {\n        state[key] = newInitState[key];\n      });\n    }\n\n    // getDerivedStateFromProps 的存在只有一个目的：让组件在 props 变化时更新 state\n    watch(\n      () => props.isCollapsed,\n      (val) => {\n        state.isCollapsed = val;\n        foundation.handleItemsChange(false);\n      }\n    );\n\n    watch(\n      () => props.selectedKeys,\n      (value) => {\n        if (value) {\n          adapter.updateSelectedKeys(props.selectedKeys);\n          const willOpenKeys = foundation.getWillOpenKeys(state.itemKeysMap);\n          adapter.updateOpenKeys(willOpenKeys);\n        }\n      }\n    );\n\n    watch(\n      () => props.openKeys,\n      (value) => {\n        if (value) {\n          // console.log(props.openKeys)\n          adapter.updateOpenKeys(props.openKeys);\n        }\n      }\n    );\n\n    // watch(() => state.selectedKeys, (value,oldValue) => {\n    //   if (!isEqual(value,oldValue)){\n    //     const parentSelectKeys = foundation.selectLevelZeroParentKeys(null, ...state.selectedKeys);\n    //     adapter.addSelectedKeys(...parentSelectKeys);\n    //   }\n    // })\n\n    watch(\n      [() => props.items],\n      (value, oldValue, onCleanup) => {\n        foundation.init('');\n      },\n      {}\n    );\n    // watch(slots.default, (value, oldValue, onCleanup) => {\n    //   foundation.init('');\n    //   console.log('init')\n    // }, {})\n    watchEffect(() => {\n      if (props.children) {\n        foundation.init('');\n      }\n    });\n\n    // watch([\n    //   // () => state.selectedKeys,// 0\n    //   () => props.openKeys, // 1\n    //   // () => props.selectedKeys, // 2\n    // ], (value, oldValue, onCleanup) => {\n    //   console.log(value)\n    // })\n\n    /**\n     * Render navigation items recursively\n     *\n     * @param {NavItem[]} items\n     * @param level\n     * @returns {JSX.Element}\n     */\n    function renderItems(items: (SubNavPropsWithItems | NavItemPropsWithItems)[] = [], level = 0) {\n      const { expandIcon, subDropdownProps } = props;\n      const finalDom = (\n        <>\n          {items.map((item, idx) => {\n            if (Array.isArray(item.items) && item.items.length) {\n              return (\n                <SubNav\n                  key={item.itemKey || String(level) + idx}\n                  {...(item as SubNavPropsWithItems)}\n                  level={level}\n                  expandIcon={expandIcon}\n                  subDropdownProps={subDropdownProps}\n                >\n                  {renderItems(item.items as (SubNavPropsWithItems | NavItemPropsWithItems)[], level + 1)}\n                </SubNav>\n              );\n            } else {\n              return (\n                <Item key={item.itemKey || String(level) + idx} {...(item as NavItemPropsWithItems)} level={level} />\n              );\n            }\n          })}\n        </>\n      );\n      return finalDom;\n    }\n\n    const onCollapseChange = () => {\n      foundation.handleCollapseChange();\n    };\n\n    return () => {\n      const originChildren = props.children;\n      const {\n        mode,\n        onOpenChange,\n        onSelect,\n        onClick,\n        style,\n        className,\n        subNavCloseDelay,\n        subNavOpenDelay,\n        subNavMotion,\n        tooltipShowDelay,\n        tooltipHideDelay,\n        prefixCls,\n        bodyStyle,\n        footer,\n        header,\n        toggleIconPosition,\n        limitIndent,\n        renderWrapper,\n        getPopupContainer,\n        ...rest\n      } = adapter.getProps();\n\n      const { selectedKeys, openKeys, items, isCollapsed } = state;\n\n      const { updateOpenKeys, addOpenKeys, removeOpenKeys, updateSelectedKeys, addSelectedKeys, removeSelectedKeys } =\n        adapter;\n\n      const finalStyle = { ...style };\n\n      let children: VNode[] = originChildren;\n\n      const footers: VNode[] = [];\n      const headers: VNode[] = [];\n\n      if (isVNode(footer)) {\n        footers.push(<Footer key={0}>{footer}</Footer>);\n      } else if (footer && typeof footer === 'object') {\n        footers.push(<Footer key={0} {...footer} />);\n      }\n\n      if (isVNode(header)) {\n        headers.push(<Header key={0}>{header}</Header>);\n      } else if (header && typeof header === 'object') {\n        headers.push(<Header key={0} {...header} />);\n      }\n\n      if (Array.isArray(children) && children.length) {\n        children = [...children];\n        let childrenLength = children.length;\n        for (let i = 0; i < childrenLength; i++) {\n          const child = children[i];\n\n          if ((child as any).type === Footer || get(child, 'type.elementType') === 'NavFooter') {\n            footers.push(child);\n            children.splice(i, 1);\n            i--;\n            childrenLength--;\n          } else if ((child as any).type === Header || get(child, 'type.elementType') === 'NavHeader') {\n            headers.push(child);\n            children.splice(i, 1);\n            i--;\n            childrenLength--;\n          }\n        }\n      }\n\n      const finalCls = cls(prefixCls, className, {\n        [`${prefixCls}-collapsed`]: isCollapsed,\n        [`${prefixCls}-horizontal`]: mode === 'horizontal',\n        [`${prefixCls}-vertical`]: mode === 'vertical',\n      });\n\n      const headerListOuterCls = cls(`${prefixCls}-header-list-outer`, {\n        [`${prefixCls}-header-list-outer-collapsed`]: isCollapsed,\n      });\n\n      if (itemsChanged) {\n        adapter.setCache('itemElems', renderItems(items));\n      }\n\n      return (\n        <LocaleConsumer componentName=\"Navigation\">\n          {(locale) => (\n            <NavContext.Provider\n              value={\n                {\n                  subNavCloseDelay,\n                  subNavOpenDelay,\n                  subNavMotion,\n                  tooltipShowDelay,\n                  tooltipHideDelay,\n                  openKeys,\n                  openKeysIsControlled: isControlled('openKeys') && mode === 'vertical' && !isCollapsed,\n                  // canUpdateOpenKeys: mode === 'vertical' && !isCollapsed,\n                  canUpdateOpenKeys: true,\n                  selectedKeys,\n                  selectedKeysIsControlled: isControlled('selectedKeys'),\n                  isCollapsed,\n                  onCollapseChange: onCollapseChange,\n                  mode,\n                  onSelect,\n                  onOpenChange,\n                  updateOpenKeys,\n                  addOpenKeys,\n                  removeOpenKeys,\n                  updateSelectedKeys,\n                  addSelectedKeys,\n                  removeSelectedKeys,\n                  onClick,\n                  locale,\n                  prefixCls,\n                  toggleIconPosition,\n                  limitIndent,\n                } as any\n              }\n            >\n              <div class={finalCls} style={finalStyle} {...getDataAttr()}>\n                <div class={`${prefixCls}-inner`}>\n                  <div class={headerListOuterCls}>\n                    {headers}\n                    <div style={bodyStyle} class={`${prefixCls}-list-wrapper`}>\n                      <ul role=\"menu\" aria-orientation={mode} class={`${prefixCls}-list`}>\n                        {adapter.getCache('itemElems')}\n                        {children}\n                      </ul>\n                    </div>\n                  </div>\n                  {footers}\n                </div>\n              </div>\n            </NavContext.Provider>\n          )}\n        </LocaleConsumer>\n      );\n    };\n  },\n});\nconst Nav = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Navigation',\n  setup(props, {  }) {\n    const slots = useSlots();\n    const {getProps} = useHasInProps()\n    const Index = index\n    return () => {\n      const children = getFragmentChildren(slots)\n      return <Index {...getProps(props)} children={children}/>\n    };\n  },\n});\nexport type NavType = typeof Nav & {\n  Item: typeof Item;\n  Header: typeof Header;\n  Footer: typeof Footer;\n  SubNav: typeof SubNav\n}\n\nconst BaseNav = Nav as NavType\nBaseNav.Item = Item\nBaseNav.Header = Header\nBaseNav.Footer = Footer\nBaseNav.Sub = SubNav\nexport default BaseNav;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","propTypes","defaultOpenKeys","Array","openKeys","defaultSelectedKeys","subDropdownProps","selectedKeys","mode","String","onSelect","PropTypes","func","onClick","onOpenChange","items","array","isCollapsed","type","bool","default","undefined","defaultIsCollapsed","onCollapseChange","multiple","onDeselect","subNavMotion","object","subNavCloseDelay","number","subNavOpenDelay","tooltipShowDelay","tooltipHideDelay","children","node","style","bodyStyle","className","string","toggleIconPosition","prefixCls","header","footer","limitIndent","getPopupContainer","expandIcon","renderWrapper","defaultProps","numbers","DEFAULT_SUBNAV_CLOSE_DELAY","DEFAULT_SUBNAV_OPEN_DELAY","DEFAULT_TOOLTIP_HIDE_DELAY","DEFAULT_TOOLTIP_SHOW_DELAY","noop","cssClasses","PREFIX","strings","MODE_VERTICAL","vuePropsType","vuePropsMake","index","defineComponent","props","name","setup","slots","useSlots","itemsChanged","state","reactive","itemKeysMap","adapter","adapterInject","isControlled","getDataAttr","useBaseComponent","initState","Boolean","keys","forEach","key","createAddKeysFn","keyName","handleKeys","Set","add","from","createRemoveKeysFn","delete","adapter_","notifySelect","args","notifyOpenChange","setIsCollapsed","notifyCollapseChange","updateItems","setItemKeysMap","addSelectedKeys","removeSelectedKeys","updateSelectedKeys","includeParentKeys","willUpdateSelectedKeys","parentSelectKeys","foundation","selectLevelZeroParentKeys","concat","updateOpenKeys","addOpenKeys","removeOpenKeys","setItemsChanged","isChanged","NavigationFoundation","length","calcState","init","newInitState","watch","val","handleItemsChange","value","willOpenKeys","getWillOpenKeys","oldValue","onCleanup","watchEffect","renderItems","level","_createVNode","_Fragment","map","item","idx","isArray","_slot","SubNav","_mergeProps","itemKey","Item","handleCollapseChange","originChildren","rest","getProps","finalStyle","footers","headers","isVNode","push","Footer","Header","childrenLength","i","child","get","splice","finalCls","cls","headerListOuterCls","setCache","LocaleConsumer","locale","NavContext","Provider","openKeysIsControlled","canUpdateOpenKeys","selectedKeysIsControlled","getCache","Nav","useHasInProps","Index","getFragmentChildren","BaseNav","Sub"],"mappings":"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"}