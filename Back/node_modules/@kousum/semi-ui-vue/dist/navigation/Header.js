import { defineComponent as N, createVNode as r, Fragment as P, mergeProps as y, isVNode as v } from "vue";
import * as e from "../PropTypes";
import F from "classnames";
import k from '@douyinfe/semi-foundation/lib/es/utils/isNullOrUndefined';
import { cssClasses as t } from '@douyinfe/semi-foundation/lib/es/navigation/constants';
import '@douyinfe/semi-foundation/lib/es/navigation/navigation.css';
import { useNavContext as E } from "./nav-context/Consumer";
const I = {
  prefixCls: {
    type: e.string,
    default: t.PREFIX
  },
  logo: e.node,
  text: e.node,
  style: e.object,
  class: e.string,
  link: e.string,
  linkOptions: e.object,
  className: e.string
}, w = /* @__PURE__ */ N({
  props: {
    ...I
  },
  name: "NavHeader",
  setup(c, {
    slots: n
  }) {
    const {
      context: m
    } = E();
    function f(s) {
      return v(s) ? s : null;
    }
    return () => {
      var d;
      const {
        style: s,
        className: u,
        logo: l,
        text: a,
        link: i,
        linkOptions: g,
        prefixCls: h
      } = c, x = (d = n.default) == null ? void 0 : d.call(n), {
        isCollapsed: p
      } = m.value, C = F(u, `${t.PREFIX}-header`, {
        [`${t.PREFIX}-header-collapsed`]: p
      });
      let o = r(P, null, [l ? r("i", {
        class: `${t.PREFIX}-header-logo`
      }, [f(l)]) : null, !k(a) && !p ? r("span", {
        class: `${t.PREFIX}-header-text`
      }, [a]) : null, x]);
      return typeof i == "string" && (o = r("a", y({
        class: `${h}-header-link`,
        href: i
      }, g), [o])), r("div", {
        class: C,
        style: s
      }, [o]);
    };
  }
});
export {
  w as default,
  I as vuePropsType
};
//# sourceMappingURL=Header.js.map
