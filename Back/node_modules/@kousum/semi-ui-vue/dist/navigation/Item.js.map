{"version":3,"file":"Item.js","sources":["../../src/components/navigation/Item.tsx"],"sourcesContent":["import { BaseProps, useBaseComponent } from '../_base/baseComponent';\nimport * as PropTypes from '../PropTypes';\nimport cls from 'classnames';\nimport { noop, times } from 'lodash';\n\nimport isNullOrUndefined from '@douyinfe/semi-foundation/utils/isNullOrUndefined';\nimport { cloneDeep, isSemiIcon } from '../_utils';\nimport ItemFoundation, {\n  ItemAdapter,\n  ItemProps,\n  ItemKey,\n  SelectedItemProps,\n} from '@douyinfe/semi-foundation/navigation/itemFoundation';\nimport { cssClasses, strings } from '@douyinfe/semi-foundation/navigation/constants';\n\nimport Tooltip from '../tooltip';\nimport Dropdown, { DropdownItem } from '../dropdown';\nimport {\n  AnchorHTMLAttributes,\n  cloneVNode,\n  defineComponent,\n  h,\n  reactive,\n  VNode,\n  Fragment,\n  ComponentObjectPropsOptions,\n  PropType,\n  watchEffect,\n} from 'vue';\nimport { useNavContext } from './nav-context/Consumer';\nimport { CombineProps, VueJsxNode } from '../interface';\nimport getDataAttr from '@douyinfe/semi-foundation/utils/getDataAttr';\n\nconst clsPrefix = `${cssClasses.PREFIX}-item`;\n\ninterface NavItemProps extends Omit<ItemProps, 'children'>, BaseProps {\n  disabled?: boolean;\n  forwardRef?: (ele: HTMLLIElement) => void;\n  icon?: VNode;\n  itemKey?: ItemKey;\n  level?: number;\n  link?: string;\n  linkOptions?: AnchorHTMLAttributes;\n  tabIndex?: number; // on the site we change the tabindex to -1 in order to use gatsby's navigate link\n  text?: VueJsxNode;\n  tooltipHideDelay?: number;\n  tooltipShowDelay?: number;\n  onClick?(clickItems: SelectedData): void;\n  onMouseEnter?: any;\n  onMouseLeave?: any;\n\n  items?: any;\n  maxHeight?: number;\n}\n\ninterface SelectedData extends SelectedItemProps<NavItemProps> {\n  text?: VNode;\n}\n\ninterface NavItemState {\n  tooltipShow: boolean;\n}\n\nexport type { NavItemProps, ItemKey, NavItemState, SelectedData };\nexport const vuePropsType: CombineProps<NavItemProps> = {\n  text: PropTypes.node,\n  itemKey: [PropTypes.string, PropTypes.number],\n  onClick: {\n    type: PropTypes.func as PropType<NavItemProps['onClick']>,\n    default: noop,\n  },\n  onMouseEnter: {\n    type: PropTypes.func,\n    default: noop,\n  },\n  onMouseLeave: {\n    type: PropTypes.func,\n    default: noop,\n  },\n  icon: PropTypes.node as PropType<NavItemProps['icon']>,\n  className: PropTypes.string,\n  toggleIcon: PropTypes.string,\n  style: PropTypes.object,\n  forwardRef: {\n    type: PropTypes.func as PropType<NavItemProps['forwardRef']>,\n    default: noop,\n  },\n  indent: {\n    type: [PropTypes.bool, PropTypes.number],\n    default: false,\n  },\n  isCollapsed: {\n    type: PropTypes.bool,\n    default: false,\n  }, // Is it in a state of folding to the side\n  isSubNav: {\n    type: PropTypes.bool,\n    default: false,\n  }, // Whether to navigate for children\n  link: PropTypes.string,\n  linkOptions: PropTypes.object,\n  disabled: {\n    type: PropTypes.bool,\n    default: false,\n  },\n\n  items: Array as PropType<NavItemProps['items']>,\n  level: Number,\n  maxHeight: Number,\n\n  tabIndex: {\n    type: PropTypes.number,\n    default: 0,\n  },\n  tooltipHideDelay: PropTypes.number,\n  tooltipShowDelay: PropTypes.number,\n};\nconst NavItem = defineComponent({\n  props: { ...vuePropsType },\n  name: 'NavItem',\n  setup(props, { attrs, slots }) {\n    const { context } = useNavContext();\n    const state = reactive<NavItemState>({\n      tooltipShow: false,\n    });\n    const { adapter: adapterInject } = useBaseComponent<NavItemProps>(props, state);\n\n    const foundation = new ItemFoundation(adapter());\n\n    function adapter(): ItemAdapter<NavItemProps, NavItemState> {\n      return {\n        ...adapterInject<NavItemProps, NavItemState>(),\n        cloneDeep,\n        updateTooltipShow: (tooltipShow) => (state.tooltipShow = tooltipShow),\n        updateSelected: (_selected) => _invokeContextFunc('updateSelectedKeys', [props.itemKey]),\n        updateGlobalSelectedKeys: (keys) => _invokeContextFunc('updateSelectedKeys', [...keys]),\n        getSelectedKeys: () => context.value && context.value.selectedKeys,\n        getSelectedKeysIsControlled: () => context.value && context.value.selectedKeysIsControlled,\n        notifyGlobalOnSelect: (...args) => _invokeContextFunc('onSelect', ...args),\n        notifyGlobalOnClick: (...args) => _invokeContextFunc('onClick', ...args),\n        notifyClick: (...args) => props.onClick(...args),\n        notifyMouseEnter: (...args) => props.onMouseEnter(...args),\n        notifyMouseLeave: (...args) => props.onMouseLeave(...args),\n        getIsCollapsed: () => props.isCollapsed || Boolean(context.value && context.value.isCollapsed) || false,\n        getSelected: () =>\n          Boolean(\n            context.value && context.value.selectedKeys && context.value.selectedKeys.includes(props.itemKey as string)\n          ),\n        getIsOpen: () =>\n          Boolean(context.value && context.value.openKeys && context.value.openKeys.includes(props.itemKey as string)),\n      };\n    }\n    function _invokeContextFunc(funcName: string, ...args: any[]) {\n      if (funcName && context.value && typeof context.value[funcName] === 'function') {\n        return context.value[funcName](...args);\n      }\n      return null;\n    }\n\n    function renderIcon(icon: VNode | string, pos: string, isToggleIcon = false, key: number | string = 0) {\n      if (props.isSubNav) {\n        return null;\n      }\n\n      if (!icon && context.value.mode === strings.MODE_HORIZONTAL) {\n        return null;\n      }\n\n      let iconSize = 'large';\n      if (pos === strings.ICON_POS_RIGHT) {\n        iconSize = 'default';\n      }\n\n      const className = cls(`${clsPrefix}-icon`, {\n        [`${clsPrefix}-icon-toggle-${context.value.toggleIconPosition}`]: isToggleIcon,\n        [`${clsPrefix}-icon-info`]: !isToggleIcon,\n      });\n\n      return (\n        <i class={className} key={key}>\n          {isSemiIcon(icon) ? cloneVNode(icon as VNode, iconSize ? { size: iconSize } : {}) : icon}\n        </i>\n      );\n    }\n\n    const setItemRef = (ref: any) => {\n      // console.log('Item - setItemRef()', ref);\n      props.forwardRef && props.forwardRef(ref);\n    };\n\n    const wrapTooltip = (node: VNode) => {\n      const { text, tooltipHideDelay, tooltipShowDelay } = props;\n      const hideDelay = tooltipHideDelay ?? context.value.tooltipHideDelay;\n      const showDelay = tooltipShowDelay ?? context.value.tooltipShowDelay;\n\n      return (\n        <Tooltip\n          content={text}\n          position=\"right\"\n          trigger={'hover'}\n          mouseEnterDelay={showDelay}\n          mouseLeaveDelay={hideDelay}\n        >\n          {node}\n        </Tooltip>\n      );\n    };\n\n    const handleClick = (e: MouseEvent) => {\n      // console.log(e)\n      foundation.handleClick(e);\n    };\n    const handleKeyPress = (e: KeyboardEvent) => foundation.handleKeyPress(e);\n\n    return () => {\n      const {\n        text,\n        icon,\n        toggleIcon,\n        className,\n        isSubNav,\n        style,\n        indent,\n        onMouseEnter,\n        onMouseLeave,\n        link,\n        linkOptions,\n        disabled,\n        level = 0,\n        tabIndex,\n      } = props;\n\n      const children = slots.default?.();\n      const { mode, isInSubNav, prefixCls, limitIndent } = context.value;\n\n      const isCollapsed = adapter().getIsCollapsed();\n\n      const selected = adapter().getSelected();\n\n      let itemChildren = null;\n      if (!isNullOrUndefined(children)) {\n        itemChildren = children;\n      } else {\n        let placeholderIcons = null;\n        if (mode === strings.MODE_VERTICAL && !limitIndent && !isCollapsed) {\n          const iconAmount = icon && !indent ? level : level - 1;\n          placeholderIcons = times(iconAmount, (index) => renderIcon(null, strings.ICON_POS_RIGHT, false, index));\n        }\n        itemChildren = (\n          <>\n            {placeholderIcons}\n            {context.value.toggleIconPosition === strings.TOGGLE_ICON_LEFT &&\n              renderIcon(toggleIcon, strings.ICON_POS_RIGHT, true, 'key-toggle-pos-right')}\n            {icon || indent || isInSubNav ? renderIcon(icon, strings.ICON_POS_LEFT, false, 'key-position-left') : null}\n            {!isNullOrUndefined(text) ? <span class={`${cssClasses.PREFIX}-item-text`}>{text}</span> : ''}\n            {context.value.toggleIconPosition === strings.TOGGLE_ICON_RIGHT &&\n              renderIcon(toggleIcon, strings.ICON_POS_RIGHT, true, 'key-toggle-pos-right')}\n          </>\n        );\n      }\n\n      if (typeof link === 'string') {\n        itemChildren = (\n          <a class={`${prefixCls}-item-link`} href={link} tabindex={-1} {...(linkOptions as any)}>\n            {itemChildren}\n          </a>\n        );\n      }\n\n      let itemDom: VNode | string = '';\n\n      if (isInSubNav && (isCollapsed || mode === strings.MODE_HORIZONTAL)) {\n        const popoverItemCls = cls({\n          [clsPrefix]: true,\n          [`${clsPrefix}-sub`]: isSubNav,\n          [`${clsPrefix}-selected`]: selected,\n          [`${clsPrefix}-collapsed`]: isCollapsed,\n          [`${clsPrefix}-disabled`]: disabled,\n        });\n\n        itemDom = (\n          <DropdownItem\n            selected={selected}\n            active={selected}\n            ref={setItemRef}\n            className={popoverItemCls}\n            onClick={handleClick}\n            onMouseenter={onMouseEnter}\n            onMouseleave={onMouseLeave}\n            disabled={disabled}\n            onKeyDown={handleKeyPress}\n          >\n            {itemChildren}\n          </DropdownItem>\n        );\n      } else {\n        // Items are divided into normal and sub-wrap\n        const popoverItemCls = cls(`${className || `${clsPrefix}-normal`}`, {\n          [clsPrefix]: true,\n          [`${clsPrefix}-sub`]: isSubNav,\n          [`${clsPrefix}-selected`]: selected && !isSubNav,\n          [`${clsPrefix}-collapsed`]: isCollapsed,\n          [`${clsPrefix}-disabled`]: disabled,\n          [`${clsPrefix}-has-link`]: typeof link === 'string',\n        });\n        const ariaProps = {\n          'aria-disabled': disabled,\n        };\n        if (isSubNav) {\n          const isOpen = adapter().getIsOpen();\n          ariaProps['aria-expanded'] = isOpen;\n        }\n\n        itemDom = (\n          <li\n            role={isSubNav ? null : 'menuitem'}\n            tabindex={isSubNav ? -1 : tabIndex}\n            {...ariaProps}\n            style={style}\n            ref={setItemRef}\n            class={popoverItemCls}\n            onClick={handleClick}\n            onMouseenter={onMouseEnter}\n            onMouseleave={onMouseLeave}\n            onKeypress={handleKeyPress}\n            {...getDataAttr(props)}\n          >\n            {itemChildren}\n          </li>\n        );\n      }\n\n      // Display Tooltip when disabled and SubNav\n      if ((isCollapsed && !isInSubNav && !isSubNav) || (isCollapsed && isSubNav && disabled)) {\n        itemDom = wrapTooltip(itemDom);\n      }\n\n      if (typeof context.value.renderWrapper === 'function') {\n        return context.value.renderWrapper({\n          itemElement: itemDom,\n          isSubNav: isSubNav,\n          isInSubNav: isInSubNav,\n          props: props,\n        });\n      }\n\n      return itemDom;\n    };\n  },\n});\n\nexport default NavItem;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","clsPrefix","cssClasses","PREFIX","vuePropsType","text","PropTypes","node","itemKey","string","number","onClick","type","func","default","noop","onMouseEnter","onMouseLeave","icon","className","toggleIcon","style","object","forwardRef","indent","bool","isCollapsed","isSubNav","link","linkOptions","disabled","items","Array","level","Number","maxHeight","tabIndex","tooltipHideDelay","tooltipShowDelay","NavItem","defineComponent","props","name","setup","attrs","slots","context","useNavContext","state","reactive","tooltipShow","adapter","adapterInject","useBaseComponent","foundation","ItemFoundation","cloneDeep","updateTooltipShow","updateSelected","_selected","_invokeContextFunc","updateGlobalSelectedKeys","keys","getSelectedKeys","value","selectedKeys","getSelectedKeysIsControlled","selectedKeysIsControlled","notifyGlobalOnSelect","args","notifyGlobalOnClick","notifyClick","notifyMouseEnter","notifyMouseLeave","getIsCollapsed","Boolean","getSelected","includes","getIsOpen","openKeys","funcName","renderIcon","pos","isToggleIcon","key","mode","strings","MODE_HORIZONTAL","iconSize","ICON_POS_RIGHT","cls","toggleIconPosition","_createVNode","isSemiIcon","cloneVNode","size","setItemRef","ref","wrapTooltip","hideDelay","showDelay","Tooltip","handleClick","e","handleKeyPress","children","isInSubNav","prefixCls","limitIndent","selected","itemChildren","isNullOrUndefined","placeholderIcons","MODE_VERTICAL","iconAmount","times","index","_Fragment","TOGGLE_ICON_LEFT","ICON_POS_LEFT","TOGGLE_ICON_RIGHT","_mergeProps","itemDom","popoverItemCls","DropdownItem","ariaProps","isOpen","getDataAttr","renderWrapper","itemElement"],"mappings":";;;;;;;;;;;;;AA+BsE,SAAAA,EAAAC,GAAA;AAAA,SAAA,OAAAA,KAAA,cAAAC,OAAAC,UAAAC,SAAAC,KAAAJ,CAAA,MAAAK,qBAAAA,CAAAA,EAAAL,CAAA;AAAA;AAEtE,MAAMM,IAAY,GAAGC,EAAWC,MAAM,SA+BzBC,KAA2C;AAAA,EACtDC,MAAMC,EAAUC;AAAAA,EAChBC,SAAS,CAACF,EAAUG,QAAQH,EAAUI,MAAM;AAAA,EAC5CC,SAAS;AAAA,IACPC,MAAMN,EAAUO;AAAAA,IAChBC,SAASC;AAAAA,EACV;AAAA,EACDC,cAAc;AAAA,IACZJ,MAAMN,EAAUO;AAAAA,IAChBC,SAASC;AAAAA,EACV;AAAA,EACDE,cAAc;AAAA,IACZL,MAAMN,EAAUO;AAAAA,IAChBC,SAASC;AAAAA,EACV;AAAA,EACDG,MAAMZ,EAAUC;AAAAA,EAChBY,WAAWb,EAAUG;AAAAA,EACrBW,YAAYd,EAAUG;AAAAA,EACtBY,OAAOf,EAAUgB;AAAAA,EACjBC,YAAY;AAAA,IACVX,MAAMN,EAAUO;AAAAA,IAChBC,SAASC;AAAAA,EACV;AAAA,EACDS,QAAQ;AAAA,IACNZ,MAAM,CAACN,EAAUmB,MAAMnB,EAAUI,MAAM;AAAA,IACvCI,SAAS;AAAA,EACV;AAAA,EACDY,aAAa;AAAA,IACXd,MAAMN,EAAUmB;AAAAA,IAChBX,SAAS;AAAA,EACV;AAAA;AAAA,EACDa,UAAU;AAAA,IACRf,MAAMN,EAAUmB;AAAAA,IAChBX,SAAS;AAAA,EACV;AAAA;AAAA,EACDc,MAAMtB,EAAUG;AAAAA,EAChBoB,aAAavB,EAAUgB;AAAAA,EACvBQ,UAAU;AAAA,IACRlB,MAAMN,EAAUmB;AAAAA,IAChBX,SAAS;AAAA,EACV;AAAA,EAEDiB,OAAOC;AAAAA,EACPC,OAAOC;AAAAA,EACPC,WAAWD;AAAAA,EAEXE,UAAU;AAAA,IACRxB,MAAMN,EAAUI;AAAAA,IAChBI,SAAS;AAAA,EACV;AAAA,EACDuB,kBAAkB/B,EAAUI;AAAAA,EAC5B4B,kBAAkBhC,EAAUI;AAC9B,GACM6B,KAAUC,gBAAAA,EAAgB;AAAA,EAC9BC,OAAO;AAAA,IAAE,GAAGrC;AAAAA,EAAc;AAAA,EAC1BsC,MAAM;AAAA,EACNC,MAAMF,GAAO;AAAA,IAAEG,OAAAA;AAAAA,IAAOC,OAAAA;AAAAA,EAAM,GAAG;AAC7B,UAAM;AAAA,MAAEC,SAAAA;AAAAA,IAAS,IAAGC,GAAa,GAC3BC,IAAQC,EAAuB;AAAA,MACnCC,aAAa;AAAA,IACf,CAAC,GACK;AAAA,MAAEC,SAASC;AAAAA,IAAc,IAAIC,GAA+BZ,GAAOO,CAAK,GAExEM,IAAa,IAAIC,GAAeJ,EAAS,CAAA;AAE/C,aAASA,IAAmD;AAC1D,aAAO;AAAA,QACL,GAAGC,EAA2C;AAAA,QAC9CI,WAAAA;AAAAA,QACAC,mBAAoBP,CAAAA,MAAiBF,EAAME,cAAcA;AAAAA,QACzDQ,gBAAiBC,CAAAA,MAAcC,EAAmB,sBAAsB,CAACnB,EAAMjC,OAAO,CAAC;AAAA,QACvFqD,0BAA2BC,CAAAA,MAASF,EAAmB,sBAAsB,CAAC,GAAGE,CAAI,CAAC;AAAA,QACtFC,iBAAiBA,MAAMjB,EAAQkB,SAASlB,EAAQkB,MAAMC;AAAAA,QACtDC,6BAA6BA,MAAMpB,EAAQkB,SAASlB,EAAQkB,MAAMG;AAAAA,QAClEC,sBAAsBA,IAAIC,MAAST,EAAmB,YAAY,GAAGS,CAAI;AAAA,QACzEC,qBAAqBA,IAAID,MAAST,EAAmB,WAAW,GAAGS,CAAI;AAAA,QACvEE,aAAaA,IAAIF,MAAS5B,EAAM9B,QAAQ,GAAG0D,CAAI;AAAA,QAC/CG,kBAAkBA,IAAIH,MAAS5B,EAAMzB,aAAa,GAAGqD,CAAI;AAAA,QACzDI,kBAAkBA,IAAIJ,MAAS5B,EAAMxB,aAAa,GAAGoD,CAAI;AAAA,QACzDK,gBAAgBA,MAAMjC,EAAMf,eAAeiD,GAAQ7B,EAAQkB,SAASlB,EAAQkB,MAAMtC,gBAAgB;AAAA,QAClGkD,aAAaA,MACXD,GACE7B,EAAQkB,SAASlB,EAAQkB,MAAMC,gBAAgBnB,EAAQkB,MAAMC,aAAaY,SAASpC,EAAMjC,OAAiB;AAAA,QAE9GsE,WAAWA,MACTH,GAAQ7B,EAAQkB,SAASlB,EAAQkB,MAAMe,YAAYjC,EAAQkB,MAAMe,SAASF,SAASpC,EAAMjC,OAAiB;AAAA;IAEhH;AACA,aAASoD,EAAmBoB,MAAqBX,GAAa;AAC5D,aAAIW,KAAYlC,EAAQkB,SAAS,OAAOlB,EAAQkB,MAAMgB,CAAQ,KAAM,aAC3DlC,EAAQkB,MAAMgB,CAAQ,EAAE,GAAGX,CAAI,IAEjC;AAAA,IACT;AAEA,aAASY,EAAW/D,GAAsBgE,GAAaC,IAAe,IAAOC,IAAuB,GAAG;AAKrG,UAJI3C,EAAMd,YAIN,CAACT,KAAQ4B,EAAQkB,MAAMqB,SAASC,EAAQC;AAC1C,eAAO;AAGT,UAAIC,IAAW;AACf,MAAIN,MAAQI,EAAQG,mBAClBD,IAAW;AAGb,YAAMrE,IAAYuE,EAAI,GAAGzF,CAAS,SAAS;AAAA,QACzC,CAAC,GAAGA,CAAS,gBAAgB6C,EAAQkB,MAAM2B,kBAAkB,EAAE,GAAGR;AAAAA,QAClE,CAAC,GAAGlF,CAAS,YAAY,GAAG,CAACkF;AAAAA,MAC/B,CAAC;AAED,aAAAS,EAAA,KAAA;AAAA,QAAA,OACYzE;AAAAA,QAAS,KAAOiE;AAAAA,SACvBS,CAAAA,GAAW3E,CAAI,IAAI4E,GAAW5E,GAAesE,IAAW;AAAA,QAAEO,MAAMP;AAAAA,MAAS,IAAI,CAAE,CAAA,IAAItE,CAAI,CAAA;AAAA,IAG9F;AAEA,UAAM8E,IAAcC,CAAAA,MAAa;AAE/BxD,MAAAA,EAAMlB,cAAckB,EAAMlB,WAAW0E,CAAG;AAAA,OAGpCC,IAAe3F,CAAAA,MAAgB;AACnC,YAAM;AAAA,QAAEF,MAAAA;AAAAA,QAAMgC,kBAAAA;AAAAA,QAAkBC,kBAAAA;AAAAA,MAAkB,IAAGG,GAC/C0D,IAAY9D,KAAoBS,EAAQkB,MAAM3B,kBAC9C+D,IAAY9D,KAAoBQ,EAAQkB,MAAM1B;AAEpD,aAAAsD,EAAAS,IAAA;AAAA,QAAA,SAEahG;AAAAA,QAAI,UAAA;AAAA,QAAA,SAEJ;AAAA,QAAO,iBACC+F;AAAAA,QAAS,iBACTD;AAAAA,MAAS,GAAAzG,EAEzBa,CAAI,IAAJA,IAAI;AAAA,QAAAO,SAAAA,MAAA,CAAJP,CAAI;AAAA,MAAA,CAAA;AAAA,OAKL+F,IAAeC,OAAkB;AAErCjD,MAAAA,EAAWgD,YAAYC,CAAC;AAAA,OAEpBC,IAAkBD,OAAqBjD,EAAWkD,eAAeD,CAAC;AAExE,WAAO,MAAM;;AACX,YAAM;AAAA,QACJlG,MAAAA;AAAAA,QACAa,MAAAA;AAAAA,QACAE,YAAAA;AAAAA,QACAD,WAAAA;AAAAA,QACAQ,UAAAA;AAAAA,QACAN,OAAAA;AAAAA,QACAG,QAAAA;AAAAA,QACAR,cAAAA;AAAAA,QACAC,cAAAA;AAAAA,QACAW,MAAAA;AAAAA,QACAC,aAAAA;AAAAA,QACAC,UAAAA;AAAAA,QACAG,OAAAA,IAAQ;AAAA,QACRG,UAAAA;AAAAA,MACD,IAAGK,GAEEgE,KAAW5D,IAAAA,EAAM/B,YAAN+B,gBAAAA,EAAAA,KAAAA,IACX;AAAA,QAAEwC,MAAAA;AAAAA,QAAMqB,YAAAA;AAAAA,QAAYC,WAAAA;AAAAA,QAAWC,aAAAA;AAAAA,UAAgB9D,EAAQkB,OAEvDtC,IAAcyB,IAAUuB,kBAExBmC,IAAW1D,IAAUyB;AAE3B,UAAIkC,IAAe;AACnB,UAAI,CAACC,EAAkBN,CAAQ;AAC7BK,QAAAA,IAAeL;AAAAA,WACV;AACL,YAAIO,IAAmB;AACvB,YAAI3B,MAASC,EAAQ2B,iBAAiB,CAACL,KAAe,CAAClF,GAAa;AAClE,gBAAMwF,IAAahG,KAAQ,CAACM,IAASS,IAAQA,IAAQ;AACrD+E,UAAAA,IAAmBG,GAAMD,GAAaE,CAAAA,MAAUnC,EAAW,MAAMK,EAAQG,gBAAgB,IAAO2B,CAAK,CAAC;AAAA,QACxG;AACAN,QAAAA,IAAYlB,EAAAyB,GAAA,MAAA,CAEPL,GACAlE,EAAQkB,MAAM2B,uBAAuBL,EAAQgC,oBAC5CrC,EAAW7D,GAAYkE,EAAQG,gBAAgB,IAAM,sBAAsB,GAC5EvE,KAAQM,KAAUkF,IAAazB,EAAW/D,GAAMoE,EAAQiC,eAAe,IAAO,mBAAmB,IAAI,MACpGR,EAAkB1G,CAAI,IAAmE,KAAlEuF,EAAA,QAAA;AAAA,UAAA,OAAgB,GAAG1F,EAAWC,MAAM;AAAA,WAAeE,CAAAA,CAAI,CAAW,GAC1FyC,EAAQkB,MAAM2B,uBAAuBL,EAAQkC,qBAC5CvC,EAAW7D,GAAYkE,EAAQG,gBAAgB,IAAM,sBAAsB,CAAC,CAEjF;AAAA,MACH;AAEA,MAAI,OAAO7D,KAAS,aAClBkF,IAAYlB,EAAA,KAAA6B,EAAA;AAAA,QAAA,OACA,GAAGd,CAAS;AAAA,QAAY,MAAQ/E;AAAAA,QAAI,UAAY;AAAA,MAASC,GAAAA,CAAW,GAC3EiF,CAAAA,CAAY,CAEhB;AAGH,UAAIY,IAA0B;AAE9B,UAAIhB,MAAehF,KAAe2D,MAASC,EAAQC,kBAAkB;AACnE,cAAMoC,IAAiBjC,EAAI;AAAA,UACzB,CAACzF,CAAS,GAAG;AAAA,UACb,CAAC,GAAGA,CAAS,MAAM,GAAG0B;AAAAA,UACtB,CAAC,GAAG1B,CAAS,WAAW,GAAG4G;AAAAA,UAC3B,CAAC,GAAG5G,CAAS,YAAY,GAAGyB;AAAAA,UAC5B,CAAC,GAAGzB,CAAS,WAAW,GAAG6B;AAAAA,QAC7B,CAAC;AAED4F,QAAAA,IAAO9B,EAAAgC,IAAA;AAAA,UAAA,UAEOf;AAAAA,UAAQ,QACVA;AAAAA,UAAQ,KACXb;AAAAA,UAAU,WACJ2B;AAAAA,UAAc,SAChBrB;AAAAA,UAAW,cACNtF;AAAAA,UAAY,cACZC;AAAAA,UAAY,UAChBa;AAAAA,UAAQ,WACP0E;AAAAA,QAAc,GAAA9G,EAExBoH,CAAY,IAAZA,IAAY;AAAA,UAAAhG,SAAAA,MAAA,CAAZgG,CAAY;AAAA,SAEhB;AAAA,MACH,OAAO;AAEL,cAAMa,IAAiBjC,EAAI,GAAGvE,KAAa,GAAGlB,CAAS,SAAS,IAAI;AAAA,UAClE,CAACA,CAAS,GAAG;AAAA,UACb,CAAC,GAAGA,CAAS,MAAM,GAAG0B;AAAAA,UACtB,CAAC,GAAG1B,CAAS,WAAW,GAAG4G,KAAY,CAAClF;AAAAA,UACxC,CAAC,GAAG1B,CAAS,YAAY,GAAGyB;AAAAA,UAC5B,CAAC,GAAGzB,CAAS,WAAW,GAAG6B;AAAAA,UAC3B,CAAC,GAAG7B,CAAS,WAAW,GAAG,OAAO2B,KAAS;AAAA,QAC7C,CAAC,GACKiG,IAAY;AAAA,UAChB,iBAAiB/F;AAAAA;AAEnB,YAAIH,GAAU;AACZ,gBAAMmG,IAAS3E,IAAU2B;AACzB+C,UAAAA,EAAU,eAAe,IAAIC;AAAAA,QAC/B;AAEAJ,QAAAA,IAAO9B,EAAA,MAAA6B,EAAA;AAAA,UAAA,MAEG9F,IAAW,OAAO;AAAA,UAAU,UACxBA,IAAW,KAAKS;AAAAA,QAAQ,GAC9ByF,GAAS;AAAA,UAAA,OACNxG;AAAAA,UAAK,KACP2E;AAAAA,UAAU,OACR2B;AAAAA,UAAc,SACZrB;AAAAA,UAAW,cACNtF;AAAAA,UAAY,cACZC;AAAAA,UAAY,YACduF;AAAAA,QAAc,GACtBuB,GAAYtF,CAAK,CAAC,GAAA,CAErBqE,CAAY,CAEhB;AAAA,MACH;AAOA,cAJKpF,KAAe,CAACgF,KAAc,CAAC/E,KAAcD,KAAeC,KAAYG,OAC3E4F,IAAUxB,EAAYwB,CAAO,IAG3B,OAAO5E,EAAQkB,MAAMgE,iBAAkB,aAClClF,EAAQkB,MAAMgE,cAAc;AAAA,QACjCC,aAAaP;AAAAA,QACb/F,UAAUA;AAAAA,QACV+E,YAAYA;AAAAA,QACZjE,OAAOA;AAAAA,MACT,CAAC,IAGIiF;AAAAA;EAEX;AACF,CAAC;"}