{"version":3,"file":"checkboxInner.js","sources":["../../src/components/checkbox/checkboxInner.tsx"],"sourcesContent":["import { defineComponent, ref, h, Fragment, useSlots, PropType } from 'vue';\nimport classnames from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport { noop } from 'lodash';\nimport { checkboxClasses as css } from '@douyinfe/semi-foundation/checkbox/constants';\nimport { IconCheckboxTick, IconCheckboxIndeterminate } from '@kousum/semi-icons-vue';\nimport { AriaAttributes } from '../AriaAttributes';\nimport { symbol, vuePropsMake } from '../PropTypes';\nimport { CombineProps, VueHTMLAttributes } from '../interface';\nimport { propTypesCheckbox } from './propType';\nimport { ComponentObjectPropsOptions } from 'vue';\n\nexport interface CheckboxInnerProps {\n  'aria-describedby'?: AriaAttributes['aria-describedby'];\n  'aria-errormessage'?: AriaAttributes['aria-errormessage'];\n  'aria-invalid'?: AriaAttributes['aria-invalid'];\n  'aria-labelledby'?: AriaAttributes['aria-labelledby'];\n  'aria-required'?: AriaAttributes['aria-required'];\n  indeterminate?: boolean;\n  checked?: boolean;\n  disabled?: boolean;\n  prefixCls?: string;\n  name?: string;\n  isPureCardType?: boolean;\n  addonId?: string;\n  extraId?: string;\n  'aria-label'?: AriaAttributes['aria-label'];\n  focusInner?: boolean;\n  onInputFocus?: (e: any) => void;\n  onInputBlur?: (e: any) => void;\n  preventScroll?: boolean;\n  onChange?: any;\n  children?: any;\n  grouped?: boolean;\n  value?: any;\n}\n\nconst propTypes: CombineProps<CheckboxInnerProps> = {\n  ...propTypesCheckbox,\n  'aria-describedby': PropTypes.string,\n  'aria-errormessage': PropTypes.string,\n  'aria-invalid': [PropTypes.bool, PropTypes.string] as PropType<CheckboxInnerProps['aria-invalid']>,\n  'aria-labelledby': PropTypes.string,\n  'aria-required': PropTypes.bool,\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func as PropType<CheckboxInnerProps['onChange']>,\n  children: PropTypes.node,\n  grouped: PropTypes.bool as PropType<CheckboxInnerProps['grouped']>,\n  value: PropTypes.any,\n  isPureCardType: PropTypes.bool,\n  addonId: PropTypes.string,\n  extraId: PropTypes.string,\n  focusInner: PropTypes.bool,\n  onInputFocus: PropTypes.func as PropType<CheckboxInnerProps['onInputFocus']>,\n  onInputBlur: PropTypes.func as PropType<CheckboxInnerProps['onInputBlur']>,\n  preventScroll: PropTypes.bool,\n\n  indeterminate: Boolean,\n  prefixCls: String,\n  name: String,\n  'aria-label': String,\n};\n\nconst defaultProps = {\n  onChange: noop,\n};\nexport const vuePropsType = vuePropsMake<CheckboxInnerProps>(propTypes, defaultProps);\nconst CheckboxInner = defineComponent({\n  props: { ...vuePropsType },\n  name: 'vuePropsType',\n  setup(props, { expose }) {\n    const slots = useSlots();\n    const inputEntity = ref();\n\n    function blur() {\n      inputEntity.value.blur();\n    }\n\n    function focus() {\n      const { preventScroll } = props;\n      inputEntity.value.focus({ preventScroll });\n    }\n\n    expose({\n      blur,\n      focus,\n    });\n\n    return () => {\n      const {\n        indeterminate,\n        checked,\n        disabled,\n        prefixCls,\n        name,\n        isPureCardType,\n        addonId,\n        extraId,\n        focusInner,\n        onInputFocus,\n        onInputBlur,\n      } = props;\n      const prefix = prefixCls || css.PREFIX;\n\n      const wrapper = classnames(\n        {\n          [`${prefix}-inner`]: true,\n          [`${prefix}-inner-checked`]: Boolean(checked),\n          [`${prefix}-inner-pureCardType`]: isPureCardType,\n        },\n        css.WRAPPER\n      );\n\n      const inner = classnames({\n        [`${prefix}-inner-display`]: true,\n        [`${prefix}-focus`]: focusInner,\n        [`${prefix}-focus-border`]: focusInner && !checked,\n      });\n\n      const icon = checked ? <IconCheckboxTick /> : indeterminate ? <IconCheckboxIndeterminate /> : null;\n\n      // vue\n      const radioKey = ref(symbol());\n      const inputProps: VueHTMLAttributes = {\n        type: 'checkbox',\n        'aria-label': props['aria-label'],\n        'aria-disabled': disabled,\n        'aria-checked': checked,\n        'aria-labelledby': addonId,\n        'aria-describedby': extraId || props['aria-describedby'],\n        'aria-invalid': props['aria-invalid'],\n        'aria-errormessage': props['aria-errormessage'],\n        'aria-required': props['aria-required'],\n        class: css.INPUT,\n        // 虽然没用到 但是还是写一下\n        // onChange: noop,\n        onChange: (e) => {\n          radioKey.value = symbol();\n        },\n        checked: checked,\n        disabled: disabled,\n        onFocus: onInputFocus,\n        onBlur: onInputBlur,\n      };\n      name && (inputProps['name'] = name);\n\n      return (\n        <span class={wrapper}>\n          <input {...inputProps} key={radioKey.value} ref={inputEntity} />\n          <span class={inner}>{icon}</span>\n        </span>\n      );\n    };\n  },\n});\n\nexport default CheckboxInner;\n"],"names":["propTypes","propTypesCheckbox","PropTypes","string","bool","checked","disabled","onChange","func","children","node","grouped","value","any","isPureCardType","addonId","extraId","focusInner","onInputFocus","onInputBlur","preventScroll","indeterminate","Boolean","prefixCls","String","name","defaultProps","noop","vuePropsType","vuePropsMake","CheckboxInner","defineComponent","props","setup","expose","useSlots","inputEntity","ref","blur","focus","prefix","css","PREFIX","wrapper","classnames","WRAPPER","inner","icon","_createVNode","IconCheckboxTick","IconCheckboxIndeterminate","radioKey","symbol","inputProps","type","class","INPUT","e","onFocus","onBlur","_mergeProps"],"mappings":"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"}