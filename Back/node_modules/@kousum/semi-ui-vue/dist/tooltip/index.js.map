{"version":3,"file":"index.js","sources":["../../src/components/tooltip/index.tsx"],"sourcesContent":["import {\n  defineComponent,\n  ref,\n  h,\n  onActivated,\n  Fragment,\n  CSSProperties,\n  reactive,\n  nextTick,\n  onMounted,\n  onUnmounted,\n  isVNode,\n  watch,\n  cloneVNode,\n  provide,\n  inject,\n  watchEffect,\n  isRef,\n  useSlots,\n  getCurrentInstance,\n  Ref,\n  VNode,\n  ComponentObjectPropsOptions,\n  PropType,\n} from 'vue';\nimport classNames from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport { throttle, noop, get, omit, each, isEmpty, isFunction } from 'lodash';\n\nimport { BASE_CLASS_PREFIX } from '@douyinfe/semi-foundation/base/constants';\nimport warning from '@douyinfe/semi-foundation/utils/warning';\nimport Event from '@douyinfe/semi-foundation/utils/Event';\nimport { ArrayElement } from '@douyinfe/semi-foundation/utils/type';\nimport { convertDOMRectToObject, DOMRectLikeType } from '@douyinfe/semi-foundation/utils/dom';\nimport TooltipFoundation from '@douyinfe/semi-foundation/tooltip/foundation';\nimport type { TooltipAdapter, Position, PopupContainerDOMRect } from '@douyinfe/semi-foundation/tooltip/foundation';\nimport { strings, cssClasses, numbers } from '@douyinfe/semi-foundation/tooltip/constants';\nimport '@douyinfe/semi-foundation/tooltip/tooltip.scss';\nimport { BaseProps, useBaseComponent } from '../_base/baseComponent';\nimport { isHTMLElement } from '../_base/reactUtils';\nimport {\n  getActiveElement,\n  getFocusableElements,\n  getMultinodeToFragment,\n  isVNodeTypeNotSymbol,\n  runAfterTicks,\n  stopPropagation,\n} from '../_utils';\nimport { getUuidShort } from '@douyinfe/semi-foundation/utils/uuid';\nimport Portal from '../_portal';\nimport TriangleArrow from './TriangleArrow';\nimport TriangleArrowVertical from './TriangleArrowVertical';\nimport CSSAnimation from '../_cssAnimation';\nimport { Motion } from '../_base/base';\nimport { CombineProps, VueJsxNode } from '../interface';\nimport { vuePropsMake } from '../PropTypes';\n\nexport type Trigger = ArrayElement<typeof strings.TRIGGER_SET>;\nexport { Position };\n\nexport interface ArrowBounding {\n  offsetX?: number;\n  offsetY?: number;\n  width?: number;\n  height?: number;\n}\n\nexport interface RenderContentProps<T = HTMLElement> {\n  initialFocusRef?: Ref<T>;\n}\n\nexport type RenderContent<T = HTMLElement> = (props: RenderContentProps<T>) => VNode;\n\nexport interface TooltipProps extends BaseProps {\n  motion?: Motion;\n  autoAdjustOverflow?: boolean;\n  position?: Position;\n  getPopupContainer?: () => HTMLElement;\n  mouseEnterDelay?: number;\n  mouseLeaveDelay?: number;\n  trigger?: Trigger;\n  className?: string;\n  clickToHide?: boolean;\n  visible?: boolean;\n  style?: CSSProperties;\n  content?: VueJsxNode | RenderContent;\n  prefixCls?: string;\n  onVisibleChange?: (visible: boolean) => void;\n  onClickOutSide?: (e: MouseEvent) => void;\n  spacing?: number | { x: number; y: number };\n  margin?: number | { marginLeft: number; marginTop: number; marginRight: number; marginBottom: number };\n  showArrow?: boolean | VueJsxNode;\n  zIndex?: number;\n  rePosKey?: string | number;\n  role?: string;\n  arrowBounding?: ArrowBounding;\n  transformFromCenter?: boolean;\n  arrowPointAtCenter?: boolean;\n  wrapWhenSpecial?: boolean;\n  stopPropagation?: boolean;\n  clickTriggerToHide?: boolean;\n  wrapperClassName?: string;\n  closeOnEsc?: boolean;\n  guardFocus?: boolean;\n  returnFocusOnClose?: boolean;\n  onEscKeyDown?: (e: KeyboardEvent) => void;\n  disableArrowKeyDown?: boolean;\n  wrapperId?: string;\n  preventScroll?: boolean;\n  disableFocusListener?: boolean;\n  afterClose?: () => void;\n  keepDOM?: boolean;\n}\n\ninterface TooltipState {\n  visible: boolean;\n  transitionState: string;\n  triggerEventSet: {\n    [key: string]: any;\n  };\n  portalEventSet: {\n    [key: string]: any;\n  };\n  containerStyle: CSSProperties;\n  isInsert: boolean;\n  placement: Position;\n  transitionStyle: Record<string, any>;\n  isPositionUpdated: boolean;\n  id: string;\n  displayNone: boolean;\n}\n\nconst prefix = cssClasses.PREFIX;\nconst positionSet = strings.POSITION_SET;\nconst triggerSet = strings.TRIGGER_SET;\n\nconst blockDisplays = ['flex', 'block', 'table', 'flow-root', 'grid'];\nconst defaultGetContainer = () => document.body;\n\nconst propTypes: CombineProps<TooltipProps> = {\n  // children: PropTypes.node,\n  motion: PropTypes.oneOfType([PropTypes.bool, PropTypes.object, PropTypes.func]),\n  autoAdjustOverflow: PropTypes.bool,\n  position: String as PropType<TooltipProps['position']>,\n  getPopupContainer: PropTypes.func as PropType<TooltipProps['getPopupContainer']>,\n  mouseEnterDelay: PropTypes.number,\n  mouseLeaveDelay: PropTypes.number,\n  trigger: [Boolean, String] as PropType<TooltipProps['trigger']>,\n  className: PropTypes.string,\n  wrapperClassName: PropTypes.string,\n  clickToHide: PropTypes.bool,\n  // used with trigger === hover, private\n  clickTriggerToHide: PropTypes.bool,\n  visible: PropTypes.bool,\n  style: PropTypes.object,\n  content: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  prefixCls: PropTypes.string,\n  onVisibleChange: PropTypes.func as PropType<TooltipProps['onVisibleChange']>,\n  onClickOutSide: PropTypes.func as PropType<TooltipProps['onClickOutSide']>,\n  spacing: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  margin: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  showArrow: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  zIndex: PropTypes.number,\n  rePosKey: [String, Number, Boolean] as PropType<TooltipProps['rePosKey']>,\n  arrowBounding: Object,\n  transformFromCenter: PropTypes.bool, // Whether to change from the center of the trigger (for dynamic effects)\n  arrowPointAtCenter: PropTypes.bool,\n  stopPropagation: PropTypes.bool,\n  // private\n  role: PropTypes.string,\n  wrapWhenSpecial: PropTypes.bool, // when trigger has special status such as \"disabled\" or \"loading\", wrap span\n  guardFocus: PropTypes.bool,\n  returnFocusOnClose: PropTypes.bool,\n  preventScroll: PropTypes.bool,\n  disableFocusListener: PropTypes.bool,\n  // name: String,\n\n  // cancelText: String,\n  // okText: String,\n  // contentClassName: String,\n  closeOnEsc: {\n    type: Boolean,\n    default: false,\n  },\n  onEscKeyDown: {\n    type: Function as PropType<TooltipProps['onEscKeyDown']>,\n    default: noop,\n  },\n  wrapperId: String,\n  disableArrowKeyDown: Boolean,\n  afterClose: Function as PropType<TooltipProps['afterClose']>,\n  keepDOM: Boolean,\n};\n\nconst defaultProps = {\n  arrowBounding: numbers.ARROW_BOUNDING,\n  autoAdjustOverflow: true,\n  arrowPointAtCenter: true,\n  trigger: 'hover',\n  transformFromCenter: true,\n  position: 'top',\n  prefixCls: prefix,\n  role: 'tooltip',\n  mouseEnterDelay: numbers.MOUSE_ENTER_DELAY,\n  mouseLeaveDelay: numbers.MOUSE_LEAVE_DELAY,\n  motion: true,\n  onVisibleChange: noop,\n  onClickOutSide: noop,\n  spacing: numbers.SPACING,\n  margin: numbers.MARGIN,\n  showArrow: true,\n  wrapWhenSpecial: true,\n  zIndex: numbers.DEFAULT_Z_INDEX,\n  closeOnEsc: false,\n  guardFocus: false,\n  returnFocusOnClose: false,\n  onEscKeyDown: noop,\n  disableFocusListener: false,\n  disableArrowKeyDown: false,\n  keepDOM: false,\n};\n\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\n\nconst Tooltip = defineComponent({\n  props: { ...vuePropsType } as CombineProps<TooltipProps>,\n  name: 'Tooltip',\n  setup(props, { expose }) {\n    const slots = useSlots();\n    const eventManager = ref<Event>(new Event());\n    let triggerEl = ref();\n    const containerEl = ref();\n    const initialFocusRef = ref();\n    const resizeHandler = ref();\n    let isWrapped: boolean;\n    let mounted: any;\n    let scrollHandler: any;\n    let getPopupContainer: () => HTMLElement;\n    let containerPosition: string;\n    let isAnimating = false\n\n    let clickOutsideHandler;\n\n    const state = reactive({\n      visible: false,\n      /**\n       *\n       * Note: The transitionState parameter is equivalent to isInsert\n       */\n      transitionState: '',\n      triggerEventSet: {},\n      portalEventSet: {},\n      containerStyle: {\n        // zIndex: props.zIndex,\n      },\n      isInsert: false,\n      placement: props.position || 'top',\n      transitionStyle: {},\n      isPositionUpdated: false,\n      id: props.wrapperId, // auto generate id, will be used by children.aria-describedby & content.id, improve a11y\n      displayNone: false,\n    });\n    // TODO context\n    const { adapter: adapterInject, context } = useBaseComponent<TooltipProps>(props, state);\n\n    const theAdapter = adapter();\n\n    function adapter(): TooltipAdapter<TooltipProps, TooltipState> {\n      return {\n        ...adapterInject<TooltipProps, TooltipState>(),\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        on: (...args: any[]) => eventManager.value.on(...args),\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        off: (...args: any[]) => eventManager.value.off(...args),\n        getAnimatingState: () => isAnimating,\n        insertPortal: (content: TooltipProps['content'], { position, ...containerStyle }: { position: Position }) => {\n          state.isInsert = true;\n          state.transitionState = 'enter';\n          // @ts-ignore\n          state.containerStyle = { ...state.containerStyle, containerStyle };\n\n          nextTick(() => {\n            setTimeout(() => {\n              eventManager.value.emit('portalInserted');\n            }, 0);\n          });\n        },\n        removePortal: () => {\n          state.isInsert = false;\n          state.isPositionUpdated = false;\n        },\n        getEventName: () => ({\n          mouseEnter: 'onMouseenter',\n          mouseLeave: 'onMouseleave',\n          mouseOut: 'onMouseout',\n          mouseOver: 'onMouseover',\n          click: 'onClick',\n          focus: 'onFocus',\n          blur: 'onBlur',\n          keydown: 'onKeydown',\n          contextMenu: 'onContextmenu',\n        }),\n        registerTriggerEvent: (triggerEventSet: Record<string, any>) => {\n          state.triggerEventSet = triggerEventSet;\n        },\n        registerPortalEvent: (portalEventSet: Record<string, any>) => {\n          state.portalEventSet = portalEventSet;\n        },\n        getTriggerBounding: () => {\n          // eslint-disable-next-line\n          // It may be a React component or an html element\n          // There is no guarantee that triggerE l.current can get the real dom, so call findDOMNode to ensure that you can get the real dom\n          const triggerDOM = theAdapter.getTriggerNode();\n          triggerEl.value = triggerDOM;\n          return triggerDOM && triggerDOM.getBoundingClientRect?.();\n        },\n        // Gets the outer size of the specified container\n        getPopupContainerRect: () => {\n          const container = getPopupContainer();\n\n          let rect: PopupContainerDOMRect = null;\n\n          if (container && isHTMLElement(container)) {\n            const boundingRect: DOMRectLikeType = convertDOMRectToObject(container.getBoundingClientRect());\n            rect = {\n              ...boundingRect,\n              scrollLeft: container.scrollLeft,\n              scrollTop: container.scrollTop,\n            };\n          }\n\n          return rect;\n        },\n        containerIsBody: () => {\n          const container = getPopupContainer();\n\n          return container === document.body;\n        },\n        containerIsRelative: () => {\n          const container = getPopupContainer();\n          const computedStyle = window.getComputedStyle(container);\n          return computedStyle.getPropertyValue('position') === 'relative';\n        },\n        containerIsRelativeOrAbsolute: () => ['relative', 'absolute'].includes(containerPosition),\n        // Get the size of the pop-up layer\n        getWrapperBounding: () => {\n          const el = containerEl.value;\n          return el && (el as Element).getBoundingClientRect();\n        },\n        getDocumentElementBounding: () => document.documentElement.getBoundingClientRect(),\n        setPosition: ({ position, ...style }: { position: Position }) => {\n          state.containerStyle = { ...state.containerStyle, ...style };\n          state.placement = position;\n          state.isPositionUpdated = true;\n          nextTick(() => {\n            eventManager.value.emit('positionUpdated');\n          });\n        },\n        setDisplayNone: (displayNone: boolean, cb: () => void) => {\n          state.displayNone = displayNone;\n          nextTick(() => {\n            cb?.();\n          });\n        },\n        updatePlacementAttr: (placement: Position) => {\n          state.placement = placement;\n        },\n        togglePortalVisible: (visible: boolean, cb: () => void) => {\n          const willUpdateStates: Partial<TooltipState> = {};\n\n          willUpdateStates.transitionState = visible ? 'enter' : 'leave';\n          willUpdateStates.visible = visible;\n\n          if (mounted) {\n            state.transitionState = willUpdateStates.transitionState;\n            state.visible = willUpdateStates.visible;\n            nextTick(() => {\n              cb();\n            });\n          }\n        },\n        registerClickOutsideHandler: (cb: () => void) => {\n          if (clickOutsideHandler) {\n            theAdapter.unregisterClickOutsideHandler();\n          }\n          clickOutsideHandler = (e: any): any => {\n            if (!mounted) {\n              return false;\n            }\n            let el = triggerEl.value;\n            let popupEl = containerEl.value;\n            const target = e.target as Element;\n            const path = ((e as any).composedPath && (e as any).composedPath()) || [target];\n            const isClickTriggerToHide = props.clickTriggerToHide\n              ? (el && (el as any).contains(target)) || path.includes(el)\n              : false;\n            if (\n              (el &&\n                !(el as any).contains(target) &&\n                popupEl &&\n                !(popupEl as any).contains(target) &&\n                !(path.includes(popupEl) || path.includes(el))) ||\n              isClickTriggerToHide\n            ) {\n              props.onClickOutSide(e);\n              cb();\n            }\n          };\n          document.addEventListener('mousedown', clickOutsideHandler);\n        },\n        unregisterClickOutsideHandler: () => {\n          if (clickOutsideHandler) {\n            document.removeEventListener('mousedown', clickOutsideHandler);\n            clickOutsideHandler = null;\n          }\n        },\n        registerResizeHandler: (cb: (e: any) => void) => {\n          if (resizeHandler.value) {\n            theAdapter.unregisterResizeHandler();\n          }\n          resizeHandler.value = throttle((e): any => {\n            if (!mounted) {\n              return false;\n            }\n            cb(e);\n          }, 10);\n          window.addEventListener('resize', resizeHandler.value, false);\n        },\n        unregisterResizeHandler: () => {\n          if (resizeHandler.value) {\n            window.removeEventListener('resize', resizeHandler.value, false);\n            resizeHandler.value = null;\n          }\n        },\n        notifyVisibleChange: (visible: boolean) => {\n          props.onVisibleChange(visible);\n        },\n        registerScrollHandler: (rePositionCb: (arg: { x: number; y: number }) => void) => {\n          if (scrollHandler) {\n            theAdapter.unregisterScrollHandler();\n          }\n          scrollHandler = throttle((e): any => {\n            if (!mounted) {\n              return false;\n            }\n            const triggerDOM = theAdapter.getTriggerNode();\n            const isRelativeScroll = e.target.contains(triggerDOM);\n            if (isRelativeScroll) {\n              const scrollPos = { x: e.target.scrollLeft, y: e.target.scrollTop };\n              rePositionCb(scrollPos);\n            }\n          }, 10); // When it is greater than 16ms, it will be very obvious\n          window.addEventListener('scroll', scrollHandler, true);\n        },\n        unregisterScrollHandler: () => {\n          if (scrollHandler) {\n            window.removeEventListener('scroll', scrollHandler, true);\n            scrollHandler = null;\n          }\n        },\n        canMotion: () => Boolean(props.motion),\n        updateContainerPosition: () => {\n          const container = getPopupContainer();\n          if (container && isHTMLElement(container)) {\n            // getComputedStyle need first parameter is Element type\n            const computedStyle = window.getComputedStyle(container);\n            const position = computedStyle.getPropertyValue('position');\n            containerPosition = position;\n          }\n        },\n        getContainerPosition: () => containerPosition,\n        getContainer: () => containerEl.value,\n        getTriggerNode: () => {\n          let triggerDOM = triggerEl.value;\n          // TODO 可能是文本 节点 #text\n          if (!isHTMLElement(triggerEl.value)) {\n            triggerDOM = triggerEl.value;\n          }\n          return triggerDOM as Element;\n        },\n        getFocusableElements: (node: HTMLDivElement) => {\n          return getFocusableElements(node);\n        },\n        getActiveElement: () => {\n          return getActiveElement();\n        },\n        setInitialFocus: () => {\n          const { preventScroll } = props;\n          const focusRefNode = initialFocusRef.value as HTMLElement;\n          if (focusRefNode && 'focus' in focusRefNode) {\n            focusRefNode.focus({ preventScroll });\n          }\n        },\n        notifyEscKeydown: (event: KeyboardEvent) => {\n          props.onEscKeyDown(event);\n        },\n        setId: () => {\n          state.id = getUuidShort();\n        },\n        getTriggerDOM: () => {\n          if (triggerEl.value) {\n            return triggerEl.value;\n          } else {\n            return null;\n          }\n        },\n      };\n    }\n\n    const foundation = new TooltipFoundation(theAdapter);\n\n    onMounted(() => {\n      mounted = true;\n      getPopupContainer = props.getPopupContainer || context.value.getPopupContainer || defaultGetContainer;\n      foundation.init();\n      runAfterTicks(() => {\n        let triggerEle = triggerEl.value;\n        if (triggerEle) {\n          if (!(triggerEle instanceof HTMLElement)) {\n            triggerEle = triggerEle.$el;\n          }\n        }\n        foundation.updateStateIfCursorOnTrigger(triggerEle as HTMLElement);\n      }, 1);\n    });\n\n    onUnmounted(() => {\n      mounted = false;\n      foundation.destroy();\n    });\n\n    function focusTrigger() {\n      foundation.focusTrigger();\n    }\n\n    const isSpecial = (elem: JSX.Element | HTMLElement | any) => {\n      if (isHTMLElement(elem)) {\n        return Boolean(elem.disabled);\n      } else if (isVNode(elem)) {\n        const disabled = get(elem, 'props.disabled');\n\n        if (disabled) {\n          return strings.STATUS_DISABLED;\n        }\n\n        const loading = get(elem, 'props.loading');\n\n        /* Only judge the loading state of the Button, and no longer judge other components */\n        const isButton =\n          (!isEmpty(elem) && !isEmpty(elem.type) && (elem.type as any).name === 'Button') ||\n          (elem.type as any).name === 'IconButton';\n        if (loading && isButton) {\n          return strings.STATUS_LOADING;\n        }\n      }\n\n      return false;\n    };\n\n    // const willEnter = () => {\n    //   foundation.calcPosition();\n    //   /**\n    //    * Dangerous: remove setState in motion fix #1379\n    //    * because togglePortalVisible callback function will use visible state to notifyVisibleChange\n    //    * if visible state is old value, then notifyVisibleChange function will not be called\n    //    * we should ensure that after calling togglePortalVisible, callback function can get right visible value\n    //    */\n    //   // this.setState({ visible: true });\n    // };\n    const didLeave = () => {\n      if (props.keepDOM) {\n        foundation.setDisplayNone(true);\n      } else {\n        foundation.removePortal();\n      }\n      foundation.unBindEvent();\n    };\n\n    /** for transition - end */\n\n    function rePosition() {\n      return foundation.calcPosition();\n    }\n\n    watch([() => props.mouseLeaveDelay, () => props.mouseEnterDelay], () => {\n      warning(\n        props.mouseLeaveDelay < props.mouseEnterDelay,\n        \"[Semi Tooltip] 'mouseLeaveDelay' cannot be less than 'mouseEnterDelay', which may cause the dropdown layer to not be hidden.\"\n      );\n    });\n    watch(\n      () => props.visible,\n      () => {\n        if (['hover', 'focus'].includes(props.trigger)) {\n          props.visible ? foundation.delayShow() : foundation.delayHide();\n        } else {\n          props.visible ? foundation.show() : foundation.hide();\n        }\n      }\n    );\n    watch(\n      () => props.rePosKey,\n      () => {\n        // 获取更新后的dom\n        nextTick(() => {\n          rePosition();\n        });\n      },\n      {}\n    );\n\n    const renderIcon = () => {\n      const { placement } = state;\n      const { showArrow, prefixCls, style } = props;\n      let icon = null;\n      const triangleCls = classNames([`${prefixCls}-icon-arrow`]);\n      const bgColor = get(style, 'backgroundColor');\n\n      const iconComponent =\n        placement?.includes('left') || placement?.includes('right') ? <TriangleArrowVertical /> : <TriangleArrow />;\n      if (showArrow) {\n        if (isVNode(showArrow)) {\n          icon = showArrow;\n        } else {\n          icon = cloneVNode(iconComponent, { class: triangleCls, style: { color: bgColor, fill: 'currentColor' } });\n        }\n      }\n\n      return icon;\n    };\n\n    const handlePortalInnerClick = (e: any) => {\n      if (props.clickToHide) {\n        foundation.hide();\n      }\n      if (props.stopPropagation) {\n        stopPropagation(e);\n      }\n    };\n\n    const handlePortalMouseDown = (e: MouseEvent) => {\n      if (props.stopPropagation) {\n        stopPropagation(e);\n      }\n    };\n\n    const handlePortalFocus = (e: FocusEvent) => {\n      if (props.stopPropagation) {\n        stopPropagation(e);\n      }\n    };\n\n    const handlePortalBlur = (e: FocusEvent) => {\n      if (props.stopPropagation) {\n        stopPropagation(e);\n      }\n    };\n\n    const handlePortalInnerKeyDown = (e: KeyboardEvent) => {\n      foundation.handleContainerKeydown(e);\n    };\n\n    const renderContentNode = (content: TooltipProps['content']) => {\n      const contentProps = {\n        initialFocusRef: initialFocusRef,\n      };\n      return !isFunction(content) ? content : content(contentProps);\n    };\n\n    const renderPortal = () => {\n      const {\n        containerStyle = {},\n        visible,\n        portalEventSet,\n        placement,\n        displayNone,\n        transitionState,\n        id,\n        isPositionUpdated,\n      } = state;\n      const { prefixCls, content, showArrow, style, motion, role, zIndex } = props;\n      const contentNode = renderContentNode(content);\n      const { className: propClassName } = props;\n      const direction = context.value.direction;\n      const className = classNames(propClassName, {\n        [`${prefixCls}-wrapper`]: true,\n        [`${prefixCls}-wrapper-show`]: visible,\n        [`${prefixCls}-with-arrow`]: Boolean(showArrow),\n        [`${prefixCls}-rtl`]: direction === 'rtl',\n      });\n      const icon = renderIcon();\n      let portalInnerStyle: CSSProperties = omit(containerStyle, motion ? ['transformOrigin'] : undefined);\n      const transformOrigin = get(containerStyle, 'transformOrigin');\n      const userOpacity: CSSProperties['opacity'] | null = get(style, 'opacity', null);\n      const opacity = userOpacity ? userOpacity : 1;\n\n      portalInnerStyle = {\n        ...portalInnerStyle,\n        left: portalInnerStyle.left + 'px',\n        top: portalInnerStyle.top + 'px',\n      };\n      const inner = (\n        <CSSAnimation\n          fillMode=\"forwards\"\n          animationState={transitionState as 'enter' | 'leave'}\n          motion={motion && isPositionUpdated}\n          startClassName={transitionState === 'enter' ? `${prefix}-animation-show` : `${prefix}-animation-hide`}\n          onAnimationStart={() => isAnimating = true}\n          onAnimationEnd={() => {\n            if (transitionState === 'leave') {\n              didLeave();\n              props.afterClose?.();\n            }\n            isAnimating = false\n          }}\n          children={({ animationStyle, animationClassName, animationEventsNeedBind }) => {\n            return (\n              <div\n                class={classNames(className, animationClassName)}\n                style={{\n                  ...animationStyle,\n                  ...(displayNone ? { display: 'none' } : {}),\n                  transformOrigin,\n                  ...style,\n                  ...(userOpacity ? { opacity: isPositionUpdated ? opacity : '0' } : {}),\n                }}\n                {...portalEventSet}\n                {...animationEventsNeedBind}\n                role={role}\n                x-placement={placement}\n                id={id}\n              >\n                <div class={`${prefix}-content`}>{contentNode}</div>\n                {icon}\n              </div>\n            );\n          }}\n        ></CSSAnimation>\n      );\n\n      return (\n        <Portal getPopupContainer={props.getPopupContainer} style={{ zIndex }}>\n          <div\n            // listen keyboard event, don't move tabIndex -1\n            tabindex={-1}\n            class={`${BASE_CLASS_PREFIX}-portal-inner`}\n            style={portalInnerStyle}\n            ref={containerEl}\n            onClick={handlePortalInnerClick}\n            onFocus={handlePortalFocus}\n            onBlur={handlePortalBlur}\n            onMousedown={handlePortalMouseDown}\n            onKeydown={handlePortalInnerKeyDown}\n          >\n            {inner}\n          </div>\n        </Portal>\n      );\n    };\n\n    const wrapSpan = (elem: any) => {\n      const { wrapperClassName } = props;\n      const display = get(elem, 'props.style.display');\n      const block = get(elem, 'props.block');\n      const isStringElem = typeof elem == 'string';\n\n      const style: CSSProperties = {};\n\n      if (!isStringElem) {\n        style.display = 'inline-block';\n      }\n      if (block || blockDisplays.includes(display)) {\n        style.width = '100%';\n      }\n\n      return (\n        <span class={wrapperClassName} style={style}>\n          {elem}\n        </span>\n      );\n    };\n\n    const mergeEvents = (rawEvents: Record<string, any>, events: Record<string, any>) => {\n      const mergedEvents = {};\n      each(events, (handler: any, key) => {\n        if (typeof handler === 'function') {\n          // @ts-ignore\n          mergedEvents[key] = (...args: any[]) => {\n            handler(...args);\n            if (rawEvents && typeof rawEvents[key] === 'function') {\n              rawEvents[key](...args);\n            }\n          };\n        }\n      });\n\n      return mergedEvents;\n    };\n\n    const getPopupId = () => {\n      return state.id;\n    };\n\n    const currentInstance = getCurrentInstance();\n    expose({\n      getPopupId,\n      focusTrigger,\n      // 当组件内部使用了expose时，使用ref得到的内容只有expose的那部分\n      getRef() {\n        return currentInstance;\n      },\n    });\n    return () => {\n      // 这里取的话，值可能会被缓存或者可能不是最新的\n      // const { isInsert, triggerEventSet, visible, id } = state;\n      const { wrapWhenSpecial, role, trigger } = props;\n      let children = getMultinodeToFragment(slots);\n\n      const childrenStyle = { ...(get(children, 'props.style') as CSSProperties) };\n      const extraStyle: CSSProperties = {};\n\n      if (wrapWhenSpecial) {\n        const isSpecial_ = isSpecial(children);\n\n        if (isSpecial_) {\n          childrenStyle.pointerEvents = 'none';\n\n          if (isSpecial_ === strings.STATUS_DISABLED) {\n            extraStyle.cursor = 'not-allowed';\n          }\n\n          children = cloneVNode(children, { style: childrenStyle });\n          if (trigger !== 'custom') {\n            // no need to wrap span when trigger is custom, cause it don't need bind event\n            children = wrapSpan(children);\n          }\n          isWrapped = true;\n        } else if (!isVNodeTypeNotSymbol(children)) {\n          children = wrapSpan(children);\n          isWrapped = true;\n        }\n      }\n      // eslint-disable-next-line prefer-const\n      let ariaAttribute = {};\n\n      // Take effect when used by Popover component\n      if (role === 'dialog') {\n        ariaAttribute['aria-expanded'] = state.visible ? 'true' : 'false';\n        ariaAttribute['aria-haspopup'] = 'dialog';\n        ariaAttribute['aria-controls'] = state.id;\n      } else {\n        ariaAttribute['aria-describedby'] = state.id;\n      }\n\n      // The incoming children is a single valid element, otherwise wrap a layer with span\n      const newChild = cloneVNode(children, {\n        ...ariaAttribute,\n        ...children.props,\n        ...mergeEvents(children.props, state.triggerEventSet),\n        style: {\n          ...get(children, 'props.style'),\n          ...extraStyle,\n        },\n        class: classNames(\n          get(children, 'props.class')\n          // `${prefixCls}-trigger`\n        ),\n        // to maintain refs with callback\n        ref: (node: any) => {\n          // Keep your own reference\n          // TODO 与 react 不同的地方\n          triggerEl.value = node && (node.content || node.$el || node);\n          // Call the original ref, if any\n          const { ref } = children as any;\n          // this.log('tooltip render() - get ref', ref);\n          if (ref) {\n            if (typeof ref.r === 'function') {\n              ref.r(node);\n            } else if (ref.r && typeof ref.r === 'object' && isRef(ref.r)) {\n              ref.r.value = node;\n            }\n          }\n        },\n        tabIndex: children.props?.tabIndex || 0, // a11y keyboard, in some condition select's tabindex need to -1 or 0\n        'data-popupid': state.id,\n      });\n      // If you do not add a layer of div, in order to bind the events and className in the tooltip, you need to cloneElement children, but this time it may overwrite the children's original ref reference\n      // So if the user adds ref to the content, you need to use callback ref: https://github.com/facebook/react/issues/8873\n      return (\n        <>\n          {state.isInsert ? renderPortal() : null}\n          {newChild}\n        </>\n      );\n    };\n  },\n});\n\nexport default Tooltip;\n"],"names":["prefix","cssClasses","PREFIX","strings","POSITION_SET","TRIGGER_SET","blockDisplays","defaultGetContainer","document","body","propTypes","motion","PropTypes","oneOfType","bool","object","func","autoAdjustOverflow","position","String","getPopupContainer","mouseEnterDelay","number","mouseLeaveDelay","trigger","Boolean","className","string","wrapperClassName","clickToHide","clickTriggerToHide","visible","style","content","node","prefixCls","onVisibleChange","onClickOutSide","spacing","margin","showArrow","zIndex","rePosKey","Number","arrowBounding","Object","transformFromCenter","arrowPointAtCenter","stopPropagation","role","wrapWhenSpecial","guardFocus","returnFocusOnClose","preventScroll","disableFocusListener","closeOnEsc","type","default","onEscKeyDown","Function","noop","wrapperId","disableArrowKeyDown","afterClose","keepDOM","defaultProps","numbers","ARROW_BOUNDING","MOUSE_ENTER_DELAY","MOUSE_LEAVE_DELAY","SPACING","MARGIN","DEFAULT_Z_INDEX","vuePropsType","vuePropsMake","Tooltip","defineComponent","props","name","setup","expose","slots","useSlots","eventManager","ref","Event","triggerEl","containerEl","initialFocusRef","resizeHandler","mounted","scrollHandler","containerPosition","isAnimating","clickOutsideHandler","state","reactive","transitionState","triggerEventSet","portalEventSet","containerStyle","isInsert","placement","transitionStyle","isPositionUpdated","id","displayNone","adapter","adapterInject","context","useBaseComponent","theAdapter","on","args","value","off","getAnimatingState","insertPortal","nextTick","setTimeout","emit","removePortal","getEventName","mouseEnter","mouseLeave","mouseOut","mouseOver","click","focus","blur","keydown","contextMenu","registerTriggerEvent","registerPortalEvent","getTriggerBounding","triggerDOM","getTriggerNode","getBoundingClientRect","getPopupContainerRect","container","rect","isHTMLElement","convertDOMRectToObject","scrollLeft","scrollTop","containerIsBody","containerIsRelative","window","getComputedStyle","getPropertyValue","containerIsRelativeOrAbsolute","includes","getWrapperBounding","el","getDocumentElementBounding","documentElement","setPosition","setDisplayNone","cb","updatePlacementAttr","togglePortalVisible","willUpdateStates","registerClickOutsideHandler","unregisterClickOutsideHandler","e","popupEl","target","path","composedPath","isClickTriggerToHide","contains","addEventListener","removeEventListener","registerResizeHandler","unregisterResizeHandler","throttle","notifyVisibleChange","registerScrollHandler","rePositionCb","unregisterScrollHandler","scrollPos","x","y","canMotion","updateContainerPosition","getContainerPosition","getContainer","getFocusableElements","getActiveElement","setInitialFocus","focusRefNode","notifyEscKeydown","event","setId","getUuidShort","getTriggerDOM","foundation","TooltipFoundation","onMounted","init","runAfterTicks","triggerEle","HTMLElement","$el","updateStateIfCursorOnTrigger","onUnmounted","destroy","focusTrigger","isSpecial","elem","disabled","isVNode","get","STATUS_DISABLED","loading","isButton","isEmpty","STATUS_LOADING","didLeave","unBindEvent","rePosition","calcPosition","watch","warning","delayShow","delayHide","show","hide","renderIcon","icon","triangleCls","classNames","bgColor","iconComponent","_createVNode","TriangleArrowVertical","TriangleArrow","cloneVNode","class","color","fill","handlePortalInnerClick","handlePortalMouseDown","handlePortalFocus","handlePortalBlur","handlePortalInnerKeyDown","handleContainerKeydown","renderContentNode","contentProps","isFunction","renderPortal","contentNode","propClassName","direction","portalInnerStyle","omit","undefined","transformOrigin","userOpacity","opacity","left","top","inner","CSSAnimation","onAnimationStart","onAnimationEnd","children","animationStyle","animationClassName","animationEventsNeedBind","_mergeProps","display","Portal","BASE_CLASS_PREFIX","wrapSpan","block","isStringElem","width","mergeEvents","rawEvents","events","mergedEvents","each","handler","key","getPopupId","currentInstance","getCurrentInstance","getRef","getMultinodeToFragment","childrenStyle","extraStyle","isSpecial_","pointerEvents","cursor","isVNodeTypeNotSymbol","ariaAttribute","newChild","r","isRef","tabIndex","_Fragment"],"mappings":"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"}