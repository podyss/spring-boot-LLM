{"version":3,"file":"index.js","sources":["../../src/components/tagInput/index.tsx"],"sourcesContent":["import {\n  defineComponent,\n  ref,\n  h,\n  Fragment,\n  useSlots,\n  VNode,\n  CSSProperties,\n  reactive,\n  onMounted,\n  isVNode,\n  watch,\n  VNodeRef,\n  ComponentObjectPropsOptions,\n  PropType,\n} from 'vue';\nimport * as PropTypes from '../PropTypes';\nimport cls from 'classnames';\nimport { noop, isString, isArray, isNull, isUndefined, isFunction } from 'lodash';\nimport { cssClasses, strings } from '@douyinfe/semi-foundation/tagInput/constants';\nimport '@douyinfe/semi-foundation/tagInput/tagInput.scss';\nimport TagInputFoundation, { TagInputAdapter, OnSortEndProps } from '@douyinfe/semi-foundation/tagInput/foundation';\nimport { ArrayElement } from '../_base/base';\nimport { useBaseComponent, useHasInProps } from '../_base/baseComponent';\nimport Tag from '../tag';\nimport Input from '../input';\nimport Popover, { PopoverProps } from '../popover';\nimport Paragraph from '../typography/paragraph';\nimport { IconClear, IconHandle } from '@kousum/semi-icons-vue';\nimport { CombineProps, VueJsxNode } from '../interface';\nimport { vuePropsMake } from '../PropTypes';\nimport { isSemiIcon } from '../_utils';\nimport SortableList from './SortableList';\nimport { type Events } from '@kousum/dnd-kit-vue';\nimport {move} from '@dnd-kit/helpers';\nimport { RenderItemProps, Sortable } from '../_sortable';\n\nexport type Size = ArrayElement<typeof strings.SIZE_SET>;\nexport type RestTagsPopoverProps = PopoverProps;\ntype ValidateStatus = 'default' | 'error' | 'warning';\n\nexport type SortableItemFuncArg = {\n  element?: VNodeRef;\n  handleRef?: VNodeRef;\n  attributes?: any;\n};\nfunction SortContainer(props:any, {slots}:any) {\n  return <div class={`${prefixCls}-sortable-list`} {...props}>\n    {slots.default?.()}\n  </div>;\n}\n\nexport interface TagInputProps {\n  className?: string;\n  clearIcon?: VueJsxNode;\n  defaultValue?: string[];\n  disabled?: boolean;\n  inputValue?: string;\n  maxLength?: number;\n  max?: number;\n  maxTagCount?: number;\n  showRestTagsPopover?: boolean;\n  restTagsPopoverProps?: RestTagsPopoverProps;\n  showContentTooltip?: boolean;\n  allowDuplicates?: boolean;\n  addOnBlur?: boolean;\n  draggable?: boolean;\n  expandRestTagsOnClick?: boolean;\n  onAdd?: (addedValue: string[]) => void;\n  onBlur?: (e: MouseEvent) => void;\n  onChange?: (value: string[]) => void;\n  onExceed?: (value: string[]) => void;\n  onFocus?: (e: MouseEvent) => void;\n  onInputChange?: (value: string, e: MouseEvent) => void;\n  onInputExceed?: (value: string) => void;\n  onKeyDown?: (e: KeyboardEvent) => void;\n  onRemove?: (removedValue: string, idx: number) => void;\n  placeholder?: string;\n  insetLabel?: VNode | string;\n  insetLabelId?: string;\n  prefix?: VNode | string;\n  renderTagItem?: (value: string, index: number, onClose: () => void) => VueJsxNode;\n  separator?: string | string[] | null;\n  showClear?: boolean;\n  size?: Size;\n  style?: CSSProperties;\n  suffix?: VNode | string;\n  validateStatus?: ValidateStatus;\n  value?: string[] | undefined;\n  autoFocus?: boolean;\n  'aria-label'?: string;\n  preventScroll?: boolean;\n}\n\nexport interface TagInputState {\n  tagsArray?: string[];\n  inputValue?: string;\n  focusing?: boolean;\n  hovering?: boolean;\n  active?: boolean;\n  // entering: Used to identify whether the user is in a new composition session（eg，Input Chinese）\n  entering?: boolean;\n}\n\nconst prefixCls = cssClasses.PREFIX;\n\nconst propTypes: CombineProps<TagInputProps> = {\n  // children: PropTypes.node as PropType<TagInputProps['children']>,\n  clearIcon: PropTypes.node,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  allowDuplicates: PropTypes.bool,\n  max: PropTypes.number,\n  maxTagCount: PropTypes.number,\n  maxLength: PropTypes.number,\n  showRestTagsPopover: PropTypes.bool,\n  restTagsPopoverProps: PropTypes.object,\n  showContentTooltip: PropTypes.bool,\n  defaultValue: PropTypes.array,\n  value: PropTypes.array,\n  inputValue: PropTypes.string,\n  placeholder: PropTypes.string,\n  separator: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  showClear: PropTypes.bool,\n  addOnBlur: PropTypes.bool,\n  draggable: PropTypes.bool,\n  expandRestTagsOnClick: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  renderTagItem: PropTypes.func as PropType<TagInputProps['renderTagItem']>,\n  onBlur: PropTypes.func as PropType<TagInputProps['onBlur']>,\n  onFocus: PropTypes.func as PropType<TagInputProps['onFocus']>,\n  onChange: PropTypes.func as PropType<TagInputProps['onChange']>,\n  onInputChange: PropTypes.func as PropType<TagInputProps['onInputChange']>,\n  onExceed: PropTypes.func as PropType<TagInputProps['onExceed']>,\n  onInputExceed: PropTypes.func as PropType<TagInputProps['onInputExceed']>,\n  onAdd: PropTypes.func as PropType<TagInputProps['onAdd']>,\n  onRemove: PropTypes.func as PropType<TagInputProps['onRemove']>,\n  onKeyDown: PropTypes.func as PropType<TagInputProps['onKeyDown']>,\n  size: PropTypes.string as PropType<TagInputProps['size']>,\n  validateStatus: PropTypes.string as PropType<TagInputProps['validateStatus']>,\n  prefix: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  suffix: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  'aria-label': PropTypes.string,\n  preventScroll: PropTypes.bool,\n  insetLabel: PropTypes.node as PropType<TagInputProps['insetLabel']>,\n  insetLabelId: PropTypes.string,\n};\nconst defaultProps = {\n  showClear: false,\n  addOnBlur: false,\n  allowDuplicates: true,\n  showRestTagsPopover: true,\n  autoFocus: false,\n  draggable: false,\n  expandRestTagsOnClick: true,\n  showContentTooltip: true,\n  separator: ',',\n  size: 'default' as const,\n  validateStatus: 'default' as const,\n  onBlur: noop,\n  onFocus: noop,\n  onChange: noop,\n  onInputChange: noop,\n  onExceed: noop,\n  onInputExceed: noop,\n  onAdd: noop,\n  onRemove: noop,\n  onKeyDown: noop,\n};\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst Index = defineComponent({\n  props: { ...vuePropsType },\n  name: 'TagInput',\n  setup(props, { expose }) {\n    const { getProps } = useHasInProps();\n    const slots = useSlots();\n    const inputRef = ref(null);\n    const tagInputRef = ref<any>(null);\n    let clickOutsideHandler: any = null;\n    const state = reactive({\n      tagsArray: props.defaultValue || [],\n      inputValue: '',\n      focusing: false,\n      hovering: false,\n      active: false,\n      entering: false,\n    });\n\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent<TagInputProps>(props, state);\n\n    const foundation = new TagInputFoundation(adapter());\n\n    function adapter(): TagInputAdapter {\n      return {\n        ...adapterInject<TagInputProps, TagInputState>(),\n        setInputValue: (inputValue: string) => {\n          state.inputValue = inputValue;\n        },\n        setTagsArray: (tagsArray: string[]) => {\n          state.tagsArray = tagsArray;\n        },\n        setFocusing: (focusing: boolean) => {\n          state.focusing = focusing;\n        },\n        toggleFocusing: (isFocus: boolean) => {\n          const { preventScroll } = props;\n          const input = inputRef.value;\n          if (isFocus) {\n            input && input.focus({ preventScroll });\n          } else {\n            input && input.blur();\n          }\n          state.focusing = isFocus;\n        },\n        setHovering: (hovering: boolean) => {\n          state.hovering = hovering;\n        },\n        setActive: (active: boolean) => {\n          state.active = active;\n        },\n        setEntering: (entering: boolean) => {\n          state.entering = entering;\n        },\n        getClickOutsideHandler: () => {\n          return clickOutsideHandler;\n        },\n        notifyBlur: (e: MouseEvent) => {\n          props.onBlur(e);\n        },\n        notifyFocus: (e: MouseEvent) => {\n          props.onFocus(e);\n        },\n        notifyInputChange: (v: string, e: MouseEvent) => {\n          props.onInputChange(v, e);\n        },\n        notifyTagChange: (v: string[]) => {\n          props.onChange(v);\n        },\n        notifyTagAdd: (v: string[]) => {\n          props.onAdd(v);\n        },\n        notifyTagRemove: (v: string, idx: number) => {\n          props.onRemove(v, idx);\n        },\n        notifyKeyDown: (e) => {\n          props.onKeyDown(e);\n        },\n        registerClickOutsideHandler: (cb) => {\n          clickOutsideHandler = (e: Event) => {\n            const tagInputDom = tagInputRef.value;\n            const target = e.target as Element;\n            const path = (e.composedPath && e.composedPath()) || [target];\n            if (tagInputDom && !tagInputDom.contains(target) && !path.includes(tagInputDom)) {\n              cb(e);\n            }\n          };\n          document.addEventListener('click', clickOutsideHandler, false);\n        },\n        unregisterClickOutsideHandler: () => {\n          document.removeEventListener('click', clickOutsideHandler, false);\n          clickOutsideHandler = null;\n        },\n      };\n    }\n\n    // ok\n    function getDerivedStateFromProps(nextProps: TagInputProps, prevState: TagInputState) {\n      const { value, inputValue } = nextProps;\n      const { tagsArray: prevTagsArray } = prevState;\n      let tagsArray: string[];\n      if (isArray(value)) {\n        tagsArray = value;\n      } else if ('value' in getProps(nextProps) && !value) {\n        tagsArray = [];\n      } else {\n        tagsArray = prevTagsArray;\n      }\n      return {\n        tagsArray,\n        inputValue: isString(inputValue) ? inputValue : prevState.inputValue,\n      };\n    }\n    watch(\n      [() => props.value, () => props.inputValue, () => state.inputValue],\n      (val) => {\n        const newState = getDerivedStateFromProps({ ...getProps(props) }, { ...state });\n        if (newState) {\n          Object.keys(newState).forEach((key) => {\n            state[key] = newState[key];\n          });\n        }\n      },\n      { deep: true, immediate: true }\n    );\n\n    onMounted(() => {\n      const { disabled, autoFocus, preventScroll } = props;\n      if (!disabled && autoFocus) {\n        inputRef.value.focus({ preventScroll });\n        foundation.handleClick();\n      }\n      foundation.init();\n    });\n\n    const handleInputChange = (e: any) => {\n      foundation.handleInputChange(e);\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      foundation.handleKeyDown(e);\n    };\n\n    const handleInputFocus = (e: MouseEvent) => {\n      foundation.handleInputFocus(e);\n    };\n\n    const handleInputBlur = (e: MouseEvent) => {\n      foundation.handleInputBlur(e);\n    };\n\n    const handleClearBtn = (e: MouseEvent) => {\n      foundation.handleClearBtn(e);\n    };\n\n    const handleClearEnterPress = (e: KeyboardEvent) => {\n      foundation.handleClearEnterPress(e);\n    };\n\n    const handleTagClose = (idx: number) => {\n      foundation.handleTagClose(idx);\n    };\n\n    const handleInputMouseLeave = (e: MouseEvent) => {\n      foundation.handleInputMouseLeave();\n    };\n\n    const handleClick = (e: MouseEvent) => {\n      foundation.handleClick(e);\n    };\n\n    const handleInputMouseEnter = (e: MouseEvent) => {\n      foundation.handleInputMouseEnter();\n    };\n\n    const handleClickPrefixOrSuffix = (e: MouseEvent) => {\n      foundation.handleClickPrefixOrSuffix(e);\n    };\n\n    const handlePreventMouseDown = (e: MouseEvent) => {\n      foundation.handlePreventMouseDown(e);\n    };\n\n    function renderClearBtn() {\n      const { hovering, tagsArray, inputValue } = state;\n      const { showClear, disabled, clearIcon } = props;\n      const clearCls = cls(`${prefixCls}-clearBtn`, {\n        [`${prefixCls}-clearBtn-invisible`]: !hovering || (inputValue === '' && tagsArray.length === 0) || disabled,\n      });\n      if (showClear) {\n        return (\n          <div\n            role=\"button\"\n            tabindex={0}\n            aria-label=\"Clear TagInput value\"\n            class={clearCls}\n            onClick={(e) => handleClearBtn(e)}\n            onKeypress={(e) => handleClearEnterPress(e)}\n          >\n            {clearIcon ? clearIcon : <IconClear />}\n          </div>\n        );\n      }\n      return null;\n    }\n\n    function renderPrefix() {\n      const { prefix, insetLabel, insetLabelId } = props;\n      const labelNode = prefix || insetLabel;\n      if (isNull(prefix) || isUndefined(prefix)) {\n        return null;\n      }\n      const prefixWrapperCls = cls(`${prefixCls}-prefix`, {\n        [`${prefixCls}-inset-label`]: insetLabel,\n        [`${prefixCls}-prefix-text`]: labelNode && isString(labelNode),\n        // eslint-disable-next-line max-len\n        [`${prefixCls}-prefix-icon`]: isSemiIcon(labelNode),\n      });\n      return (\n        // eslint-disable-next-line jsx-a11y/no-static-element-interactions,jsx-a11y/click-events-have-key-events\n        <div\n          class={prefixWrapperCls}\n          onMousedown={handlePreventMouseDown}\n          onClick={handleClickPrefixOrSuffix}\n          id={insetLabelId}\n          x-semi-prop=\"prefix\"\n        >\n          {labelNode}\n        </div>\n      );\n    }\n\n    function renderSuffix() {\n      const { suffix } = props;\n      if (isNull(suffix) || isUndefined(suffix)) {\n        return null;\n      }\n      const suffixWrapperCls = cls(`${prefixCls}-suffix`, {\n        [`${prefixCls}-suffix-text`]: suffix && isString(suffix),\n        // eslint-disable-next-line max-len\n        [`${prefixCls}-suffix-icon`]: isSemiIcon(suffix),\n      });\n      return (\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n        <div\n          class={suffixWrapperCls}\n          onMousedown={handlePreventMouseDown}\n          onClick={handleClickPrefixOrSuffix}\n          x-semi-prop=\"suffix\"\n        >\n          {suffix}\n        </div>\n      );\n    }\n    const getAllTags = () => {\n      const { tagsArray } = state;\n      return tagsArray.map((value, index) => renderTag(value, index));\n    }\n\n    const renderTag = (value: any, index: number, sortableHandle?: any) => {\n      const {\n        size,\n        disabled,\n        renderTagItem,\n        showContentTooltip,\n        draggable,\n      } = props;\n      const { active } = state;\n      const showIconHandler = active && draggable;\n      const tagCls = cls(`${prefixCls}-wrapper-tag`, {\n        [`${prefixCls}-wrapper-tag-size-${size}`]: size,\n        [`${prefixCls}-wrapper-tag-icon`]: showIconHandler,\n      });\n      const typoCls = cls(`${prefixCls}-wrapper-typo`, {\n        [`${prefixCls}-wrapper-typo-disabled`]: disabled,\n      });\n      const itemWrapperCls = cls({\n        [`${prefixCls}-drag-item`]: showIconHandler,\n        [`${prefixCls}-wrapper-tag-icon`]: showIconHandler,\n      });\n      const DragHandle = sortableHandle && sortableHandle(() => <IconHandle className={`${prefixCls}-drag-handler`}></IconHandle>);\n      const elementKey = showIconHandler ? value : `${index}${value}`;\n      const onClose = () => {\n        !disabled && handleTagClose(index);\n      };\n      if (isFunction(renderTagItem)) {\n        return (<div class={itemWrapperCls} key={elementKey}>\n          {showIconHandler && sortableHandle ? <DragHandle /> : null}\n          {renderTagItem(value, index, onClose)}\n        </div>);\n      } else {\n        return (\n          <Tag\n            className={tagCls}\n            color=\"white\"\n            size={size === 'small' ? 'small' : 'large'}\n            type=\"light\"\n            onClose={onClose}\n            closable={!disabled}\n            key={elementKey}\n            visible\n            aria-label={`${!disabled ? 'Closable ' : ''}Tag: ${value}`}\n          >\n            {showIconHandler && sortableHandle ? <DragHandle /> : null}\n            <Paragraph\n              className={typoCls}\n              ellipsis={{ showTooltip: showContentTooltip, rows: 1 }}\n            >\n              {value}\n            </Paragraph>\n          </Tag>\n        );\n      }\n    }\n\n    const renderSortTag = (props: RenderItemProps) => {\n      const { id: item, sortableHandle } = props;\n      const { tagsArray } = state;\n      const index = tagsArray.indexOf(item as string);\n      return renderTag(item, index, sortableHandle);\n    }\n\n    const onSortEnd = (event: Parameters<Events['dragend']>[0]) =>{\n      const tagsArray = state.tagsArray;\n      const { active, over } = {active: event.operation.source, over: event.operation.target};\n\n      if (!active || !over) {\n        return;\n      }\n\n      if(active.id !==  over.id){\n        const oldIndex = tagsArray.indexOf(''+active.id);\n        const newIndex = tagsArray.indexOf(''+over.id);\n        foundation.handleSortEnd({  oldIndex, newIndex });\n      }\n    }\n    function renderTags() {\n      const {\n        disabled,\n        maxTagCount,\n        showRestTagsPopover,\n        restTagsPopoverProps = {},\n        draggable,\n        expandRestTagsOnClick,\n      } = props;\n      const { tagsArray, active } = state;\n      const restTagsCls = cls(`${prefixCls}-wrapper-n`, {\n        [`${prefixCls}-wrapper-n-disabled`]: disabled,\n      });\n      let restTags: Array<VueJsxNode> = [];\n      const allTags = getAllTags();\n      let tags: Array<VueJsxNode> = [...allTags];\n      if ((!active || !expandRestTagsOnClick) && maxTagCount && maxTagCount < allTags.length) {\n        tags = allTags.slice(0, maxTagCount);\n        restTags = allTags.slice(maxTagCount);\n      }\n\n      const restTagsContent = <span class={restTagsCls}>+{tagsArray.length - maxTagCount}</span>;\n\n\n      const sortableListItems = allTags.map((item, index) => ({\n        item: item,\n        key: tagsArray[index],\n      }));\n      if (active && draggable && sortableListItems.length > 0) {\n        return <Sortable\n          items={tagsArray}\n          onSortEnd={onSortEnd}\n          renderItem={renderSortTag}\n          container={SortContainer}\n          prefix={prefixCls}\n          dragOverlayCls={`${prefixCls}-right-item-drag-item-move`}\n        />;\n      }\n      return (\n        <>\n          {tags}\n          {restTags.length > 0 &&\n            (showRestTagsPopover ? (\n              <Popover\n                content={restTags as VueJsxNode}\n                showArrow\n                trigger=\"hover\"\n                position=\"top\"\n                autoAdjustOverflow\n                {...restTagsPopoverProps}\n              >\n                {restTagsContent}\n              </Popover>\n            ) : (\n              restTagsContent\n            ))}\n        </>\n      );\n    }\n\n    function blur() {\n      inputRef.value.blur();\n      foundation.clickOutsideCallBack();\n    }\n\n    function focus() {\n      const { preventScroll, disabled } = props;\n      inputRef.value?.focus();\n      if (!disabled) {\n        // register clickOutside event\n        foundation.handleClick();\n      }\n    }\n\n    const handleInputCompositionStart = (e) => {\n      foundation.handleInputCompositionStart(e);\n    };\n\n    const handleInputCompositionEnd = (e) => {\n      foundation.handleInputCompositionEnd(e);\n    };\n\n    expose({\n      blur,\n      focus,\n    });\n\n    return () => {\n      const { size, style, className, disabled, placeholder, validateStatus, prefix, insetLabel, suffix } = props;\n\n      const { focusing, hovering, tagsArray, inputValue, active } = state;\n\n      const tagInputCls = cls(prefixCls, className, {\n        [`${prefixCls}-focus`]: focusing || active,\n        [`${prefixCls}-disabled`]: disabled,\n        [`${prefixCls}-hover`]: hovering && !disabled,\n        [`${prefixCls}-error`]: validateStatus === 'error',\n        [`${prefixCls}-warning`]: validateStatus === 'warning',\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-with-prefix`]: !!prefix || !!insetLabel,\n        [`${prefixCls}-with-suffix`]: !!suffix,\n      });\n\n      const inputCls = cls(`${prefixCls}-wrapper-input`, `${prefixCls}-wrapper-input-${size}`);\n\n      const wrapperCls = cls(`${prefixCls}-wrapper`);\n\n      return (\n        <div\n          ref={tagInputRef}\n          style={style}\n          class={tagInputCls}\n          aria-disabled={disabled}\n          aria-label={props['aria-label']}\n          aria-invalid={validateStatus === 'error'}\n          onMouseenter={(e) => {\n            handleInputMouseEnter(e);\n          }}\n          onMouseleave={(e) => {\n            handleInputMouseLeave(e);\n          }}\n          onClick={(e) => {\n            handleClick(e);\n          }}\n          {...getDataAttr()}\n        >\n          {renderPrefix()}\n          <div class={wrapperCls}>\n            {renderTags()}\n            <Input\n              aria-label=\"input value\"\n              ref={inputRef as any}\n              className={inputCls}\n              disabled={disabled}\n              value={inputValue}\n              size={size}\n              placeholder={tagsArray.length === 0 ? placeholder : ''}\n              onKeyDown={(e: KeyboardEvent) => {\n                handleKeyDown(e);\n              }}\n              onChange={(v: string, e: any) => {\n                handleInputChange(e);\n              }}\n              onBlur={(e: FocusEvent) => {\n                handleInputBlur(e as any);\n              }}\n              onFocus={(e: FocusEvent) => {\n                handleInputFocus(e as any);\n              }}\n              onCompositionstart={handleInputCompositionStart}\n              onCompositionend={handleInputCompositionEnd}\n            />\n          </div>\n          {renderClearBtn()}\n          {renderSuffix()}\n        </div>\n      );\n    };\n  },\n});\n\nexport default Index;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","SortContainer","props","slots","_createVNode","_mergeProps","prefixCls","default","cssClasses","PREFIX","propTypes","clearIcon","PropTypes","node","style","object","className","string","disabled","bool","allowDuplicates","max","number","maxTagCount","maxLength","showRestTagsPopover","restTagsPopoverProps","showContentTooltip","defaultValue","array","value","inputValue","placeholder","separator","oneOfType","showClear","addOnBlur","draggable","expandRestTagsOnClick","autoFocus","renderTagItem","func","onBlur","onFocus","onChange","onInputChange","onExceed","onInputExceed","onAdd","onRemove","onKeyDown","size","validateStatus","prefix","suffix","preventScroll","insetLabel","insetLabelId","defaultProps","noop","vuePropsType","vuePropsMake","Index","defineComponent","name","setup","expose","getProps","useHasInProps","useSlots","inputRef","ref","tagInputRef","clickOutsideHandler","state","reactive","tagsArray","focusing","hovering","active","entering","adapter","adapterInject","getDataAttr","useBaseComponent","foundation","TagInputFoundation","setInputValue","setTagsArray","setFocusing","toggleFocusing","isFocus","input","focus","blur","setHovering","setActive","setEntering","getClickOutsideHandler","notifyBlur","e","notifyFocus","notifyInputChange","v","notifyTagChange","notifyTagAdd","notifyTagRemove","idx","notifyKeyDown","registerClickOutsideHandler","cb","tagInputDom","target","path","composedPath","contains","includes","document","addEventListener","unregisterClickOutsideHandler","removeEventListener","getDerivedStateFromProps","nextProps","prevState","prevTagsArray","isArray","isString","watch","val","newState","keys","forEach","key","deep","immediate","onMounted","handleClick","init","handleInputChange","handleKeyDown","handleInputFocus","handleInputBlur","handleClearBtn","handleClearEnterPress","handleTagClose","handleInputMouseLeave","handleInputMouseEnter","handleClickPrefixOrSuffix","handlePreventMouseDown","renderClearBtn","clearCls","cls","length","IconClear","renderPrefix","labelNode","isNull","isUndefined","prefixWrapperCls","isSemiIcon","renderSuffix","suffixWrapperCls","getAllTags","map","index","renderTag","sortableHandle","showIconHandler","tagCls","typoCls","itemWrapperCls","DragHandle","IconHandle","elementKey","onClose","isFunction","Tag","Paragraph","showTooltip","rows","renderSortTag","id","item","indexOf","onSortEnd","event","over","operation","source","oldIndex","newIndex","handleSortEnd","renderTags","restTagsCls","restTags","allTags","tags","slice","restTagsContent","_createTextVNode","sortableListItems","Sortable","_Fragment","Popover","clickOutsideCallBack","handleInputCompositionStart","handleInputCompositionEnd","tagInputCls","inputCls","wrapperCls","Input"],"mappings":"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"}