{"version":3,"file":"index.js","sources":["../../src/components/anchor/index.tsx"],"sourcesContent":["import cls from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport { cssClasses, strings } from '@douyinfe/semi-foundation/anchor/constants';\nimport AnchorFoundation, { AnchorAdapter } from '@douyinfe/semi-foundation/anchor/foundation';\nimport Link from './link';\nimport AnchorContext from './anchor-context';\nimport '@douyinfe/semi-foundation/anchor/anchor.scss';\nimport { noop, debounce, throttle, isEqual } from 'lodash';\nimport getUuid from '@douyinfe/semi-foundation/utils/uuid';\nimport { ArrayElement } from '../_base/base';\nimport { ShowTooltip } from '../typography/interface';\nimport {\n  cloneVNode,\n  CSSProperties,\n  defineComponent,\n  h,\n  isVNode,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  PropType,\n  reactive,\n  ref,\n  useSlots,\n  VNode,\n  watch,\n} from 'vue';\nimport { useConfigContext } from '../configProvider/context/Consumer';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport { vuePropsMake } from '../PropTypes';\nimport { AriaAttributes } from '../AriaAttributes';\nimport { CombineProps } from '../interface';\n\nconst prefixCls = cssClasses.PREFIX;\n\nexport type { LinkProps } from './link';\n\nexport interface AnchorProps {\n  autoCollapse?: boolean;\n  className?: string;\n  defaultAnchor?: string;\n  getContainer?: () => HTMLElement | Window;\n  maxHeight?: string | number;\n  maxWidth?: string | number;\n  offsetTop?: number;\n  position?: ArrayElement<typeof strings.POSITION_SET>;\n  railTheme?: ArrayElement<typeof strings.SLIDE_COLOR>;\n  scrollMotion?: boolean;\n  showTooltip?: boolean | ShowTooltip;\n  size?: ArrayElement<typeof strings.SIZE>;\n  style?: CSSProperties;\n  targetOffset?: number;\n  onChange?: (currentLink: string, previousLink: string) => void;\n  onClick?: (e: MouseEvent, currentLink: string) => void;\n  'aria-label'?: AriaAttributes['aria-label'];\n}\n\nexport interface AnchorState {\n  activeLink: string;\n  links: string[];\n  clickLink: boolean;\n  scrollHeight: string;\n  slideBarTop: string;\n}\n\nconst propTypes: CombineProps<AnchorProps> = {\n  size: PropTypes.string as PropType<AnchorProps['size']>,\n  railTheme: PropTypes.string as PropType<AnchorProps['railTheme']>,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  scrollMotion: PropTypes.bool,\n  autoCollapse: PropTypes.bool,\n  offsetTop: PropTypes.number,\n  targetOffset: PropTypes.number,\n  showTooltip: PropTypes.bool,\n  position: PropTypes.string as PropType<AnchorProps['position']>,\n  maxWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  maxHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  getContainer: PropTypes.func as PropType<AnchorProps['getContainer']>,\n  onChange: PropTypes.func as PropType<AnchorProps['onChange']>,\n  onClick: PropTypes.func as PropType<AnchorProps['onClick']>,\n  defaultAnchor: PropTypes.string,\n  'aria-label': PropTypes.string,\n};\n\nconst defaultProps = {\n  size: 'default',\n  railTheme: 'primary',\n  className: '',\n  scrollMotion: false,\n  autoCollapse: false,\n  offsetTop: 0,\n  targetOffset: 0,\n  showTooltip: false,\n  maxWidth: strings.MAX_WIDTH,\n  maxHeight: strings.MAX_HEIGHT,\n  getContainer: noop,\n  onChange: noop,\n  onClick: noop,\n  defaultAnchor: '',\n};\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst Anchor = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Anchor',\n  setup(props, {}) {\n    const slots = useSlots();\n\n    const { context } = useConfigContext();\n    const state = reactive<AnchorState>({\n      activeLink: '',\n      links: [],\n      clickLink: false,\n      scrollHeight: '100%',\n      slideBarTop: '0',\n    });\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent<AnchorProps>(props, state);\n    const childrenRef = ref<VNode[]>([]);\n    function adapter_(): AnchorAdapter<AnchorProps, AnchorState> {\n      return {\n        ...adapterInject(),\n        getProp: (key) => {\n          if (key === 'children') {\n            return childrenRef.value;\n          }\n          return props[key];\n        },\n        addLink: (value) => {\n          state.links = [...state.links, value];\n        },\n        removeLink: (link) => {\n          const links = state.links.slice();\n          const index = links.indexOf(link);\n          if (index !== -1) {\n            links.splice(index, 1);\n            state.links = links;\n          }\n          return undefined;\n        },\n        setChildMap: (value) => {\n          childMap = value;\n        },\n        setScrollHeight: (height) => {\n          state.scrollHeight = height;\n        },\n        setSlideBarTop: (height) => {\n          state.slideBarTop = `${height}px`;\n        },\n        setClickLink: (value) => {\n          state.clickLink = value;\n        },\n        setActiveLink: (link, cb) => {\n          state.activeLink = link;\n          nextTick(() => {\n            cb();\n          });\n        },\n        setClickLinkWithCallBack: (value, link, cb) => {\n          state.clickLink = value;\n          nextTick(() => {\n            cb(link);\n          });\n        },\n        getContainer: () => {\n          const { getContainer } = props;\n          const container = getContainer();\n          return container ? container : window;\n        },\n        getContainerBoundingTop: () => {\n          const container = adapter.getContainer();\n          if ('getBoundingClientRect' in container) {\n            return container.getBoundingClientRect().top;\n          }\n          return 0;\n        },\n        getLinksBoundingTop: () => {\n          const { links } = state;\n          const { offsetTop } = props;\n          const containerTop = adapter.getContainerBoundingTop();\n          const elTop = links.map((link) => {\n            let node = null;\n            try {\n              // Get links from containers\n              node = document.querySelector(link);\n            } catch (e) {}\n            return (node && node.getBoundingClientRect().top - containerTop - offsetTop) || -Infinity;\n          });\n          return elTop;\n        },\n        getAnchorNode: (selector) => {\n          const selectors = `#${anchorID} ${selector}`;\n          return document.querySelector(selectors);\n        },\n        getContentNode: (selector) => document.querySelector(selector),\n        notifyChange: (currentLink, previousLink) => props.onChange(currentLink, previousLink),\n        notifyClick: (e, link) => props.onClick(e, link),\n        canSmoothScroll: () => 'scrollBehavior' in document.body.style,\n      };\n    }\n\n    const adapter = adapter_();\n\n    const foundation = new AnchorFoundation(adapter);\n    let anchorID: string;\n    let scrollContainer: HTMLElement | Window;\n    let childMap: Record<string, Set<string>> = {};\n    let handler: () => void;\n    let clickHandler: () => void;\n\n    const addLink = (link: string) => {\n      foundation.addLink(link);\n    };\n\n    const removeLink = (link: string) => {\n      foundation.removeLink(link);\n    };\n\n    const handleScroll = () => {\n      foundation.handleScroll();\n    };\n\n    const handleClick = (e: MouseEvent, link: string) => {\n      foundation.handleClick(e, link);\n    };\n\n    // Set click to false after scrolling\n    const handleClickLink = () => {\n      foundation.handleClickLink();\n    };\n\n    const setChildMap = () => {\n      foundation.setChildMap();\n    };\n\n    const setScrollHeight = () => {\n      foundation.setScrollHeight();\n    };\n\n    const updateScrollHeight = (prevState: AnchorState, state: AnchorState) => {\n      foundation.updateScrollHeight(prevState, state);\n    };\n\n    const updateChildMap = (prevState: AnchorState, state: AnchorState) => {\n      foundation.updateChildMap(prevState, state);\n    };\n\n    const renderChildren = () => {\n      const loop = (children: VNode[], level = 1) => {\n        return children.map((child) => {\n          if (isVNode(child)) {\n            const childProps = {\n              direction: context.value.direction,\n              level,\n              children: [],\n            };\n            const children = child.children as any;\n            const hasChildren = children && children.length > 0;\n            if (hasChildren) {\n              childProps.children = loop(children, level + 1);\n            }\n            return cloneVNode(child, childProps);\n          }\n          return null;\n        });\n      };\n      return loop(childrenRef.value);\n    };\n\n    onMounted(() => {\n      const { defaultAnchor = '' } = props;\n      anchorID = getUuid('semi-anchor').replace('.', '');\n      scrollContainer = adapter.getContainer();\n      handler = throttle(handleScroll, 100);\n      clickHandler = debounce(handleClickLink, 100);\n      scrollContainer.addEventListener('scroll', handler);\n      scrollContainer.addEventListener('scroll', clickHandler);\n      setScrollHeight();\n      setChildMap();\n      Boolean(defaultAnchor) && foundation.handleClick(null, defaultAnchor, false);\n    });\n\n    watch(\n      [\n        () => state.activeLink,\n        () => state.links,\n        () => state.clickLink,\n        () => state.scrollHeight,\n        () => state.slideBarTop,\n      ],\n      (value, oldValue, onCleanup) => {\n        if (!isEqual(value, oldValue)) {\n          const [prevStateActiveLink, prevStateLinks, prevStateClickLink, prevStateScrollHeight, prevStateSlideBarTop] =\n            oldValue;\n          const prevState: AnchorState = {\n            activeLink: prevStateActiveLink,\n            links: prevStateLinks,\n            clickLink: prevStateClickLink,\n            scrollHeight: prevStateScrollHeight,\n            slideBarTop: prevStateSlideBarTop,\n          };\n          updateScrollHeight(prevState, state);\n          updateChildMap(prevState, state);\n        }\n      }\n    );\n\n    onBeforeUnmount(() => {\n      scrollContainer.removeEventListener('scroll', handler);\n      scrollContainer.removeEventListener('scroll', clickHandler);\n    });\n    return () => {\n      // @ts-ignore\n      childrenRef.value = slots.default?.();\n      const { size, railTheme, style, className, maxWidth, maxHeight, showTooltip, position, autoCollapse } = props;\n      const ariaLabel = props['aria-label'];\n      const { activeLink, scrollHeight, slideBarTop } = state;\n      const wrapperCls = cls(prefixCls, className, {\n        [`${prefixCls}-size-${size}`]: size,\n      });\n      const slideCls = cls(`${prefixCls}-slide`, `${prefixCls}-slide-${railTheme}`);\n      const slideBarCls = cls(`${prefixCls}-slide-bar`, {\n        [`${prefixCls}-slide-bar-${size}`]: size,\n        [`${prefixCls}-slide-bar-${railTheme}`]: railTheme,\n        [`${prefixCls}-slide-bar-active`]: activeLink,\n      });\n      const anchorWrapper = `${prefixCls}-link-wrapper`;\n      const wrapperStyle = {\n        ...style,\n        maxWidth,\n        maxHeight,\n      };\n\n      return (\n        <AnchorContext.Provider\n          value={{\n            activeLink,\n            showTooltip,\n            position,\n            childMap: childMap,\n            autoCollapse,\n            size,\n            onClick: (e, link) => handleClick(e, link),\n            addLink: addLink,\n            removeLink: removeLink,\n          }}\n        >\n          <div\n            role=\"navigation\"\n            aria-label={ariaLabel || 'Side navigation'}\n            class={wrapperCls}\n            style={wrapperStyle}\n            id={anchorID}\n            {...getDataAttr()}\n          >\n            <div aria-hidden class={slideCls} style={{ height: scrollHeight }}>\n              <span class={slideBarCls} style={{ top: slideBarTop }} />\n            </div>\n            <div class={anchorWrapper} role=\"list\">\n              {renderChildren()}\n            </div>\n          </div>\n        </AnchorContext.Provider>\n      );\n    };\n  },\n});\n\nexport type AnchorType = typeof Anchor & {\n  Link: typeof Link\n}\nconst BaseAnchor = Anchor as AnchorType\nBaseAnchor.Link = Link\nexport { Link, Link as AnchorLink };\nexport default BaseAnchor;\n"],"names":["prefixCls","cssClasses","PREFIX","propTypes","size","PropTypes","string","railTheme","className","style","object","scrollMotion","bool","autoCollapse","offsetTop","number","targetOffset","showTooltip","position","maxWidth","oneOfType","maxHeight","getContainer","func","onChange","onClick","defaultAnchor","defaultProps","strings","MAX_WIDTH","MAX_HEIGHT","noop","vuePropsType","vuePropsMake","Anchor","defineComponent","props","name","setup","slots","useSlots","context","useConfigContext","state","reactive","activeLink","links","clickLink","scrollHeight","slideBarTop","adapter","adapterInject","getDataAttr","useBaseComponent","childrenRef","ref","adapter_","getProp","key","value","addLink","removeLink","link","slice","index","indexOf","splice","setChildMap","childMap","setScrollHeight","height","setSlideBarTop","setClickLink","setActiveLink","cb","nextTick","setClickLinkWithCallBack","container","window","getContainerBoundingTop","getBoundingClientRect","top","getLinksBoundingTop","containerTop","map","node","document","querySelector","getAnchorNode","selector","selectors","anchorID","getContentNode","notifyChange","currentLink","previousLink","notifyClick","e","canSmoothScroll","body","foundation","AnchorFoundation","scrollContainer","handler","clickHandler","handleScroll","handleClick","handleClickLink","updateScrollHeight","prevState","updateChildMap","renderChildren","loop","children","level","child","isVNode","childProps","direction","length","cloneVNode","onMounted","getUuid","replace","throttle","debounce","addEventListener","watch","oldValue","onCleanup","isEqual","prevStateActiveLink","prevStateLinks","prevStateClickLink","prevStateScrollHeight","prevStateSlideBarTop","onBeforeUnmount","removeEventListener","default","ariaLabel","wrapperCls","cls","slideCls","slideBarCls","anchorWrapper","wrapperStyle","_createVNode","AnchorContext","Provider","_mergeProps","BaseAnchor","Link"],"mappings":"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"}