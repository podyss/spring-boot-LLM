import { CSSProperties, PropType } from 'vue';
import { CombineProps, VueJsxNode } from '../interface';
export interface LinkProps {
    href?: string;
    title?: VueJsxNode;
    className?: string;
    children?: VueJsxNode;
    style?: CSSProperties;
    disabled?: boolean;
    level?: number;
    direction?: 'ltr' | 'rtl';
}
export declare const vuePropsType: CombineProps<LinkProps>;
declare const Link: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    href: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    title: PropType<VueJsxNode> | {
        type: PropType<VueJsxNode>;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    children: PropType<VueJsxNode> | {
        type: PropType<VueJsxNode>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    disabled: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    level: PropType<number> | {
        type: PropType<number>;
        default?: any;
        required?: false;
    };
    direction: PropType<"ltr" | "rtl"> | {
        type: PropType<"ltr" | "rtl">;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    href: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    title: PropType<VueJsxNode> | {
        type: PropType<VueJsxNode>;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    children: PropType<VueJsxNode> | {
        type: PropType<VueJsxNode>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    disabled: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    level: PropType<number> | {
        type: PropType<number>;
        default?: any;
        required?: false;
    };
    direction: PropType<"ltr" | "rtl"> | {
        type: PropType<"ltr" | "rtl">;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default Link;
