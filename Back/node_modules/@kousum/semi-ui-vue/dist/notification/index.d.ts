import { ConfigProps, NotificationListProps, NotificationListState } from '@douyinfe/semi-foundation/lib/es/notification/notificationListFoundation';
import '@douyinfe/semi-foundation/lib/es/notification/notification.css';
import useNotification from './useNotification';
import { NoticeInstance, NoticeProps, NoticeState } from '@douyinfe/semi-foundation/lib/es/notification/notificationFoundation';
import { CSSProperties, App } from 'vue';
import { CombineProps } from '../interface';
export type { NoticeTransitionProps } from './NoticeTransition';
export type { NoticeProps };
export interface NoticeReactProps extends NoticeProps {
    style?: CSSProperties;
}
export type { NoticeState, NotificationListProps, NotificationListState, ConfigProps };
export type NoticesInPosition = {
    top: NoticeInstance[];
    topLeft: NoticeInstance[];
    topRight: NoticeInstance[];
    bottom: NoticeInstance[];
    bottomLeft: NoticeInstance[];
    bottomRight: NoticeInstance[];
};
export declare const vuePropsType: CombineProps<{
    style?: any;
    className?: string;
    direction?: string;
}>;
declare const NotificationList: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    style: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    direction: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    style: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    direction: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default NotificationList;
export declare class NotificationListClass {
    static app: App<Element>;
    static useNotification: typeof useNotification;
    private static wrapperId;
    static NotificationListRef: any;
    static addNotice(notice: NoticeProps): string;
    static removeNotice(id: string): string;
    static info(opts: NoticeProps): string;
    static success(opts: NoticeProps): string;
    static error(opts: NoticeProps): string;
    static warning(opts: NoticeProps): string;
    static open(opts: NoticeProps): string;
    static close(id: string): string;
    static destroyAll(): void;
    static config(opts: ConfigProps): void;
}
