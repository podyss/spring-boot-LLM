{"version":3,"file":"index.js","sources":["../../src/components/notification/index.tsx"],"sourcesContent":["import cls from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport NotificationListFoundation, {\n  ConfigProps,\n  NotificationListAdapter,\n  NotificationListProps,\n  NotificationListState,\n} from '@douyinfe/semi-foundation/notification/notificationListFoundation';\nimport { cssClasses, strings } from '@douyinfe/semi-foundation/notification/constants';\nimport Notice from './notice';\nimport '@douyinfe/semi-foundation/notification/notification.scss';\nimport NoticeTransition from './NoticeTransition';\nimport getUuid from '@douyinfe/semi-foundation/utils/uuid';\nimport useNotification from './useNotification';\nimport {\n  NoticeInstance,\n  NoticePosition,\n  NoticeProps,\n  NoticeState,\n} from '@douyinfe/semi-foundation/notification/notificationFoundation';\nimport {\n  defineComponent,\n  h,\n  reactive,\n  useSlots,\n  CSSProperties,\n  Fragment,\n  createVNode,\n  createApp,\n  App,\n  onUnmounted,\n} from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { useConfigContext } from '../configProvider/context/Consumer';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport { BannerProps } from '../banner';\nimport { CombineProps } from '../interface';\n// TODO: Automatic folding + unfolding function when there are more than N\n\nexport type { NoticeTransitionProps } from './NoticeTransition';\nexport type { NoticeProps };\nexport interface NoticeReactProps extends NoticeProps {\n  style?: CSSProperties;\n}\n\nexport type { NoticeState, NotificationListProps, NotificationListState, ConfigProps };\n\nexport type NoticesInPosition = {\n  top: NoticeInstance[];\n  topLeft: NoticeInstance[];\n  topRight: NoticeInstance[];\n  bottom: NoticeInstance[];\n  bottomLeft: NoticeInstance[];\n  bottomRight: NoticeInstance[];\n};\n\nconst defaultConfig = {\n  duration: 3,\n  position: 'topRight' as NoticePosition,\n  motion: true,\n  content: '',\n  title: '',\n  zIndex: 1010,\n};\n\nconst propTypes: CombineProps<{ style?: any; className?: string; direction?: string }> = {\n  style: PropTypes.object,\n  className: PropTypes.string,\n  direction: String,\n  // ref: [Function, Object]\n};\nconst defaultProps = {};\n\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst NotificationList = defineComponent({\n  props: { ...vuePropsType },\n  name: 'NotificationList',\n  setup(props, { expose }) {\n    const slots = useSlots();\n    let noticeStorage: NoticeInstance[] = [];\n    let removeItemStorage: NoticeInstance[] = [];\n\n    const state = reactive<NotificationListState>({\n      notices: [],\n      removedItems: [],\n      updatedItems: [],\n    });\n\n    const { adapter: adapterInject } = useBaseComponent<BannerProps>(props, state);\n\n    function adapter_(): NotificationListAdapter {\n      return {\n        ...adapterInject(),\n        updateNotices: (\n          notices: NoticeInstance[],\n          removedItems: NoticeInstance[] = [],\n          updatedItems: NoticeInstance[] = []\n        ) => {\n          noticeStorage = [...notices];\n          removeItemStorage = [...removedItems];\n          // setState is async sometimes and react often merges state, so use \"this\" , make sure other code always get right data.\n          state.notices = notices;\n          state.removedItems = removedItems;\n          state.updatedItems = updatedItems;\n        },\n        getNotices: () => noticeStorage,\n      };\n    }\n\n    const adapter = adapter_();\n    const foundation = new NotificationListFoundation(adapter);\n\n    const { context } = useConfigContext();\n\n    const add = (noticeOpts: NoticeProps) => foundation.addNotice(noticeOpts);\n\n    const has = (id: string) => foundation.has(id);\n\n    const remove = (id: string) => {\n      foundation.removeNotice(String(id));\n    };\n\n    const update = (id: string, opts: NoticeProps) => {\n      return foundation.update('' + id, opts);\n    };\n\n    const destroyAll = () => foundation.destroyAll();\n\n    const renderNoticeInPosition = (\n      notices: NoticeInstance[],\n      position: NoticePosition,\n      removedItems: NoticeInstance[] = [],\n      updatedItems: NoticeInstance[] = []\n    ) => {\n      const className = cls(cssClasses.LIST);\n      // TODO notifyOnClose\n      if (notices.length) {\n        const style = setPosInStyle(notices[0]);\n        return (\n          <div\n            // @ts-ignore\n            placement={position}\n            key={position}\n            class={className}\n            style={style}\n          >\n            {notices.map((notice, index) => {\n              return notice.motion ? (\n                <NoticeTransition\n                  key={notice.id || index}\n                  position={position}\n                  motion={notice.motion}\n                  children={\n                    removedItems.find((item) => item.id === notice.id)\n                      ? null\n                      : (transitionStyle) => (\n                          <Notice\n                            {...notice}\n                            ref={(notice) => {\n                              //@ts-ignore\n                              if (notice && updatedItems.some((item) => item.id === notice.$props.id)) {\n                                //@ts-ignore\n                                notice.getFoundation().restartCloseTimer();\n                              }\n                            }}\n                            style={{ ...transitionStyle, ...notice.style }}\n                            key={notice.id}\n                            close={remove}\n                          />\n                        )\n                  }\n                ></NoticeTransition>\n              ) : (\n                <Notice {...notice} style={{ ...notice.style }} key={notice.id} close={remove} />\n              );\n            })}\n          </div>\n        );\n      }\n      return null;\n    };\n\n    function setPosInStyle(noticeInstance: NoticeInstance) {\n      const style: CSSProperties = {};\n      ['top', 'left', 'bottom', 'right'].forEach((pos) => {\n        if (pos in noticeInstance) {\n          const val = noticeInstance[pos];\n          style[pos] = typeof val === 'number' ? `${val}px` : val;\n        }\n      });\n      return style;\n    }\n\n    expose({\n      add,\n      has,\n      remove,\n      destroyAll,\n      update,\n    });\n\n    return () => {\n      let { notices } = state;\n      const { removedItems, updatedItems } = state;\n      notices = Array.from(new Set([...notices, ...removedItems]));\n      const noticesInPosition: NoticesInPosition = {\n        top: [],\n        topLeft: [],\n        topRight: [],\n        bottom: [],\n        bottomLeft: [],\n        bottomRight: [],\n      };\n      notices.forEach((notice) => {\n        const direction = notice.direction || context.value.direction;\n        const defaultPosition = direction === 'rtl' ? 'topLeft' : 'topRight';\n        const position = notice.position || defaultPosition;\n        noticesInPosition[position].push(notice);\n      });\n\n      const noticesList = Object.entries(noticesInPosition).map((obj) => {\n        const pos = obj[0];\n        const noticesInPos = obj[1];\n        return renderNoticeInPosition(noticesInPos, pos as NoticePosition, removedItems, updatedItems);\n      });\n\n      return <Fragment>{noticesList}</Fragment>;\n    };\n  },\n});\n\nexport default NotificationList;\n\nexport class NotificationListClass {\n  static app: App<Element>;\n  static useNotification: typeof useNotification = useNotification;\n  private static wrapperId: string;\n  static NotificationListRef = null;\n\n  static addNotice(notice: NoticeProps) {\n    notice = { ...defaultConfig, ...notice };\n    const id = notice.id ?? getUuid('notification');\n    if (!this.NotificationListRef) {\n      const { getPopupContainer } = notice;\n      const div = document.createElement('div');\n      if (!this.wrapperId) {\n        this.wrapperId = getUuid('notification-wrapper').slice(0, 32);\n      }\n      div.className = cssClasses.WRAPPER;\n      div.id = this.wrapperId;\n      div.style.zIndex = String(typeof notice.zIndex === 'number' ? notice.zIndex : defaultConfig.zIndex);\n      if (getPopupContainer) {\n        const container = getPopupContainer();\n        container.appendChild(div);\n      } else {\n        document.body.appendChild(div);\n      }\n      this.app = createApp(() =>\n        createVNode(NotificationList, {\n          ref: (instance: any) => {\n            if (!this.NotificationListRef) {\n              instance.add({ ...notice, id });\n            }\n            this.NotificationListRef = instance;\n          },\n        })\n      );\n      this.app.mount(div);\n    } else {\n      if (this.NotificationListRef.has(`${id}`)) {\n        this.NotificationListRef.update(id, notice);\n      } else {\n        this.NotificationListRef.add({ ...notice, id });\n      }\n    }\n    return id;\n  }\n\n  static removeNotice(id: string) {\n    if (this.NotificationListRef) {\n      this.NotificationListRef.remove(id);\n    }\n\n    return id;\n  }\n\n  static info(opts: NoticeProps) {\n    return this.addNotice({ ...opts, type: 'info' });\n  }\n\n  static success(opts: NoticeProps) {\n    return this.addNotice({ ...opts, type: 'success' });\n  }\n\n  static error(opts: NoticeProps) {\n    return this.addNotice({ ...opts, type: 'error' });\n  }\n\n  static warning(opts: NoticeProps) {\n    return this.addNotice({ ...opts, type: 'warning' });\n  }\n\n  static open(opts: NoticeProps) {\n    return this.addNotice({ ...opts, type: 'default' });\n  }\n\n  static close(id: string) {\n    return this.removeNotice(id);\n  }\n\n  static destroyAll() {\n    if (this.NotificationListRef) {\n      this.NotificationListRef.destroyAll();\n      const wrapper = document.querySelector(`#${this.wrapperId}`);\n      this.app.unmount();\n      // ReactDOM.unmountComponentAtNode(wrapper);\n      wrapper && wrapper.parentNode.removeChild(wrapper);\n      this.NotificationListRef = null;\n      this.wrapperId = null;\n    }\n  }\n\n  static config(opts: ConfigProps) {\n    ['top', 'left', 'bottom', 'right'].map((pos) => {\n      if (pos in opts) {\n        defaultConfig[pos] = opts[pos];\n      }\n    });\n\n    if (typeof opts.zIndex === 'number') {\n      defaultConfig.zIndex = opts.zIndex;\n    }\n    if (typeof opts.duration === 'number') {\n      defaultConfig.duration = opts.duration;\n    }\n    if (typeof opts.position === 'string') {\n      defaultConfig.position = opts.position as NoticePosition;\n    }\n  }\n}\n"],"names":["defaultConfig","duration","position","motion","content","title","zIndex","propTypes","style","PropTypes","object","className","string","direction","String","defaultProps","vuePropsType","vuePropsMake","NotificationList","defineComponent","props","name","setup","expose","useSlots","noticeStorage","state","reactive","notices","removedItems","updatedItems","adapter","adapterInject","useBaseComponent","adapter_","updateNotices","getNotices","foundation","NotificationListFoundation","context","useConfigContext","add","noticeOpts","addNotice","has","id","remove","removeNotice","update","opts","destroyAll","renderNoticeInPosition","cls","cssClasses","LIST","length","setPosInStyle","_createVNode","map","notice","index","NoticeTransition","find","item","transitionStyle","Notice","_mergeProps","some","$props","getFoundation","restartCloseTimer","noticeInstance","forEach","pos","val","Array","from","Set","noticesInPosition","top","topLeft","topRight","bottom","bottomLeft","bottomRight","defaultPosition","value","push","noticesList","Object","entries","obj","noticesInPos","_Fragment","NotificationListClass","getUuid","NotificationListRef","getPopupContainer","div","document","createElement","wrapperId","slice","WRAPPER","appendChild","body","app","createApp","createVNode","ref","instance","mount","info","type","success","error","warning","open","close","wrapper","querySelector","unmount","parentNode","removeChild","config","__publicField","useNotification"],"mappings":"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"}