import { defineComponent as l, useSlots as u, ref as c, watch as a, createVNode as f, mergeProps as m } from "vue";
import p from "../notice";
const d = {
  id: String,
  afterClose: {
    type: Function,
    required: !0
  },
  motion: [Object, String, Boolean]
}, N = /* @__PURE__ */ l({
  props: {
    ...d
  },
  name: "HookNotice",
  setup(o, {
    expose: g,
    attrs: r
  }) {
    u();
    const e = c(!0);
    function n(t) {
      e.value = t;
    }
    const i = () => {
      n(!1);
    };
    return a(e, () => {
      e.value || o.afterClose(String(o.id));
    }, {
      immediate: !0
    }), () => {
      const {
        afterClose: t,
        ...s
      } = r;
      return e ? f(p, m(s, {
        onHookClose: i
      }), null) : null;
    };
  }
});
export {
  N as default,
  d as vuePropsType
};
//# sourceMappingURL=HookNotice.js.map
