{"version":3,"file":"index.js","sources":["../../../src/components/notification/useNotification/index.tsx"],"sourcesContent":["import cls from 'classnames';\nimport { cssClasses } from '@douyinfe/semi-foundation/notification/constants';\nimport HookNotice from './HookNotice';\nimport '@douyinfe/semi-foundation/notification/notification.scss';\nimport getUuid from '@douyinfe/semi-foundation/utils/uuid';\nimport type {\n  NoticeInstance,\n  NoticePosition,\n  NoticeProps,\n} from '@douyinfe/semi-foundation/notification/notificationFoundation';\nimport type { NoticesInPosition } from '../index';\nimport { VueJsxNode } from '../../interface';\nimport { Fragment, h, Ref, ref, VNode, watch } from 'vue';\n// TODO: Automatic folding + unfolding function when there are more than N\n\nconst defaultConfig = {\n  duration: 3,\n  position: 'topRight' as NoticePosition,\n  motion: true,\n  content: '',\n  title: '',\n  zIndex: 1010,\n};\n\nfunction usePatchElement(): [()=>VNode[], typeof patchElement] {\n  const elements = ref([]);\n\n  function setElements(val: any) {\n    elements.value = val;\n  }\n  // TODO\n  function patchElement(element: ()=>VNode, config: NoticeInstance) {\n    setElements([{ element, config }, ...elements.value]);\n\n\n    return (id: string) => {\n      setElements(elements.value.filter(({ config: configOfCurrentElement }) => {\n        console.log(configOfCurrentElement.id, id)\n        return configOfCurrentElement.id !== id\n      }));\n    };\n  }\n\n  function renderList() {\n    const noticesInPosition: NoticesInPosition = {\n      top: [],\n      topLeft: [],\n      topRight: [],\n      bottom: [],\n      bottomLeft: [],\n      bottomRight: [],\n    };\n    elements.value.forEach(({ element, config }) => {\n      const { position } = config;\n      noticesInPosition[position].push(element);\n    });\n    return Object.entries(noticesInPosition).map((obj) => {\n      const pos = obj[0];\n      const notices = obj[1];\n      return Array.isArray(notices) && notices.length ? (\n        // @ts-ignore\n        <div key={pos} class={cls(cssClasses.LIST)} placement={pos}>\n          {/*// @ts-ignore*/}\n          {notices.map(item=>item())}\n        </div>\n      ) : null;\n    });\n  }\n\n  return [renderList, patchElement];\n}\n\ntype NotificationFunType = {\n    success: (config: NoticeProps) => string;\n    info: (config: NoticeProps) => string;\n    error: (config: NoticeProps) => string;\n    warning: (config: NoticeProps) => string;\n    open: (config: NoticeProps) => string;\n    close: (instanceID: string) => void;\n};\nexport default function useNotification():[NotificationFunType, ()=>VNode[]] {\n  const [elements, patchElement] = usePatchElement();\n  const noticeRef = new Map<string, { close: () => void } & Element>();\n\n  const addNotice = (config: NoticeProps) => {\n    const id = getUuid('semi_notice_');\n    const mergeConfig = {\n      ...config,\n      id,\n    };\n    // eslint-disable-next-line prefer-const\n    let closeFunc: ReturnType<typeof patchElement>;\n    const ref = (ele: any) => {\n      noticeRef.set(id, ele);\n    };\n    const notice = ()=>(\n      <HookNotice key={id} {...mergeConfig} afterClose={(instanceID: string) => closeFunc(instanceID)} ref={ref} />\n    );\n    closeFunc = patchElement(notice, { ...mergeConfig });\n    return id;\n  };\n\n  const removeElement = (instanceID: string) => {\n    const ele = noticeRef.get(instanceID);\n    ele && ele.close();\n  };\n  return [\n    {\n      success: (config: NoticeProps) => addNotice({ ...defaultConfig, ...config, type: 'success' }),\n      info: (config: NoticeProps) => addNotice({ ...defaultConfig, ...config, type: 'info' }),\n      error: (config: NoticeProps) => addNotice({ ...defaultConfig, ...config, type: 'error' }),\n      warning: (config: NoticeProps) => addNotice({ ...defaultConfig, ...config, type: 'warning' }),\n      open: (config: NoticeProps) => addNotice({ ...defaultConfig, ...config, type: 'default' }),\n      close: removeElement,\n    },\n    elements,\n  ];\n}\n"],"names":["defaultConfig","duration","position","motion","content","title","zIndex","usePatchElement","elements","ref","setElements","val","value","patchElement","element","config","id","filter","configOfCurrentElement","console","log","renderList","noticesInPosition","top","topLeft","topRight","bottom","bottomLeft","bottomRight","forEach","push","Object","entries","map","obj","pos","notices","Array","isArray","length","_createVNode","cls","cssClasses","LIST","item","useNotification","noticeRef","Map","addNotice","getUuid","mergeConfig","closeFunc","ele","set","notice","HookNotice","_mergeProps","instanceID","success","type","info","error","warning","open","close","get"],"mappings":"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"}