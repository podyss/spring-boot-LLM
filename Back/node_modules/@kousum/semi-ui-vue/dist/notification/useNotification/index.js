import { ref as f, createVNode as p, mergeProps as d } from "vue";
import g from "classnames";
import { cssClasses as h } from '@douyinfe/semi-foundation/lib/es/notification/constants';
import y from "./HookNotice";
import '@douyinfe/semi-foundation/lib/es/notification/notification.css';
import v from '@douyinfe/semi-foundation/lib/es/utils/uuid';
const c = {
  duration: 3,
  position: "topRight",
  motion: !0,
  content: "",
  title: "",
  zIndex: 1010
};
function E() {
  const r = f([]);
  function i(s) {
    r.value = s;
  }
  function l(s, t) {
    return i([{
      element: s,
      config: t
    }, ...r.value]), (e) => {
      i(r.value.filter(({
        config: o
      }) => (console.log(o.id, e), o.id !== e)));
    };
  }
  function n() {
    const s = {
      top: [],
      topLeft: [],
      topRight: [],
      bottom: [],
      bottomLeft: [],
      bottomRight: []
    };
    return r.value.forEach(({
      element: t,
      config: e
    }) => {
      const {
        position: o
      } = e;
      s[o].push(t);
    }), Object.entries(s).map((t) => {
      const e = t[0], o = t[1];
      return Array.isArray(o) && o.length ? (
        // @ts-ignore
        p("div", {
          key: e,
          class: g(h.LIST),
          placement: e
        }, [o.map((m) => m())])
      ) : null;
    });
  }
  return [n, l];
}
function I() {
  const [r, i] = E(), l = /* @__PURE__ */ new Map(), n = (t) => {
    const e = v("semi_notice_"), o = {
      ...t,
      id: e
    };
    let m;
    const a = (u) => {
      l.set(e, u);
    };
    return m = i(() => p(y, d({
      key: e
    }, o, {
      afterClose: (u) => m(u),
      ref: a
    }), null), {
      ...o
    }), e;
  };
  return [{
    success: (t) => n({
      ...c,
      ...t,
      type: "success"
    }),
    info: (t) => n({
      ...c,
      ...t,
      type: "info"
    }),
    error: (t) => n({
      ...c,
      ...t,
      type: "error"
    }),
    warning: (t) => n({
      ...c,
      ...t,
      type: "warning"
    }),
    open: (t) => n({
      ...c,
      ...t,
      type: "default"
    }),
    close: (t) => {
      const e = l.get(t);
      e && e.close();
    }
  }, r];
}
export {
  I as default
};
//# sourceMappingURL=index.js.map
