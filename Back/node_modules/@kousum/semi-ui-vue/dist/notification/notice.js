import { defineComponent as S, useSlots as H, reactive as _, onMounted as j, onUnmounted as A, createVNode as e, cloneVNode as B } from "vue";
import f from "classnames";
import * as o from "../PropTypes";
import { vuePropsMake as F } from "../PropTypes";
import { cssClasses as R, strings as U, numbers as V } from '@douyinfe/semi-foundation/lib/es/notification/constants';
import D from '@douyinfe/semi-foundation/lib/es/notification/notificationFoundation';
import E from "../iconButton";
import { useBaseComponent as L } from "../_base/baseComponent";
import { isSemiIcon as O } from "../_utils";
import { noop as a } from "lodash";
import { IconClose as W, IconAlertTriangle as q, IconTickCircle as G, IconInfoCircle as J, IconAlertCircle as K } from "@kousum/semi-icons-vue";
import { getUuidShort as Q } from '@douyinfe/semi-foundation/lib/es/utils/uuid';
import { useConfigContext as X } from "../configProvider/context/Consumer";
const t = R.NOTICE, {
  duration: Y
} = V, {
  types: Z,
  themes: vo,
  directions: $o
} = U, oo = {
  duration: o.number,
  id: o.string,
  title: o.node,
  content: o.node,
  // strings、numbers、array、element
  type: String,
  theme: String,
  icon: o.node,
  onClick: o.func,
  onClose: o.func,
  onCloseClick: o.func,
  showClose: o.bool,
  // private props
  close: o.func,
  direction: String,
  onHookClose: o.func,
  style: o.object,
  className: o.string,
  position: o.string,
  zIndex: o.number,
  getPopupContainer: o.func
}, eo = {
  duration: Y,
  id: "",
  close: a,
  onClose: a,
  onClick: a,
  onCloseClick: a,
  content: "",
  title: "",
  showClose: !0,
  theme: "normal"
}, to = F(oo, eo), To = /* @__PURE__ */ S({
  props: {
    ...to
  },
  name: "Notice",
  setup(n, {
    expose: g
  }) {
    H();
    const d = _({
      visible: !0
    }), {
      adapter: y
    } = L(n, d);
    function k() {
      return {
        ...y(),
        notifyWrapperToRemove: (i) => {
          n.close(i);
        },
        notifyClose: () => {
          n.onClose(), n.onHookClose && n.onHookClose();
        }
      };
    }
    const v = k(), r = new D(v), {
      context: $
    } = X();
    j(() => {
      r.init();
    }), A(() => {
      r.destroy();
    });
    function T() {
      var m;
      const {
        type: i,
        icon: l
      } = n;
      let s = {
        warning: e(q, {
          size: "large"
        }, null),
        success: e(G, {
          size: "large"
        }, null),
        info: e(J, {
          size: "large"
        }, null),
        error: e(K, {
          size: "large"
        }, null)
      }[i];
      const c = f({
        [`${t}-icon`]: !0,
        [`${t}-${i}`]: !0
      });
      return l && (s = l), s ? e("div", {
        class: c,
        "x-semi-prop": "icon"
      }, [O(s) ? B(s, {
        size: ((m = s.props) == null ? void 0 : m.size) || "large"
      }) : s]) : null;
    }
    const h = () => {
      r._clearCloseTimer();
    }, I = () => {
      r._startCloseTimer();
    }, b = (i) => {
      n.onCloseClick(n.id), r.close(i);
    }, N = (i) => {
      n.onClick(i);
    };
    return g({
      getFoundation() {
        return r;
      }
    }), () => {
      const i = n.direction || $.value.direction, l = i === "rtl" ? "topLeft" : "topRight", {
        content: u,
        title: s,
        theme: c,
        position: m = l,
        type: p,
        id: no,
        onCloseClick: io,
        className: w,
        showClose: x,
        style: z,
        ...so
      } = n, {
        visible: M
      } = d, P = f(t, w, {
        [`${t}-close`]: !M,
        [`${t}-icon-show`]: Z.includes(p),
        [`${t}-${p}`]: !0,
        [`${t}-${c}`]: c === "light",
        [`${t}-rtl`]: i === "rtl"
      }), C = Q({});
      return (
        // eslint-disable-next-line jsx-a11y/no-static-element-interactions
        e("div", {
          class: P,
          style: z,
          onMouseenter: h,
          onMouseleave: I,
          onClick: N,
          "aria-labelledby": C,
          role: "alert"
        }, [e("div", null, [T()]), e("div", {
          class: `${t}-inner`
        }, [e("div", {
          class: `${t}-content-wrapper`
        }, [s ? e("div", {
          id: C,
          class: `${t}-title`,
          "x-semi-prop": "title"
        }, [s]) : "", u ? e("div", {
          class: `${t}-content`,
          "x-semi-prop": "content"
        }, [u]) : ""]), x && e(E, {
          className: `${t}-icon-close`,
          type: "tertiary",
          icon: e(W, null, null),
          theme: "borderless",
          size: "small",
          onClick: b
        }, null)])])
      );
    };
  }
});
export {
  To as default,
  to as vuePropsType
};
//# sourceMappingURL=notice.js.map
