{"version":3,"file":"treeContext.js","sources":["../../src/components/tree/treeContext.tsx"],"sourcesContent":["import { Virtualize, ExpandAction } from '@douyinfe/semi-foundation/tree/foundation';\nimport {\n    TreeNodeData,\n    KeyEntities,\n    TreeNodeProps,\n    FlattenNode,\n    RenderFullLabelProps\n} from './interface';\nimport {VueJsxNode} from \"../interface\";\nimport { CSSProperties, VNode } from 'vue';\nimport Provider from \"./TreeContext/Provider\";\nimport Consumer from \"./TreeContext/Consumer\";\n\nexport interface TreeContextValue {\n    treeDisabled?: boolean;\n    treeIcon?: VNode | ((props: TreeNodeProps) => VNode);\n    motion?: boolean;\n    motionKeys?: Set<string>;\n    motionType?: string;\n    filterTreeNode?: boolean | ((inputValue: string, treeNodeString: string) => void);\n    keyEntities?: KeyEntities;\n    onNodeClick?: any;\n    onNodeExpand?: (e: MouseEvent | KeyboardEvent, treeNode: TreeNodeProps) => void;\n    onNodeSelect?: (e: MouseEvent | KeyboardEvent, treeNode: TreeNodeProps) => void;\n    onNodeCheck?: (e: MouseEvent | KeyboardEvent, treeNode: TreeNodeProps) => void;\n    onNodeRightClick?: (e: MouseEvent, treeNode: TreeNodeProps) => void;\n    onNodeDoubleClick?: (e: MouseEvent, treeNode: TreeNodeProps) => void;\n    renderTreeNode?: (treeNode: FlattenNode, ind?: number, style?: CSSProperties) => VueJsxNode;\n    onNodeDragStart?: (e: DragEvent, treeNode: TreeNodeProps) => void;\n    onNodeDragEnter?: (e: DragEvent, treeNode: TreeNodeProps) => void;\n    onNodeDragOver?: (e: DragEvent, treeNode: TreeNodeProps) => void;\n    onNodeDragLeave?: (e: DragEvent, treeNode: TreeNodeProps) => void;\n    onNodeDragEnd?: (e: DragEvent, treeNode: TreeNodeProps) => void;\n    onNodeDrop?: (e: DragEvent, treeNode: TreeNodeProps) => void;\n    expandAction?: ExpandAction;\n    directory?: boolean;\n    multiple?: boolean;\n    showFilteredOnly?: boolean;\n    isSearching?: boolean;\n    loadData?: (treeNode?: TreeNodeData) => Promise<void>;\n    onNodeLoad?: (data: TreeNodeData) => Promise<unknown>;\n    renderLabel?: (label?: VueJsxNode, treeNode?: TreeNodeData, searchWord?: string) => VueJsxNode;\n    draggable?: boolean;\n    renderFullLabel?: (renderFullLabelProps: RenderFullLabelProps) => VueJsxNode;\n    dragOverNodeKey?: string | string[];\n    dropPosition?: number | null;\n    labelEllipsis?: boolean | Virtualize;\n}\n\nconst TreeContext = {\n    Provider: Provider,\n    Consumer: Consumer,\n};\n\nexport default TreeContext;\n"],"names":["TreeContext","Provider","Consumer"],"mappings":";;AAiDA,MAAMA,IAAc;AAAA,EAChBC,UAAUA;AAAAA,EACVC,UAAUA;AACd;"}