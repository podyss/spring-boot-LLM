{"version":3,"file":"autoSizer.js","sources":["../../src/components/tree/autoSizer.tsx"],"sourcesContent":["import * as PropTypes from '../PropTypes';\nimport { cssClasses } from '@douyinfe/semi-foundation/tree/constants';\nimport ResizeObserver from '../resizeObserver';\nimport type { ResizeEntry } from '../resizeObserver';\nimport { get } from 'lodash';\nimport { ComponentObjectPropsOptions, defineComponent, h, onMounted, PropType, reactive, useSlots } from 'vue';\nimport { CombineProps, VueJsxNode } from '../interface';\nimport { vuePropsMake } from '../PropTypes';\n\nexport interface AutoSizerProps {\n  defaultHeight?: number | string;\n  defaultWidth?: number | string;\n\n  children?: (info: { width: string | number; height: string | number }) => VueJsxNode;\n}\n\nexport interface AutoSizerState {\n  height: number | string;\n}\n\nconst prefixcls = cssClasses.PREFIX;\n\nconst propTypes: CombineProps<AutoSizerProps> = {\n  defaultHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  defaultWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  children: PropTypes.func as PropType<AutoSizerProps['children']>,\n};\n\nconst defaultProps = {\n  defaultHeight: '100%',\n  defaultWidth: '100%',\n};\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst AutoSizer = defineComponent({\n  props: { ...vuePropsType },\n  name: 'AutoSizer',\n  setup(props, {}) {\n    const slots = useSlots();\n\n    const state = reactive<AutoSizerState>({\n      height: props.defaultHeight || 0,\n    });\n\n    onMounted(() => {\n      const { height } = state;\n      // if height is a number, pass it directly to virtual-list\n      if (typeof height === 'number') {\n        return;\n      }\n    });\n\n    const _onResize = (entries: ResizeEntry[]) => {\n      // observe parent node height\n      const target = entries && entries[1] && entries[1].target;\n      if (target) {\n        const height = get(target, 'offsetHeight') || 0;\n        const style = window.getComputedStyle(target) || {};\n        const paddingTop = parseInt(get(style, 'paddingTop'), 10) || 0;\n        const paddingBottom = parseInt(get(style, 'paddingBottom'), 10) || 0;\n        const newHeight = height - paddingTop - paddingBottom;\n        if (state.height !== newHeight) {\n          state.height = height - paddingTop - paddingBottom;\n        }\n      }\n    };\n\n    return () => {\n      const { defaultWidth, defaultHeight } = props;\n      const { height } = state;\n      // Avoid rendering children before the initial measurements have been collected.\n      // At best this would just be wasting cycles. Refer to https://github.com/bvaughn/react-virtualized-auto-sizer/\n      let bailoutOnChildren = false;\n\n      if (height === 0 || typeof height !== 'number') {\n        bailoutOnChildren = true;\n      }\n      return (\n        <ResizeObserver observeParent onResize={_onResize}>\n          <div\n            style={{\n              height: typeof defaultHeight === 'number' ? defaultHeight + 'px' : defaultHeight,\n              overflow: 'visible',\n            }}\n            class={`${prefixcls}-auto-wrapper`}\n          >\n            {!bailoutOnChildren && props.children?.({ height, width: defaultWidth })}\n          </div>\n        </ResizeObserver>\n      );\n    };\n  },\n});\n\nexport default AutoSizer;\n"],"names":["prefixcls","cssClasses","PREFIX","propTypes","defaultHeight","PropTypes","oneOfType","number","string","defaultWidth","children","func","defaultProps","vuePropsType","vuePropsMake","AutoSizer","defineComponent","props","name","setup","useSlots","state","reactive","height","onMounted","_onResize","entries","target","get","style","window","getComputedStyle","paddingTop","parseInt","paddingBottom","newHeight","bailoutOnChildren","_createVNode","ResizeObserver","default","overflow","width"],"mappings":";;;;;;AAoBA,MAAMA,IAAYC,EAAWC,QAEvBC,IAA0C;AAAA,EAC9CC,eAAeC,EAAUC,UAAU,CAACD,EAAUE,QAAQF,EAAUG,MAAM,CAAC;AAAA,EACvEC,cAAcJ,EAAUC,UAAU,CAACD,EAAUE,QAAQF,EAAUG,MAAM,CAAC;AAAA,EACtEE,UAAUL,EAAUM;AACtB,GAEMC,IAAe;AAAA,EACnBR,eAAe;AAAA,EACfK,cAAc;AAChB,GACaI,IAAeC,EAAaX,GAAWS,CAAY,GAC1DG,IAAYC,gBAAAA,EAAgB;AAAA,EAChCC,OAAO;AAAA,IAAE,GAAGJ;AAAAA,EAAc;AAAA,EAC1BK,MAAM;AAAA,EACNC,MAAMF,GAAO,IAAI;AACDG,IAAAA,EAAU;AAExB,UAAMC,IAAQC,EAAyB;AAAA,MACrCC,QAAQN,EAAMb,iBAAiB;AAAA,IACjC,CAAC;AAEDoB,IAAAA,EAAU,MAAM;AACd,YAAM;AAAA,QAAED,QAAAA;AAAAA,MAAQ,IAAGF;AAAAA,IAKrB,CAAC;AAED,UAAMI,IAAaC,CAAAA,MAA2B;AAE5C,YAAMC,IAASD,KAAWA,EAAQ,CAAC,KAAKA,EAAQ,CAAC,EAAEC;AACnD,UAAIA,GAAQ;AACV,cAAMJ,IAASK,EAAID,GAAQ,cAAc,KAAK,GACxCE,IAAQC,OAAOC,iBAAiBJ,CAAM,KAAK,CAAA,GAC3CK,IAAaC,SAASL,EAAIC,GAAO,YAAY,GAAG,EAAE,KAAK,GACvDK,IAAgBD,SAASL,EAAIC,GAAO,eAAe,GAAG,EAAE,KAAK,GAC7DM,IAAYZ,IAASS,IAAaE;AACxC,QAAIb,EAAME,WAAWY,MACnBd,EAAME,SAASA,IAASS,IAAaE;AAAAA,MAEzC;AAAA;AAGF,WAAO,MAAM;AACX,YAAM;AAAA,QAAEzB,cAAAA;AAAAA,QAAcL,eAAAA;AAAAA,MAAe,IAAGa,GAClC;AAAA,QAAEM,QAAAA;AAAAA,MAAQ,IAAGF;AAGnB,UAAIe,IAAoB;AAExB,cAAIb,MAAW,KAAK,OAAOA,KAAW,cACpCa,IAAoB,KAEtBC,EAAAC,GAAA;AAAA,QAAA,eAAA;AAAA,QAAA,UAC0Cb;AAAAA,MAAS,GAAA;AAAA,QAAAc,SAAAA,MAAAA;;AAAA,kBAAAF,EAAA,OAAA;AAAA,YAAA,OAEtC;AAAA,cACLd,QAAQ,OAAOnB,KAAkB,WAAWA,IAAgB,OAAOA;AAAAA,cACnEoC,UAAU;AAAA,YACX;AAAA,YAAA,OACM,GAAGxC,CAAS;AAAA,UAAe,GAAA,CAEjC,CAACoC,OAAqBnB,IAAAA,EAAMP,aAANO,gBAAAA,EAAAA,KAAAA,GAAiB;AAAA,YAAEM,QAAAA;AAAAA,YAAQkB,OAAOhC;AAAAA,UAAc,GAAC,CAAA,CAAA;AAAA;AAAA,MAAA,CAAA;AAAA;EAKlF;AACF,CAAC;"}