{"version":3,"file":"treeNode.js","sources":["../../src/components/tree/treeNode.tsx"],"sourcesContent":["import cls from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport { vuePropsMake } from '../PropTypes';\nimport { cssClasses } from '@douyinfe/semi-foundation/tree/constants';\nimport isEnterPress from '@douyinfe/semi-foundation/utils/isEnterPress';\nimport { debounce, get, isEmpty, isFunction, isString } from 'lodash';\nimport { IconFile, IconFolder, IconFolderOpen, IconTreeTriangleDown } from '@kousum/semi-icons-vue';\nimport { Checkbox } from '../checkbox';\nimport Spin from '../spin';\nimport type { RenderFullLabelProps, TreeNodeProps, TreeNodeState } from './interface';\nimport { getHighLightTextHTML } from '../_utils/index';\nimport { cloneVNode, defineComponent, h, PropType, reactive, ref, useSlots } from 'vue';\nimport { useTreeContext } from './TreeContext/Consumer';\nimport type { CombineProps, VueHTMLAttributes } from '../interface';\nimport Indent from './indent';\n\nconst prefixcls = cssClasses.PREFIX_OPTION;\n\nconst propTypes: CombineProps<TreeNodeProps> = {\n  expanded: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  selected: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  checked: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  halfChecked: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  active: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  disabled: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  loaded: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  loading: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  isLeaf: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  pos: PropTypes.string,\n  icon: PropTypes.node,\n  directory: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  keyword: PropTypes.string,\n  treeNodeFilterProp: PropTypes.string,\n  selectedKey: PropTypes.string,\n  motionKey: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  isEnd: PropTypes.array,\n  showLine: PropTypes.bool,\n  eventKey: String,\n  label: PropTypes.node,\n  data: Object,\n  children: Object,\n  nodeInstance: PropTypes.node,\n  emptyContent: PropTypes.node,\n\n  filtered: [String, Boolean] as PropType<TreeNodeProps['filtered']>,\n  level: Number,\n  empty: Boolean,\n  style: [Object, String] as PropType<TreeNodeProps['style']>,\n  display: PropTypes.any,\n\n  value: [Object, Array, String],\n};\n\nconst defaultProps = {\n  selectedKey: '',\n  motionKey: '',\n};\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst TreeNode = defineComponent({\n  props: { ...vuePropsType },\n  name: 'TreeNode',\n  setup(props, {}) {\n    const slots = useSlots();\n\n    const refNode = ref();\n    const { context } = useTreeContext();\n    const state = reactive<TreeNodeState>({});\n\n    const onSelect = (e: MouseEvent | KeyboardEvent) => {\n      const { onNodeSelect } = context.value;\n      onNodeSelect(e, props);\n    };\n\n    const debounceSelect = debounce(onSelect, 500, {\n      leading: true,\n      trailing: false,\n    });\n\n    const onExpand = (e: MouseEvent | KeyboardEvent) => {\n      const { onNodeExpand } = context.value;\n      e && e.stopPropagation();\n      e.stopImmediatePropagation();\n      onNodeExpand(e, props);\n    };\n\n    const onCheck = (e: MouseEvent | KeyboardEvent) => {\n      if (isDisabled()) {\n        return;\n      }\n      const { onNodeCheck } = context.value;\n      e.stopPropagation();\n      e.stopImmediatePropagation?.();\n      onNodeCheck(e, props);\n    };\n\n    /**\n     * A11y: simulate checkbox click\n     */\n    const handleCheckEnterPress = (e: KeyboardEvent) => {\n      if (isEnterPress(e)) {\n        onCheck(e);\n      }\n    };\n\n    const onContextMenu = (e: MouseEvent) => {\n      const { onNodeRightClick } = context.value;\n      onNodeRightClick(e, props);\n    };\n\n    const onClick = (e: MouseEvent | KeyboardEvent) => {\n      const { expandAction } = context.value;\n      if (expandAction === 'doubleClick') {\n        debounceSelect(e);\n        return;\n      }\n      onSelect(e);\n      if (expandAction === 'click') {\n        onExpand(e);\n      }\n    };\n\n    /**\n     * A11y: simulate li click\n     */\n    const handleliEnterPress = (e: KeyboardEvent) => {\n      if (isEnterPress(e)) {\n        onClick(e);\n      }\n    };\n\n    const onDoubleClick = (e: MouseEvent) => {\n      const { expandAction, onNodeDoubleClick } = context.value;\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n      if (isFunction(onNodeDoubleClick)) {\n        onNodeDoubleClick(e, props);\n      }\n      if (expandAction === 'doubleClick') {\n        onExpand(e);\n      }\n    };\n\n    const onDragStart = (e: DragEvent) => {\n      const { onNodeDragStart } = context.value;\n      e.stopPropagation();\n      onNodeDragStart(e, { ...props, nodeInstance: refNode.value });\n\n      try {\n        // ie throw error\n        // firefox-need-it\n        e.dataTransfer.setData('text/plain', '');\n      } catch (error) {\n        // empty\n      }\n    };\n\n    const onDragEnter = (e: DragEvent) => {\n      const { onNodeDragEnter } = context.value;\n      e.preventDefault();\n      e.stopPropagation();\n      onNodeDragEnter(e, { ...props, nodeInstance: refNode.value });\n    };\n\n    const onDragOver = (e: DragEvent) => {\n      const { onNodeDragOver } = context.value;\n      e.preventDefault();\n      e.stopPropagation();\n      onNodeDragOver(e, { ...props, nodeInstance: refNode.value });\n    };\n\n    const onDragLeave = (e: DragEvent) => {\n      const { onNodeDragLeave } = context.value;\n      e.stopPropagation();\n      onNodeDragLeave(e, { ...props, nodeInstance: refNode.value });\n    };\n\n    const onDragEnd = (e: DragEvent) => {\n      const { onNodeDragEnd } = context.value;\n      e.stopPropagation();\n      onNodeDragEnd(e, { ...props, nodeInstance: refNode.value });\n    };\n\n    const onDrop = (e: DragEvent) => {\n      const { onNodeDrop } = context.value;\n      e.preventDefault();\n      e.stopPropagation();\n      onNodeDrop(e, { ...props, nodeInstance: refNode.value });\n    };\n\n    const getNodeChildren = () => {\n      const { children } = props;\n      return children || [];\n    };\n\n    const isLeaf = () => {\n      const { isLeaf, loaded } = props;\n      const { loadData } = context.value;\n      const hasChildren = getNodeChildren().length !== 0;\n\n      if (isLeaf === false) {\n        return false;\n      }\n      return isLeaf || (!loadData && !hasChildren) || (loadData && loaded && !hasChildren);\n    };\n\n    const isDisabled = () => {\n      const { disabled } = props;\n      const { treeDisabled } = context.value;\n\n      if (disabled === false) {\n        return false;\n      }\n\n      return Boolean(treeDisabled || disabled);\n    };\n\n    function renderArrow() {\n      const showIcon = !isLeaf();\n      const { loading, expanded, showLine } = props;\n      if (loading) {\n        return <Spin wrapperClassName={`${prefixcls}-spin-icon`} />;\n      }\n      if (showIcon) {\n        return (\n          <IconTreeTriangleDown\n            role=\"button\"\n            aria-label={`${expanded ? 'Expand' : 'Collapse'} the tree item`}\n            className={`${prefixcls}-expand-icon`}\n            size=\"small\"\n            onClick={onExpand}\n          />\n        );\n      }\n      if (showLine) {\n        return renderSwitcher();\n      }\n      return <span class={`${prefixcls}-empty-icon`} />;\n    }\n\n    function renderCheckbox() {\n      const { checked, halfChecked, eventKey } = props;\n      const disabled = isDisabled();\n      return (\n        <div role=\"none\" onClick={onCheck} onKeypress={handleCheckEnterPress}>\n          <Checkbox\n            aria-label=\"Toggle the checked state of checkbox\"\n            value={eventKey}\n            indeterminate={halfChecked}\n            checked={checked}\n            disabled={Boolean(disabled)}\n          />\n        </div>\n      );\n    }\n\n    // Switcher\n    const renderSwitcher = () => {\n      if (isLeaf()) {\n        // if switcherIconDom is null, no render switcher span\n        return (\n          <span class={cls(`${prefixcls}-switcher`)}>\n            <span class={`${prefixcls}-switcher-leaf-line`} />\n          </span>\n        );\n      }\n      return null;\n    };\n    function renderIcon() {\n      const { directory, treeIcon } = context.value;\n      const { expanded, icon, data } = props;\n      if (icon) {\n        return icon;\n      }\n      if (treeIcon) {\n        return typeof treeIcon === 'function' ? treeIcon(props) : treeIcon;\n      }\n      if (directory) {\n        const hasChild = !isLeaf();\n        if (!hasChild) {\n          return <IconFile className={`${prefixcls}-item-icon`} />;\n        } else {\n          return expanded ? (\n            <IconFolderOpen className={`${prefixcls}-item-icon`} />\n          ) : (\n            <IconFolder className={`${prefixcls}-item-icon`} />\n          );\n        }\n      }\n      return null;\n    }\n\n    function renderEmptyNode() {\n      const { emptyContent } = props;\n      const wrapperCls = cls(prefixcls, {\n        [`${prefixcls}-empty`]: true,\n      });\n      return (\n        <ul class={wrapperCls}>\n          <li class={`${prefixcls}-label ${prefixcls}-label-empty`} x-semi-prop=\"emptyContent\">\n            {emptyContent}\n          </li>\n        </ul>\n      );\n    }\n\n    const renderRealLabel = () => {\n      const { renderLabel } = context.value;\n      const { label, keyword, data, filtered, treeNodeFilterProp } = props;\n      if (isFunction(renderLabel)) {\n        return renderLabel(label, data, keyword);\n      } else if (isString(label) && filtered && keyword) {\n        return getHighLightTextHTML({\n          sourceString: label,\n          searchWords: [keyword],\n          option: {\n            highlightTag: 'span',\n            highlightClassName: `${prefixcls}-highlight`,\n          },\n        } as any);\n      } else {\n        return label;\n      }\n    };\n\n    return () => {\n      const {\n        eventKey,\n        expanded,\n        selected,\n        checked,\n        halfChecked,\n        loading,\n        active,\n        level,\n        empty,\n        filtered,\n        treeNodeFilterProp,\n        // eslint-disable-next-line no-unused-vars\n        display,\n        style,\n        isEnd,\n        showLine,\n        ...rest\n      } = props;\n      if (empty) {\n        return renderEmptyNode();\n      }\n      const { multiple, draggable, renderFullLabel, dragOverNodeKey, dropPosition, labelEllipsis } = context.value;\n      const isEndNode = isEnd[isEnd.length - 1];\n      const disabled = isDisabled();\n      const dragOver = dragOverNodeKey === eventKey && dropPosition === 0;\n      const dragOverGapTop = dragOverNodeKey === eventKey && dropPosition === -1;\n      const dragOverGapBottom = dragOverNodeKey === eventKey && dropPosition === 1;\n      const nodeCls = cls(prefixcls, {\n        [`${prefixcls}-level-${level + 1}`]: true,\n        [`${prefixcls}-fullLabel-level-${level + 1}`]: renderFullLabel,\n        [`${prefixcls}-collapsed`]: !expanded,\n        [`${prefixcls}-disabled`]: Boolean(disabled),\n        [`${prefixcls}-selected`]: selected,\n        [`${prefixcls}-active`]: !multiple && active,\n        [`${prefixcls}-ellipsis`]: labelEllipsis,\n        [`${prefixcls}-drag-over`]: !disabled && dragOver,\n        [`${prefixcls}-draggable`]: !disabled && draggable && !renderFullLabel,\n        // When draggable + renderFullLabel is enabled, the default style\n        [`${prefixcls}-fullLabel-draggable`]: !disabled && draggable && renderFullLabel,\n        // When draggable + renderFullLabel is turned on, the style of dragover\n        [`${prefixcls}-fullLabel-drag-over-gap-top`]: !disabled && dragOverGapTop && renderFullLabel,\n        [`${prefixcls}-fullLabel-drag-over-gap-bottom`]: !disabled && dragOverGapBottom && renderFullLabel,\n        [`${prefixcls}-tree-node-last-leaf`]: isEndNode,\n      });\n      const labelProps: RenderFullLabelProps = {\n        onClick: onClick,\n        onContextMenu: onContextMenu,\n        onDoubleClick: onDoubleClick,\n        className: nodeCls,\n        onExpand: onExpand,\n        data: rest.data,\n        level,\n        onCheck: onCheck,\n        style,\n        expandIcon: renderArrow(),\n        checkStatus: {\n          checked,\n          halfChecked,\n        },\n        expandStatus: {\n          expanded,\n          loading,\n        },\n        filtered,\n        searchWord: rest.keyword,\n      };\n\n      const dragProps: VueHTMLAttributes = {\n        onDblclick: onDoubleClick,\n        onDragstart: draggable ? onDragStart : undefined,\n        onDragenter: draggable ? onDragEnter : undefined,\n        onDragover: draggable ? onDragOver : undefined,\n        onDragleave: draggable ? onDragLeave : undefined,\n        onDrop: draggable ? onDrop : undefined,\n        onDragend: draggable ? onDragEnd : undefined,\n        draggable: (!disabled && draggable) || undefined,\n      };\n\n      if (renderFullLabel) {\n        const customLabel = renderFullLabel({ ...labelProps });\n        if (draggable) {\n          return cloneVNode(customLabel as any, {\n            ref: refNode,\n            ...dragProps,\n          });\n        } else {\n          if (isEmpty(style)) {\n            return customLabel;\n          } else {\n            // In virtualization, props.style will contain location information\n            // @ts-ignore skip cloneElement type check\n            return cloneElement(customLabel, {\n              style: { ...get(customLabel, ['props', 'style']), ...style },\n            });\n          }\n        }\n      }\n      const labelCls = cls(`${prefixcls}-label`, {\n        [`${prefixcls}-drag-over-gap-top`]: !disabled && dragOverGapTop,\n        [`${prefixcls}-drag-over-gap-bottom`]: !disabled && dragOverGapBottom,\n      });\n      const setsize = get(rest, ['data', 'length']);\n      const posinset = isString(rest.pos) ? Number(rest.pos.split('-')[level + 1]) + 1 : 1;\n      return (\n        <li\n          class={nodeCls}\n          role=\"treeitem\"\n          aria-disabled={disabled}\n          aria-checked={checked}\n          aria-selected={selected}\n          aria-setsize={setsize}\n          aria-posinset={posinset}\n          aria-expanded={expanded}\n          aria-level={level + 1}\n          data-key={eventKey}\n          ref={refNode}\n          style={style}\n          {...{\n            onClick,\n            onKeypress: handleliEnterPress,\n            onContextmenu: onContextMenu,\n            onDblclick: onDoubleClick,\n            ...dragProps,\n          }}\n        >\n          <Indent showLine={showLine} prefixcls={prefixcls} level={level} isEnd={isEnd} />\n          {renderArrow()}\n          <span class={labelCls}>\n            {multiple ? renderCheckbox() : null}\n            {renderIcon()}\n            <span class={`${prefixcls}-label-text`}>{renderRealLabel()}</span>\n          </span>\n        </li>\n      );\n    };\n  },\n});\n\nexport default TreeNode;\n"],"names":["prefixcls","cssClasses","PREFIX_OPTION","propTypes","expanded","type","PropTypes","bool","default","undefined","selected","checked","halfChecked","active","disabled","loaded","loading","isLeaf","pos","string","icon","node","directory","keyword","treeNodeFilterProp","selectedKey","motionKey","oneOfType","array","isEnd","showLine","eventKey","String","label","data","Object","children","nodeInstance","emptyContent","filtered","Boolean","level","Number","empty","style","display","any","value","Array","defaultProps","vuePropsType","vuePropsMake","TreeNode","defineComponent","props","name","setup","useSlots","refNode","ref","context","useTreeContext","reactive","onSelect","e","onNodeSelect","debounceSelect","debounce","leading","trailing","onExpand","onNodeExpand","stopPropagation","stopImmediatePropagation","onCheck","isDisabled","onNodeCheck","handleCheckEnterPress","isEnterPress","onContextMenu","onNodeRightClick","onClick","expandAction","handleliEnterPress","onDoubleClick","onNodeDoubleClick","isFunction","onDragStart","onNodeDragStart","dataTransfer","setData","onDragEnter","onNodeDragEnter","preventDefault","onDragOver","onNodeDragOver","onDragLeave","onNodeDragLeave","onDragEnd","onNodeDragEnd","onDrop","onNodeDrop","getNodeChildren","loadData","hasChildren","length","treeDisabled","renderArrow","showIcon","_createVNode","Spin","IconTreeTriangleDown","renderSwitcher","renderCheckbox","Checkbox","cls","renderIcon","treeIcon","IconFile","IconFolderOpen","IconFolder","renderEmptyNode","wrapperCls","renderRealLabel","renderLabel","isString","getHighLightTextHTML","sourceString","searchWords","option","highlightTag","highlightClassName","rest","multiple","draggable","renderFullLabel","dragOverNodeKey","dropPosition","labelEllipsis","isEndNode","dragOver","dragOverGapTop","dragOverGapBottom","nodeCls","labelProps","className","expandIcon","checkStatus","expandStatus","searchWord","dragProps","onDblclick","onDragstart","onDragenter","onDragover","onDragleave","onDragend","customLabel","cloneVNode","isEmpty","cloneElement","get","labelCls","setsize","posinset","split","_mergeProps","onKeypress","onContextmenu","Indent"],"mappings":"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"}