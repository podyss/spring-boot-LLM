{"version":3,"file":"Demo.js","sources":["../../../src/components/tree/__stories__/Demo.stories.tsx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/vue3';\n\nimport TreeDemo from \"../__test__/TreeDemo\";\nimport TreeCheckDemo from \"../__test__/TreeCheckDemo\";\n\nconst meta = {\n  /* ðŸ‘‡ The title prop is optional.\n   * See https://storybook.js.org/docs/7.0/vue/configure/overview#configure-story-loading\n   * to learn how to generate automatic titles\n   */\n  title: 'Cå¯¼èˆªç±»/Tree',\n  render: (args: any) => ({\n    setup() {\n      return ()=>(<div style={{padding: '10px'}}>\n        {args.name === 'TreeDemo'?<TreeDemo/>:null}\n        {args.name === 'TreeCheckDemo'?<TreeCheckDemo/>:null}\n      </div>);\n    },\n  }),\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/7.0/react/configure/story-layout\n    layout: 'fullscreen',\n  },\n  // This component will have an automatically generated docsPage entry: https://storybook.js.org/docs/7.0/vue/writing-docs/docs-page\n  tags: ['autodocs'],\n} satisfies Meta<any>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n\nexport const Tree: Story = {\n  args: {\n    name: 'TreeDemo'\n  },\n};\nexport const TreeCheck: Story = {\n  args: {\n    name: 'TreeCheckDemo'\n  },\n};\n"],"names":["meta","title","render","args","setup","_createVNode","padding","name","TreeDemo","TreeCheckDemo","parameters","layout","tags","Tree","TreeCheck"],"mappings":";;;AAKA,MAAMA,IAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAKXC,OAAO;AAAA,EACPC,QAASC,CAAAA,OAAe;AAAA,IACtBC,QAAQ;AACN,aAAO,MAAAC,EAAA,OAAA;AAAA,QAAA,OAAiB;AAAA,UAACC,SAAS;AAAA,QAAM;AAAA,SACrCH,CAAAA,EAAKI,SAAS,aAAUF,EAAAG,GAAa,MAAA,IAAA,IAAA,MACrCL,EAAKI,SAAS,kBAAeF,EAAAI,GAAkB,MAAA,IAAA,IAAA,IAAI,CAC/C;AAAA,IACT;AAAA,EACF;AAAA,EACAC,YAAY;AAAA;AAAA,IAEVC,QAAQ;AAAA,EACT;AAAA;AAAA,EAEDC,MAAM,CAAC,UAAU;AACnB,GAMaC,IAAc;AAAA,EACzBV,MAAM;AAAA,IACJI,MAAM;AAAA,EACR;AACF,GACaO,IAAmB;AAAA,EAC9BX,MAAM;AAAA,IACJI,MAAM;AAAA,EACR;AACF;"}