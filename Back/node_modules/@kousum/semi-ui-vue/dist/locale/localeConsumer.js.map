{"version":3,"file":"localeConsumer.js","sources":["../../src/components/locale/localeConsumer.tsx"],"sourcesContent":["import { defineComponent, ref, h, Fragment, VNode, inject, Ref, ComponentObjectPropsOptions } from 'vue';\nimport { Locale as dateFns } from 'date-fns';\n\nimport { get } from 'lodash';\nimport LocaleContext from './context';\nimport Context, { ContextValue } from '../configProvider/context';\n\nimport DefaultLocale from './source/zh_CN';\nimport { Locale } from './interface';\nimport { CombineProps } from '../interface';\n\ntype ChildrenRender<T> = (componentLocal: T, localeCode: string, dateFnsLocale: dateFns) => VNode;\nexport interface LocaleConsumerProps<T> {\n  componentName: string;\n  // children?: ChildrenRender<T>;\n}\n\nfunction LocaleConsumerFunc<T>() {\n  const vuePropsType: CombineProps<LocaleConsumerProps<T>> = {\n    componentName: {\n      type: String,\n      default: '',\n      required: true\n    },\n    // children: [String, Boolean,Object,Array],\n  };\n  const vn = defineComponent({\n    props: { ...vuePropsType },\n    name: 'LocaleConsumer',\n    setup(props, { slots }) {\n      // const config = inject('ConfigContext', ref<ContextValue>({}))\n      function renderChildren(localeData: Locale, children: any) {\n        const { componentName } = props;\n        let locale = localeData;\n        if (!localeData?.code) {\n          locale = DefaultLocale;\n        }\n        /**\n         * dateFnsLocale is used to format the date into a local date\n         * example:\n         *  import { zhCN } from \"date-fns/locale\";\n         *  format(new Date(\"2021-04-29\"), \"yyyy-MM-dd EEEE\")\n         *      => '2021-04-29 Thursday' (默认 locale 为 en-US)\n         *  format(new Date('2021-04-29'), \"yyyy-MM-dd EEEE\", { locale: zhCN })\n         *      => '2021-04-29 星期四'\n         */\n        const defaultFnsLocale = get(DefaultLocale, 'dateFnsLocale');\n        const dateFnsLocale = get(locale, 'dateFnsLocale', defaultFnsLocale);\n        return children?.(locale[componentName], locale.code, dateFnsLocale);\n      }\n\n      return () => {\n        return (\n          <Context.Consumer>\n            {{\n              default: (locale: Ref<ContextValue>) => {\n                return (\n                  <LocaleContext.Consumer>\n                    {{\n                      default: (localeData) => {\n                        return renderChildren(locale.value?.locale || localeData.value, slots.default)\n                      },\n                    }}\n                  </LocaleContext.Consumer>\n                );\n              },\n            }}\n          </Context.Consumer>\n        );\n      };\n    },\n  });\n\n  return vn;\n}\n\nconst LocaleConsumer = LocaleConsumerFunc();\nexport default LocaleConsumer;\nexport { LocaleConsumerFunc };\n"],"names":["LocaleConsumerFunc","defineComponent","props","componentName","type","String","default","required","name","setup","slots","renderChildren","localeData","children","locale","code","DefaultLocale","defaultFnsLocale","get","dateFnsLocale","_createVNode","Context","Consumer","LocaleContext","value","LocaleConsumer"],"mappings":";;;;;AAiBA,SAASA,IAAwB;AAwD/B,SA/CWC,gBAAAA,EAAgB;AAAA,IACzBC,OAAO;AAAA,MAAE,GATgD;AAAA,QACzDC,eAAe;AAAA,UACbC,MAAMC;AAAAA,UACNC,SAAS;AAAA,UACTC,UAAU;AAAA,QACZ;AAAA;AAAA;IAI0B;AAAA,IAC1BC,MAAM;AAAA,IACNC,MAAMP,GAAO;AAAA,MAAEQ,OAAAA;AAAAA,IAAM,GAAG;AAEtB,eAASC,EAAeC,GAAoBC,GAAe;AACzD,cAAM;AAAA,UAAEV,eAAAA;AAAAA,QAAe,IAAGD;AAC1B,YAAIY,IAASF;AACb,QAAKA,KAAAA,QAAAA,EAAYG,SACfD,IAASE;AAWX,cAAMC,IAAmBC,EAAIF,GAAe,eAAe,GACrDG,IAAgBD,EAAIJ,GAAQ,iBAAiBG,CAAgB;AACnE,eAAOJ,KAAAA,gBAAAA,EAAWC,EAAOX,CAAa,GAAGW,EAAOC,MAAMI;AAAAA,MACxD;AAEA,aAAO,MACLC,EAAAC,EAAAC,UAAA,MAAA;AAAA,QAGMhB,SAAUQ,CAAAA,MACRM,EAAAG,EAAAD,UAAA,MAAA;AAAA,UAGMhB,SAAUM,CAAAA,MAAe;;AACvB,mBAAOD,IAAeG,IAAAA,EAAOU,UAAPV,gBAAAA,EAAcA,WAAUF,EAAWY,OAAOd,EAAMJ,OAAO;AAAA,UAC/E;AAAA,QAAC,CAAA;AAAA,MAIR,CAAA;AAAA,IAKX;AAAA,EACF,CAAC;AAGH;AAEA,MAAMmB,IAAiBzB,EAAkB;"}