import { defineComponent as j, useSlots as k, useAttrs as D, createVNode as u, mergeProps as f, isVNode as P } from "vue";
import x from "classnames";
import * as l from "../PropTypes";
import { vuePropsMake as F } from "../PropTypes";
import { cssClasses as I } from '@douyinfe/semi-foundation/lib/es/descriptions/constants';
import '@douyinfe/semi-foundation/lib/es/descriptions/descriptions.css';
import _ from '@douyinfe/semi-foundation/lib/es/utils/getDataAttr';
import { isPlainObject as h } from "lodash";
import w from "./descriptions-context";
import y from "./item";
import { default as ot } from "./item";
import { useBaseComponent as E } from "../_base/baseComponent";
import O from '@douyinfe/semi-foundation/lib/es/descriptions/foundation';
import { getFragmentChildren as L } from "../_utils";
function T(a) {
  return typeof a == "function" || Object.prototype.toString.call(a) === "[object Object]" && !P(a);
}
const p = I.PREFIX, A = {
  align: l.string,
  row: l.bool,
  size: l.string,
  style: l.object,
  className: l.string,
  data: l.array,
  layout: l.string,
  column: l.number
}, K = {
  align: "center",
  row: !1,
  size: "medium",
  data: [],
  layout: "vertical",
  column: 3
}, V = F(A, K), Z = /* @__PURE__ */ j({
  props: {
    ...V
  },
  name: "Descriptions",
  setup(a, {}) {
    const d = k(), b = D(), {
      adapter: v
    } = E(a, {});
    function C() {
      return {
        ...v(),
        getColumns: () => {
          var r;
          if ((r = a.data) != null && r.length)
            return a.data;
          const o = L(d);
          return o ? o.map((e) => {
            var t, n;
            return P(e) ? {
              //@ts-ignore
              value: (n = (t = e.children).default) == null ? void 0 : n.call(t),
              ...e.props
            } : [];
          }) : [];
        }
      };
    }
    const m = C();
    new O(m);
    function g(o) {
      const {
        column: r
      } = m.getProps();
      if (o.length === 0)
        return;
      const e = o[o.length - 1];
      if (e.span && !isNaN(e.span))
        return;
      let t = 0;
      o.forEach((n) => t += isNaN(n.span) ? 1 : n.span), t < r && (e.span = r - t + 1);
    }
    function S() {
      const {
        column: o
      } = m.getProps(), r = m.getColumns(), e = [], t = {
        totalSpan: 0,
        itemList: []
      };
      return r.forEach((n, c) => {
        let s = n.span || 1, i = o - t.totalSpan;
        s <= i ? (t.itemList.push(n), t.totalSpan = t.totalSpan + s) : (s > o && (s = o), g(t.itemList), e.push(t.itemList), t.totalSpan = s, t.itemList = [n]), c === r.length - 1 && (g(t.itemList), e.push(t.itemList));
      }), e;
    }
    const z = () => {
      const o = L(d), {
        layout: r,
        data: e
      } = a;
      return r === "horizontal" ? S().map((n, c) => u("tr", {
        key: c
      }, [n.map((s, i) => h(s) ? u(y, f({
        itemKey: s.key
      }, s, {
        key: c + "-" + i
      }), {
        default: () => [s.value]
      }) : null)])) : e && e.length ? e.map((t, n) => h(t) ? u(y, f({
        itemKey: t.key
      }, t, {
        key: n
      }), {
        default: () => [t.value]
      }) : null) : o;
    };
    return () => {
      let o;
      const {
        align: r,
        row: e,
        size: t,
        className: n,
        style: c,
        data: s,
        layout: i,
        ...N
      } = a, $ = x(p, n, {
        [`${p}-${r}`]: !e,
        [`${p}-double`]: e,
        [`${p}-double-${t}`]: e,
        [`${p}-horizontal`]: i === "horizontal",
        [`${p}-vertical`]: i === "vertical"
      });
      return u("div", f({
        class: $,
        style: c
      }, _({
        ...N,
        ...b
      })), [u("table", null, [u("tbody", null, [u(w.Provider, {
        value: {
          align: r,
          layout: i
        }
      }, T(o = z()) ? o : {
        default: () => [o]
      })])])]);
    };
  }
});
export {
  ot as DescriptionsItem,
  Z as default,
  V as vuePropsType
};
//# sourceMappingURL=index.js.map
