import '@douyinfe/semi-foundation/lib/es/descriptions/descriptions.css';
import { CSSProperties, VNode } from 'vue';
import { CombineProps, VueJsxNode } from '../interface';
export interface DescriptionsItemProps {
    hidden?: boolean;
    className?: string;
    children?: VNode[];
    style?: CSSProperties;
    itemKey?: VueJsxNode;
    span?: number;
}
export declare const vuePropsType: CombineProps<{
    itemKey?: any;
    hidden?: boolean;
    className?: string;
    style?: any;
    span?: number;
    value?: any;
}>;
declare const DescriptionsItem: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    itemKey: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    hidden: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    style: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    span: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
    value: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    itemKey: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    hidden: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    style: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    span: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
    value: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default DescriptionsItem;
