import { defineComponent as P, useSlots as D, useAttrs as N, createVNode as t, createTextVNode as T, Fragment as b, mergeProps as y } from "vue";
import * as e from "../PropTypes";
import { vuePropsMake as k } from "../PropTypes";
import { cssClasses as z } from '@douyinfe/semi-foundation/lib/es/descriptions/constants';
import '@douyinfe/semi-foundation/lib/es/descriptions/descriptions.css';
import f from '@douyinfe/semi-foundation/lib/es/utils/getDataAttr';
import { useDescriptionsContext as A } from "./context/Consumer";
const s = z.PREFIX, h = `${s}-key`, I = `${s}-value`, F = {
  itemKey: e.node,
  hidden: e.bool,
  className: e.string,
  style: e.object,
  span: e.number,
  value: e.node
}, K = k(F, {}), q = /* @__PURE__ */ P({
  props: {
    ...K
  },
  name: "DescriptionsItem",
  setup($, {}) {
    const o = D();
    N();
    const {
      context: g
    } = A();
    return () => {
      var d;
      const a = (d = o.default) == null ? void 0 : d.call(o), {
        itemKey: r,
        hidden: v,
        className: l,
        span: n,
        style: c,
        ...i
      } = $, {
        align: p,
        layout: C
      } = g.value;
      if (v)
        return null;
      const m = t("td", {
        class: `${s}-item`,
        colspan: n || 1
      }, [t("span", {
        class: h
      }, [r, T(":")]), t("span", {
        class: I
      }, [a])]), u = t(b, null, [t("th", {
        class: `${s}-item ${s}-item-th`
      }, [t("span", {
        class: h
      }, [r])]), t("td", {
        class: `${s}-item ${s}-item-td`,
        colspan: n ? n * 2 - 1 : 1
      }, [t("span", {
        class: I
      }, [a])])]), x = p === "plain" ? t("tr", y({
        class: l,
        style: c
      }, f(i)), [m]) : t("tr", y({
        class: l,
        style: c
      }, f(i)), [u]);
      return C === "horizontal" ? p === "plain" ? m : u : x;
    };
  }
});
export {
  q as default,
  K as vuePropsType
};
//# sourceMappingURL=item.js.map
