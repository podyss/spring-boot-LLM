import { defineComponent as g, useSlots as f, shallowRef as h, reactive as p, onMounted as v, watch as y, createVNode as o, mergeProps as C } from "vue";
import '@douyinfe/semi-foundation/lib/es/codeHighlight/codeHighlight.css';
import * as t from "../PropTypes";
import { vuePropsMake as P } from "../PropTypes";
import T from '@douyinfe/semi-foundation/lib/es/codeHighlight';
import { useBaseComponent as b } from "../_base/baseComponent";
import N from "classnames";
import { cssClasses as n } from '@douyinfe/semi-foundation/lib/es/codeHighlight/constants';
const R = {
  className: t.string,
  style: t.object,
  code: {
    type: t.string,
    required: !0
  },
  language: {
    type: t.string,
    required: !0
  },
  lineNumber: {
    type: t.bool,
    required: !0
  },
  defaultTheme: t.bool
}, q = {
  lineNumber: !0,
  defaultTheme: !0
}, w = P(R, q), D = /* @__PURE__ */ g({
  props: {
    ...w
  },
  name: "index",
  setup(e, {
    attrs: x
  }) {
    f();
    const a = h(), l = p({}), {
      adapter: u,
      getDataAttr: s
    } = b(e, l);
    function i() {
      return {
        ...u()
      };
    }
    const d = i(), r = new T(d);
    return v(() => {
      a.value && r.highlightCode(a.value, e.language);
    }), y([() => e.code, () => e.language], (F, [m, c], I) => {
      (a.value && m !== e.code || c !== e.language) && r.highlightCode(a.value, e.language);
    }), () => o("div", C({
      style: e.style,
      class: N(e.className, n.PREFIX, "semi-light-scrollbar", {
        [`${n.PREFIX}-defaultTheme`]: e.defaultTheme
      })
    }, s()), [o("pre", null, [o("code", {
      ref: a
    }, [e.code])])]);
  }
});
export {
  D as default,
  w as vuePropsType
};
//# sourceMappingURL=index.js.map
