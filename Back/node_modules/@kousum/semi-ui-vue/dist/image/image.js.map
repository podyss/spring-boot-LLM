{"version":3,"file":"image.js","sources":["../../src/components/image/image.tsx"],"sourcesContent":["import type { ImageProps, ImageStates } from './interface';\nimport * as PropTypes from '../PropTypes';\nimport { cssClasses } from '@douyinfe/semi-foundation/image/constants';\nimport cls from 'classnames';\nimport { IconUploadError, IconEyeOpened } from '@kousum/semi-icons-vue';\nimport PreviewInner from './previewInner';\nimport ImageFoundation, { ImageAdapter } from '@douyinfe/semi-foundation/image/imageFoundation';\nimport { LocaleConsumerFunc } from '../locale/localeConsumer';\nimport { Locale } from '../locale/interface';\nimport { isBoolean, isObject, isUndefined, omit } from 'lodash';\nimport Skeleton, { SkeletonImage } from '../skeleton';\nimport '@douyinfe/semi-foundation/image/image.scss';\nimport {\n  ComponentObjectPropsOptions,\n  defineComponent,\n  h,\n  onMounted,\n  PropType,\n  reactive,\n  ref,\n  useSlots,\n  watch,\n} from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { usePreviewContext } from './previewContext/Consumer';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport { CombineProps } from '../interface';\nimport { styleNum } from '../_utils';\n\nconst LocaleConsumer = LocaleConsumerFunc<Locale['Image']>();\nconst prefixCls = cssClasses.PREFIX;\n\nconst propTypes: CombineProps<ImageProps> = {\n  style: PropTypes.object,\n  className: PropTypes.string,\n  src: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  alt: PropTypes.string,\n  placeholder: PropTypes.node,\n  fallback: PropTypes.node as PropType<ImageProps['fallback']>,\n  preview: [PropTypes.bool, PropTypes.object] as PropType<ImageProps['preview']>,\n  onLoad: PropTypes.func as PropType<ImageProps['onLoad']>,\n  onError: PropTypes.func as PropType<ImageProps['onError']>,\n  onClick: PropTypes.func as PropType<ImageProps['onClick']>,\n  crossOrigin: PropTypes.string as PropType<ImageProps['crossOrigin']>,\n  imageID: PropTypes.number,\n  maxZoom: PropTypes.number,\n  minZoom: PropTypes.number,\n  setDownloadName: PropTypes.func as PropType<ImageProps['setDownloadName']>,\n  imgStyle: PropTypes.object,\n  imgCls: PropTypes.string,\n};\n\nconst defaultProps = {\n  preview: true,\n};\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst Image = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Image',\n  setup(props, {}) {\n    const slots = useSlots();\n\n    const { context } = usePreviewContext();\n\n    const state = reactive<ImageStates>({\n      src: '',\n      loadStatus: 'loading',\n      previewVisible: false,\n    });\n\n    const { adapter: adapterInject } = useBaseComponent<ImageProps>(props, state);\n\n    function adapter_(): ImageAdapter<ImageProps, ImageStates> {\n      return {\n        ...adapterInject<ImageProps, ImageStates>(),\n        getIsInGroup: () => isInGroup(),\n        // getContexts: () => context.value,\n        // getContext: key => { // eslint-disable-line\n        //   if (context.value && key) {\n        //     // @ts-ignore\n        //     return context.value[key];\n        //   }\n        // }\n      };\n    }\n\n    const adapter = adapter_();\n    const foundation = new ImageFoundation(adapter);\n\n    const imgRef = ref();\n\n    function getDerivedStateFromProps(props: ImageProps, state: ImageStates) {\n      const willUpdateStates: Partial<ImageStates> = {};\n\n      if (props.src !== state.src) {\n        willUpdateStates.src = props.src;\n        willUpdateStates.loadStatus = 'loading';\n      }\n\n      if (isObject(props.preview)) {\n        const { visible } = props.preview;\n        if (isBoolean(visible)) {\n          willUpdateStates.previewVisible = visible;\n        }\n      }\n      return willUpdateStates;\n    }\n\n    watch(\n      [() => props.src, () => props.preview],\n      () => {\n        const newState = getDerivedStateFromProps({ ...props }, { ...state });\n        if (newState) {\n          Object.keys(newState).forEach((key) => {\n            state[key] = newState[key];\n          });\n        }\n      },\n      { immediate: true, deep: true }\n    );\n\n    function isInGroup() {\n      return Boolean(context && context.value.isGroup);\n    }\n\n    function isLazyLoad() {\n      if (context) {\n        return context.value.lazyLoad;\n      }\n      return false;\n    }\n\n    const handleClick = (e) => {\n      foundation.handleClick(e);\n    };\n\n    const handleLoaded = (e) => {\n      foundation.handleLoaded(e);\n    };\n\n    const handleError = (e) => {\n      foundation.handleError(e);\n    };\n\n    const handlePreviewVisibleChange = (visible: boolean) => {\n      foundation.handlePreviewVisibleChange(visible);\n    };\n\n    const renderDefaultLoading = () => {\n      const { width, height } = props;\n      return <SkeletonImage style={{ width, height }} />;\n    };\n\n    const renderDefaultError = () => {\n      const prefixClsName = `${prefixCls}-status`;\n      return (\n        <div class={prefixClsName}>\n          <IconUploadError size={'extra-large'} />\n        </div>\n      );\n    };\n\n    const renderLoad = () => {\n      const prefixClsName = `${prefixCls}-status`;\n      const { placeholder } = props;\n      return placeholder ? <div class={prefixClsName}>{placeholder}</div> : renderDefaultLoading();\n    };\n\n    const renderError = () => {\n      const { fallback } = props;\n      const prefixClsName = `${prefixCls}-status`;\n      const fallbackNode =\n        typeof fallback === 'string' ? (\n          <img style={{ width: '100%', height: '100%' }} src={fallback} alt=\"fallback\" />\n        ) : (\n          fallback\n        );\n      return fallback ? <div class={prefixClsName}>{fallbackNode}</div> : renderDefaultError();\n    };\n\n    const renderExtra = () => {\n      const { loadStatus } = state;\n      return (\n        <div class={`${prefixCls}-overlay`}>\n          {loadStatus === 'error' && renderError()}\n          {loadStatus === 'loading' && renderLoad()}\n        </div>\n      );\n    };\n\n    const getLocalTextByKey = (key: string) => (\n      <LocaleConsumer componentName=\"Image\">{(locale: Locale['Image']) => locale[key]}</LocaleConsumer>\n    );\n\n    const renderMask = () => (\n      <div class={`${prefixCls}-mask`}>\n        <div class={`${prefixCls}-mask-info`}>\n          <IconEyeOpened size=\"extra-large\" />\n          <span class={`${prefixCls}-mask-info-text`}>{getLocalTextByKey('preview')}</span>\n        </div>\n      </div>\n    );\n\n    return () => {\n      const { src, loadStatus, previewVisible } = state;\n      const {\n        src: picSrc,\n        width: width_,\n        height: height_,\n        alt,\n        style,\n        className,\n        crossOrigin,\n        preview,\n        fallback,\n        placeholder,\n        imageID,\n        setDownloadName,\n        imgCls,\n        imgStyle,\n        ...restProps\n      } = props;\n      const {width, height} = {width: styleNum(width_), height: styleNum(height_)}\n      const outerStyle = Object.assign({ width, height }, style);\n      const outerCls = cls(prefixCls, className);\n      const canPreview = loadStatus === 'success' && preview && !isInGroup();\n      const showPreviewCursor = preview && loadStatus === 'success';\n      const previewSrc = typeof preview !== 'boolean'? preview.src ?? src : src;\n      const previewProps =\n        typeof preview !== 'boolean' && canPreview\n          ? {\n              ...omit(preview, ['className', 'style', 'previewCls', 'previewStyle']),\n              className: preview?.previewCls,\n              style: preview?.previewStyle,\n            }\n          : ({} as any);\n      return (\n        // eslint-disable jsx-a11y/no-static-element-interactions\n        // eslint-disable jsx-a11y/click-events-have-key-events\n        <div style={outerStyle} class={outerCls} onClick={handleClick}>\n          <img\n            ref={imgRef}\n            {...restProps}\n            src={isInGroup() && isLazyLoad() ? undefined : src}\n            data-src={src}\n            alt={alt}\n            style={imgStyle}\n            class={cls(`${prefixCls}-img`, {\n              [`${prefixCls}-img-preview`]: showPreviewCursor,\n              [`${prefixCls}-img-error`]: loadStatus === 'error',\n              [imgCls]: Boolean(imgCls),\n            })}\n            width={width}\n            height={height}\n            crossorigin={crossOrigin}\n            onError={handleError}\n            onLoad={handleLoaded}\n          />\n          {loadStatus !== 'success' && renderExtra()}\n          {canPreview && (\n            <PreviewInner\n              {...previewProps}\n              src={previewSrc}\n              visible={previewVisible}\n              onVisibleChange={handlePreviewVisibleChange}\n              crossOrigin={!isUndefined(crossOrigin) ? crossOrigin : previewProps?.crossOrigin}\n              setDownloadName={setDownloadName}\n            />\n          )}\n        </div>\n      );\n    };\n  },\n});\n\n// @ts-ignore\nImage.isSemiImage = true;\n\nexport default Image;\n"],"names":["LocaleConsumerFunc","prefixCls","cssClasses","PREFIX","propTypes","style","PropTypes","object","className","string","src","width","oneOfType","number","height","alt","placeholder","node","fallback","preview","bool","onLoad","func","onError","onClick","crossOrigin","imageID","maxZoom","minZoom","setDownloadName","imgStyle","imgCls","defaultProps","vuePropsType","vuePropsMake","Image","defineComponent","props","name","setup","useSlots","context","usePreviewContext","state","reactive","loadStatus","previewVisible","adapter","adapterInject","useBaseComponent","adapter_","getIsInGroup","isInGroup","foundation","ImageFoundation","imgRef","ref","getDerivedStateFromProps","willUpdateStates","isObject","visible","isBoolean","watch","newState","Object","keys","forEach","key","immediate","deep","Boolean","value","isGroup","isLazyLoad","lazyLoad","handleClick","e","handleLoaded","handleError","handlePreviewVisibleChange","renderDefaultLoading","_createVNode","SkeletonImage","renderDefaultError","prefixClsName","IconUploadError","renderLoad","renderError","fallbackNode","renderExtra","picSrc","width_","height_","restProps","styleNum","outerStyle","assign","outerCls","cls","canPreview","showPreviewCursor","previewSrc","previewProps","omit","previewCls","previewStyle","_mergeProps","undefined","PreviewInner","isUndefined","isSemiImage"],"mappings":"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"}