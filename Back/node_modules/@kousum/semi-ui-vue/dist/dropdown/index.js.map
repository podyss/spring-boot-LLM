{"version":3,"file":"index.js","sources":["../../src/components/dropdown/index.tsx"],"sourcesContent":["import {\n  defineComponent,\n  ref,\n  h,\n  onActivated,\n  Fragment,\n  StyleValue,\n  CSSProperties,\n  reactive,\n  isVNode,\n  cloneVNode,\n  inject,\n  provide,\n  ComponentObjectPropsOptions,\n  PropType,\n} from 'vue';\nimport classnames from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport { cssClasses, strings, numbers } from '@douyinfe/semi-foundation/dropdown/constants';\n\nimport { useBaseComponent, useHasInProps } from '../_base/baseComponent';\n\nimport Tooltip, { type TooltipProps, type Trigger, vuePropsType as tooltipPropTypes } from '../tooltip';\n\nimport { numbers as tooltipNumbers } from '@douyinfe/semi-foundation/tooltip/constants';\nimport Foundation from '@douyinfe/semi-foundation/dropdown/foundation';\n\nimport DropdownMenu from './dropdownMenu';\nimport DropdownItem, { DropdownItemProps } from './dropdownItem';\nimport DropdownDivider, { DropdownDividerProps } from './dropdownDivider';\nimport DropdownTitle, { DropdownTitleProps } from './dropdownTitle';\n\nimport '@douyinfe/semi-foundation/dropdown/dropdown.scss';\nimport { noop, get } from 'lodash';\nimport { Motion } from '../_base/base';\nimport { ArrayElement } from '@douyinfe/semi-foundation/utils/type';\nimport { vuePropsMake } from '../PropTypes';\nimport { useDropdownContext } from './context/Consumer';\nimport { DropdownContext } from './context';\nimport { CombineProps } from '../interface';\n\nconst positionSet = strings.POSITION_SET;\nconst triggerSet = strings.TRIGGER_SET;\n\nexport type { DropdownDividerProps } from './dropdownDivider';\nexport type { DropdownItemProps, Type } from './dropdownItem';\nexport type { DropdownMenuProps } from './dropdownMenu';\nexport type { DropdownTitleProps } from './dropdownTitle';\n\nexport interface DropDownMenuItemItem extends DropdownItemProps {\n  node: 'item';\n  name?: string;\n}\nexport interface DropDownMenuItemDivider extends DropdownDividerProps {\n  node: 'divider';\n}\nexport interface DropDownMenuItemTitle extends DropdownTitleProps {\n  node: 'title';\n  name?: string;\n}\n\nexport type DropDownMenuItem = DropDownMenuItemItem | DropDownMenuItemDivider | DropDownMenuItemTitle;\n\nexport interface DropdownProps extends TooltipProps {\n  //\n  onFilter?: any;\n  onFilterDropdownVisibleChange?: any;\n  onSelect?: any;\n  onHeaderCell?: any;\n  onGroupedRow?: any;\n\n  render?: any;\n  visible?: boolean;\n  position?: ArrayElement<typeof strings.POSITION_SET>;\n  getPopupContainer?: () => HTMLElement;\n  mouseEnterDelay?: number;\n  mouseLeaveDelay?: number;\n  menu?: DropDownMenuItem[];\n  trigger?: Trigger;\n  zIndex?: number;\n  motion?: Motion;\n  className?: string;\n  contentClassName?: string | any[];\n  style?: CSSProperties;\n  onVisibleChange?: (visible: boolean) => void;\n  rePosKey?: string | number;\n  showTick?: boolean;\n  prefixCls?: string;\n  spacing?: number;\n\n  closeOnEsc?: TooltipProps['closeOnEsc'];\n  onEscKeyDown?: TooltipProps['onEscKeyDown'];\n\n  name?: string;\n}\n\ninterface DropdownState {\n  popVisible: boolean;\n}\nconst propTypes: CombineProps<DropdownProps> = {\n  ...tooltipPropTypes,\n  onFilter: PropTypes.func,\n  onFilterDropdownVisibleChange: PropTypes.func,\n  onSelect: PropTypes.func,\n  onHeaderCell: PropTypes.func,\n  onGroupedRow: PropTypes.func,\n\n  render: [PropTypes.node, PropTypes.func, PropTypes.object] as PropType<DropdownProps['render']>,\n  visible: PropTypes.bool,\n  position: PropTypes.string as PropType<DropdownProps['position']>,\n  getPopupContainer: PropTypes.func as PropType<DropdownProps['getPopupContainer']>,\n  mouseEnterDelay: PropTypes.number,\n  mouseLeaveDelay: PropTypes.number,\n  trigger: PropTypes.string as PropType<DropdownProps['trigger']>,\n  zIndex: PropTypes.number,\n  motion: PropTypes.oneOfType([PropTypes.bool, PropTypes.func, PropTypes.object]),\n  className: PropTypes.string,\n  contentClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  style: PropTypes.object,\n  onVisibleChange: PropTypes.func as PropType<DropdownProps['onVisibleChange']>,\n  rePosKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  showTick: PropTypes.bool,\n  prefixCls: PropTypes.string,\n  spacing: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  menu: PropTypes.array,\n  name: String,\n};\nexport const DropdownVuePropsType = propTypes;\nconst defaultProps = {\n  onVisibleChange: noop,\n  prefixCls: cssClasses.PREFIX,\n  zIndex: tooltipNumbers.DEFAULT_Z_INDEX,\n  motion: true,\n  trigger: 'hover',\n  position: 'bottom',\n  mouseLeaveDelay: strings.DEFAULT_LEAVE_DELAY,\n  showTick: false,\n  closeOnEsc: true,\n  onEscKeyDown: noop,\n};\n\nexport const vuePropsType = vuePropsMake<DropdownProps>(propTypes, defaultProps);\n\nconst Dropdown = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Dropdown',\n  setup(props, { slots, expose }) {\n    const { getProps } = useHasInProps();\n    const state = reactive({\n      popVisible: props.visible,\n    });\n    const tooltipRef = ref();\n    const { adapter: adapterInject } = useBaseComponent<TooltipProps>(props, state);\n\n    const adapterFunc = function () {\n      return {\n        ...adapterInject(),\n        setPopVisible: (popVisible: boolean) => (state.popVisible = popVisible),\n        notifyVisibleChange: (visible: boolean) => props.onVisibleChange?.(visible),\n        getPopupId: () => tooltipRef.value.getPopupId(),\n      };\n    };\n    const adapter = adapterFunc();\n    const foundation = new Foundation(adapter);\n\n    const handleVisibleChange = (visible: boolean) => {\n      foundation.handleVisibleChange(visible);\n    };\n\n    const { context } = useDropdownContext();\n    const { level = 0 } = context.value;\n\n    function renderContent() {\n      const { render, menu, contentClassName, style, showTick, prefixCls, trigger } = props;\n      const className = classnames(prefixCls, contentClassName);\n      const contextValue = { showTick, level: level + 1, trigger };\n      let content: any = null;\n      if (isVNode(render)) {\n        content = render;\n      } else if (Array.isArray(menu)) {\n        content = renderMenu();\n      }\n      return (\n        <DropdownContext.Provider value={contextValue}>\n          <div class={className} style={style}>\n            <div class={`${prefixCls}-content`} x-semi-prop=\"render\">\n              {content}\n            </div>\n          </div>\n        </DropdownContext.Provider>\n      );\n    }\n\n    function renderMenu() {\n      const { menu } = props;\n      const content = menu.map((m, index) => {\n        switch (m.node) {\n          case 'title': {\n            const { name, node, ...rest } = m;\n            return (\n              <DropdownTitle {...rest} key={node + name + index}>\n                {{\n                  default: () => name,\n                }}\n              </DropdownTitle>\n            );\n          }\n\n          case 'item': {\n            const { node, name, ...rest } = m;\n            return (\n              <DropdownItem {...rest} key={node + name + index}>\n                {{\n                  default: () => name,\n                }}\n              </DropdownItem>\n            );\n          }\n\n          case 'divider': {\n            return <DropdownDivider key={m.node + index} />;\n          }\n\n          default:\n            return null;\n        }\n      });\n      return <DropdownMenu>{{ default: () => content }}</DropdownMenu>;\n    }\n\n    function renderPopCard() {\n      const { render, contentClassName, style, showTick, prefixCls } = props;\n      const className = classnames(prefixCls, contentClassName);\n      const { level = 0 } = context.value;\n      const contextValue = { showTick, level: level + 1 };\n      return (\n        <DropdownContext.Provider value={contextValue}>\n          <div class={className} style={style}>\n            <div class={`${prefixCls}-content`}>{render}</div>\n          </div>\n        </DropdownContext.Provider>\n      );\n    }\n\n    expose({\n      renderPopCard,\n    });\n\n    return () => {\n      const {\n        position,\n        trigger,\n        onVisibleChange,\n        zIndex,\n        className,\n        motion,\n        style,\n        prefixCls,\n\n        render,\n        menu,\n        showTick,\n        //\n        onFilter,\n        onFilterDropdownVisibleChange,\n        onSelect,\n        onHeaderCell,\n        onGroupedRow,\n        name,\n        contentClassName,\n        ...attr\n      } = getProps(props);\n      let { spacing } = props;\n      const { level } = context.value;\n      const { popVisible } = state;\n      const pop = renderContent();\n\n      if (level > 0) {\n        spacing = typeof spacing === 'number' ? spacing : numbers.NESTED_SPACING;\n      } else if (spacing === null || typeof spacing === 'undefined') {\n        spacing = numbers.SPACING;\n      }\n\n      let children: any = slots.default ? slots.default()[0] : null;\n\n      return (\n        <Tooltip\n          zIndex={zIndex}\n          motion={motion}\n          content={pop}\n          className={className}\n          prefixCls={prefixCls}\n          spacing={spacing}\n          position={position}\n          trigger={trigger}\n          onVisibleChange={handleVisibleChange}\n          showArrow={false}\n          returnFocusOnClose={true}\n          ref={tooltipRef}\n          {...attr}\n        >\n          {cloneVNode(children, {\n            className: classnames(get(children, 'props.class'), {\n              [`${prefixCls}-showing`]: popVisible,\n            }),\n            'aria-haspopup': true,\n            'aria-expanded': popVisible,\n            onKeyDown: (e: KeyboardEvent) => {\n              foundation.handleKeyDown(e);\n              const childrenKeyDown: (e: KeyboardEvent) => void = get(children, 'props.onKeyDown');\n              childrenKeyDown && childrenKeyDown(e);\n            },\n          })}\n        </Tooltip>\n      );\n    };\n  },\n});\nexport type DropdownType = typeof Dropdown & {\n  Menu: typeof DropdownMenu,\n  Item: typeof DropdownItem,\n  Divider: typeof DropdownDivider,\n  Title: typeof DropdownTitle,\n}\nconst BaseDropdown =  Dropdown as DropdownType\nBaseDropdown.Menu = DropdownMenu\nBaseDropdown.Item = DropdownItem\nBaseDropdown.Divider = DropdownDivider\nBaseDropdown.Title = DropdownTitle\nexport { DropdownMenu, DropdownItem, DropdownDivider, DropdownTitle, Dropdown };\nexport default BaseDropdown;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","strings","POSITION_SET","TRIGGER_SET","propTypes","tooltipPropTypes","onFilter","PropTypes","func","onFilterDropdownVisibleChange","onSelect","onHeaderCell","onGroupedRow","render","node","object","visible","bool","position","string","getPopupContainer","mouseEnterDelay","number","mouseLeaveDelay","trigger","zIndex","motion","oneOfType","className","contentClassName","array","style","onVisibleChange","rePosKey","showTick","prefixCls","spacing","menu","name","String","DropdownVuePropsType","defaultProps","noop","cssClasses","PREFIX","tooltipNumbers","DEFAULT_Z_INDEX","DEFAULT_LEAVE_DELAY","closeOnEsc","onEscKeyDown","vuePropsType","vuePropsMake","Dropdown","defineComponent","props","setup","slots","expose","getProps","useHasInProps","state","reactive","popVisible","tooltipRef","ref","adapter","adapterInject","useBaseComponent","setPopVisible","notifyVisibleChange","getPopupId","value","foundation","Foundation","handleVisibleChange","context","useDropdownContext","level","renderContent","classnames","contextValue","content","isVNode","Array","isArray","renderMenu","_createVNode","DropdownContext","Provider","default","map","m","index","rest","DropdownTitle","_mergeProps","DropdownItem","DropdownDivider","DropdownMenu","renderPopCard","_slot","attr","pop","numbers","NESTED_SPACING","SPACING","children","Tooltip","cloneVNode","get","onKeyDown","e","handleKeyDown","childrenKeyDown","BaseDropdown","Menu","Item","Divider","Title"],"mappings":"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"}