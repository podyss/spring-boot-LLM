{"version":3,"file":"index.js","sources":["../../src/components/select/index.tsx"],"sourcesContent":["import {\n  ComponentObjectPropsOptions,\n  CSSProperties,\n  defineComponent,\n  Fragment,\n  h,\n  nextTick,\n  onMounted,\n  onUnmounted,\n  PropType,\n  reactive,\n  ref,\n  shallowRef,\n  toRaw,\n  useSlots,\n  VNode,\n  watch,\n} from 'vue';\nimport * as PropTypes from '../PropTypes';\nimport { vuePropsMake } from '../PropTypes';\nimport { FixedSizeList as List } from '@kousum/vue3-window';\nimport cls from 'classnames';\nimport SelectFoundation, { SelectAdapter } from '@douyinfe/semi-foundation/select/foundation';\nimport { cssClasses, strings, numbers } from '@douyinfe/semi-foundation/select/constants';\nimport { getProps, useBaseComponent, useHasInProps, type ValidateStatus } from '../_base/baseComponent';\nimport { get, isEqual, isFunction, isNumber, isString, noop } from 'lodash';\nimport Tag from '../tag';\nimport TagGroup from '../tag/group';\nimport OverflowList from '../overflowList/index';\nimport Space from '../space/index';\nimport Text from '../typography/text';\nimport { LocaleConsumerFunc } from '../locale/localeConsumer';\nimport Popover from '../popover/index';\nimport type { PopoverProps } from '../popover';\nimport { numbers as popoverNumbers } from '@douyinfe/semi-foundation/popover/constants';\nimport Event from '@douyinfe/semi-foundation/utils/Event';\nimport { getOptionsFromGroup } from './utils';\nimport VirtualRow from './virtualRow';\n\nimport Input, { InputProps } from '../input';\nimport type { OptionProps } from './option';\nimport Option from './option';\nimport OptionGroup from './optionGroup';\nimport Spin from '../spin';\nimport Trigger from '../trigger';\nimport { IconChevronDown, IconClear, IconSearch } from '@kousum/semi-icons-vue';\nimport { getActiveElement, getFocusableElements, getFragmentChildren, isSemiIcon } from '../_utils';\nimport { Subtract } from 'utility-types';\n\nimport warning from '@douyinfe/semi-foundation/utils/warning';\nimport { getUuidShort } from '@douyinfe/semi-foundation/utils/uuid';\n\nimport '@douyinfe/semi-foundation/select/select.scss';\nimport { Locale } from '../locale/interface';\nimport type { Position } from '@douyinfe/semi-foundation/tooltip/foundation';\nimport type { TooltipProps } from '../tooltip';\nimport { AriaAttributes } from '../AriaAttributes';\nimport { CombineProps, VueJsxNode } from '../interface';\n\nexport type { OptionProps } from './option';\nexport type { OptionGroupProps } from './optionGroup';\nexport type { VirtualRowProps } from './virtualRow';\n\nconst prefixcls = cssClasses.PREFIX;\nconst LocaleConsumer = LocaleConsumerFunc<Locale['Select']>();\nconst key = 0;\n\ntype ExcludeInputType = {\n  value?: InputProps['value'];\n  onFocus?: InputProps['onFocus'];\n  onChange?: InputProps['onChange'];\n};\n\ntype OnChangeValueType = string | number | Record<string, any>;\n\nexport interface optionRenderProps {\n  key?: any;\n  label?: string | VNode | VNode[] | number;\n  value?: string | number;\n  style?: CSSProperties;\n  className?: string;\n  selected?: boolean;\n  focused?: boolean;\n  show?: boolean;\n  disabled?: boolean;\n  onMouseEnter?: (e: MouseEvent) => any;\n  onClick?: (e: MouseEvent) => any;\n\n  [x: string]: any;\n}\n\nexport interface SelectedItemProps {\n  value: OptionProps['value'];\n  label: OptionProps['label'];\n  _show?: boolean;\n  _selected: boolean;\n  _scrollIndex?: number;\n}\n\nexport interface TriggerRenderProps {\n  value: SelectedItemProps[];\n  inputValue: string;\n  onSearch: (inputValue: string) => void;\n  onClear: () => void;\n  onRemove: (option: OptionProps) => void;\n  disabled: boolean;\n  placeholder: string;\n  componentProps: Record<string, any>;\n}\n\nexport interface selectMethod {\n  clearInput?: () => void;\n  selectAll?: () => void;\n  deselectAll?: () => void;\n  focus?: () => void;\n  close?: () => void;\n  open?: () => void;\n}\n\nexport type SelectSize = 'small' | 'large' | 'default';\n\nexport interface virtualListProps {\n  itemSize?: number;\n  height?: number;\n  width?: string | number;\n}\n\nexport type RenderSingleSelectedItemFn = (optionNode: Record<string, any>) => VNode;\nexport type RenderMultipleSelectedItemFn = (\n  optionNode: Record<string, any>,\n  multipleProps: { index: number; disabled: boolean; onClose: (tagContent: VNode, e: MouseEvent) => void }\n) => { isRenderInTag: boolean; content: VNode };\n\nexport type RenderSelectedItemFn = RenderSingleSelectedItemFn | RenderMultipleSelectedItemFn;\n\nexport type SelectProps = {\n  'aria-describedby'?: AriaAttributes['aria-describedby'];\n  'aria-errormessage'?: AriaAttributes['aria-errormessage'];\n  'aria-invalid'?: AriaAttributes['aria-invalid'];\n  'aria-label'?: AriaAttributes['aria-label'];\n  'aria-labelledby'?: AriaAttributes['aria-labelledby'];\n  'aria-required'?: AriaAttributes['aria-required'];\n  id?: string;\n  autoFocus?: boolean;\n  autoClearSearchValue?: boolean;\n  arrowIcon?: VueJsxNode;\n  borderless?: boolean;\n  clearIcon?: VueJsxNode;\n  defaultValue?: string | number | any[] | Record<string, any>;\n  value?: string | number | any[] | Record<string, any>;\n  placeholder?: VNode | string;\n  onChange?: (value: SelectProps['value']) => void;\n  multiple?: boolean;\n  filter?: boolean | ((inpueValue: string, option: OptionProps) => boolean);\n  max?: number;\n  maxTagCount?: number;\n  maxHeight?: string | number;\n  style?: CSSProperties;\n  className?: string;\n  size?: SelectSize;\n  disabled?: boolean;\n  emptyContent?: VNode;\n  expandRestTagsOnClick?: boolean;\n  onDropdownVisibleChange?: (visible: boolean) => void;\n  zIndex?: number;\n  position?: Position;\n  onSearch?: (value: string, event: KeyboardEvent | MouseEvent) => void;\n  dropdownClassName?: string;\n  dropdownStyle?: CSSProperties;\n  dropdownMargin?: PopoverProps['margin'];\n  ellipsisTrigger?: boolean;\n  outerTopSlot?: VNode;\n  innerTopSlot?: VNode;\n  outerBottomSlot?: VNode;\n  innerBottomSlot?: VNode;\n  optionList?: OptionProps[];\n  dropdownMatchSelectWidth?: boolean;\n  loading?: boolean;\n  defaultOpen?: boolean;\n  validateStatus?: ValidateStatus;\n  defaultActiveFirstOption?: boolean;\n  onChangeWithObject?: boolean;\n  suffix?: VNode | string;\n  searchPosition?: string;\n  searchPlaceholder?: string;\n  prefix?: VNode | string;\n  insetLabel?: VNode | string;\n  insetLabelId?: string;\n  inputProps?: Subtract<InputProps, ExcludeInputType>;\n  showClear?: boolean;\n  showArrow?: boolean;\n  renderSelectedItem?: RenderSelectedItemFn;\n  renderCreateItem?: (inputValue: OptionProps['value'], focus: boolean, style?: CSSProperties) => VNode;\n  renderOptionItem?: (props: optionRenderProps) => VNode;\n  onMouseEnter?: (e: MouseEvent) => any;\n  onMouseLeave?: (e: MouseEvent) => any;\n  clickToHide?: boolean;\n  onExceed?: (option: OptionProps) => void;\n  onCreate?: (option: OptionProps) => void;\n  remote?: boolean;\n  onDeselect?: (value: SelectProps['value'], option: Record<string, any>) => void;\n  onSelect?: (value: SelectProps['value'], option: Record<string, any>) => void;\n  allowCreate?: boolean;\n  triggerRender?: (props?: TriggerRenderProps) => VNode;\n  onClear?: () => void;\n  virtualize?: virtualListProps;\n  onFocus?: (e: FocusEvent) => void;\n  onBlur?: (e: FocusEvent) => void;\n  onListScroll?: (e: Event) => void;\n  preventScroll?: boolean;\n  showRestTagsPopover?: boolean;\n  restTagsPopoverProps?: PopoverProps;\n  isInInputGroup?: boolean;\n} & Pick<\n  TooltipProps,\n  | 'spacing'\n  | 'getPopupContainer'\n  | 'motion'\n  | 'autoAdjustOverflow'\n  | 'mouseLeaveDelay'\n  | 'mouseEnterDelay'\n  | 'stopPropagation'\n>;\n\nexport interface SelectState {\n  isOpen: boolean;\n  isFocus: boolean;\n  options: Array<OptionProps>;\n  selections: Map<OptionProps['label'], any>; // A collection of all currently selected items, k: label, v: {value,... otherProps}\n  dropdownMinWidth: number;\n  optionKey: number;\n  inputValue: string;\n  showInput: boolean;\n  focusIndex: number;\n  keyboardEventSet: any; // {}\n  optionGroups: Array<any>;\n  isHovering: boolean;\n  isFocusInContainer: boolean;\n  isFullTags: boolean;\n  // The number of really-hidden items when maxTagCount is set\n  overflowItemCount: number;\n}\n\n// Notes: Use the label of the option as the identifier, that is, the option in Select, the value is allowed to be the same, but the label must be unique\n\nconst propTypes: CombineProps<SelectProps> = {\n  'aria-describedby': PropTypes.string,\n  'aria-errormessage': PropTypes.string,\n  'aria-invalid': PropTypes.bool,\n  'aria-labelledby': PropTypes.string,\n  'aria-label': PropTypes.string,\n  'aria-required': PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  autoClearSearchValue: PropTypes.bool,\n  borderless: PropTypes.bool,\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array, PropTypes.object]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array, PropTypes.object]),\n  placeholder: PropTypes.node as PropType<SelectProps['placeholder']>,\n  onChange: PropTypes.func as PropType<SelectProps['onChange']>,\n  multiple: PropTypes.bool,\n  // Whether to turn on the input box filtering function, when it is a function, it represents a custom filtering function\n  filter: [PropTypes.func, PropTypes.bool] as PropType<SelectProps['filter']>,\n  // How many tags can you choose?\n  max: PropTypes.number,\n  // How many tabs are displayed at most, and the rest are displayed in + N\n  maxTagCount: PropTypes.number,\n  maxHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.object,\n  className: PropTypes.string,\n  size: String as PropType<SelectProps['size']>,\n  disabled: PropTypes.bool,\n  emptyContent: PropTypes.node as PropType<SelectProps['emptyContent']>,\n  onDropdownVisibleChange: PropTypes.func as PropType<SelectProps['onDropdownVisibleChange']>,\n  zIndex: PropTypes.number,\n  position: String as PropType<SelectProps['position']>,\n  onSearch: PropTypes.func as PropType<SelectProps['onSearch']>,\n  getPopupContainer: PropTypes.func as PropType<SelectProps['getPopupContainer']>,\n  dropdownClassName: PropTypes.string,\n  dropdownStyle: PropTypes.object,\n  outerTopSlot: PropTypes.node as PropType<SelectProps['outerTopSlot']>,\n  innerTopSlot: PropTypes.node as PropType<SelectProps['innerTopSlot']>,\n  inputProps: PropTypes.object,\n  outerBottomSlot: PropTypes.node as PropType<SelectProps['outerBottomSlot']>,\n  innerBottomSlot: PropTypes.node as PropType<SelectProps['innerBottomSlot']>, // Options slot\n  optionList: PropTypes.array as PropType<SelectProps['optionList']>, // O\n  dropdownMatchSelectWidth: PropTypes.bool,\n  loading: PropTypes.bool,\n  defaultOpen: PropTypes.bool,\n  validateStatus: String as PropType<SelectProps['validateStatus']>,\n  defaultActiveFirstOption: PropTypes.bool,\n  triggerRender: PropTypes.func as PropType<SelectProps['triggerRender']>,\n  stopPropagation: PropTypes.bool,\n  // motion doesn't need to be exposed\n  motion: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]),\n\n  onChangeWithObject: PropTypes.bool,\n\n  suffix: PropTypes.node as PropType<SelectProps['suffix']>,\n  prefix: PropTypes.node as PropType<SelectProps['prefix']>,\n  insetLabel: PropTypes.node as PropType<SelectProps['insetLabel']>,\n  insetLabelId: PropTypes.string,\n  showClear: PropTypes.bool,\n  showArrow: PropTypes.bool,\n\n  renderSelectedItem: PropTypes.func as PropType<SelectProps['renderSelectedItem']>,\n\n  allowCreate: PropTypes.bool,\n  renderCreateItem: PropTypes.func as PropType<SelectProps['renderCreateItem']>,\n\n  onMouseEnter: PropTypes.func as PropType<SelectProps['onMouseEnter']>,\n  onMouseLeave: PropTypes.func as PropType<SelectProps['onMouseLeave']>,\n  clickToHide: PropTypes.bool,\n  onExceed: PropTypes.func as PropType<SelectProps['onExceed']>,\n  onCreate: PropTypes.func as PropType<SelectProps['onCreate']>,\n  remote: PropTypes.bool,\n  onDeselect: PropTypes.func as PropType<SelectProps['onDeselect']>,\n  // The main difference between onSelect and onChange is that when multiple selections are selected, onChange contains all options, while onSelect only contains items for the current operation\n  onSelect: PropTypes.func as PropType<SelectProps['onSelect']>,\n  autoAdjustOverflow: PropTypes.bool,\n  mouseEnterDelay: PropTypes.number,\n  mouseLeaveDelay: PropTypes.number,\n  spacing: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  onBlur: PropTypes.func as PropType<SelectProps['onBlur']>,\n  onFocus: PropTypes.func as PropType<SelectProps['onFocus']>,\n  onClear: PropTypes.func as PropType<SelectProps['onClear']>,\n\n  virtualize: PropTypes.object,\n  renderOptionItem: PropTypes.func as PropType<SelectProps['renderOptionItem']>,\n  onListScroll: PropTypes.func as PropType<SelectProps['onListScroll']>,\n  arrowIcon: PropTypes.node,\n  preventScroll: PropTypes.bool,\n  // open: PropTypes.bool,\n  // tagClosable: PropTypes.bool,\n\n  showRestTagsPopover: PropTypes.bool,\n  restTagsPopoverProps: PropTypes.object,\n\n  id: String,\n  expandRestTagsOnClick: PropTypes.bool,\n  ellipsisTrigger: PropTypes.bool,\n\n  searchPosition: String,\n  searchPlaceholder: String,\n  clearIcon: PropTypes.node,\n  dropdownMargin: [PropTypes.number, PropTypes.object,],\n  isInInputGroup: Boolean,\n};\n\nconst defaultProps: Partial<SelectProps> = {\n  stopPropagation: true,\n  motion: true,\n  borderless: false,\n  zIndex: popoverNumbers.DEFAULT_Z_INDEX,\n  // position: 'bottomLeft',\n  filter: false,\n  multiple: false,\n  disabled: false,\n  defaultOpen: false,\n  allowCreate: false,\n  placeholder: '',\n  onDropdownVisibleChange: noop,\n  onChangeWithObject: false,\n  onChange: noop,\n  onSearch: noop,\n  onMouseEnter: noop,\n  onMouseLeave: noop,\n  onDeselect: noop,\n  onSelect: noop,\n  onCreate: noop,\n  onExceed: noop,\n  onFocus: noop,\n  onBlur: noop,\n  onClear: noop,\n  onListScroll: noop,\n  maxHeight: numbers.LIST_HEIGHT,\n  dropdownMatchSelectWidth: true,\n  defaultActiveFirstOption: true, // In order to meet the needs of A11y, change to true\n  showArrow: true,\n  showClear: false,\n  searchPosition: strings.SEARCH_POSITION_TRIGGER,\n  remote: false,\n  autoAdjustOverflow: true,\n  autoClearSearchValue: true,\n  arrowIcon: <IconChevronDown aria-label=\"\" />,\n\n  // Radio selection is different from the default renderSelectedItem for multiple selection, so it is not declared here\n  // renderSelectedItem: (optionNode) => optionNode.label,\n  // The default creator rendering is related to i18, so it is not declared here\n  // renderCreateItem: (input) => input\n\n  showRestTagsPopover: false,\n  restTagsPopoverProps: {},\n  expandRestTagsOnClick: false,\n  ellipsisTrigger: false,\n};\nexport const vuePropsType = vuePropsMake<SelectProps>(propTypes, defaultProps);\nconst Index = defineComponent({\n  props: { ...vuePropsType, children: Array as PropType<VNode[]> },\n  name: 'Select_',\n  setup(props, { expose }) {\n    const slots = useSlots();\n\n    const state = reactive<SelectState>({\n      isOpen: false,\n      isFocus: false,\n      options: [], // All options\n      selections: new Map(), // A collection of all currently selected items, k: label, v: {value,... otherProps}\n      dropdownMinWidth: null,\n      optionKey: key,\n      inputValue: '',\n      showInput: false,\n      focusIndex: props.defaultActiveFirstOption ? 0 : -1,\n      keyboardEventSet: {},\n      optionGroups: [],\n      isHovering: false,\n      isFocusInContainer: false,\n      isFullTags: false,\n      overflowItemCount: 0,\n    });\n    let selectOptionListID = '';\n    let selectID = '';\n    let virtualizeListRef = ref();\n    let inputRef = ref();\n    let dropdownInputRef = ref();\n    let triggerRef = ref();\n    let optionsRef = ref();\n    const optionContainerEl = ref();\n    let clickOutsideHandler: (e: MouseEvent) => void;\n    let foundation: SelectFoundation;\n    /* Generate random string */\n    clickOutsideHandler = null;\n    warning(\n      'optionLabelProp' in props,\n      \"[Semi Select] 'optionLabelProp' has already been deprecated, please use 'renderSelectedItem' instead.\"\n    );\n\n    warning(\n      'labelInValue' in props,\n      \"[Semi Select] 'labelInValue' has already been deprecated, please use 'onChangeWithObject' instead.\"\n    );\n\n    const { hasInProps } = useHasInProps();\n    const eventManager = new Event();\n    // TODO context\n    const { adapter: adapterInject, context: context_, getDataAttr } = useBaseComponent<SelectProps>(props, state);\n    const setOptionContainerEl = (node: HTMLDivElement) => (optionContainerEl.value = node);\n\n    function adapter(): SelectAdapter<SelectProps, SelectState> {\n      const keyboardAdapter = {\n        registerKeyDown: (cb: () => void) => {\n          const keyboardEventSet = {\n            onKeyDown: cb,\n          };\n          state.keyboardEventSet = keyboardEventSet;\n        },\n        unregisterKeyDown: () => {\n          state.keyboardEventSet = {};\n        },\n        updateFocusIndex: (focusIndex: number) => {\n          state.focusIndex = focusIndex;\n        },\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        scrollToFocusOption: () => {},\n      };\n\n      const filterAdapter = {\n        updateInputValue: (value: string) => {\n          state.inputValue = value;\n        },\n        toggleInputShow: (showInput: boolean, cb: (...args: any) => void) => {\n          state.showInput = showInput;\n          nextTick(() => {\n            cb?.();\n          });\n        },\n        focusInput: () => {\n          const { preventScroll } = props;\n          if (inputRef.value && inputRef.value.$el) {\n            inputRef.value.$el.children[0].focus({ preventScroll });\n          }\n        },\n        focusDropdownInput: () => {\n          const { preventScroll } = props;\n          if (dropdownInputRef.value) {\n            dropdownInputRef.value.focus({ preventScroll });\n          }\n        },\n      };\n      const multipleAdapter = {\n        notifyMaxLimit: (option: OptionProps) => props.onExceed(option),\n        getMaxLimit: () => props.max,\n        registerClickOutsideHandler: (cb: (e: MouseEvent) => void) => {\n          const clickOutsideHandler_: (e: MouseEvent) => void = (e) => {\n            // @ts-ignore TODO 比较重要的不同点 关于获取组建dom的 使用expose 得到的结果就不一样了\n            const optionInstance = optionsRef.value && optionsRef.value.getRef?.().vnode.el;\n            const triggerDom = triggerRef.value as Element;\n            const optionsDom = optionInstance;\n            const target = e.target as Element;\n            const path = ((e as any).composedPath && (e as any).composedPath()) || [target];\n            if (\n              !(optionsDom && optionsDom.contains(target)) &&\n              !(triggerDom && triggerDom.contains(target)) &&\n              !(path.includes(triggerDom) || path.includes(optionsDom))\n            ) {\n              cb(e);\n            }\n          };\n          clickOutsideHandler = clickOutsideHandler_;\n          document.addEventListener('mousedown', clickOutsideHandler_ as any, false);\n        },\n        unregisterClickOutsideHandler: () => {\n          if (clickOutsideHandler) {\n            document.removeEventListener('mousedown', clickOutsideHandler as any, false);\n            clickOutsideHandler = null;\n          }\n        },\n        rePositionDropdown: () => {\n          let { optionKey } = state;\n          optionKey = optionKey + 1;\n          state.optionKey = optionKey;\n        },\n        notifyDeselect: (value: OptionProps['value'], option: OptionProps) => {\n          delete option._parentGroup;\n          props.onDeselect(value, option);\n        },\n      };\n      return {\n        ...adapterInject<SelectProps, SelectState>(),\n        ...keyboardAdapter,\n        ...filterAdapter,\n        ...multipleAdapter,\n        on: (eventName, eventCallback) => eventManager.on(eventName, eventCallback),\n        off: (eventName) => eventManager.off(eventName),\n        once: (eventName, eventCallback) => eventManager.once(eventName, eventCallback),\n        emit: (eventName) => eventManager.emit(eventName),\n        // Collect all subitems, each item is visible by default when collected, and is not selected\n        //slots.default?slots.default():null\n        getOptionsFromChildren: () => {\n          let optionGroups = [];\n          let options = [];\n          const { optionList } = props;\n          if (optionList && optionList.length) {\n            options = optionList.map((itemOpt, index) => ({\n              _show: true,\n              _selected: false,\n              _scrollIndex: index,\n              ...itemOpt,\n            }));\n            optionGroups[0] = { children: options, label: '' };\n          } else {\n            const result = getOptionsFromGroup(props.children);\n            optionGroups = result.optionGroups;\n            options = result.options;\n          }\n          state.optionGroups = optionGroups;\n          return toRaw(options);\n        },\n        updateOptions: (options: OptionProps[]) => {\n          state.options = options;\n        },\n        openMenu: (cb?: () => void) => {\n          state.isOpen = true;\n          nextTick(() => {\n            cb?.();\n          });\n        },\n        closeMenu: () => {\n          state.isOpen = false;\n        },\n        getTriggerWidth: () => {\n          const el = triggerRef.value;\n          return el && el.getBoundingClientRect().width;\n        },\n        setOptionWrapperWidth: (width: number) => {\n          state.dropdownMinWidth = width;\n        },\n        updateSelection: (selections: Map<OptionProps['label'], any>) => {\n          setTimeout(()=>{\n            state.selections = selections;\n          })\n        },\n        // clone Map, important!!!, prevent unexpected modify on state\n        getSelections: () => new Map(toRaw(state.selections)),\n\n        notifyChange: (value: OnChangeValueType | OnChangeValueType[]) => {\n          props.onChange(value);\n        },\n        notifySelect: (value: OptionProps['value'], option: OptionProps) => {\n          delete option._parentGroup;\n          props.onSelect(value, option);\n        },\n        notifyDropdownVisibleChange: (visible: boolean) => {\n          props.onDropdownVisibleChange(visible);\n        },\n        notifySearch: (input: string, event: MouseEvent | KeyboardEvent) => {\n          props.onSearch(input, event);\n        },\n        notifyCreate: (input: OptionProps) => {\n          props.onCreate(input);\n        },\n        notifyMouseEnter: (e: MouseEvent) => {\n          props.onMouseEnter(e);\n        },\n        notifyMouseLeave: (e: MouseEvent) => {\n          props.onMouseLeave(e);\n        },\n        notifyFocus: (event: FocusEvent) => {\n          props.onFocus(event);\n        },\n        notifyBlur: (event: FocusEvent) => {\n          props.onBlur(event);\n        },\n        notifyClear: () => {\n          props.onClear();\n        },\n        notifyListScroll: (e: any) => {\n          props.onListScroll(e);\n        },\n        updateHovering: (isHovering: boolean) => {\n          state.isHovering = isHovering;\n        },\n        updateFocusState: (isFocus: boolean) => {\n          state.isFocus = isFocus;\n        },\n        updateOverflowItemCount: (overflowItemCount: number) => {\n          state.overflowItemCount = overflowItemCount;\n        },\n        focusTrigger: () => {\n          try {\n            const { preventScroll } = props;\n            const el = triggerRef.value as any;\n            el.focus({ preventScroll });\n          } catch (error) {}\n        },\n        getContainer: () => {\n          return optionContainerEl.value;\n        },\n        getFocusableElements: (node: HTMLDivElement) => {\n          return getFocusableElements(node);\n        },\n        getActiveElement: () => {\n          return getActiveElement();\n        },\n        setIsFocusInContainer: (isFocusInContainer: boolean) => {\n          state.isFocusInContainer = isFocusInContainer;\n        },\n        getIsFocusInContainer: () => {\n          return state.isFocusInContainer;\n        },\n        updateScrollTop: (index?: number) => {\n          let optionClassName;\n          if ('renderOptionItem' in getProps(props)) {\n            optionClassName = `.${prefixcls}-option-custom-selected`;\n            if (index !== undefined) {\n              optionClassName = `.${prefixcls}-option-custom:nth-child(${index + 1})`;\n            }\n          } else {\n            optionClassName = `.${prefixcls}-option-selected`;\n            if (index !== undefined) {\n              optionClassName = `.${prefixcls}-option:nth-child(${index + 1})`;\n            }\n          }\n\n          let destNode = optionContainerEl.value?.querySelector(\n            `#${prefixcls}-${selectOptionListID} ${optionClassName}`\n          ) as HTMLDivElement;\n          if (Array.isArray(destNode)) {\n            // eslint-disable-next-line prefer-destructuring\n            destNode = destNode[0];\n          }\n          if (destNode) {\n            /**\n             * Scroll the first selected item into view.\n             * The reason why ScrollIntoView is not used here is that it may cause page to move.\n             */\n            const destParent = destNode.parentNode as HTMLDivElement;\n            destParent.scrollTop =\n              destNode.offsetTop - destParent.offsetTop - destParent.clientHeight / 2 + destNode.clientHeight / 2;\n          }\n        },\n      };\n    }\n\n    const theAdapter = adapter();\n    foundation = new SelectFoundation(theAdapter);\n\n    onMounted(() => {\n      foundation.init();\n      selectOptionListID = getUuidShort();\n      selectID = props.id || getUuidShort();\n    });\n\n    onUnmounted(() => {\n      foundation.destroy();\n    });\n\n    watch(\n      [() => props.value, () => props.optionList, ()=>props.children],\n      (value, [prevPropsValue, prevPropsOptionList, preChildren_]) => {\n        // TODO Children VNode 更新时\n        const prevChildrenKeys = preChildren_.map((child: any) => child.key);\n        const nowChildrenKeys = props.children.map((child: any) => child.key);\n        // const prevChildrenKeys = [];\n        // const nowChildrenKeys = [];\n\n        let isOptionsChanged = false;\n\n        if (!isEqual(prevChildrenKeys, nowChildrenKeys) || !isEqual(prevPropsOptionList, props.optionList)) {\n          isOptionsChanged = true;\n          foundation.handleOptionListChange();\n        }\n\n        // Add isOptionChanged: There may be cases where the value is unchanged, but the optionList is updated. At this time, the label corresponding to the value may change, and the selected item needs to be updated\n        if (prevPropsValue !== props.value || isOptionsChanged) {\n          if (hasInProps('value')) {\n            foundation.handleValueChange(props.value as any);\n          } else {\n            foundation.handleOptionListChangeHadDefaultValue();\n          }\n        }\n      }\n    );\n    // watch(() => props.value, ()=>{\n    //   if ('value' in theAdapter.getProps()) {\n    //     foundation.handleValueChange(props.value as any);\n    //   } else {\n    //     foundation.handleOptionListChangeHadDefaultValue();\n    //   }\n    // })\n\n    const handleInputChange = (value: string, event: Event) => {\n      foundation.handleInputChange(value, event);\n    };\n\n    function renderTriggerInput() {\n      const { size, multiple, disabled, inputProps, filter } = props;\n      const inputPropsCls = get(inputProps, 'className');\n      const inputcls = cls(\n        `${prefixcls}-input`,\n        {\n          [`${prefixcls}-input-single`]: !multiple,\n          [`${prefixcls}-input-multiple`]: multiple,\n        },\n        inputPropsCls\n      );\n      const { inputValue, focusIndex } = state;\n\n      const selectInputProps: Record<string, any> = {\n        value: inputValue,\n        disabled,\n        className: inputcls,\n        onChange: handleInputChange,\n        ...inputProps,\n      };\n\n      let style = {};\n      // Multiple choice mode\n      if (multiple) {\n        style = {\n          width: inputValue ? `${inputValue.length * 16}px` : '2px',\n        };\n        selectInputProps.style = style;\n      }\n      return (\n        <Input\n          ref={inputRef as any}\n          size={size}\n          aria-activedescendant={focusIndex !== -1 ? `${selectID}-option-${focusIndex}` : ''}\n          onFocus={(e: FocusEvent) => {\n            if (multiple && Boolean(filter)) {\n              state.isFocus = true;\n            }\n            // prevent event bubbling which will fire trigger onFocus event\n            e.stopPropagation();\n            // e.nativeEvent.stopImmediatePropagation();\n          }}\n          {...selectInputProps}\n        />\n      );\n    }\n\n    function renderDropdownInput() {\n      const { size, multiple, disabled, inputProps, filter, searchPosition, searchPlaceholder } = props;\n      const { inputValue, focusIndex } = state;\n      const wrapperCls = cls(`${prefixcls}-dropdown-search-wrapper`, {});\n      const inputPropsCls = get(inputProps, 'className');\n      const inputCls = cls(\n        `${prefixcls}-dropdown-input`,\n        {\n          [`${prefixcls}-dropdown-input-single`]: !multiple,\n          [`${prefixcls}-dropdown-input-multiple`]: multiple,\n        },\n        inputPropsCls\n      );\n\n      const selectInputProps: Record<string, any> = {\n        value: inputValue,\n        disabled,\n        className: inputCls,\n        onChange: handleInputChange,\n        placeholder: searchPlaceholder,\n        showClear: true,\n        ...inputProps,\n        /**\n         * When searchPosition is trigger, the keyboard events are bound to the outer trigger div, so there is no need to listen in input.\n         * When searchPosition is dropdown, the popup and the outer trigger div are not parent- child relationships,\n         * and bubbles cannot occur, so onKeydown needs to be listened in input.\n         *  */\n        onKeyDown: (e) => foundation._handleKeyDown(e),\n      };\n\n      return (\n        <div class={wrapperCls}>\n          <Input\n            ref={dropdownInputRef}\n            prefix={<IconSearch></IconSearch>}\n            aria-activedescendant={focusIndex !== -1 ? `${selectID}-option-${focusIndex}` : ''}\n            {...selectInputProps}\n          />\n        </div>\n      );\n    }\n    function close() {\n      foundation.close();\n    }\n\n    function open() {\n      foundation.open();\n    }\n\n    function clearInput() {\n      foundation.clearInput();\n    }\n\n    function selectAll() {\n      foundation.selectAll();\n    }\n\n    function deselectAll() {\n      foundation.clearSelected();\n    }\n\n    function focus() {\n      foundation.focus();\n    }\n    expose({\n      close,\n      open,\n      clearInput,\n      selectAll,\n      deselectAll,\n      focus,\n    });\n\n    function onSelect(option: OptionProps, optionIndex: number, e: any) {\n      foundation.onSelect(toRaw(option), optionIndex, e);\n    }\n\n    function onClear(e: MouseEvent) {\n      e.stopImmediatePropagation();\n      foundation.handleClearClick(e as any);\n    }\n\n    function onClearBtnEnterPress(e: KeyboardEvent) {\n      foundation.handleClearBtnEnterPress(e as any);\n    }\n\n    function search(value: string, event: Event) {\n      handleInputChange(value, event);\n    }\n\n    function renderEmpty() {\n      return <Option empty={true} emptyContent={props.emptyContent} />;\n    }\n\n    function renderLoading() {\n      const loadingWrapperCls = `${prefixcls}-loading-wrapper`;\n      return (\n        <div class={loadingWrapperCls}>\n          <Spin />\n        </div>\n      );\n    }\n\n    function renderOption(option: OptionProps, optionIndex: number, style?: CSSProperties) {\n      const { focusIndex, inputValue } = state;\n      const { renderOptionItem } = props;\n      let optionContent;\n      const isFocused = optionIndex === focusIndex;\n      let optionStyle = style || {};\n      if (option.style) {\n        optionStyle = { ...optionStyle, ...option.style };\n      }\n      if (option._inputCreateOnly) {\n        optionContent = renderCreateOption(option, isFocused, optionIndex, style);\n      } else {\n        // use another name to make sure that 'key' in optionList still exist when we call onChange\n        if ('key_' in option) {\n          option._keyInOptionList = option.key_;\n        }\n        optionContent = (\n          <Option\n            showTick\n            {...option}\n            optionRest={option}\n            selected={option._selected}\n            onSelect={(v: OptionProps, e: MouseEvent) => onSelect(v, optionIndex, e)}\n            focused={isFocused}\n            onMouseEnter={() => onOptionHover(optionIndex)}\n            style={optionStyle}\n            key={\n              (option._keyInOptionList ||\n              option._keyInJsx ||\n              (((option.label as string) + option.value) as string) + optionIndex) as any\n            }\n            renderOptionItem={renderOptionItem}\n            inputValue={inputValue}\n            semiOptionId={`${selectID}-option-${optionIndex}`}\n          >\n            {option.label}\n          </Option>\n        );\n      }\n      return optionContent;\n    }\n\n    function renderCreateOption(option: OptionProps, isFocused: boolean, optionIndex: number, style: CSSProperties) {\n      const { renderCreateItem } = props;\n      // default render method\n      if (typeof renderCreateItem === 'undefined') {\n        const defaultCreateItem = (\n          <Option\n            key={option.key_ || (((option.label as string) + option.value) as string)}\n            onSelect={(v: OptionProps, e: MouseEvent) => onSelect(v, optionIndex, e)}\n            onMouseEnter={() => onOptionHover(optionIndex)}\n            showTick\n            {...option}\n            optionRest={option}\n            focused={isFocused}\n            style={style}\n          >\n            <LocaleConsumer componentName=\"Select\">\n              {(locale: Locale['Select']) => (\n                <>\n                  <span class={`${prefixcls}-create-tips`}>{locale.createText}</span>\n                  {option.value}\n                </>\n              )}\n            </LocaleConsumer>\n          </Option>\n        );\n        return defaultCreateItem;\n      }\n\n      const customCreateItem = renderCreateItem(option.value, isFocused, style);\n\n      return (\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/interactive-supports-focus\n        <div\n          role=\"button\"\n          aria-label=\"Use the input box to create an optional item\"\n          onClick={(e) => onSelect(option, optionIndex, e)}\n          key={option.key_ || option.label}\n        >\n          {customCreateItem}\n        </div>\n      );\n    }\n\n    function onOptionHover(optionIndex: number) {\n      foundation.handleOptionMouseEnter(optionIndex);\n    }\n\n    function renderWithGroup(visibleOptions: OptionProps[]) {\n      const content: JSX.Element[] = [];\n      const groupStatus = new Map();\n\n      visibleOptions.forEach((option, optionIndex) => {\n        const parentGroup = option._parentGroup;\n        const optionContent = renderOption(option, optionIndex);\n        if (parentGroup && !groupStatus.has(parentGroup.label)) {\n          // when use with OptionGroup and group content not already insert\n          const groupContent = <OptionGroup {...parentGroup} key={parentGroup.label as any} />;\n          groupStatus.set(parentGroup.label, true);\n          content.push(groupContent);\n        }\n        content.push(optionContent);\n      });\n\n      return content;\n    }\n\n    function renderVirtualizeList(visibleOptions: OptionProps[]) {\n      const { virtualize } = props;\n      const { direction } = context_.value;\n      const { height, width, itemSize } = virtualize;\n\n      return (\n        <List\n          ref={virtualizeListRef}\n          height={height || numbers.LIST_HEIGHT}\n          itemCount={visibleOptions.length}\n          itemSize={itemSize}\n          itemData={{ visibleOptions, renderOption: renderOption }}\n          width={width}\n          style={{ direction }}\n        >\n          {VirtualRow}\n        </List>\n      );\n    }\n\n    function renderOptions(children?: VNode[]) {\n      const { dropdownMinWidth, options, selections } = state;\n      const {\n        maxHeight,\n        dropdownClassName,\n        dropdownStyle,\n        outerTopSlot,\n        innerTopSlot,\n        outerBottomSlot,\n        innerBottomSlot,\n        loading,\n        virtualize,\n        multiple,\n        emptyContent,\n        searchPosition,\n        filter,\n      } = props;\n\n      // Do a filter first, instead of directly judging in forEach, so that the focusIndex can correspond to\n      const visibleOptions = toRaw(options).filter((item) => item._show);\n      let listContent: JSX.Element | JSX.Element[] = renderWithGroup(visibleOptions);\n      if (virtualize) {\n        listContent = renderVirtualizeList(visibleOptions);\n      }\n\n      const style = {\n        minWidth: typeof dropdownMinWidth === 'string' ? dropdownMinWidth : dropdownMinWidth + 'px',\n        ...dropdownStyle,\n      };\n\n      const optionListCls = cls({\n        [`${prefixcls}-option-list`]: true,\n        [`${prefixcls}-option-list-chosen`]: selections.size,\n      });\n\n      const isEmpty = !options.length || !toRaw(options).some((item) => item._show);\n      return (\n        <div\n          id={`${prefixcls}-${selectOptionListID}`}\n          class={dropdownClassName}\n          style={style}\n          ref={setOptionContainerEl as any}\n          onKeydown={(e) => foundation.handleContainerKeyDown(e)}\n        >\n          {outerTopSlot ? (\n            <div\n              class={`${prefixcls}-option-list-outer-top-slot`}\n              onMouseenter={() => foundation.handleSlotMouseEnter()}\n            >\n              {outerTopSlot}\n            </div>\n          ) : null}\n          {searchPosition === strings.SEARCH_POSITION_DROPDOWN && filter ? renderDropdownInput() : null}\n          <div\n            style={{ maxHeight: `${maxHeight}px` }}\n            class={optionListCls}\n            role=\"listbox\"\n            aria-multiselectable={multiple}\n            onScroll={(e) => foundation.handleListScroll(e)}\n          >\n            {innerTopSlot ? (\n              <div\n                class={`${prefixcls}-option-list-inner-top-slot`}\n                onMouseenter={() => foundation.handleSlotMouseEnter()}\n              >\n                {innerTopSlot}\n              </div>\n            ) : null}\n            {loading ? renderLoading() : isEmpty ? renderEmpty() : listContent}\n            {innerBottomSlot ? (\n              <div\n                class={`${prefixcls}-option-list-inner-bottom-slot`}\n                onMouseenter={() => foundation.handleSlotMouseEnter()}\n              >\n                {innerBottomSlot}\n              </div>\n            ) : null}\n          </div>\n          {outerBottomSlot ? (\n            <div\n              class={`${prefixcls}-option-list-outer-bottom-slot`}\n              onMouseenter={() => foundation.handleSlotMouseEnter()}\n            >\n              {outerBottomSlot}\n            </div>\n          ) : null}\n        </div>\n      );\n    }\n\n    function renderSingleSelection(selections: Map<OptionProps['label'], any>, filterable: boolean) {\n      let { renderSelectedItem, searchPosition } = props;\n      const { placeholder } = props;\n      const { showInput, inputValue } = state;\n      let renderText: any = '';\n\n      const selectedItems = [...selections];\n\n      if (typeof renderSelectedItem === 'undefined') {\n        renderSelectedItem = ((optionNode: OptionProps) => optionNode.label) as RenderSelectedItemFn;\n      }\n\n      if (selectedItems.length) {\n        const selectedItem = selectedItems[0][1];\n        renderText = (renderSelectedItem as RenderSingleSelectedItemFn)(selectedItem);\n      }\n\n      const showInputInTrigger = searchPosition === strings.SEARCH_POSITION_TRIGGER;\n\n      const spanCls = cls({\n        [`${prefixcls}-selection-text`]: true,\n        [`${prefixcls}-selection-placeholder`]: !renderText && renderText !== 0,\n        [`${prefixcls}-selection-text-hide`]: inputValue && showInput && showInputInTrigger, // show Input\n        [`${prefixcls}-selection-text-inactive`]: !inputValue && showInput && showInputInTrigger, // Stack Input & RenderText(opacity 0.4)\n      });\n\n      const contentWrapperCls = `${prefixcls}-content-wrapper`;\n      return (\n        <div class={contentWrapperCls}>\n          {\n            <span class={spanCls} x-semi-prop=\"placeholder\" key={renderText}>\n              {renderText || renderText === 0 ? renderText : placeholder}\n            </span>\n          }\n          {filterable && showInput && showInputInTrigger ? renderTriggerInput() : null}\n        </div>\n      );\n    }\n\n    const getTagItem = (item: any, i: number, renderSelectedItem: RenderSelectedItemFn) => {\n      const { size, disabled: selectDisabled } = props;\n      const label = item[0];\n      const { value } = item[1];\n      const disabled = item[1].disabled || selectDisabled;\n      const onClose = (tagContent: VueJsxNode, e: MouseEvent) => {\n        if (e && typeof e.preventDefault === 'function') {\n          e.preventDefault(); // make sure that tag will not hidden immediately in controlled mode\n        }\n        foundation.removeTag({ label, value });\n      };\n      const { content, isRenderInTag } = (renderSelectedItem as RenderMultipleSelectedItemFn)(item[1], {\n        index: i,\n        disabled,\n        onClose,\n      });\n      const basic = {\n        disabled,\n        closable: !disabled,\n        onClose,\n      };\n      if (isRenderInTag) {\n        return (\n          <Tag {...basic} color=\"white\" size={size || 'large'} key={value} tabIndex={-1}>\n            {content}\n          </Tag>\n        );\n      } else {\n        return <Fragment key={value}>{content}</Fragment>;\n      }\n    };\n\n    function renderTag(item: [VueJsxNode, any], i: number, isCollapseItem?: boolean) {\n      const { size, disabled: selectDisabled } = props;\n      let { renderSelectedItem } = props;\n      const label = item[0];\n      const { value } = item[1];\n      const disabled = item[1].disabled || selectDisabled;\n      const onClose = (tagContent: VueJsxNode, e: MouseEvent) => {\n        if (e && typeof e.preventDefault === 'function') {\n          e.preventDefault(); // make sure that tag will not hidden immediately in controlled mode\n        }\n        foundation.removeTag({ label, value });\n      };\n\n      if (typeof renderSelectedItem === 'undefined') {\n        renderSelectedItem = (optionNode: OptionProps) =>\n          ({\n            isRenderInTag: true,\n            content: optionNode.label,\n          }) as any;\n      }\n      const { content, isRenderInTag } = (renderSelectedItem as RenderMultipleSelectedItemFn)(item[1], {\n        index: i,\n        disabled,\n        onClose,\n      });\n      const basic = {\n        disabled,\n        closable: !disabled,\n        onClose,\n      };\n      const realContent =\n        isCollapseItem && !isFunction(props.renderSelectedItem) ? (\n          <Text\n            size=\"small\"\n            ellipsis={{ rows: 1, showTooltip: { type: 'popover', opts: { style: { width: 'auto', fontSize: 12 } } } }}\n          >\n            {content}\n          </Text>\n        ) : (\n          content\n        );\n      if (isRenderInTag) {\n        return (\n          <Tag {...basic} color=\"white\" size={size || 'large'} key={value} style={{ maxWidth: '100%' }}>\n            {realContent}\n          </Tag>\n        );\n      } else {\n        return <Fragment key={value}>{realContent}</Fragment>;\n      }\n    }\n\n    function renderNTag(n: number, restTags: [VueJsxNode, any][]) {\n      const { size, showRestTagsPopover, restTagsPopoverProps } = props;\n      let nTag = (\n        <Tag\n          closable={false}\n          size={size || 'large'}\n          color=\"grey\"\n          className={`${prefixcls}-content-wrapper-collapse-tag`}\n          key={`_+${n}`}\n          style={{ marginRight: 0, flexShrink: 0 }}\n        >\n          +{n}\n        </Tag>\n      );\n\n      if (showRestTagsPopover) {\n        nTag = (\n          <Popover\n            showArrow\n            content={\n              <Space spacing={2} wrap style={{ maxWidth: '400px' }}>\n                {restTags.map((tag, index) => renderTag(tag, index))}\n              </Space>\n            }\n            trigger=\"hover\"\n            position=\"top\"\n            autoAdjustOverflow\n            {...restTagsPopoverProps}\n            key={`_+${n}_Popover`}\n          >\n            {nTag}\n          </Popover>\n        );\n      }\n      return nTag;\n    }\n\n    function renderOverflow(items: [VueJsxNode, any][], index: number) {\n      const isCollapse = true;\n      return items.length && items[0] ? renderTag(items[0], index, isCollapse) : null;\n    }\n\n    function handleOverflow(items: [VueJsxNode, any][]) {\n      const { overflowItemCount, selections } = state;\n      const { maxTagCount } = props;\n      const newOverFlowItemCount =\n        selections.size - maxTagCount > 0 ? selections.size - maxTagCount + items.length - 1 : items.length - 1;\n      if (overflowItemCount !== newOverFlowItemCount) {\n        foundation.updateOverflowItemCount(selections.size, newOverFlowItemCount);\n      }\n    }\n\n    function renderCollapsedTags(selections: [VueJsxNode, any][], length: number | undefined) {\n      const { overflowItemCount } = state;\n      const normalTags = typeof length === 'number' ? selections.slice(0, length) : selections;\n      return (\n        <div class={`${prefixcls}-content-wrapper-collapse`}>\n          <OverflowList\n            items={normalTags}\n            key={String(selections.length)}\n            overflowRenderer={(overflowItems) => renderOverflow(overflowItems as [VueJsxNode, any][], length - 1)}\n            onOverflow={(overflowItems) => handleOverflow(overflowItems as [VueJsxNode, any][])}\n            visibleItemRenderer={(item, index) => renderTag(item as [VueJsxNode, any], index)}\n          />\n          {overflowItemCount > 0 &&\n            renderNTag(overflowItemCount, selections.slice(selections.length - overflowItemCount))}\n        </div>\n      );\n    }\n\n    function renderOneLineTags(selectedItems: [VueJsxNode, any][], n: number | undefined) {\n      let { renderSelectedItem } = props;\n      const { showRestTagsPopover, restTagsPopoverProps, maxTagCount } = props;\n      const { isFullTags } = state;\n      let tagContent: VueJsxNode;\n\n      if (typeof renderSelectedItem === 'undefined') {\n        renderSelectedItem = (optionNode: OptionProps) =>\n          ({\n            isRenderInTag: true,\n            content: optionNode.label,\n          }) as any;\n      }\n      if (showRestTagsPopover) {\n        // showRestTagsPopover = true，\n        const mapItems = isFullTags ? selectedItems : selectedItems.slice(0, maxTagCount);\n        const tags = mapItems.map((item, i) => {\n          return getTagItem(item, i, renderSelectedItem);\n        });\n\n        tagContent = (\n          <TagGroup\n            tagList={tags}\n            maxTagCount={n}\n            restCount={isFullTags ? undefined : selectedItems.length - maxTagCount}\n            size=\"large\"\n            mode=\"custom\"\n            showPopover={showRestTagsPopover}\n            popoverProps={restTagsPopoverProps}\n            onPlusNMouseEnter={() => {\n              foundation.updateIsFullTags();\n            }}\n          />\n        );\n      } else {\n        // If maxTagCount is set, showRestTagsPopover is false/undefined,\n        // then there is no popover when hovering, no extra Tags are displayed,\n        // only the tags and restCount displayed in the trigger need to be passed in\n        const mapItems = selectedItems.slice(0, maxTagCount);\n        const tags = mapItems.map((item, i) => {\n          return getTagItem(item, i, renderSelectedItem);\n        });\n        tagContent = (\n          <TagGroup\n            tagList={tags}\n            maxTagCount={n}\n            restCount={selectedItems.length - maxTagCount}\n            size=\"large\"\n            mode=\"custom\"\n          />\n        );\n      }\n      return tagContent;\n    }\n\n    function renderMultipleSelection(selections: Map<OptionProps['label'], any>, filterable: boolean) {\n      let { renderSelectedItem, searchPosition } = props;\n      const { placeholder, maxTagCount, expandRestTagsOnClick, ellipsisTrigger } = props;\n      const { inputValue, isOpen } = state;\n\n      const selectedItems = [...selections];\n\n      if (typeof renderSelectedItem === 'undefined') {\n        // renderSelectedItem = (optionNode: OptionProps) => ({\n        //   isRenderInTag: true,\n        //   content: optionNode.label,\n        // });\n      }\n\n      const contentWrapperCls = cls({\n        [`${prefixcls}-content-wrapper`]: true,\n        [`${prefixcls}-content-wrapper-one-line`]: maxTagCount && !isOpen,\n        [`${prefixcls}-content-wrapper-empty`]: !selectedItems.length,\n      });\n\n      const spanCls = cls({\n        [`${prefixcls}-selection-text`]: true,\n        [`${prefixcls}-selection-placeholder`]: !selectedItems.length,\n        [`${prefixcls}-selection-text-hide`]: selectedItems && selectedItems.length,\n      });\n      const placeholderText = placeholder && !inputValue ? <span class={spanCls}>{placeholder}</span> : null;\n      const n = selectedItems.length > maxTagCount ? maxTagCount : undefined;\n      const NotOneLine = !maxTagCount;\n\n      const oneLineTags = ellipsisTrigger ? renderCollapsedTags(selectedItems, n) : renderOneLineTags(selectedItems, n);\n\n      const tagContent =\n        NotOneLine || (expandRestTagsOnClick && isOpen)\n          ? selectedItems.map((item, i) => renderTag(item, i))\n          : oneLineTags;\n\n      const showTriggerInput = filterable && searchPosition === strings.SEARCH_POSITION_TRIGGER;\n\n      return (\n        <Fragment>\n          <div class={contentWrapperCls}>\n            {selectedItems && selectedItems.length ? tagContent : placeholderText}\n            {!filterable ? null : renderTriggerInput()}\n          </div>\n        </Fragment>\n      );\n    }\n\n    function onMouseEnter(e: MouseEvent) {\n      foundation.handleMouseEnter(e as any);\n    }\n\n    function onMouseLeave(e: MouseEvent) {\n      foundation.handleMouseLeave(e as any);\n    }\n\n    function onKeyPress(e: KeyboardEvent) {\n      foundation.handleKeyPress(e as any);\n    }\n\n    /* Processing logic when popover visible changes */\n    function handlePopoverVisibleChange(status) {\n      const { virtualize } = props;\n      const { selections } = state;\n      if (!status) {\n        return;\n      }\n      if (virtualize) {\n        let minItemIndex = -1;\n        toRaw(selections).forEach((item) => {\n          const itemIndex = get(item, '_scrollIndex');\n          /* When the itemIndex is legal */\n          if (isNumber(itemIndex) && itemIndex >= 0) {\n            minItemIndex = minItemIndex !== -1 && minItemIndex < itemIndex ? minItemIndex : itemIndex;\n          }\n        });\n        if (minItemIndex !== -1) {\n          try {\n            virtualizeListRef.value.scrollToItem(minItemIndex, 'center');\n          } catch (error) {\n            console.error(error);\n          }\n        }\n      } else {\n        foundation.updateScrollTop();\n      }\n    }\n\n    function renderSuffix() {\n      const { suffix } = props;\n      const suffixWrapperCls = cls({\n        [`${prefixcls}-suffix`]: true,\n        [`${prefixcls}-suffix-text`]: suffix && isString(suffix),\n        [`${prefixcls}-suffix-icon`]: isSemiIcon(suffix),\n      });\n      return (\n        <div class={suffixWrapperCls} x-semi-prop=\"suffix\">\n          {suffix}\n        </div>\n      );\n    }\n\n    function renderPrefix() {\n      const { prefix, insetLabel, insetLabelId } = props;\n      const labelNode = (prefix || insetLabel) as any;\n\n      const prefixWrapperCls = cls({\n        [`${prefixcls}-prefix`]: true,\n        [`${prefixcls}-inset-label`]: insetLabel,\n        [`${prefixcls}-prefix-text`]: labelNode && isString(labelNode),\n        [`${prefixcls}-prefix-icon`]: isSemiIcon(labelNode),\n      });\n\n      return (\n        <div class={prefixWrapperCls} id={insetLabelId} x-semi-prop=\"prefix,insetLabel\">\n          {labelNode}\n        </div>\n      );\n    }\n\n    function renderSelection() {\n      const {\n        disabled,\n        multiple,\n        filter,\n        style,\n        id,\n        size,\n        className,\n        validateStatus,\n        showArrow,\n        suffix,\n        prefix,\n        insetLabel,\n        placeholder,\n        triggerRender,\n        arrowIcon,\n        clearIcon,\n        borderless,\n        ...rest\n      } = props;\n\n      const { selections, isOpen, keyboardEventSet, inputValue, isHovering, isFocus, showInput, focusIndex } = state;\n      const useCustomTrigger = typeof triggerRender === 'function';\n      const filterable = Boolean(filter); // filter（boolean || function）\n      const selectionCls = useCustomTrigger\n        ? cls(className)\n        : cls(prefixcls, className, {\n            [`${prefixcls}-borderless`]: borderless,\n            [`${prefixcls}-open`]: isOpen,\n            [`${prefixcls}-focus`]: isFocus,\n            [`${prefixcls}-disabled`]: disabled,\n            [`${prefixcls}-single`]: !multiple,\n            [`${prefixcls}-multiple`]: multiple,\n            [`${prefixcls}-filterable`]: filterable,\n            [`${prefixcls}-small`]: size === 'small',\n            [`${prefixcls}-large`]: size === 'large',\n            [`${prefixcls}-error`]: validateStatus === 'error',\n            [`${prefixcls}-warning`]: validateStatus === 'warning',\n            [`${prefixcls}-no-arrow`]: !showArrow,\n            [`${prefixcls}-with-prefix`]: prefix || insetLabel,\n            [`${prefixcls}-with-suffix`]: suffix,\n          });\n\n      const showClear = props.showClear && (selections.size || inputValue) && !disabled && (isHovering || isOpen);\n\n      const arrowContent = showArrow ? (\n        <div class={`${prefixcls}-arrow`} x-semi-prop=\"arrowIcon\">\n          {arrowIcon}\n        </div>\n      ) : (\n        <div class={`${prefixcls}-arrow-empty`} />\n      );\n      const clear = clearIcon ? clearIcon : <IconClear />;\n      const inner = useCustomTrigger ? (\n        <Trigger\n          value={Array.from(toRaw(selections).values())}\n          inputValue={inputValue}\n          onChange={handleInputChange}\n          onSearch={handleInputChange}\n          onRemove={(item) => foundation.removeTag(item)}\n          onClear={onClear}\n          disabled={disabled}\n          triggerRender={triggerRender}\n          placeholder={placeholder as any}\n          componentName=\"Select\"\n          componentProps={{ ...props }}\n        />\n      ) : (\n        [\n          <Fragment key=\"prefix\">{prefix || insetLabel ? renderPrefix() : null}</Fragment>,\n          <Fragment key=\"selection\">\n            <div class={cls(`${prefixcls}-selection`)}>\n              {multiple\n                ? renderMultipleSelection(toRaw(selections), filterable)\n                : renderSingleSelection(toRaw(selections), filterable)}\n            </div>\n          </Fragment>,\n          <Fragment key=\"suffix\">{suffix ? renderSuffix() : null}</Fragment>,\n          <Fragment key=\"clearicon\">\n            {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n            {showClear ? (\n              <div class={cls(`${prefixcls}-clear`)} onClick={onClear}>\n                {clear}\n              </div>\n            ) : (\n              arrowContent\n            )}\n          </Fragment>,\n        ]\n      );\n      /**\n       *\n       * In disabled, searchable single-selection and display input, and searchable multi-selection\n       * make combobox not focusable by tab key\n       *\n       * 在disabled，可搜索单选且显示input框，以及可搜索多选情况下\n       * 让combobox无法通过tab聚焦\n       */\n      const tabIndex = disabled || (filterable && showInput) || (filterable && multiple) ? -1 : 0;\n\n      return (\n        <div\n          role=\"combobox\"\n          aria-disabled={disabled}\n          aria-expanded={isOpen}\n          aria-controls={`${prefixcls}-${selectOptionListID}`}\n          aria-haspopup=\"listbox\"\n          aria-label=\"select value\"\n          aria-invalid={props['aria-invalid']}\n          aria-errormessage={props['aria-errormessage']}\n          aria-labelledby={props['aria-labelledby']}\n          aria-describedby={props['aria-describedby']}\n          aria-required={props['aria-required']}\n          class={selectionCls}\n          ref={(ref) => (triggerRef.value = ref)}\n          onClick={(e) => foundation.handleClick(e)}\n          style={style}\n          id={id}\n          tabindex={tabIndex}\n          aria-activedescendant={focusIndex !== -1 ? `${selectID}-option-${focusIndex}` : ''}\n          onMouseenter={onMouseEnter}\n          onMouseleave={onMouseLeave}\n          onFocus={(e) => foundation.handleTriggerFocus(e)}\n          onBlur={(e) => foundation.handleTriggerBlur(e as any)}\n          onKeypress={onKeyPress}\n          {...keyboardEventSet}\n          {...getDataAttr()}\n        >\n          {inner}\n        </div>\n      );\n    }\n\n    return () => {\n      const { direction } = context_.value;\n      const defaultPosition = direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n      const {\n        position = defaultPosition,\n        zIndex,\n        getPopupContainer,\n        motion,\n        autoAdjustOverflow,\n        mouseLeaveDelay,\n        mouseEnterDelay,\n        spacing,\n        stopPropagation,\n        dropdownMargin,\n      } = props;\n      const { isOpen, optionKey } = state;\n      const optionList = renderOptions(props.children ? props.children : null);\n      const selection = renderSelection();\n      return (\n        <Popover\n          getPopupContainer={getPopupContainer}\n          motion={motion}\n          autoAdjustOverflow={autoAdjustOverflow}\n          mouseLeaveDelay={mouseLeaveDelay}\n          mouseEnterDelay={mouseEnterDelay}\n          // transformFromCenter TODO: check no such property\n          zIndex={zIndex}\n          ref={optionsRef}\n          content={optionList}\n          visible={isOpen}\n          trigger=\"custom\"\n          rePosKey={optionKey}\n          position={position}\n          spacing={spacing}\n          stopPropagation={stopPropagation}\n          disableArrowKeyDown={true}\n          onVisibleChange={(status) => handlePopoverVisibleChange(status)}\n          afterClose={() => foundation.handlePopoverClose()}\n        >\n          {selection}\n        </Popover>\n      );\n    };\n  },\n});\n\nconst Select = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Select',\n  setup(props, {slots, expose}){\n    const {getProps} = useHasInProps()\n\n    const domRef = ref()\n    expose({\n      close(){\n        domRef.value?.close()\n      },\n      open(){\n        domRef.value?.open()\n      },\n      clearInput(){\n        domRef.value?.clearInput()\n      },\n      selectAll(){\n        domRef.value?.selectAll()\n      },\n      deselectAll(){\n        domRef.value?.deselectAll()\n      },\n      focus(){\n        domRef.value?.focus()\n      },\n    })\n\n    return ()=>{\n      const children = getFragmentChildren(slots);\n      return <Index ref={domRef} {...getProps(props)} children={children || []}/>\n    }\n  }\n});\n\nexport type SelectType = typeof Select & {\n  Option: typeof Option\n  OptGroup: typeof OptionGroup\n}\nconst baseSelect = Select as SelectType\nbaseSelect.Option = Option\nbaseSelect.OptGroup = OptionGroup\nexport default baseSelect\nexport { Option as SelectOption, OptionGroup as SelectOptionGroup };\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","prefixcls","cssClasses","PREFIX","LocaleConsumer","LocaleConsumerFunc","key","propTypes","PropTypes","string","bool","autoFocus","autoClearSearchValue","borderless","defaultValue","oneOfType","number","array","object","value","placeholder","node","onChange","func","multiple","filter","max","maxTagCount","maxHeight","style","className","size","String","disabled","emptyContent","onDropdownVisibleChange","zIndex","position","onSearch","getPopupContainer","dropdownClassName","dropdownStyle","outerTopSlot","innerTopSlot","inputProps","outerBottomSlot","innerBottomSlot","optionList","dropdownMatchSelectWidth","loading","defaultOpen","validateStatus","defaultActiveFirstOption","triggerRender","stopPropagation","motion","onChangeWithObject","suffix","prefix","insetLabel","insetLabelId","showClear","showArrow","renderSelectedItem","allowCreate","renderCreateItem","onMouseEnter","onMouseLeave","clickToHide","onExceed","onCreate","remote","onDeselect","onSelect","autoAdjustOverflow","mouseEnterDelay","mouseLeaveDelay","spacing","onBlur","onFocus","onClear","virtualize","renderOptionItem","onListScroll","arrowIcon","preventScroll","showRestTagsPopover","restTagsPopoverProps","id","expandRestTagsOnClick","ellipsisTrigger","searchPosition","searchPlaceholder","clearIcon","dropdownMargin","isInInputGroup","Boolean","defaultProps","popoverNumbers","DEFAULT_Z_INDEX","noop","numbers","LIST_HEIGHT","strings","SEARCH_POSITION_TRIGGER","_createVNode","IconChevronDown","vuePropsType","vuePropsMake","Index","defineComponent","props","children","Array","name","setup","expose","useSlots","state","reactive","isOpen","isFocus","options","selections","Map","dropdownMinWidth","optionKey","inputValue","showInput","focusIndex","keyboardEventSet","optionGroups","isHovering","isFocusInContainer","isFullTags","overflowItemCount","selectOptionListID","selectID","virtualizeListRef","ref","inputRef","dropdownInputRef","triggerRef","optionsRef","optionContainerEl","clickOutsideHandler","foundation","warning","hasInProps","useHasInProps","eventManager","Event","adapter","adapterInject","context","context_","getDataAttr","useBaseComponent","setOptionContainerEl","keyboardAdapter","registerKeyDown","cb","onKeyDown","unregisterKeyDown","updateFocusIndex","scrollToFocusOption","filterAdapter","updateInputValue","toggleInputShow","nextTick","focusInput","$el","focus","focusDropdownInput","multipleAdapter","notifyMaxLimit","option","getMaxLimit","registerClickOutsideHandler","clickOutsideHandler_","e","optionInstance","getRef","vnode","el","triggerDom","optionsDom","target","path","composedPath","contains","includes","document","addEventListener","unregisterClickOutsideHandler","removeEventListener","rePositionDropdown","notifyDeselect","_parentGroup","on","eventName","eventCallback","off","once","emit","getOptionsFromChildren","length","map","itemOpt","index","_show","_selected","_scrollIndex","label","result","getOptionsFromGroup","toRaw","updateOptions","openMenu","closeMenu","getTriggerWidth","getBoundingClientRect","width","setOptionWrapperWidth","updateSelection","setTimeout","getSelections","notifyChange","notifySelect","notifyDropdownVisibleChange","visible","notifySearch","input","event","notifyCreate","notifyMouseEnter","notifyMouseLeave","notifyFocus","notifyBlur","notifyClear","notifyListScroll","updateHovering","updateFocusState","updateOverflowItemCount","focusTrigger","getContainer","getFocusableElements","getActiveElement","setIsFocusInContainer","getIsFocusInContainer","updateScrollTop","optionClassName","getProps","undefined","destNode","querySelector","isArray","destParent","parentNode","scrollTop","offsetTop","clientHeight","theAdapter","SelectFoundation","onMounted","init","getUuidShort","onUnmounted","destroy","watch","prevPropsValue","prevPropsOptionList","preChildren_","prevChildrenKeys","child","nowChildrenKeys","isOptionsChanged","isEqual","handleOptionListChange","handleValueChange","handleOptionListChangeHadDefaultValue","handleInputChange","renderTriggerInput","inputPropsCls","get","inputcls","cls","selectInputProps","Input","_mergeProps","renderDropdownInput","wrapperCls","inputCls","_handleKeyDown","IconSearch","close","open","clearInput","selectAll","deselectAll","clearSelected","optionIndex","stopImmediatePropagation","handleClearClick","renderEmpty","Option","renderLoading","loadingWrapperCls","Spin","renderOption","optionContent","isFocused","optionStyle","_inputCreateOnly","renderCreateOption","_keyInOptionList","key_","v","onOptionHover","_keyInJsx","default","locale","_Fragment","createText","customCreateItem","handleOptionMouseEnter","renderWithGroup","visibleOptions","content","groupStatus","forEach","parentGroup","has","groupContent","OptionGroup","set","push","renderVirtualizeList","direction","height","itemSize","List","VirtualRow","renderOptions","item","listContent","minWidth","optionListCls","isEmpty","some","handleContainerKeyDown","onMouseenter","handleSlotMouseEnter","SEARCH_POSITION_DROPDOWN","handleListScroll","renderSingleSelection","filterable","renderText","selectedItems","optionNode","selectedItem","showInputInTrigger","spanCls","contentWrapperCls","getTagItem","i","selectDisabled","onClose","tagContent","preventDefault","removeTag","isRenderInTag","basic","closable","Tag","renderTag","isCollapseItem","realContent","isFunction","Text","rows","showTooltip","type","opts","fontSize","maxWidth","renderNTag","n","restTags","nTag","marginRight","flexShrink","_createTextVNode","_slot","_nTag","Popover","Space","tag","renderOverflow","items","isCollapse","handleOverflow","newOverFlowItemCount","renderCollapsedTags","normalTags","slice","OverflowList","overflowItems","visibleItemRenderer","renderOneLineTags","tags","TagGroup","onPlusNMouseEnter","updateIsFullTags","renderMultipleSelection","placeholderText","NotOneLine","oneLineTags","handleMouseEnter","handleMouseLeave","onKeyPress","handleKeyPress","handlePopoverVisibleChange","status","minItemIndex","itemIndex","isNumber","scrollToItem","error","console","renderSuffix","suffixWrapperCls","isString","isSemiIcon","renderPrefix","labelNode","prefixWrapperCls","renderSelection","rest","useCustomTrigger","selectionCls","arrowContent","clear","IconClear","inner","Trigger","from","values","tabIndex","handleClick","handleTriggerFocus","handleTriggerBlur","defaultPosition","selection","afterClose","handlePopoverClose","Select","slots","domRef","getFragmentChildren","baseSelect","OptGroup"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDsD,SAAAA,EAAAC,GAAA;AAAA,SAAA,OAAAA,KAAA,cAAAC,OAAAC,UAAAC,SAAAC,KAAAJ,CAAA,MAAAK,qBAAAA,CAAAA,GAAAL,CAAA;AAAA;AAWtD,MAAMM,IAAYC,GAAWC,QACvBC,KAAiBC,GAAkB,GACnCC,KAAM,GAoLNC,KAAuC;AAAA,EAC3C,oBAAoBC,EAAUC;AAAAA,EAC9B,qBAAqBD,EAAUC;AAAAA,EAC/B,gBAAgBD,EAAUE;AAAAA,EAC1B,mBAAmBF,EAAUC;AAAAA,EAC7B,cAAcD,EAAUC;AAAAA,EACxB,iBAAiBD,EAAUE;AAAAA,EAC3BC,WAAWH,EAAUE;AAAAA,EACrBE,sBAAsBJ,EAAUE;AAAAA,EAChCG,YAAYL,EAAUE;AAAAA,EACtBI,cAAcN,EAAUO,UAAU,CAACP,EAAUC,QAAQD,EAAUQ,QAAQR,EAAUS,OAAOT,EAAUU,MAAM,CAAC;AAAA,EACzGC,OAAOX,EAAUO,UAAU,CAACP,EAAUC,QAAQD,EAAUQ,QAAQR,EAAUS,OAAOT,EAAUU,MAAM,CAAC;AAAA,EAClGE,aAAaZ,EAAUa;AAAAA,EACvBC,UAAUd,EAAUe;AAAAA,EACpBC,UAAUhB,EAAUE;AAAAA;AAAAA,EAEpBe,QAAQ,CAACjB,EAAUe,MAAMf,EAAUE,IAAI;AAAA;AAAA,EAEvCgB,KAAKlB,EAAUQ;AAAAA;AAAAA,EAEfW,aAAanB,EAAUQ;AAAAA,EACvBY,WAAWpB,EAAUO,UAAU,CAACP,EAAUC,QAAQD,EAAUQ,MAAM,CAAC;AAAA,EACnEa,OAAOrB,EAAUU;AAAAA,EACjBY,WAAWtB,EAAUC;AAAAA,EACrBsB,MAAMC;AAAAA,EACNC,UAAUzB,EAAUE;AAAAA,EACpBwB,cAAc1B,EAAUa;AAAAA,EACxBc,yBAAyB3B,EAAUe;AAAAA,EACnCa,QAAQ5B,EAAUQ;AAAAA,EAClBqB,UAAUL;AAAAA,EACVM,UAAU9B,EAAUe;AAAAA,EACpBgB,mBAAmB/B,EAAUe;AAAAA,EAC7BiB,mBAAmBhC,EAAUC;AAAAA,EAC7BgC,eAAejC,EAAUU;AAAAA,EACzBwB,cAAclC,EAAUa;AAAAA,EACxBsB,cAAcnC,EAAUa;AAAAA,EACxBuB,YAAYpC,EAAUU;AAAAA,EACtB2B,iBAAiBrC,EAAUa;AAAAA,EAC3ByB,iBAAiBtC,EAAUa;AAAAA;AAAAA,EAC3B0B,YAAYvC,EAAUS;AAAAA;AAAAA,EACtB+B,0BAA0BxC,EAAUE;AAAAA,EACpCuC,SAASzC,EAAUE;AAAAA,EACnBwC,aAAa1C,EAAUE;AAAAA,EACvByC,gBAAgBnB;AAAAA,EAChBoB,0BAA0B5C,EAAUE;AAAAA,EACpC2C,eAAe7C,EAAUe;AAAAA,EACzB+B,iBAAiB9C,EAAUE;AAAAA;AAAAA,EAE3B6C,QAAQ/C,EAAUO,UAAU,CAACP,EAAUe,MAAMf,EAAUE,MAAMF,EAAUU,MAAM,CAAC;AAAA,EAE9EsC,oBAAoBhD,EAAUE;AAAAA,EAE9B+C,QAAQjD,EAAUa;AAAAA,EAClBqC,QAAQlD,EAAUa;AAAAA,EAClBsC,YAAYnD,EAAUa;AAAAA,EACtBuC,cAAcpD,EAAUC;AAAAA,EACxBoD,WAAWrD,EAAUE;AAAAA,EACrBoD,WAAWtD,EAAUE;AAAAA,EAErBqD,oBAAoBvD,EAAUe;AAAAA,EAE9ByC,aAAaxD,EAAUE;AAAAA,EACvBuD,kBAAkBzD,EAAUe;AAAAA,EAE5B2C,cAAc1D,EAAUe;AAAAA,EACxB4C,cAAc3D,EAAUe;AAAAA,EACxB6C,aAAa5D,EAAUE;AAAAA,EACvB2D,UAAU7D,EAAUe;AAAAA,EACpB+C,UAAU9D,EAAUe;AAAAA,EACpBgD,QAAQ/D,EAAUE;AAAAA,EAClB8D,YAAYhE,EAAUe;AAAAA;AAAAA,EAEtBkD,UAAUjE,EAAUe;AAAAA,EACpBmD,oBAAoBlE,EAAUE;AAAAA,EAC9BiE,iBAAiBnE,EAAUQ;AAAAA,EAC3B4D,iBAAiBpE,EAAUQ;AAAAA,EAC3B6D,SAASrE,EAAUO,UAAU,CAACP,EAAUQ,QAAQR,EAAUU,MAAM,CAAC;AAAA,EACjE4D,QAAQtE,EAAUe;AAAAA,EAClBwD,SAASvE,EAAUe;AAAAA,EACnByD,SAASxE,EAAUe;AAAAA,EAEnB0D,YAAYzE,EAAUU;AAAAA,EACtBgE,kBAAkB1E,EAAUe;AAAAA,EAC5B4D,cAAc3E,EAAUe;AAAAA,EACxB6D,WAAW5E,EAAUa;AAAAA,EACrBgE,eAAe7E,EAAUE;AAAAA;AAAAA;AAAAA,EAIzB4E,qBAAqB9E,EAAUE;AAAAA,EAC/B6E,sBAAsB/E,EAAUU;AAAAA,EAEhCsE,IAAIxD;AAAAA,EACJyD,uBAAuBjF,EAAUE;AAAAA,EACjCgF,iBAAiBlF,EAAUE;AAAAA,EAE3BiF,gBAAgB3D;AAAAA,EAChB4D,mBAAmB5D;AAAAA,EACnB6D,WAAWrF,EAAUa;AAAAA,EACrByE,gBAAgB,CAACtF,EAAUQ,QAAQR,EAAUU,MAAM;AAAA,EACnD6E,gBAAgBC;AAClB,GAEMC,KAAqC;AAAA,EACzC3C,iBAAiB;AAAA,EACjBC,QAAQ;AAAA,EACR1C,YAAY;AAAA,EACZuB,QAAQ8D,GAAeC;AAAAA;AAAAA,EAEvB1E,QAAQ;AAAA,EACRD,UAAU;AAAA,EACVS,UAAU;AAAA,EACViB,aAAa;AAAA,EACbc,aAAa;AAAA,EACb5C,aAAa;AAAA,EACbe,yBAAyBiE;AAAAA,EACzB5C,oBAAoB;AAAA,EACpBlC,UAAU8E;AAAAA,EACV9D,UAAU8D;AAAAA,EACVlC,cAAckC;AAAAA,EACdjC,cAAciC;AAAAA,EACd5B,YAAY4B;AAAAA,EACZ3B,UAAU2B;AAAAA,EACV9B,UAAU8B;AAAAA,EACV/B,UAAU+B;AAAAA,EACVrB,SAASqB;AAAAA,EACTtB,QAAQsB;AAAAA,EACRpB,SAASoB;AAAAA,EACTjB,cAAciB;AAAAA,EACdxE,WAAWyE,GAAQC;AAAAA,EACnBtD,0BAA0B;AAAA,EAC1BI,0BAA0B;AAAA;AAAA,EAC1BU,WAAW;AAAA,EACXD,WAAW;AAAA,EACX8B,gBAAgBY,EAAQC;AAAAA,EACxBjC,QAAQ;AAAA,EACRG,oBAAoB;AAAA,EACpB9D,sBAAsB;AAAA,EACtBwE,WAASqB,EAAAC,IAAA;AAAA,IAAA,cAAA;AAAA,EAAmC,GAAA,IAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO5CpB,qBAAqB;AAAA,EACrBC,sBAAsB,CAAE;AAAA,EACxBE,uBAAuB;AAAA,EACvBC,iBAAiB;AACnB,GACaiB,KAAeC,GAA0BrG,IAAW0F,EAAY,GACvEY,KAAQC,gBAAAA,GAAgB;AAAA,EAC5BC,OAAO;AAAA,IAAE,GAAGJ;AAAAA,IAAcK,UAAUC;AAAAA,EAA4B;AAAA,EAChEC,MAAM;AAAA,EACNC,MAAMJ,GAAO;AAAA,IAAEK,QAAAA;AAAAA,EAAO,GAAG;AACTC,IAAAA,GAAU;AAExB,UAAMC,IAAQC,GAAsB;AAAA,MAClCC,QAAQ;AAAA,MACRC,SAAS;AAAA,MACTC,SAAS,CAAE;AAAA;AAAA,MACXC,YAAY,oBAAIC,IAAK;AAAA;AAAA,MACrBC,kBAAkB;AAAA,MAClBC,WAAWxH;AAAAA,MACXyH,YAAY;AAAA,MACZC,WAAW;AAAA,MACXC,YAAYlB,EAAM3D,2BAA2B,IAAI;AAAA,MACjD8E,kBAAkB,CAAE;AAAA,MACpBC,cAAc,CAAE;AAAA,MAChBC,YAAY;AAAA,MACZC,oBAAoB;AAAA,MACpBC,YAAY;AAAA,MACZC,mBAAmB;AAAA,IACrB,CAAC;AACD,QAAIC,IAAqB,IACrBC,IAAW,IACXC,IAAoBC,KACpBC,IAAWD,KACXE,IAAmBF,KACnBG,IAAaH,KACbI,IAAaJ;AACjB,UAAMK,IAAoBL;AAC1B,QAAIM,GACAC;AAEJD,IAAAA,IAAsB,MACtBE,GACE,qBAAqBpC,GACrB,uGACF,GAEAoC,GACE,kBAAkBpC,GAClB,oGACF;AAEA,UAAM;AAAA,MAAEqC,YAAAA;AAAAA,IAAY,IAAGC,GAAa,GAC9BC,IAAe,IAAIC,MAEnB;AAAA,MAAEC,SAASC;AAAAA,MAAeC,SAASC;AAAAA,MAAUC,aAAAA;AAAAA,IAAY,IAAIC,GAA8B9C,GAAOO,CAAK,GACvGwC,KAAwBzI,CAAAA,MAA0B2H,EAAkB7H,QAAQE;AAElF,aAASmI,KAAmD;AAC1D,YAAMO,IAAkB;AAAA,QACtBC,iBAAkBC,CAAAA,MAAmB;AACnC,gBAAM/B,IAAmB;AAAA,YACvBgC,WAAWD;AAAAA;AAEb3C,UAAAA,EAAMY,mBAAmBA;AAAAA,QAC1B;AAAA,QACDiC,mBAAmBA,MAAM;AACvB7C,UAAAA,EAAMY,mBAAmB;QAC1B;AAAA,QACDkC,kBAAmBnC,CAAAA,MAAuB;AACxCX,UAAAA,EAAMW,aAAaA;AAAAA,QACpB;AAAA;AAAA,QAEDoC,qBAAqBA,MAAM;AAAA,QAAC;AAAA,SAGxBC,IAAgB;AAAA,QACpBC,kBAAmBpJ,CAAAA,MAAkB;AACnCmG,UAAAA,EAAMS,aAAa5G;AAAAA,QACpB;AAAA,QACDqJ,iBAAiBA,CAACxC,GAAoBiC,MAA+B;AACnE3C,UAAAA,EAAMU,YAAYA,GAClByC,GAAS,MAAM;AACbR,YAAAA,KAAAA,QAAAA;AAAAA,UACF,CAAC;AAAA,QACF;AAAA,QACDS,YAAYA,MAAM;AAChB,gBAAM;AAAA,YAAErF,eAAAA;AAAAA,UAAe,IAAG0B;AAC1B,UAAI6B,EAASzH,SAASyH,EAASzH,MAAMwJ,OACnC/B,EAASzH,MAAMwJ,IAAI3D,SAAS,CAAC,EAAE4D,MAAM;AAAA,YAAEvF,eAAAA;AAAAA,UAAc,CAAC;AAAA,QAEzD;AAAA,QACDwF,oBAAoBA,MAAM;AACxB,gBAAM;AAAA,YAAExF,eAAAA;AAAAA,UAAe,IAAG0B;AAC1B,UAAI8B,EAAiB1H,SACnB0H,EAAiB1H,MAAMyJ,MAAM;AAAA,YAAEvF,eAAAA;AAAAA,UAAc,CAAC;AAAA,QAElD;AAAA,SAEIyF,IAAkB;AAAA,QACtBC,gBAAiBC,CAAAA,MAAwBjE,EAAM1C,SAAS2G,CAAM;AAAA,QAC9DC,aAAaA,MAAMlE,EAAMrF;AAAAA,QACzBwJ,6BAA8BjB,CAAAA,MAAgC;AAC5D,gBAAMkB,IAAiDC,CAAAA,MAAM;;AAE3D,kBAAMC,IAAiBtC,EAAW5H,WAAS4H,KAAAA,IAAAA,EAAW5H,OAAMmK,WAAjBvC,gBAAAA,EAAAA,KAAAA,GAA4BwC,MAAMC,KACvEC,IAAa3C,EAAW3H,OACxBuK,IAAaL,GACbM,IAASP,EAAEO,QACXC,IAASR,EAAUS,gBAAiBT,EAAUS,aAAc,KAAK,CAACF,CAAM;AAC9E,YACE,EAAED,KAAcA,EAAWI,SAASH,CAAM,MAC1C,EAAEF,KAAcA,EAAWK,SAASH,CAAM,MAC1C,EAAEC,EAAKG,SAASN,CAAU,KAAKG,EAAKG,SAASL,CAAU,MAEvDzB,EAAGmB,CAAC;AAAA;AAGRnC,UAAAA,IAAsBkC,GACtBa,SAASC,iBAAiB,aAAad,GAA6B,EAAK;AAAA,QAC1E;AAAA,QACDe,+BAA+BA,MAAM;AACnC,UAAIjD,MACF+C,SAASG,oBAAoB,aAAalD,GAA4B,EAAK,GAC3EA,IAAsB;AAAA,QAEzB;AAAA,QACDmD,oBAAoBA,MAAM;AACxB,cAAI;AAAA,YAAEtE,WAAAA;AAAAA,UAAW,IAAGR;AACpBQ,UAAAA,IAAYA,IAAY,GACxBR,EAAMQ,YAAYA;AAAAA,QACnB;AAAA,QACDuE,gBAAgBA,CAAClL,GAA6B6J,MAAwB;AACpE,iBAAOA,EAAOsB,cACdvF,EAAMvC,WAAWrD,GAAO6J,CAAM;AAAA,QAChC;AAAA;AAEF,aAAO;AAAA,QACL,GAAGvB,GAAyC;AAAA,QAC5C,GAAGM;AAAAA,QACH,GAAGO;AAAAA,QACH,GAAGQ;AAAAA,QACHyB,IAAIA,CAACC,GAAWC,MAAkBnD,EAAaiD,GAAGC,GAAWC,CAAa;AAAA,QAC1EC,KAAMF,CAAAA,MAAclD,EAAaoD,IAAIF,CAAS;AAAA,QAC9CG,MAAMA,CAACH,GAAWC,MAAkBnD,EAAaqD,KAAKH,GAAWC,CAAa;AAAA,QAC9EG,MAAOJ,CAAAA,MAAclD,EAAasD,KAAKJ,CAAS;AAAA;AAAA;AAAA,QAGhDK,wBAAwBA,MAAM;AAC5B,cAAI1E,IAAe,CAAA,GACfT,IAAU,CAAA;AACd,gBAAM;AAAA,YAAE3E,YAAAA;AAAAA,UAAY,IAAGgE;AACvB,cAAIhE,KAAcA,EAAW+J;AAC3BpF,YAAAA,IAAU3E,EAAWgK,IAAI,CAACC,GAASC,OAAW;AAAA,cAC5CC,OAAO;AAAA,cACPC,WAAW;AAAA,cACXC,cAAcH;AAAAA,cACd,GAAGD;AAAAA,YACJ,EAAC,GACF7E,EAAa,CAAC,IAAI;AAAA,cAAEnB,UAAUU;AAAAA,cAAS2F,OAAO;AAAA;eACzC;AACL,kBAAMC,IAASC,GAAoBxG,EAAMC,QAAQ;AACjDmB,YAAAA,IAAemF,EAAOnF,cACtBT,IAAU4F,EAAO5F;AAAAA,UACnB;AACAJ,iBAAAA,EAAMa,eAAeA,GACdqF,EAAM9F,CAAO;AAAA,QACrB;AAAA,QACD+F,eAAgB/F,CAAAA,MAA2B;AACzCJ,UAAAA,EAAMI,UAAUA;AAAAA,QACjB;AAAA,QACDgG,UAAWzD,CAAAA,MAAoB;AAC7B3C,UAAAA,EAAME,SAAS,IACfiD,GAAS,MAAM;AACbR,YAAAA,KAAAA,QAAAA;AAAAA,UACF,CAAC;AAAA,QACF;AAAA,QACD0D,WAAWA,MAAM;AACfrG,UAAAA,EAAME,SAAS;AAAA,QAChB;AAAA,QACDoG,iBAAiBA,MAAM;AACrB,gBAAMpC,IAAK1C,EAAW3H;AACtB,iBAAOqK,KAAMA,EAAGqC,sBAAqB,EAAGC;AAAAA,QACzC;AAAA,QACDC,uBAAwBD,CAAAA,MAAkB;AACxCxG,UAAAA,EAAMO,mBAAmBiG;AAAAA,QAC1B;AAAA,QACDE,iBAAkBrG,CAAAA,MAA+C;AAC/DsG,qBAAW,MAAI;AACb3G,YAAAA,EAAMK,aAAaA;AAAAA,UACrB,CAAC;AAAA,QACF;AAAA;AAAA,QAEDuG,eAAeA,MAAM,IAAItG,IAAI4F,EAAMlG,EAAMK,UAAU,CAAC;AAAA,QAEpDwG,cAAehN,CAAAA,MAAmD;AAChE4F,UAAAA,EAAMzF,SAASH,CAAK;AAAA,QACrB;AAAA,QACDiN,cAAcA,CAACjN,GAA6B6J,MAAwB;AAClE,iBAAOA,EAAOsB,cACdvF,EAAMtC,SAAStD,GAAO6J,CAAM;AAAA,QAC7B;AAAA,QACDqD,6BAA8BC,CAAAA,MAAqB;AACjDvH,UAAAA,EAAM5E,wBAAwBmM,CAAO;AAAA,QACtC;AAAA,QACDC,cAAcA,CAACC,GAAeC,MAAsC;AAClE1H,UAAAA,EAAMzE,SAASkM,GAAOC,CAAK;AAAA,QAC5B;AAAA,QACDC,cAAeF,CAAAA,MAAuB;AACpCzH,UAAAA,EAAMzC,SAASkK,CAAK;AAAA,QACrB;AAAA,QACDG,kBAAmBvD,OAAkB;AACnCrE,UAAAA,EAAM7C,aAAakH,CAAC;AAAA,QACrB;AAAA,QACDwD,kBAAmBxD,OAAkB;AACnCrE,UAAAA,EAAM5C,aAAaiH,CAAC;AAAA,QACrB;AAAA,QACDyD,aAAcJ,CAAAA,MAAsB;AAClC1H,UAAAA,EAAMhC,QAAQ0J,CAAK;AAAA,QACpB;AAAA,QACDK,YAAaL,CAAAA,MAAsB;AACjC1H,UAAAA,EAAMjC,OAAO2J,CAAK;AAAA,QACnB;AAAA,QACDM,aAAaA,MAAM;AACjBhI,UAAAA,EAAM/B,QAAO;AAAA,QACd;AAAA,QACDgK,kBAAmB5D,OAAW;AAC5BrE,UAAAA,EAAM5B,aAAaiG,CAAC;AAAA,QACrB;AAAA,QACD6D,gBAAiB7G,CAAAA,MAAwB;AACvCd,UAAAA,EAAMc,aAAaA;AAAAA,QACpB;AAAA,QACD8G,kBAAmBzH,CAAAA,MAAqB;AACtCH,UAAAA,EAAMG,UAAUA;AAAAA,QACjB;AAAA,QACD0H,yBAA0B5G,CAAAA,MAA8B;AACtDjB,UAAAA,EAAMiB,oBAAoBA;AAAAA,QAC3B;AAAA,QACD6G,cAAcA,MAAM;AAClB,cAAI;AACF,kBAAM;AAAA,cAAE/J,eAAAA;AAAAA,YAAe,IAAG0B;AAE1ByE,YADW1C,EAAW3H,MACnByJ,MAAM;AAAA,cAAEvF,eAAAA;AAAAA,YAAc,CAAC;AAAA,UAC5B,QAAgB;AAAA,UAAC;AAAA,QAClB;AAAA,QACDgK,cAAcA,MACLrG,EAAkB7H;AAAAA,QAE3BmO,sBAAuBjO,CAAAA,MACdiO,GAAqBjO,CAAI;AAAA,QAElCkO,kBAAkBA,MACTA,GAAgB;AAAA,QAEzBC,uBAAwBnH,CAAAA,MAAgC;AACtDf,UAAAA,EAAMe,qBAAqBA;AAAAA,QAC5B;AAAA,QACDoH,uBAAuBA,MACdnI,EAAMe;AAAAA,QAEfqH,iBAAkBzC,CAAAA,MAAmB;;AACnC,cAAI0C;AACJ,UAAI,sBAAsBC,GAAS7I,CAAK,KACtC4I,IAAkB,IAAI1P,CAAS,2BAC3BgN,MAAU4C,WACZF,IAAkB,IAAI1P,CAAS,4BAA4BgN,IAAQ,CAAC,SAGtE0C,IAAkB,IAAI1P,CAAS,oBAC3BgN,MAAU4C,WACZF,IAAkB,IAAI1P,CAAS,qBAAqBgN,IAAQ,CAAC;AAIjE,cAAI6C,KAAW9G,IAAAA,EAAkB7H,UAAlB6H,gBAAAA,EAAyB+G,cACtC,IAAI9P,CAAS,IAAIuI,CAAkB,IAAImH,CAAe;AAMxD,cAJI1I,MAAM+I,QAAQF,CAAQ,MAExBA,IAAWA,EAAS,CAAC,IAEnBA,GAAU;AAKZ,kBAAMG,IAAaH,EAASI;AAC5BD,YAAAA,EAAWE,YACTL,EAASM,YAAYH,EAAWG,YAAYH,EAAWI,eAAe,IAAIP,EAASO,eAAe;AAAA,UACtG;AAAA,QACF;AAAA;IAEJ;AAEA,UAAMC,KAAa9G;AACnBN,IAAAA,IAAa,IAAIqH,GAAiBD,EAAU,GAE5CE,GAAU,MAAM;AACdtH,MAAAA,EAAWuH,KAAI,GACfjI,IAAqBkI,GAAY,GACjCjI,IAAW1B,EAAMvB,MAAMkL;IACzB,CAAC,GAEDC,GAAY,MAAM;AAChBzH,MAAAA,EAAW0H,QAAO;AAAA,IACpB,CAAC,GAEDC,GACE,CAAC,MAAM9J,EAAM5F,OAAO,MAAM4F,EAAMhE,YAAY,MAAIgE,EAAMC,QAAQ,GAC9D,CAAC7F,GAAO,CAAC2P,GAAgBC,GAAqBC,CAAY,MAAM;AAE9D,YAAMC,IAAmBD,EAAajE,IAAKmE,CAAAA,MAAeA,EAAM5Q,GAAG,GAC7D6Q,IAAkBpK,EAAMC,SAAS+F,IAAKmE,CAAAA,MAAeA,EAAM5Q,GAAG;AAIpE,UAAI8Q,IAAmB;AAEvB,OAAI,CAACC,GAAQJ,GAAkBE,CAAe,KAAK,CAACE,GAAQN,GAAqBhK,EAAMhE,UAAU,OAC/FqO,IAAmB,IACnBlI,EAAWoI,uBAAsB,KAI/BR,MAAmB/J,EAAM5F,SAASiQ,OAChChI,GAAW,OAAO,IACpBF,EAAWqI,kBAAkBxK,EAAM5F,KAAY,IAE/C+H,EAAWsI,sCAAqC;AAAA,IAGtD,CACF;AASA,UAAMC,IAAoBA,CAACtQ,GAAesN,MAAiB;AACzDvF,MAAAA,EAAWuI,kBAAkBtQ,GAAOsN,CAAK;AAAA;AAG3C,aAASiD,KAAqB;AAC5B,YAAM;AAAA,QAAE3P,MAAAA;AAAAA,QAAMP,UAAAA;AAAAA,QAAUS,UAAAA;AAAAA,QAAUW,YAAAA;AAAAA,QAAYnB,QAAAA;AAAAA,MAAQ,IAAGsF,GACnD4K,IAAgBC,GAAIhP,GAAY,WAAW,GAC3CiP,IAAWC,EACf,GAAG7R,CAAS,UACZ;AAAA,QACE,CAAC,GAAGA,CAAS,eAAe,GAAG,CAACuB;AAAAA,QAChC,CAAC,GAAGvB,CAAS,iBAAiB,GAAGuB;AAAAA,MAClC,GACDmQ,CACF,GACM;AAAA,QAAE5J,YAAAA;AAAAA,QAAYE,YAAAA;AAAAA,MAAY,IAAGX,GAE7ByK,IAAwC;AAAA,QAC5C5Q,OAAO4G;AAAAA,QACP9F,UAAAA;AAAAA,QACAH,WAAW+P;AAAAA,QACXvQ,UAAUmQ;AAAAA,QACV,GAAG7O;AAAAA;AAGL,UAAIf,IAAQ,CAAA;AAEZ,aAAIL,MACFK,IAAQ;AAAA,QACNiM,OAAO/F,IAAa,GAAGA,EAAW+E,SAAS,EAAE,OAAO;AAAA,SAEtDiF,EAAiBlQ,QAAQA,IAE3B4E,EAAAuL,IAAAC,EAAA;AAAA,QAAA,KAESrJ;AAAAA,QAAQ,MACP7G;AAAAA,QAAI,yBACakG,MAAe,KAAK,GAAGQ,CAAQ,WAAWR,CAAU,KAAK;AAAA,QAAE,SACxEmD,CAAAA,MAAkB;AAC1B,UAAI5J,KAAoBC,MACtB6F,EAAMG,UAAU,KAGlB2D,EAAE9H,gBAAe;AAAA,QAEnB;AAAA,MAAC,GACGyO,CAAgB,GAAA,IAAA;AAAA,IAG1B;AAEA,aAASG,KAAsB;AAC7B,YAAM;AAAA,QAAEnQ,MAAAA;AAAAA,QAAMP,UAAAA;AAAAA,QAAUS,UAAAA;AAAAA,QAAUW,YAAAA;AAAAA,QAAYnB,QAAAA;AAAAA,QAAQkE,gBAAAA;AAAAA,QAAgBC,mBAAAA;AAAAA,MAAmB,IAAGmB,GACtF;AAAA,QAAEgB,YAAAA;AAAAA,QAAYE,YAAAA;AAAAA,MAAY,IAAGX,GAC7B6K,IAAaL,EAAI,GAAG7R,CAAS,4BAA4B,CAAA,CAAE,GAC3D0R,IAAgBC,GAAIhP,GAAY,WAAW,GAC3CwP,IAAWN,EACf,GAAG7R,CAAS,mBACZ;AAAA,QACE,CAAC,GAAGA,CAAS,wBAAwB,GAAG,CAACuB;AAAAA,QACzC,CAAC,GAAGvB,CAAS,0BAA0B,GAAGuB;AAAAA,MAC3C,GACDmQ,CACF,GAEMI,IAAwC;AAAA,QAC5C5Q,OAAO4G;AAAAA,QACP9F,UAAAA;AAAAA,QACAH,WAAWsQ;AAAAA,QACX9Q,UAAUmQ;AAAAA,QACVrQ,aAAawE;AAAAA,QACb/B,WAAW;AAAA,QACX,GAAGjB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,QAMHsH,WAAYkB,CAAAA,MAAMlC,EAAWmJ,eAAejH,CAAC;AAAA;AAG/C,aAAA3E,EAAA,OAAA;AAAA,QAAA,OACc0L;AAAAA,MAAU,GAAA,CAAA1L,EAAAuL,IAAAC,EAAA;AAAA,QAAA,KAEbpJ;AAAAA,QAAgB,QAAApC,EAAA6L,IAAA,MAAA,IAAA;AAAA,QAAA,yBAEErK,MAAe,KAAK,GAAGQ,CAAQ,WAAWR,CAAU,KAAK;AAAA,MAAE,GAC9E8J,CAAgB,GAAA,IAAA,CAAA,CAAA;AAAA,IAI5B;AACA,aAASQ,KAAQ;AACfrJ,MAAAA,EAAWqJ,MAAK;AAAA,IAClB;AAEA,aAASC,KAAO;AACdtJ,MAAAA,EAAWsJ,KAAI;AAAA,IACjB;AAEA,aAASC,KAAa;AACpBvJ,MAAAA,EAAWuJ,WAAU;AAAA,IACvB;AAEA,aAASC,KAAY;AACnBxJ,MAAAA,EAAWwJ,UAAS;AAAA,IACtB;AAEA,aAASC,KAAc;AACrBzJ,MAAAA,EAAW0J,cAAa;AAAA,IAC1B;AAEA,aAAShI,KAAQ;AACf1B,MAAAA,EAAW0B,MAAK;AAAA,IAClB;AACAxD,IAAAA,EAAO;AAAA,MACLmL,OAAAA;AAAAA,MACAC,MAAAA;AAAAA,MACAC,YAAAA;AAAAA,MACAC,WAAAA;AAAAA,MACAC,aAAAA;AAAAA,MACA/H,OAAAA;AAAAA,IACF,CAAC;AAED,aAASnG,EAASuG,GAAqB6H,GAAqBzH,GAAQ;AAClElC,MAAAA,EAAWzE,SAAS+I,EAAMxC,CAAM,GAAG6H,GAAazH,CAAC;AAAA,IACnD;AAEA,aAASpG,GAAQoG,GAAe;AAC9BA,MAAAA,EAAE0H,yBAAwB,GAC1B5J,EAAW6J,iBAAiB3H,CAAQ;AAAA,IACtC;AAUA,aAAS4H,KAAc;AACrB,aAAAvM,EAAAwM,GAAA;AAAA,QAAA,OAAsB;AAAA,QAAI,cAAgBlM,EAAM7E;AAAAA,MAAY,GAAA,IAAA;AAAA,IAC9D;AAEA,aAASgR,KAAgB;AACvB,YAAMC,IAAoB,GAAGlT,CAAS;AACtC,aAAAwG,EAAA,OAAA;AAAA,QAAA,OACc0M;AAAAA,SAAiB1M,CAAAA,EAAA2M,IAAA,MAAA,IAAA,CAAA,CAAA;AAAA,IAIjC;AAEA,aAASC,GAAarI,GAAqB6H,GAAqBhR,GAAuB;AACrF,YAAM;AAAA,QAAEoG,YAAAA;AAAAA,QAAYF,YAAAA;AAAAA,MAAY,IAAGT,GAC7B;AAAA,QAAEpC,kBAAAA;AAAAA,MAAkB,IAAG6B;AAC7B,UAAIuM;AACJ,YAAMC,IAAYV,MAAgB5K;AAClC,UAAIuL,IAAc3R,KAAS;AAC3B,aAAImJ,EAAOnJ,UACT2R,IAAc;AAAA,QAAE,GAAGA;AAAAA,QAAa,GAAGxI,EAAOnJ;AAAAA,UAExCmJ,EAAOyI,mBACTH,IAAgBI,GAAmB1I,GAAQuI,GAAWV,GAAahR,CAAK,KAGpE,UAAUmJ,MACZA,EAAO2I,mBAAmB3I,EAAO4I,OAEnCN,IAAa7M,EAAAwM,GAAAhB,EAAA;AAAA,QAAA,UAAA;AAAA,MAAA,GAGLjH,GAAM;AAAA,QAAA,YACEA;AAAAA,QAAM,UACRA,EAAOmC;AAAAA,QAAS,UAChB1I,CAACoP,GAAgBzI,MAAkB3G,EAASoP,GAAGhB,GAAazH,CAAC;AAAA,QAAC,SAC/DmI;AAAAA,QAAS,cACJrP,MAAM4P,GAAcjB,CAAW;AAAA,QAAC,OACvCW;AAAAA,QAAW,KAEfxI,EAAO2I,oBACR3I,EAAO+I,aACJ/I,EAAOqC,QAAmBrC,EAAO7J,QAAoB0R;AAAAA,QAAW,kBAEnD3N;AAAAA,QAAgB,YACtB6C;AAAAA,QAAU,cACR,GAAGU,CAAQ,WAAWoK,CAAW;AAAA,MAAE,CAAA,GAAA;AAAA,QAAAmB,SAAAA,MAEhDhJ,CAAAA,EAAOqC,KAAK;AAAA,OAEhB,IAEIiG;AAAAA,IACT;AAEA,aAASI,GAAmB1I,GAAqBuI,GAAoBV,GAAqBhR,GAAsB;AAC9G,YAAM;AAAA,QAAEoC,kBAAAA;AAAAA,MAAkB,IAAG8C;AAE7B,UAAI,OAAO9C,IAAqB;AAsB9B,eArBuBwC,EAAAwM,GAAAhB,EAAA;AAAA,UAAA,KAEdjH,EAAO4I,QAAW5I,EAAOqC,QAAmBrC,EAAO7J;AAAAA,UAAiB,UAC/DsD,CAACoP,GAAgBzI,MAAkB3G,EAASoP,GAAGhB,GAAazH,CAAC;AAAA,UAAC,cAC1DlH,MAAM4P,GAAcjB,CAAW;AAAA,UAAC,UAAA;AAAA,QAAA,GAE1C7H,GAAM;AAAA,UAAA,YACEA;AAAAA,UAAM,SACTuI;AAAAA,UAAS,OACX1R;AAAAA,QAAK,CAAA,GAAA;AAAA,UAAAmS,SAAAA,MAAAvN,CAAAA,EAAArG,IAAA;AAAA,YAAA,eAAA;AAAA,UAAA,GAAA;AAAA,YAAA4T,SAGRC,CAAAA,MAAwBxN,EAAAyN,UAAAzN,EAAA,QAAA;AAAA,cAAA,OAET,GAAGxG,CAAS;AAAA,YAAc,GAAA,CAAGgU,EAAOE,UAAU,CAC1DnJ,GAAAA,EAAO7J,KAAK,CAAA;AAAA,UAEhB,CAAA,CAAA;AAAA,SAGN;AAIH,YAAMiT,IAAmBnQ,EAAiB+G,EAAO7J,OAAOoS,GAAW1R,CAAK;AAExE;AAAA;AAAA,QACE4E,EAAA,OAAA;AAAA,UAAA,MAAA;AAAA,UAAA,cAAA;AAAA,UAAA,SAIY2E,CAAAA,MAAM3G,EAASuG,GAAQ6H,GAAazH,CAAC;AAAA,UAAC,KAC3CJ,EAAO4I,QAAQ5I,EAAOqC;AAAAA,QAAK,GAAA,CAE/B+G,CAAgB,CAAA;AAAA;AAAA,IAGvB;AAEA,aAASN,GAAcjB,GAAqB;AAC1C3J,MAAAA,EAAWmL,uBAAuBxB,CAAW;AAAA,IAC/C;AAEA,aAASyB,GAAgBC,GAA+B;AACtD,YAAMC,IAAyB,CAAA,GACzBC,IAAc,oBAAI7M;AAExB2M,aAAAA,EAAeG,QAAQ,CAAC1J,GAAQ6H,MAAgB;AAC9C,cAAM8B,IAAc3J,EAAOsB,cACrBgH,IAAgBD,GAAarI,GAAQ6H,CAAW;AACtD,YAAI8B,KAAe,CAACF,EAAYG,IAAID,EAAYtH,KAAK,GAAG;AAEtD,gBAAMwH,IAAYpO,EAAAqO,IAAA7C,EAAoB0C,GAAW;AAAA,YAAA,KAAOA,EAAYtH;AAAAA,WAAgB,GAAA,IAAA;AACpFoH,UAAAA,EAAYM,IAAIJ,EAAYtH,OAAO,EAAI,GACvCmH,EAAQQ,KAAKH,CAAY;AAAA,QAC3B;AACAL,QAAAA,EAAQQ,KAAK1B,CAAa;AAAA,MAC5B,CAAC,GAEMkB;AAAAA,IACT;AAEA,aAASS,GAAqBV,GAA+B;AAC3D,YAAM;AAAA,QAAEtP,YAAAA;AAAAA,MAAY,IAAG8B,GACjB;AAAA,QAAEmO,WAAAA;AAAAA,UAAcvL,GAASxI,OACzB;AAAA,QAAEgU,QAAAA;AAAAA,QAAQrH,OAAAA;AAAAA,QAAOsH,UAAAA;AAAAA,MAAU,IAAGnQ;AAEpC,aAAAwB,EAAA4O,IAAA;AAAA,QAAA,KAES3M;AAAAA,QAAiB,QACdyM,KAAU9O,GAAQC;AAAAA,QAAW,WAC1BiO,EAAezH;AAAAA,QAAM,UACtBsI;AAAAA,QAAQ,UACR;AAAA,UAAEb,gBAAAA;AAAAA,UAAgBlB,cAAcA;AAAAA,QAAc;AAAA,QAAA,OACjDvF;AAAAA,QAAK,OACL;AAAA,UAAEoH,WAAAA;AAAAA,QAAU;AAAA,MAAC,GAAAxV,EAEnB4V,EAAU,IAAVA,KAAU;AAAA,QAAAtB,SAAAA,MAAA,CAAVsB,EAAU;AAAA,MAAA,CAAA;AAAA,IAGjB;AAEA,aAASC,GAAcvO,GAAoB;AACzC,YAAM;AAAA,QAAEa,kBAAAA;AAAAA,QAAkBH,SAAAA;AAAAA,QAASC,YAAAA;AAAAA,MAAY,IAAGL,GAC5C;AAAA,QACJ1F,WAAAA;AAAAA,QACAY,mBAAAA;AAAAA,QACAC,eAAAA;AAAAA,QACAC,cAAAA;AAAAA,QACAC,cAAAA;AAAAA,QACAE,iBAAAA;AAAAA,QACAC,iBAAAA;AAAAA,QACAG,SAAAA;AAAAA,QACAgC,YAAAA;AAAAA,QACAzD,UAAAA;AAAAA,QACAU,cAAAA;AAAAA,QACAyD,gBAAAA;AAAAA,QACAlE,QAAAA;AAAAA,MACD,IAAGsF,GAGEwN,IAAiB/G,EAAM9F,CAAO,EAAEjG,OAAQ+T,CAAAA,MAASA,EAAKtI,KAAK;AACjE,UAAIuI,IAA2CnB,GAAgBC,CAAc;AAC7E,MAAItP,MACFwQ,IAAcR,GAAqBV,CAAc;AAGnD,YAAM1S,IAAQ;AAAA,QACZ6T,UAAU,OAAO7N,KAAqB,WAAWA,IAAmBA,IAAmB;AAAA,QACvF,GAAGpF;AAAAA,SAGCkT,IAAgB7D,EAAI;AAAA,QACxB,CAAC,GAAG7R,CAAS,cAAc,GAAG;AAAA,QAC9B,CAAC,GAAGA,CAAS,qBAAqB,GAAG0H,EAAW5F;AAAAA,MAClD,CAAC,GAEK6T,IAAU,CAAClO,EAAQoF,UAAU,CAACU,EAAM9F,CAAO,EAAEmO,KAAML,CAAAA,MAASA,EAAKtI,KAAK;AAC5E,aAAAzG,EAAA,OAAA;AAAA,QAAA,IAEQ,GAAGxG,CAAS,IAAIuI,CAAkB;AAAA,QAAE,OACjChG;AAAAA,QAAiB,OACjBX;AAAAA,QAAK,KACPiI;AAAAA,QAAoB,WACbsB,CAAAA,MAAMlC,EAAW4M,uBAAuB1K,CAAC;AAAA,SAEpD1I,CAAAA,IAAY+D,EAAA,OAAA;AAAA,QAAA,OAEF,GAAGxG,CAAS;AAAA,QAA6B,cAClC8V,MAAM7M,EAAW8M,qBAAqB;AAAA,MAAC,GAAA,CAEpDtT,CAAY,CAEb,IAAA,MACHiD,MAAmBY,EAAQ0P,4BAA4BxU,IAASyQ,GAAqB,IAAG,MAAIzL,EAAA,OAAA;AAAA,QAAA,OAEpF;AAAA,UAAE7E,WAAW,GAAGA,CAAS;AAAA,QAAM;AAAA,QAAA,OAC/B+T;AAAAA,QAAa,MAAA;AAAA,QAAA,wBAEEnU;AAAAA,QAAQ,UACnB4J,CAAAA,MAAMlC,EAAWgN,iBAAiB9K,CAAC;AAAA,SAE7CzI,CAAAA,IAAY8D,EAAA,OAAA;AAAA,QAAA,OAEF,GAAGxG,CAAS;AAAA,QAA6B,cAClC8V,MAAM7M,EAAW8M,qBAAqB;AAAA,MAEnDrT,GAAAA,CAAAA,CAAY,KAEb,MACHM,IAAUiQ,GAAa,IAAK0C,IAAU5C,GAAW,IAAKyC,GACtD3S,IAAe2D,EAAA,OAAA;AAAA,QAAA,OAEL,GAAGxG,CAAS;AAAA,QAAgC,cACrC8V,MAAM7M,EAAW8M,qBAAqB;AAAA,MAAC,GAAA,CAEpDlT,CAAe,CAEhB,IAAA,IAAI,CAETD,GAAAA,IAAe4D,EAAA,OAAA;AAAA,QAAA,OAEL,GAAGxG,CAAS;AAAA,QAAgC,cACrC8V,MAAM7M,EAAW8M,qBAAqB;AAAA,MAEnDnT,GAAAA,CAAAA,CAAe,KAEhB,IAAI,CAAA;AAAA,IAGd;AAEA,aAASsT,GAAsBxO,GAA4CyO,GAAqB;AAC9F,UAAI;AAAA,QAAErS,oBAAAA;AAAAA,QAAoB4B,gBAAAA;AAAAA,MAAgB,IAAGoB;AAC7C,YAAM;AAAA,QAAE3F,aAAAA;AAAAA,MAAa,IAAG2F,GAClB;AAAA,QAAEiB,WAAAA;AAAAA,QAAWD,YAAAA;AAAAA,MAAY,IAAGT;AAClC,UAAI+O,IAAkB;AAEtB,YAAMC,IAAgB,CAAC,GAAG3O,CAAU;AAMpC,UAJI,OAAO5D,IAAuB,QAChCA,IAAuBwS,CAAAA,MAA4BA,EAAWlJ,QAG5DiJ,EAAcxJ,QAAQ;AACxB,cAAM0J,IAAeF,EAAc,CAAC,EAAE,CAAC;AACvCD,QAAAA,IAActS,EAAkDyS,CAAY;AAAA,MAC9E;AAEA,YAAMC,IAAqB9Q,MAAmBY,EAAQC,yBAEhDkQ,IAAU5E,EAAI;AAAA,QAClB,CAAC,GAAG7R,CAAS,iBAAiB,GAAG;AAAA,QACjC,CAAC,GAAGA,CAAS,wBAAwB,GAAG,CAACoW,KAAcA,MAAe;AAAA,QACtE,CAAC,GAAGpW,CAAS,sBAAsB,GAAG8H,KAAcC,KAAayO;AAAAA;AAAAA,QACjE,CAAC,GAAGxW,CAAS,0BAA0B,GAAG,CAAC8H,KAAcC,KAAayO;AAAAA;AAAAA,MACxE,CAAC,GAEKE,IAAoB,GAAG1W,CAAS;AACtC,aAAAwG,EAAA,OAAA;AAAA,QAAA,OACckQ;AAAAA,MAAiB,GAAA,CAAAlQ,EAAA,QAAA;AAAA,QAAA,OAEZiQ;AAAAA,QAAO,eAAA;AAAA,QAAA,KAAiCL;AAAAA,MAClDA,GAAAA,CAAAA,KAAcA,MAAe,IAAIA,IAAajV,CAAW,CAAA,GAG7DgV,KAAcpO,KAAayO,IAAqB/E,GAAkB,IAAK,IAAI,CAAA;AAAA,IAGlF;AAEA,UAAMkF,KAAaA,CAACpB,GAAWqB,GAAW9S,MAA6C;AACrF,YAAM;AAAA,QAAEhC,MAAAA;AAAAA,QAAME,UAAU6U;AAAAA,MAAgB,IAAG/P,GACrCsG,IAAQmI,EAAK,CAAC,GACd;AAAA,QAAErU,OAAAA;AAAAA,MAAM,IAAIqU,EAAK,CAAC,GAClBvT,IAAWuT,EAAK,CAAC,EAAEvT,YAAY6U,GAC/BC,IAAUA,CAACC,GAAwB5L,MAAkB;AACzD,QAAIA,KAAK,OAAOA,EAAE6L,kBAAmB,cACnC7L,EAAE6L,eAAc,GAElB/N,EAAWgO,UAAU;AAAA,UAAE7J,OAAAA;AAAAA,UAAOlM,OAAAA;AAAAA,QAAM,CAAC;AAAA,SAEjC;AAAA,QAAEqT,SAAAA;AAAAA,QAAS2C,eAAAA;AAAAA,MAAc,IAAKpT,EAAoDyR,EAAK,CAAC,GAAG;AAAA,QAC/FvI,OAAO4J;AAAAA,QACP5U,UAAAA;AAAAA,QACA8U,SAAAA;AAAAA,MACF,CAAC,GACKK,IAAQ;AAAA,QACZnV,UAAAA;AAAAA,QACAoV,UAAU,CAACpV;AAAAA,QACX8U,SAAAA;AAAAA;AAEF,aAAII,IACF1Q,EAAA6Q,IAAArF,EACWmF,GAAK;AAAA,QAAA,OAAA;AAAA,QAAA,MAAsBrV,KAAQ;AAAA,QAAO,KAAOZ;AAAAA,QAAK,UAAY;AAAA,MAAE,CAAA,GAAAzB,EAC1E8U,CAAO,IAAPA,IAAO;AAAA,QAAAR,SAAAA,MAAA,CAAPQ,CAAO;AAAA,MAAA,CAAA,IAIZ/N,EAAAyN,GAAA;AAAA,QAAA,KAAsB/S;AAAAA,MAAK,GAAA,CAAGqT,CAAO,CAAA;AAAA;AAIzC,aAAS+C,EAAU/B,GAAyBqB,GAAWW,GAA0B;AAC/E,YAAM;AAAA,QAAEzV,MAAAA;AAAAA,QAAME,UAAU6U;AAAAA,MAAgB,IAAG/P;AAC3C,UAAI;AAAA,QAAEhD,oBAAAA;AAAAA,MAAoB,IAAGgD;AAC7B,YAAMsG,IAAQmI,EAAK,CAAC,GACd;AAAA,QAAErU,OAAAA;AAAAA,MAAM,IAAIqU,EAAK,CAAC,GAClBvT,IAAWuT,EAAK,CAAC,EAAEvT,YAAY6U,GAC/BC,IAAUA,CAACC,GAAwB5L,MAAkB;AACzD,QAAIA,KAAK,OAAOA,EAAE6L,kBAAmB,cACnC7L,EAAE6L,eAAc,GAElB/N,EAAWgO,UAAU;AAAA,UAAE7J,OAAAA;AAAAA,UAAOlM,OAAAA;AAAAA,QAAM,CAAC;AAAA;AAGvC,MAAI,OAAO4C,IAAuB,QAChCA,IAAsBwS,CAAAA,OACnB;AAAA,QACCY,eAAe;AAAA,QACf3C,SAAS+B,EAAWlJ;AAAAA,MACtB;AAEJ,YAAM;AAAA,QAAEmH,SAAAA;AAAAA,QAAS2C,eAAAA;AAAAA,MAAc,IAAKpT,EAAoDyR,EAAK,CAAC,GAAG;AAAA,QAC/FvI,OAAO4J;AAAAA,QACP5U,UAAAA;AAAAA,QACA8U,SAAAA;AAAAA,MACF,CAAC,GACKK,IAAQ;AAAA,QACZnV,UAAAA;AAAAA,QACAoV,UAAU,CAACpV;AAAAA,QACX8U,SAAAA;AAAAA,SAEIU,IACJD,KAAkB,CAACE,GAAW3Q,EAAMhD,kBAAkB,IAAC0C,EAAAkR,IAAA;AAAA,QAAA,MAAA;AAAA,QAAA,UAGzC;AAAA,UAAEC,MAAM;AAAA,UAAGC,aAAa;AAAA,YAAEC,MAAM;AAAA,YAAWC,MAAM;AAAA,cAAElW,OAAO;AAAA,gBAAEiM,OAAO;AAAA,gBAAQkK,UAAU;AAAA,cAAG;AAAA,YAAE;AAAA,UAAE;AAAA,QAAE;AAAA,MAAC,GAAAtY,EAExG8U,CAAO,IAAPA,IAAO;AAAA,QAAAR,SAAAA,MAAA,CAAPQ,CAAO;AAAA,MAAA,CAAA,IAGVA;AAEJ,aAAI2C,IACF1Q,EAAA6Q,IAAArF,EACWmF,GAAK;AAAA,QAAA,OAAA;AAAA,QAAA,MAAsBrV,KAAQ;AAAA,QAAO,KAAOZ;AAAAA,QAAK,OAAS;AAAA,UAAE8W,UAAU;AAAA,QAAO;AAAA,MAAC,CAAA,GAAAvY,EACzF+X,CAAW,IAAXA,IAAW;AAAA,QAAAzD,SAAAA,MAAA,CAAXyD,CAAW;AAAA,MAAA,CAAA,IAIhBhR,EAAAyN,GAAA;AAAA,QAAA,KAAsB/S;AAAAA,MAAK,GAAA,CAAGsW,CAAW,CAAA;AAAA,IAE7C;AAEA,aAASS,GAAWC,GAAWC,GAA+B;AAC5D,YAAM;AAAA,QAAErW,MAAAA;AAAAA,QAAMuD,qBAAAA;AAAAA,QAAqBC,sBAAAA;AAAAA,MAAsB,IAAGwB;AAC5D,UAAIsR,IAAI5R,EAAA6Q,IAAA;AAAA,QAAA,UAEM;AAAA,QAAK,MACTvV,KAAQ;AAAA,QAAO,OAAA;AAAA,QAAA,WAEV,GAAG9B,CAAS;AAAA,QAA+B,KACjD,KAAKkY,CAAC;AAAA,QAAE,OACN;AAAA,UAAEG,aAAa;AAAA,UAAGC,YAAY;AAAA,QAAE;AAAA,MAAC,GAAA;AAAA,QAAAvE,SAAAA,MAAAwE,CAAAA,SAEtCL,CAAC;AAAA,OAEN;AAED,UAAI7S,GAAqB;AAAA,YAAAmT;AAAA,cAAAC,IAAA,2BAAA;AAAA,iBAelBL;AAAAA,QAAI;AAdTA,QAAAA,IAAI5R,EAAAkS,IAAA1G,EAAA;AAAA,UAAA,WAAA;AAAA,UAAA,SAAAxL,EAAAmS,IAAA;AAAA,YAAA,SAIkB;AAAA,YAAC,MAAA;AAAA,YAAA,OAAc;AAAA,cAAEX,UAAU;AAAA,YAAQ;AAAA,UAACvY,GAAAA,EAAA+Y,IACjDL,EAASrL,IAAI,CAAC8L,GAAK5L,MAAUsK,EAAUsB,GAAK5L,CAAK,CAAC,CAAC,IAAAwL,IAAA;AAAA,YAAAzE,SAAAA,MAAA,CAAAyE,CAAA;AAAA,UAAA,CAAA;AAAA,UAAA,SAAA;AAAA,UAAA,UAAA;AAAA,UAAA,oBAAA;AAAA,QAAA,GAMpDlT,GAAoB;AAAA,UAAA,KACnB,KAAK4S,CAAC;AAAA,QAAU,CAAA,GAAAzY,EAEpB2Y,CAAI,IAAJA,IAAI;AAAA,UAAArE,SAAAA,MAAA,CAAA0E,CAAA;AAAA,SAER;AAAA,MACH;AACA,aAAOL;AAAAA,IACT;AAEA,aAASS,GAAeC,GAA4B9L,GAAe;AAEjE,aAAO8L,EAAMjM,UAAUiM,EAAM,CAAC,IAAIxB,EAAUwB,EAAM,CAAC,GAAG9L,GAAO+L,EAAU,IAAI;AAAA,IAC7E;AAEA,aAASC,GAAeF,GAA4B;AAClD,YAAM;AAAA,QAAExQ,mBAAAA;AAAAA,QAAmBZ,YAAAA;AAAAA,MAAY,IAAGL,GACpC;AAAA,QAAE3F,aAAAA;AAAAA,MAAa,IAAGoF,GAClBmS,IACJvR,EAAW5F,OAAOJ,IAAc,IAAIgG,EAAW5F,OAAOJ,IAAcoX,EAAMjM,SAAS,IAAIiM,EAAMjM,SAAS;AACxG,MAAIvE,MAAsB2Q,KACxBhQ,EAAWiG,wBAAwBxH,EAAW5F,MAAMmX,CAAoB;AAAA,IAE5E;AAEA,aAASC,GAAoBxR,GAAiCmF,GAA4B;AACxF,YAAM;AAAA,QAAEvE,mBAAAA;AAAAA,MAAmB,IAAGjB,GACxB8R,IAAa,OAAOtM,KAAW,WAAWnF,EAAW0R,MAAM,GAAGvM,CAAM,IAAInF;AAC9E,aAAAlB,EAAA,OAAA;AAAA,QAAA,OACc,GAAGxG,CAAS;AAAA,SAA2BwG,CAAAA,EAAA6S,IAAA;AAAA,QAAA,OAExCF;AAAAA,QAAU,KACZpX,OAAO2F,EAAWmF,MAAM;AAAA,QAAC,kBACXyM,CAAAA,MAAkBT,GAAeS,GAAsCzM,IAAS,CAAC;AAAA,QAAC,YACxFyM,CAAAA,MAAkBN,GAAeM,CAAoC;AAAA,QAAC,qBAC9DC,CAAChE,GAAMvI,MAAUsK,EAAU/B,GAA2BvI,CAAK;AAAA,MAAC,GAAA,IAAA,GAElF1E,IAAoB,KACnB2P,GAAW3P,GAAmBZ,EAAW0R,MAAM1R,EAAWmF,SAASvE,CAAiB,CAAC,CAAC,CAAA;AAAA,IAG9F;AAEA,aAASkR,GAAkBnD,GAAoC6B,GAAuB;AACpF,UAAI;AAAA,QAAEpU,oBAAAA;AAAAA,MAAoB,IAAGgD;AAC7B,YAAM;AAAA,QAAEzB,qBAAAA;AAAAA,QAAqBC,sBAAAA;AAAAA,QAAsB5D,aAAAA;AAAAA,MAAa,IAAGoF,GAC7D;AAAA,QAAEuB,YAAAA;AAAAA,MAAY,IAAGhB;AACvB,UAAI0P;AASJ,UAPI,OAAOjT,IAAuB,QAChCA,IAAsBwS,CAAAA,OACnB;AAAA,QACCY,eAAe;AAAA,QACf3C,SAAS+B,EAAWlJ;AAAAA,MACtB,KAEA/H,GAAqB;AAGvB,cAAMoU,KADWpR,IAAagO,IAAgBA,EAAc+C,MAAM,GAAG1X,CAAW,GAC1DoL,IAAI,CAACyI,GAAMqB,MACxBD,GAAWpB,GAAMqB,GAAG9S,CAAkB,CAC9C;AAEDiT,QAAAA,IAAUvQ,EAAAkT,IAAA;AAAA,UAAA,SAEGD;AAAAA,UAAI,aACAvB;AAAAA,UAAC,WACH7P,IAAauH,SAAYyG,EAAcxJ,SAASnL;AAAAA,UAAW,MAAA;AAAA,UAAA,MAAA;AAAA,UAAA,aAGzD2D;AAAAA,UAAmB,cAClBC;AAAAA,UAAoB,mBACfqU,MAAM;AACvB1Q,YAAAA,EAAW2Q,iBAAgB;AAAA,UAC7B;AAAA,QAEH,GAAA,IAAA;AAAA,MACH,OAAO;AAKL,cAAMH,IADWpD,EAAc+C,MAAM,GAAG1X,CAAW,EAC7BoL,IAAI,CAACyI,GAAMqB,MACxBD,GAAWpB,GAAMqB,GAAG9S,CAAkB,CAC9C;AACDiT,QAAAA,IAAUvQ,EAAAkT,IAAA;AAAA,UAAA,SAEGD;AAAAA,UAAI,aACAvB;AAAAA,UAAC,WACH7B,EAAcxJ,SAASnL;AAAAA,UAAW,MAAA;AAAA,UAAA,MAAA;AAAA,QAIhD,GAAA,IAAA;AAAA,MACH;AACA,aAAOqV;AAAAA,IACT;AAEA,aAAS8C,GAAwBnS,GAA4CyO,GAAqB;AAChG,UAAI;AAAA,QAAErS,oBAAAA;AAAAA,QAAoB4B,gBAAAA;AAAAA,MAAgB,IAAGoB;AAC7C,YAAM;AAAA,QAAE3F,aAAAA;AAAAA,QAAaO,aAAAA;AAAAA,QAAa8D,uBAAAA;AAAAA,QAAuBC,iBAAAA;AAAAA,MAAiB,IAAGqB,GACvE;AAAA,QAAEgB,YAAAA;AAAAA,QAAYP,QAAAA;AAAAA,MAAQ,IAAGF,GAEzBgP,IAAgB,CAAC,GAAG3O,CAAU,GAS9BgP,IAAoB7E,EAAI;AAAA,QAC5B,CAAC,GAAG7R,CAAS,kBAAkB,GAAG;AAAA,QAClC,CAAC,GAAGA,CAAS,2BAA2B,GAAG0B,KAAe,CAAC6F;AAAAA,QAC3D,CAAC,GAAGvH,CAAS,wBAAwB,GAAG,CAACqW,EAAcxJ;AAAAA,MACzD,CAAC,GAEK4J,IAAU5E,EAAI;AAAA,QAClB,CAAC,GAAG7R,CAAS,iBAAiB,GAAG;AAAA,QACjC,CAAC,GAAGA,CAAS,wBAAwB,GAAG,CAACqW,EAAcxJ;AAAAA,QACvD,CAAC,GAAG7M,CAAS,sBAAsB,GAAGqW,KAAiBA,EAAcxJ;AAAAA,MACvE,CAAC,GACKiN,IAAkB3Y,KAAe,CAAC2G,IAAUtB,EAAA,QAAA;AAAA,QAAA,OAAgBiQ;AAAAA,SAAUtV,CAAAA,CAAW,KAAW,MAC5F+W,IAAI7B,EAAcxJ,SAASnL,IAAcA,IAAckO,QACvDmK,IAAa,CAACrY,GAEdsY,IAAcvU,IAAkByT,GAAoB7C,GAAe6B,CAAC,IAAIsB,GAAkBnD,GAAe6B,CAAC,GAE1GnB,IACJgD,KAAevU,KAAyB+B,IACpC8O,EAAcvJ,IAAI,CAACyI,GAAMqB,MAAMU,EAAU/B,GAAMqB,CAAC,CAAC,IACjDoD;AAEmB7D,aAAAA,KAAiC7P,EAAQC,yBAElEC,EAAAyN,GAAA,MAAA,CAAAzN,EAAA,OAAA;AAAA,QAAA,OAEgBkQ;AAAAA,MAAiB,GAAA,CAC1BL,KAAiBA,EAAcxJ,SAASkK,IAAa+C,GACpD3D,IAAoB1E,OAAP,IAA2B,CAAA,CAAA,CAAA;AAAA,IAIlD;AAEA,aAASxN,GAAakH,GAAe;AACnClC,MAAAA,EAAWgR,iBAAiB9O,CAAQ;AAAA,IACtC;AAEA,aAASjH,GAAaiH,GAAe;AACnClC,MAAAA,EAAWiR,iBAAiB/O,CAAQ;AAAA,IACtC;AAEA,aAASgP,GAAWhP,GAAkB;AACpClC,MAAAA,EAAWmR,eAAejP,CAAQ;AAAA,IACpC;AAGA,aAASkP,GAA2BC,GAAQ;AAC1C,YAAM;AAAA,QAAEtV,YAAAA;AAAAA,MAAY,IAAG8B,GACjB;AAAA,QAAEY,YAAAA;AAAAA,MAAY,IAAGL;AACvB,UAAKiT;AAGL,YAAItV,GAAY;AACd,cAAIuV,IAAe;AAQnB,cAPAhN,EAAM7F,CAAU,EAAE+M,QAASc,CAAAA,MAAS;AAClC,kBAAMiF,IAAY7I,GAAI4D,GAAM,cAAc;AAE1C,YAAIkF,GAASD,CAAS,KAAKA,KAAa,MACtCD,IAAeA,MAAiB,MAAMA,IAAeC,IAAYD,IAAeC;AAAAA,UAEpF,CAAC,GACGD,MAAiB;AACnB,gBAAI;AACF9R,cAAAA,EAAkBvH,MAAMwZ,aAAaH,GAAc,QAAQ;AAAA,YAC5D,SAAQI,GAAO;AACdC,sBAAQD,MAAMA,CAAK;AAAA,YACrB;AAAA,QAEJ;AACE1R,UAAAA,EAAWwG,gBAAe;AAAA,IAE9B;AAEA,aAASoL,KAAe;AACtB,YAAM;AAAA,QAAErX,QAAAA;AAAAA,MAAQ,IAAGsD,GACbgU,IAAmBjJ,EAAI;AAAA,QAC3B,CAAC,GAAG7R,CAAS,SAAS,GAAG;AAAA,QACzB,CAAC,GAAGA,CAAS,cAAc,GAAGwD,KAAUuX,GAASvX,CAAM;AAAA,QACvD,CAAC,GAAGxD,CAAS,cAAc,GAAGgb,GAAWxX,CAAM;AAAA,MACjD,CAAC;AACD,aAAAgD,EAAA,OAAA;AAAA,QAAA,OACcsU;AAAAA,QAAgB,eAAA;AAAA,MAAA,GAAA,CACzBtX,CAAM,CAAA;AAAA,IAGb;AAEA,aAASyX,KAAe;AACtB,YAAM;AAAA,QAAExX,QAAAA;AAAAA,QAAQC,YAAAA;AAAAA,QAAYC,cAAAA;AAAAA,MAAc,IAAGmD,GACvCoU,IAAazX,KAAUC,GAEvByX,IAAmBtJ,EAAI;AAAA,QAC3B,CAAC,GAAG7R,CAAS,SAAS,GAAG;AAAA,QACzB,CAAC,GAAGA,CAAS,cAAc,GAAG0D;AAAAA,QAC9B,CAAC,GAAG1D,CAAS,cAAc,GAAGkb,KAAaH,GAASG,CAAS;AAAA,QAC7D,CAAC,GAAGlb,CAAS,cAAc,GAAGgb,GAAWE,CAAS;AAAA,MACpD,CAAC;AAED,aAAA1U,EAAA,OAAA;AAAA,QAAA,OACc2U;AAAAA,QAAgB,IAAMxX;AAAAA,QAAY,eAAA;AAAA,MAAA,GAAA,CAC3CuX,CAAS,CAAA;AAAA,IAGhB;AAEA,aAASE,KAAkB;AACzB,YAAM;AAAA,QACJpZ,UAAAA;AAAAA,QACAT,UAAAA;AAAAA,QACAC,QAAAA;AAAAA,QACAI,OAAAA;AAAAA,QACA2D,IAAAA;AAAAA,QACAzD,MAAAA;AAAAA,QACAD,WAAAA;AAAAA,QACAqB,gBAAAA;AAAAA,QACAW,WAAAA;AAAAA,QACAL,QAAAA;AAAAA,QACAC,QAAAA;AAAAA,QACAC,YAAAA;AAAAA,QACAvC,aAAAA;AAAAA,QACAiC,eAAAA;AAAAA,QACA+B,WAAAA;AAAAA,QACAS,WAAAA;AAAAA,QACAhF,YAAAA;AAAAA,QACA,GAAGya;AAAAA,MACJ,IAAGvU,GAEE;AAAA,QAAEY,YAAAA;AAAAA,QAAYH,QAAAA;AAAAA,QAAQU,kBAAAA;AAAAA,QAAkBH,YAAAA;AAAAA,QAAYK,YAAAA;AAAAA,QAAYX,SAAAA;AAAAA,QAASO,WAAAA;AAAAA,QAAWC,YAAAA;AAAAA,MAAY,IAAGX,GACnGiU,KAAmB,OAAOlY,KAAkB,YAC5C+S,IAAapQ,EAAQvE,GACrB+Z,KAAeD,KACjBzJ,EAAIhQ,CAAS,IACbgQ,EAAI7R,GAAW6B,GAAW;AAAA,QACxB,CAAC,GAAG7B,CAAS,aAAa,GAAGY;AAAAA,QAC7B,CAAC,GAAGZ,CAAS,OAAO,GAAGuH;AAAAA,QACvB,CAAC,GAAGvH,CAAS,QAAQ,GAAGwH;AAAAA,QACxB,CAAC,GAAGxH,CAAS,WAAW,GAAGgC;AAAAA,QAC3B,CAAC,GAAGhC,CAAS,SAAS,GAAG,CAACuB;AAAAA,QAC1B,CAAC,GAAGvB,CAAS,WAAW,GAAGuB;AAAAA,QAC3B,CAAC,GAAGvB,CAAS,aAAa,GAAGmW;AAAAA,QAC7B,CAAC,GAAGnW,CAAS,QAAQ,GAAG8B,MAAS;AAAA,QACjC,CAAC,GAAG9B,CAAS,QAAQ,GAAG8B,MAAS;AAAA,QACjC,CAAC,GAAG9B,CAAS,QAAQ,GAAGkD,MAAmB;AAAA,QAC3C,CAAC,GAAGlD,CAAS,UAAU,GAAGkD,MAAmB;AAAA,QAC7C,CAAC,GAAGlD,CAAS,WAAW,GAAG,CAAC6D;AAAAA,QAC5B,CAAC,GAAG7D,CAAS,cAAc,GAAGyD,KAAUC;AAAAA,QACxC,CAAC,GAAG1D,CAAS,cAAc,GAAGwD;AAAAA,MAChC,CAAC,GAECI,KAAYkD,EAAMlD,cAAc8D,EAAW5F,QAAQgG,MAAe,CAAC9F,MAAamG,KAAcZ,IAE9FiU,KAAe3X,IAAS2C,EAAA,OAAA;AAAA,QAAA,OAChB,GAAGxG,CAAS;AAAA,QAAQ,eAAA;AAAA,MAC7BmF,GAAAA,CAAAA,CAAS,KAAAqB,EAAA,OAAA;AAAA,QAAA,OAGA,GAAGxG,CAAS;AAAA,MACzB,GAAA,IAAA,GACKyb,KAAQ7V,KAAqBY,EAAAkV,IAAgB,MAAA,IAAA,GAC7CC,KAAQL,KAAgB9U,EAAAoV,IAAA;AAAA,QAAA,OAEnB5U,MAAM6U,KAAKtO,EAAM7F,CAAU,EAAEoU,QAAQ;AAAA,QAAC,YACjChU;AAAAA,QAAU,UACZ0J;AAAAA,QAAiB,UACjBA;AAAAA,QAAiB,UAChB+D,CAAAA,MAAStM,EAAWgO,UAAU1B,CAAI;AAAA,QAAC,SACrCxQ;AAAAA,QAAO,UACN/C;AAAAA,QAAQ,eACHoB;AAAAA,QAAa,aACfjC;AAAAA,QAAW,eAAA;AAAA,QAAA,gBAER;AAAA,UAAE,GAAG2F;AAAAA,QAAM;AAAA,MAG7B,GAAA,IAAA,IAAA,CAAAN,EAAAyN,GAAA;AAAA,QAAA,KAAA;AAAA,MAAA,GAAA,CAC0BxQ,KAAUC,IAAauX,GAAY,IAAK,IAAI,CAAA,GAAAzU,EAAAyN,GAAA;AAAA,QAAA,KAAA;AAAA,MAAA,GAAA,CAAAzN,EAAA,OAAA;AAAA,QAAA,OAEtDqL,EAAI,GAAG7R,CAAS,YAAY;AAAA,SACrCuB,CAAAA,IACGsY,GAAwBtM,EAAM7F,CAAU,GAAGyO,CAAU,IACrDD,GAAsB3I,EAAM7F,CAAU,GAAGyO,CAAU,CAAC,CAAA,CAAA,CAAA,GAAA3P,EAAAyN,GAAA;AAAA,QAAA,KAAA;AAAA,SAGpCzQ,CAAAA,IAASqX,GAAc,IAAG,IAAI,CAAA,GAAArU,EAAAyN,GAAA;AAAA,QAAA,KAAA;AAAA,SAGnDrQ,CAAAA,KAAS4C,EAAA,OAAA;AAAA,QAAA,OACIqL,EAAI,GAAG7R,CAAS,QAAQ;AAAA,QAAC,SAAW+E;AAAAA,MAC7C0W,GAAAA,CAAAA,EAAK,CAGRD,IAAAA,EACD,CAGN,CAAA,GASKO,KAAW/Z,KAAamU,KAAcpO,MAAeoO,KAAc5U,IAAY,KAAK;AAE1F,aAAAiF,SAAAwL,EAAA;AAAA,QAAA,MAAA;AAAA,QAAA,iBAGmBhQ;AAAAA,QAAQ,iBACRuF;AAAAA,QAAM,iBACN,GAAGvH,CAAS,IAAIuI,CAAkB;AAAA,QAAE,iBAAA;AAAA,QAAA,cAAA;AAAA,QAAA,gBAGrCzB,EAAM,cAAc;AAAA,QAAC,qBAChBA,EAAM,mBAAmB;AAAA,QAAC,mBAC5BA,EAAM,iBAAiB;AAAA,QAAC,oBACvBA,EAAM,kBAAkB;AAAA,QAAC,iBAC5BA,EAAM,eAAe;AAAA,QAAC,OAC9ByU;AAAAA,QAAY,KACb7S,CAAAA,MAASG,EAAW3H,QAAQwH;AAAAA,QAAI,SAC5ByC,CAAAA,MAAMlC,EAAW+S,YAAY7Q,CAAC;AAAA,QAAC,OAClCvJ;AAAAA,QAAK,IACR2D;AAAAA,QAAE,UACIwW;AAAAA,QAAQ,yBACK/T,OAAe,KAAK,GAAGQ,CAAQ,WAAWR,EAAU,KAAK;AAAA,QAAE,cACpE/D;AAAAA,QAAY,cACZC;AAAAA,QAAY,SAChBiH,CAAAA,MAAMlC,EAAWgT,mBAAmB9Q,CAAC;AAAA,QAAC,QACvCA,CAAAA,MAAMlC,EAAWiT,kBAAkB/Q,CAAQ;AAAA,QAAC,YACzCgP;AAAAA,MAAU,GAClBlS,GACA0B,GAAW,CAAE,IAEhBgS,EAAK,CAAA;AAAA,IAGZ;AAEA,WAAO,MAAM;AACX,YAAM;AAAA,QAAE1G,WAAAA;AAAAA,UAAcvL,GAASxI,OACzBib,IAAkBlH,MAAc,QAAQ,gBAAgB,cACxD;AAAA,QACJ7S,UAAAA,IAAW+Z;AAAAA,QACXha,QAAAA;AAAAA,QACAG,mBAAAA;AAAAA,QACAgB,QAAAA;AAAAA,QACAmB,oBAAAA;AAAAA,QACAE,iBAAAA;AAAAA,QACAD,iBAAAA;AAAAA,QACAE,SAAAA;AAAAA,QACAvB,iBAAAA;AAAAA,QACAwC,gBAAAA;AAAAA,MACD,IAAGiB,GACE;AAAA,QAAES,QAAAA;AAAAA,QAAQM,WAAAA;AAAAA,MAAW,IAAGR,GACxBvE,IAAawS,GAAcxO,EAAMC,WAAWD,EAAMC,WAAW,IAAI,GACjEqV,IAAYhB;AAClB,aAAA5U,EAAAkS,IAAA;AAAA,QAAA,mBAEuBpW;AAAAA,QAAiB,QAC5BgB;AAAAA,QAAM,oBACMmB;AAAAA,QAAkB,iBACrBE;AAAAA,QAAe,iBACfD;AAAAA,QAAe,QAExBvC;AAAAA,QAAM,KACT2G;AAAAA,QAAU,SACNhG;AAAAA,QAAU,SACVyE;AAAAA,QAAM,SAAA;AAAA,QAAA,UAELM;AAAAA,QAAS,UACTzF;AAAAA,QAAQ,SACTwC;AAAAA,QAAO,iBACCvB;AAAAA,QAAe,qBACX;AAAA,QAAI,iBACPiX,CAAAA,MAAWD,GAA2BC,CAAM;AAAA,QAAC,YACnD+B,MAAMpT,EAAWqT,mBAAmB;AAAA,MAAC,GAAA7c,EAEhD2c,CAAS,IAATA,IAAS;AAAA,QAAArI,SAAAA,MAAA,CAATqI,CAAS;AAAA,MAAA,CAAA;AAAA;EAIlB;AACF,CAAC,GAEKG,KAAS1V,gBAAAA,GAAgB;AAAA,EAC7BC,OAAO;AAAA,IAAE,GAAGJ;AAAAA,EAAc;AAAA,EAC1BO,MAAM;AAAA,EACNC,MAAMJ,GAAO;AAAA,IAAC0V,OAAAA;AAAAA,IAAOrV,QAAAA;AAAAA,EAAM,GAAE;AAC3B,UAAM;AAAA,MAACwI,UAAAA;AAAAA,IAAS,IAAGvG,GAAa,GAE1BqT,IAAS/T;AACfvB,WAAAA,EAAO;AAAA,MACLmL,QAAO;;AACLmK,SAAAA,IAAAA,EAAOvb,UAAPub,QAAAA,EAAcnK;AAAAA,MACf;AAAA,MACDC,OAAM;;AACJkK,SAAAA,IAAAA,EAAOvb,UAAPub,QAAAA,EAAclK;AAAAA,MACf;AAAA,MACDC,aAAY;;AACViK,SAAAA,IAAAA,EAAOvb,UAAPub,QAAAA,EAAcjK;AAAAA,MACf;AAAA,MACDC,YAAW;;AACTgK,SAAAA,IAAAA,EAAOvb,UAAPub,QAAAA,EAAchK;AAAAA,MACf;AAAA,MACDC,cAAa;;AACX+J,SAAAA,IAAAA,EAAOvb,UAAPub,QAAAA,EAAc/J;AAAAA,MACf;AAAA,MACD/H,QAAO;;AACL8R,SAAAA,IAAAA,EAAOvb,UAAPub,QAAAA,EAAc9R;AAAAA,MAChB;AAAA,IACF,CAAC,GAEM,MAAI;AACT,YAAM5D,IAAW2V,GAAoBF,CAAK;AAC1C,aAAAhW,EAAAI,IAAAoL,EAAA;AAAA,QAAA,KAAmByK;AAAAA,SAAY9M,EAAS7I,CAAK,GAAC;AAAA,QAAA,UAAYC,KAAY,CAAA;AAAA,MAAE,CAAA,GAAA,IAAA;AAAA;EAE5E;AACF,CAAC,GAMK4V,KAAaJ;AACnBI,GAAW3J,SAASA;AACpB2J,GAAWC,WAAW/H;"}