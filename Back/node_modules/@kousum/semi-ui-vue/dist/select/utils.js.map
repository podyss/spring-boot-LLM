{"version":3,"file":"utils.js","sources":["../../src/components/select/utils.tsx"],"sourcesContent":["import { defineComponent, ref, h, Fragment, VNode } from 'vue';\nimport warning from '@douyinfe/semi-foundation/utils/warning';\nimport type { OptionProps } from './option';\nimport type { OptionGroupProps } from './optionGroup';\nimport { getFragmentChildren } from '../_utils';\n\nconst generateOption = (child: VNode, parent: any, index: number, newKey?: string | number): OptionProps => {\n  const childProps = child.props;\n  if (!child || !childProps) {\n    return null;\n  }\n\n\n  const option = {\n    value: childProps.value,\n    // Drop-down menu rendering priority label value, children, value in turn downgrade\n    label:\n      childProps.label ||\n      // @ts-ignore\n      (typeof child.children === 'object' && child.children.default ? child.children.default() : null) ||\n      childProps.value,\n    _show: true,\n    _selected: false,\n    _scrollIndex: index,\n    ...childProps,\n    _parentGroup: parent,\n  };\n\n  // Props are collected from ReactNode, after React.Children.toArray\n  // no need to determine whether the key exists in child\n  // Even if the user does not explicitly declare it, React will always generate a key.\n  //@ts-ignore\n  option._keyInJsx = newKey || child.key;\n\n  return option;\n};\n\nconst getOptionsFromGroup = (selectChildren: VNode[]) => {\n  let optionGroups: OptionGroupProps[] = [];\n  let options: OptionProps[] = [];\n\n  const emptyGroup = { label: '', children: [], _show: false };\n\n  // TODO 不同点\n  // if (!Array.isArray(selectChildren)){\n  //   selectChildren = selectChildren[0].children as VNode[]\n  // }\n\n  // avoid null\n  // eslint-disable-next-line max-len\n  // let childNodes = React.Children.toArray(selectChildren) as React.ReactElement[];\n  let childNodes = selectChildren.filter((childNode) => {\n    return childNode && childNode.props;\n  });\n\n  let type = '';\n  let optionIndex = -1;\n\n  childNodes.forEach((child: VNode) => {\n    // @ts-ignore\n    if (child.type?.name === 'isSelectOption') {\n      type = 'option';\n      optionIndex++;\n      const option = generateOption(child, undefined, optionIndex);\n      emptyGroup.children.push(option);\n      options.push(option);\n      // @ts-ignore\n    } else if (child.type?.name === 'isSelectOptionGroup') {\n      type = 'group';\n      // Avoid saving children (reactNode) by... removing other props from the group except children, causing performance problems\n      // eslint-disable-next-line prefer-const\n      let { ...restGroupProps } = child.props;\n\n\n      // @ts-ignore\n      let children = getFragmentChildren(child.children);\n      let originKeys = [];\n      if (Array.isArray(children)) {\n        // if group has children > 1\n        originKeys = children.map(item => item.key);\n      } else {\n        // @ts-ignore\n        originKeys.push(children.key);\n      }\n      // children = React.Children.toArray(children);\n      if (Array.isArray(children[0])) {\n        children = children[0];\n      }\n\n      const childrenOption = children.map((option: VNode, index) => {\n        let newKey = option.key;\n        if (originKeys[index] === null) {\n          // @ts-ignore\n          newKey = child.key + '' + option.key; // if option in group and didn't set key, concat parent key to avoid conflict (default generate key just like .0, .1)\n        }\n        optionIndex++;\n        return generateOption(option, restGroupProps, optionIndex, newKey as string);\n      });\n      const group: OptionGroupProps = {\n        ...child.props,\n        children: childrenOption as VNode[],\n        // @ts-ignore\n        key: child.key,\n      };\n      optionGroups.push(group);\n      options = options.concat(childrenOption);\n    } else {\n      warning(true, '[Semi Select] The children of `Select` should be `Select.Option` or `Select.OptionGroup`');\n    }\n  });\n  if (type === 'option') {\n    optionGroups = [emptyGroup];\n  }\n  return { optionGroups, options };\n};\n\nexport { generateOption, getOptionsFromGroup };\n"],"names":["generateOption","child","parent","index","newKey","childProps","props","option","value","label","children","default","_show","_selected","_scrollIndex","_parentGroup","_keyInJsx","key","getOptionsFromGroup","selectChildren","optionGroups","options","emptyGroup","childNodes","filter","childNode","type","optionIndex","forEach","name","undefined","push","restGroupProps","getFragmentChildren","originKeys","Array","isArray","map","item","childrenOption","group","concat","warning"],"mappings":";;AAMMA,MAAAA,IAAiBA,CAACC,GAAcC,GAAaC,GAAeC,MAA0C;AAC1G,QAAMC,IAAaJ,EAAMK;AACzB,MAAI,CAACL,KAAS,CAACI;AACb,WAAO;AAIT,QAAME,IAAS;AAAA,IACbC,OAAOH,EAAWG;AAAAA;AAAAA,IAElBC,OACEJ,EAAWI;AAAAA,KAEV,OAAOR,EAAMS,YAAa,YAAYT,EAAMS,SAASC,UAAUV,EAAMS,SAASC,QAAO,IAAK,SAC3FN,EAAWG;AAAAA,IACbI,OAAO;AAAA,IACPC,WAAW;AAAA,IACXC,cAAcX;AAAAA,IACd,GAAGE;AAAAA,IACHU,cAAcb;AAAAA;AAOhBK,SAAAA,EAAOS,YAAYZ,KAAUH,EAAMgB,KAE5BV;AACT,GAEMW,IAAuBC,CAAAA,MAA4B;AACvD,MAAIC,IAAmC,CAAA,GACnCC,IAAyB,CAAA;AAE7B,QAAMC,IAAa;AAAA,IAAEb,OAAO;AAAA,IAAIC,UAAU,CAAE;AAAA,IAAEE,OAAO;AAAA;AAUrD,MAAIW,IAAaJ,EAAeK,OAAQC,CAAAA,MAC/BA,KAAaA,EAAUnB,KAC/B,GAEGoB,IAAO,IACPC,IAAc;AAElBJ,SAAAA,EAAWK,QAAS3B,CAAAA,MAAiB;;AAEnC,UAAIA,IAAAA,EAAMyB,SAANzB,gBAAAA,EAAY4B,UAAS,kBAAkB;AACzCH,MAAAA,IAAO,UACPC;AACA,YAAMpB,IAASP,EAAeC,GAAO6B,QAAWH,CAAW;AAC3DL,MAAAA,EAAWZ,SAASqB,KAAKxB,CAAM,GAC/Bc,EAAQU,KAAKxB,CAAM;AAAA,IAEpB,aAAUN,IAAAA,EAAMyB,SAANzB,gBAAAA,EAAY4B,UAAS,uBAAuB;AACrDH,MAAAA,IAAO;AAGP,UAAI;AAAA,QAAE,GAAGM;AAAAA,UAAmB/B,EAAMK,OAI9BI,IAAWuB,EAAoBhC,EAAMS,QAAQ,GAC7CwB,IAAa,CAAA;AACjB,MAAIC,MAAMC,QAAQ1B,CAAQ,IAExBwB,IAAaxB,EAAS2B,IAAIC,CAAAA,MAAQA,EAAKrB,GAAG,IAG1CiB,EAAWH,KAAKrB,EAASO,GAAG,GAG1BkB,MAAMC,QAAQ1B,EAAS,CAAC,CAAC,MAC3BA,IAAWA,EAAS,CAAC;AAGvB,YAAM6B,IAAiB7B,EAAS2B,IAAI,CAAC9B,GAAeJ,MAAU;AAC5D,YAAIC,IAASG,EAAOU;AACpB,eAAIiB,EAAW/B,CAAK,MAAM,SAExBC,IAASH,EAAMgB,MAAM,KAAKV,EAAOU,MAEnCU,KACO3B,EAAeO,GAAQyB,GAAgBL,GAAavB,CAAgB;AAAA,MAC7E,CAAC,GACKoC,IAA0B;AAAA,QAC9B,GAAGvC,EAAMK;AAAAA,QACTI,UAAU6B;AAAAA;AAAAA,QAEVtB,KAAKhB,EAAMgB;AAAAA;AAEbG,MAAAA,EAAaW,KAAKS,CAAK,GACvBnB,IAAUA,EAAQoB,OAAOF,CAAc;AAAA,IACzC;AACEG,MAAAA,EAAQ,IAAM,0FAA0F;AAAA,EAE5G,CAAC,GACGhB,MAAS,aACXN,IAAe,CAACE,CAAU,IAErB;AAAA,IAAEF,cAAAA;AAAAA,IAAcC,SAAAA;AAAAA;AACzB;"}