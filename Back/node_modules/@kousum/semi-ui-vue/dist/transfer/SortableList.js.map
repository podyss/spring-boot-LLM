{"version":3,"file":"SortableList.js","sources":["../../src/components/transfer/SortableList.tsx"],"sourcesContent":["import { defineComponent, h, ref, useSlots } from 'vue';\nimport SortableItem from './SortableItem';\nimport { CombineProps } from '../interface';\nimport { DragDropProvider } from '@kousum/dnd-kit-vue';\nimport { prefixCls } from './index';\nimport {RestrictToVerticalAxis} from '@dnd-kit/abstract/modifiers';\n\ninterface SortableListProps {\n  items: any;\n  onSortOver: any;\n  useDragHandle: any;\n  helperClass: any;\n  axis: any;\n}\n\nexport const vuePropsType: CombineProps<Partial<SortableListProps>> = {\n  items: Array,\n  onSortOver: Function,\n  useDragHandle: [Boolean],\n  helperClass: String,\n  axis: String,\n};\nconst SortableList = defineComponent({\n  props: { ...vuePropsType },\n  name: 'SortableList',\n  setup(props, {}) {\n    const slots = useSlots();\n\n    // const sensors = useSensors(\n    //   useSensor(PointerSensor, {\n    //     activationConstraint: {\n    //       // distance: 5,\n    //       delay: 100,\n    //       tolerance: 100,\n    //     },\n    //   }),\n    //   useSensor(KeyboardSensor, {\n    //     coordinateGetter: sortableKeyboardCoordinates,\n    //   })\n    // );\n    // const dropAnimationConfig: DropAnimation = {\n    //   sideEffects: defaultDropAnimationSideEffects({\n    //     styles: {\n    //       active: {\n    //         opacity: '0.5',\n    //       },\n    //     },\n    //   }),\n    // };\n    const overlayId = ref('');\n\n\n    return () => {\n      return (\n        <DragDropProvider\n          modifiers={[RestrictToVerticalAxis]}\n          onDragStart={(event) => {\n            overlayId.value = '' + event.operation.source?.id;\n          }}\n          onDragOver={(event) => {\n            props.onSortOver(event)\n          }}\n          onDragEnd={(event) => {\n            // props.onSortOver(event)\n          }}\n        >\n          <div class={`${prefixCls}-right-list`} role=\"list\" aria-label=\"Selected list\">\n            {props.items.map((item: any, index: number) => (\n              <SortableItem key={item.key} index={index} id={item.id} item={item.node} />\n            ))}\n          </div>\n        </DragDropProvider>\n      );\n    };\n  },\n});\n\nexport default SortableList;\n"],"names":["vuePropsType","items","Array","onSortOver","Function","useDragHandle","Boolean","helperClass","String","axis","SortableList","defineComponent","props","name","setup","useSlots","overlayId","ref","_createVNode","DragDropProvider","RestrictToVerticalAxis","event","value","operation","source","id","default","prefixCls","map","item","index","SortableItem","key","node"],"mappings":";;;;;AAeO,MAAMA,IAAyD;AAAA,EACpEC,OAAOC;AAAAA,EACPC,YAAYC;AAAAA,EACZC,eAAe,CAACC,OAAO;AAAA,EACvBC,aAAaC;AAAAA,EACbC,MAAMD;AACR,GACME,IAAeC,gBAAAA,EAAgB;AAAA,EACnCC,OAAO;AAAA,IAAE,GAAGZ;AAAAA,EAAc;AAAA,EAC1Ba,MAAM;AAAA,EACNC,MAAMF,GAAO,IAAI;AACDG,IAAAA,EAAU;AAuBxB,UAAMC,IAAYC,EAAI,EAAE;AAGxB,WAAO,MACLC,EAAAC,GAAA;AAAA,MAAA,WAEe,CAACC,CAAsB;AAAA,MAAC,aACrBC,CAAAA,MAAU;;AACtBL,QAAAA,EAAUM,QAAQ,OAAKD,IAAAA,EAAME,UAAUC,WAAhBH,gBAAAA,EAAwBI;AAAAA,MAChD;AAAA,MAAA,YACYJ,CAAAA,MAAU;AACrBT,QAAAA,EAAMT,WAAWkB,CAAK;AAAA,MACvB;AAAA,MAAA,WACWA,CAAAA,MAAU;AAAA,MACpB;AAAA,IACD,GAAA;AAAA,MAAAK,SAAAA,MAAA,CAAAR,EAAA,OAAA;AAAA,QAAA,OAEW,GAAGS,CAAS;AAAA,QAAa,MAAA;AAAA,QAAA,cAAA;AAAA,MAAA,GAAA,CAClCf,EAAMX,MAAM2B,IAAI,CAACC,GAAWC,MAAaZ,EAAAa,GAAA;AAAA,QAAA,KACrBF,EAAKG;AAAAA,QAAG,OAASF;AAAAA,QAAK,IAAMD,EAAKJ;AAAAA,QAAE,MAAQI,EAAKI;AAAAA,MAAI,GAAA,IAAA,CACxE,CAAC,CAAA,CAAA;AAAA,IAAA,CAAA;AAAA,EAKZ;AACF,CAAC;"}