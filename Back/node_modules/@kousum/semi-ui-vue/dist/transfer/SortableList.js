import { defineComponent as a, useSlots as n, ref as s, createVNode as o } from "vue";
import l from "./SortableItem";
import { DragDropProvider as d } from "@kousum/dnd-kit-vue";
import { prefixCls as m } from "./index";
import { RestrictToVerticalAxis as p } from "@dnd-kit/abstract/modifiers";
const u = {
  items: Array,
  onSortOver: Function,
  useDragHandle: [Boolean],
  helperClass: String,
  axis: String
}, D = /* @__PURE__ */ a({
  props: {
    ...u
  },
  name: "SortableList",
  setup(t, {}) {
    n();
    const i = s("");
    return () => o(d, {
      modifiers: [p],
      onDragStart: (e) => {
        var r;
        i.value = "" + ((r = e.operation.source) == null ? void 0 : r.id);
      },
      onDragOver: (e) => {
        t.onSortOver(e);
      },
      onDragEnd: (e) => {
      }
    }, {
      default: () => [o("div", {
        class: `${m}-right-list`,
        role: "list",
        "aria-label": "Selected list"
      }, [t.items.map((e, r) => o(l, {
        key: e.key,
        index: r,
        id: e.id,
        item: e.node
      }, null))])]
    });
  }
});
export {
  D as default,
  u as vuePropsType
};
//# sourceMappingURL=SortableList.js.map
