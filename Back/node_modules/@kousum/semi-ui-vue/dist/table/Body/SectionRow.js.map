{"version":3,"file":"SectionRow.js","sources":["../../../src/components/table/Body/SectionRow.tsx"],"sourcesContent":["import * as PropTypes from '../../PropTypes';\nimport classnames from 'classnames';\nimport { get, isSet } from 'lodash';\n\nimport Store from '@douyinfe/semi-foundation/utils/Store';\nimport { cssClasses, strings } from '@douyinfe/semi-foundation/table/constants';\nimport { filterColumns } from '@douyinfe/semi-foundation/table/utils';\nimport BaseRow from './BaseRow';\nimport TableContext, { TableContextProps } from '../table-context';\nimport {\n  ColumnProps,\n  RenderGroupSection,\n  OnGroupedRow,\n  TableComponents,\n  Virtualized,\n  RowKey,\n  OnRowReturnObject,\n} from '../interface';\nimport { CombineProps, VueJsxNode } from '../../interface';\nimport { ComponentObjectPropsOptions, CSSProperties, defineComponent, h, isVNode, PropType, useSlots } from 'vue';\nimport { vuePropsMake } from '../../PropTypes';\nimport { useTableContext } from '../tableContext/Consumer';\n\nexport interface SectionRowProps {\n  record?: Record<string, any>;\n  index?: number;\n  columns?: ColumnProps[];\n  group?: (string | number)[];\n  groupKey: string | number;\n  data?: Record<string, any>[];\n  renderGroupSection?: RenderGroupSection; // render group title\n  onGroupedRow?: OnGroupedRow<Record<string, any>>;\n  clickGroupedRowToExpand?: boolean;\n  components?: TableComponents;\n  expanded?: boolean;\n  prefixCls?: string;\n  onExpand?: (willExpanded: boolean, groupKey: number | string, e: MouseEvent) => void;\n  virtualized?: Virtualized;\n  style?: CSSProperties;\n  renderExpandIcon?: (record: Record<string, any>, isNested: boolean, groupKey: string | number) => VueJsxNode | null;\n  className?: string;\n  store?: Store;\n  rowKey?: RowKey<any>;\n}\n\n/**\n * Grouping component title row\n */\nconst propTypes: CombineProps<SectionRowProps> = {\n  record: PropTypes.object,\n  index: PropTypes.number,\n  columns: PropTypes.array,\n  group: PropTypes.object,\n  groupKey: {\n    type: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    required: true\n  },\n  data: PropTypes.array,\n  renderGroupSection: PropTypes.func as PropType<SectionRowProps['renderGroupSection']>, // render group title\n  onGroupedRow: PropTypes.func as PropType<SectionRowProps['onGroupedRow']>,\n  clickGroupedRowToExpand: PropTypes.bool,\n  components: PropTypes.object,\n  expanded: PropTypes.bool,\n  prefixCls: PropTypes.string,\n  onExpand: PropTypes.func as PropType<SectionRowProps['onExpand']>,\n  virtualized: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  style: PropTypes.object,\n  renderExpandIcon: PropTypes.func as PropType<SectionRowProps['renderExpandIcon']>, // passing to baseRow\n  className: PropTypes.string,\n  store: PropTypes.object,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.func]),\n};\nexport { propTypes as SectionRowPropTypes };\nconst defaultProps = {\n  prefixCls: cssClasses.PREFIX,\n  components: {\n    body: {\n      row: 'tr',\n      cell: 'td',\n    },\n  },\n};\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst SectionRow = defineComponent({\n  props: { ...vuePropsType },\n  name: 'SectionRow',\n  setup(props, {}) {\n    const slots = useSlots();\n    const { context } = useTableContext();\n\n    const onRow = (...args: any[]): OnRowReturnObject => {\n      const { onGroupedRow, clickGroupedRowToExpand, onExpand, groupKey, expanded } = props;\n      const rowProps: { onClick?: (e: MouseEvent) => void } = {};\n\n      if (typeof onGroupedRow === 'function') {\n        Object.assign(rowProps, onGroupedRow(...args));\n      }\n\n      return {\n        ...rowProps,\n        onClick: (e: MouseEvent) => {\n          if (typeof onExpand === 'function' && clickGroupedRowToExpand) {\n            onExpand(!expanded, groupKey, e);\n          }\n\n          if (typeof rowProps.onClick === 'function') {\n            rowProps.onClick(e);\n          }\n        },\n      };\n    };\n\n    const vcollectGroupedData = () => {\n      const { data, group, rowKey } = props;\n\n      if (Array.isArray(data) && data.length && isSet(group)) {\n        return data.filter((record) => {\n          const realRowKey = typeof rowKey === 'function' ? rowKey(record) : get(record, rowKey);\n          return realRowKey != null && realRowKey !== '' && group.has(realRowKey);\n        });\n      }\n\n      return [];\n    };\n\n    const renderExpandIcon = (record: any) => {\n      const { renderExpandIcon, groupKey } = props;\n\n      if (typeof renderExpandIcon === 'function') {\n        return renderExpandIcon(record, false, groupKey);\n      }\n      return null;\n    };\n\n    function isInnerColumnKey(key: any) {\n      if (key != null) {\n        return [strings.DEFAULT_KEY_COLUMN_EXPAND, strings.DEFAULT_KEY_COLUMN_SELECTION].includes(key);\n      }\n\n      return false;\n    }\n\n    return () => {\n      const {\n        record,\n        columns: propColumns = [],\n        prefixCls,\n        className,\n        expanded,\n        renderGroupSection,\n        components,\n        index,\n        store,\n        group,\n        groupKey,\n        virtualized,\n        style,\n      } = props;\n\n      const props_: { colSpan?: number } = {};\n      let column = {};\n      let children: VueJsxNode = null;\n      // render title\n      const cell = typeof renderGroupSection === 'function' ? renderGroupSection(groupKey, [...group]) : null;\n\n      if (isVNode(cell)) {\n        children = cell;\n      } else if (cell && Object.prototype.toString.call(cell) === '[object Object]') {\n        const { children: cellChildren, ...restProps } = cell as { children?: VueJsxNode };\n        children = cellChildren;\n        column = { ...restProps };\n      }\n\n      // Filter out scroll-bar column\n      props_.colSpan = filterColumns(propColumns).length;\n\n      const columns = [{ render: () => ({ props: props_, children }), ...column }];\n\n      const rowCls = classnames(className, `${prefixCls}-row-section`, {\n        on: expanded,\n      });\n\n      const { getCellWidths } = context.value;\n      const baseRowCellWidths = getCellWidths(columns, null, true);\n\n      return (\n        <BaseRow\n          components={components}\n          virtualized={virtualized}\n          index={index}\n          onRow={onRow}\n          expanded={expanded}\n          expandIcon\n          isSection\n          record={record}\n          replaceClassName={rowCls}\n          expandableRow\n          renderExpandIcon={renderExpandIcon}\n          rowKey={groupKey}\n          columns={columns}\n          store={store}\n          style={style}\n          cellWidths={baseRowCellWidths}\n        />\n      );\n    };\n  },\n});\n\nexport default SectionRow;\n"],"names":["propTypes","record","PropTypes","object","index","number","columns","array","group","groupKey","type","oneOfType","string","required","data","renderGroupSection","func","onGroupedRow","clickGroupedRowToExpand","bool","components","expanded","prefixCls","onExpand","virtualized","style","renderExpandIcon","className","store","rowKey","defaultProps","cssClasses","PREFIX","body","row","cell","vuePropsType","vuePropsMake","SectionRow","defineComponent","props","name","setup","useSlots","context","useTableContext","onRow","args","rowProps","Object","assign","onClick","e","propColumns","props_","column","children","isVNode","prototype","toString","call","cellChildren","restProps","colSpan","filterColumns","length","render","rowCls","classnames","on","getCellWidths","value","baseRowCellWidths","_createVNode","BaseRow"],"mappings":"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"}