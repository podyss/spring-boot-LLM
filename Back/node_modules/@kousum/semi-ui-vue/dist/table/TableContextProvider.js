import { defineComponent as a, useSlots as l, computed as i, createVNode as o } from "vue";
import r from "./table-context";
import * as e from "../PropTypes";
const s = {
  headWidths: e.array,
  setHeadWidths: e.func,
  handleRowExpanded: e.func,
  tableWidth: e.number,
  anyColumnFixed: e.bool,
  flattenedColumns: e.array,
  renderExpandIcon: e.func,
  renderSelection: e.func,
  getHeadWidths: e.func,
  getCellWidths: e.func,
  getVirtualizedListRef: [e.func, e.object],
  setBodyHasScrollbar: e.func,
  direction: e.string
}, f = /* @__PURE__ */ a({
  props: {
    ...s
  },
  name: "TableContextProvider",
  setup(t, {}) {
    const d = l(), n = i(() => ({
      anyColumnFixed: t.anyColumnFixed,
      flattenedColumns: t.flattenedColumns,
      renderExpandIcon: t.renderExpandIcon,
      renderSelection: t.renderSelection,
      setHeadWidths: t.setHeadWidths,
      getHeadWidths: t.getHeadWidths,
      getCellWidths: t.getCellWidths,
      headWidths: t.headWidths,
      tableWidth: t.tableWidth,
      handleRowExpanded: t.handleRowExpanded,
      getVirtualizedListRef: t.getVirtualizedListRef,
      setBodyHasScrollbar: t.setBodyHasScrollbar,
      direction: t.direction
    }));
    return () => o(r.Provider, {
      value: n.value
    }, {
      default: d.default
    });
  }
});
export {
  f as default,
  s as vuePropsType
};
//# sourceMappingURL=TableContextProvider.js.map
