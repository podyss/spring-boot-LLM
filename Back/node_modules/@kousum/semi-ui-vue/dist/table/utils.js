import { merge as D, map as E, find as _, clone as b } from "lodash";
import g from '@douyinfe/semi-foundation/lib/es/utils/Logger';
import { numbers as n, strings as c } from '@douyinfe/semi-foundation/lib/es/table/constants';
import { cloneDeep as h } from "../_utils";
import { cloneDeep as N } from "../_utils";
import { getColumnKey as f } from '@douyinfe/semi-foundation/lib/es/table/utils';
let u, s;
const m = {
  position: "absolute",
  top: "-9999px",
  width: "50px",
  height: "50px"
};
function v(r = "vertical") {
  if (typeof document > "u" || typeof window > "u")
    return 0;
  const t = r === "vertical";
  if (t && u)
    return u;
  if (!t && s)
    return s;
  const e = document.createElement("div");
  Object.keys(m).forEach((l) => {
    e.style[l] = m[l];
  }), t ? e.style.overflowY = "scroll" : e.style.overflowX = "scroll", document.body.appendChild(e);
  let o = 0;
  return t ? (o = e.offsetWidth - e.clientWidth, u = o) : (o = e.offsetHeight - e.clientHeight, s = o), document.body.removeChild(e), o;
}
function y(r) {
  return typeof r == "number" ? r - n.DEFAULT_CELL_PADDING_LEFT - n.DEFAULT_CELL_PADDING_RIGHT - n.DEFAULT_CELL_BORDER_WIDTH_LEFT - n.DEFAULT_CELL_BORDER_WIDTH_RIGHT - v("vertical") : void 0;
}
function O(r, t) {
  return D(
    {},
    {
      table: "table",
      header: {
        outer: "table",
        wrapper: "thead",
        row: "tr",
        cell: "th"
      },
      body: t ? {
        outer: "div",
        wrapper: "div",
        row: "div",
        cell: "div",
        colgroup: {
          wrapper: "div",
          col: "div"
        }
      } : {
        outer: "table",
        wrapper: "tbody",
        row: "tr",
        cell: "td",
        colgroup: {
          wrapper: "colgroup",
          col: "col"
        }
      },
      footer: {
        wrapper: "tfoot",
        row: "tr",
        cell: "td"
      }
    },
    r
  );
}
const C = new g("[@kousum/semi-ui-vue Table]");
function H(r = [], t = [], e = null, o = !0) {
  const l = [], d = o ? h : b;
  return E(t, (i) => {
    i = { ...i };
    const p = f(i, e), a = p != null && _(r, (T) => f(T, e) === p);
    a ? l.push(
      d({
        ...a,
        ...i
      })
    ) : l.push(d(i));
  }), l;
}
function x(r) {
  switch (r) {
    case c.SORT_DIRECTIONS[0]:
      return c.SORT_DIRECTIONS[1];
    case c.SORT_DIRECTIONS[1]:
      return "cancelSort";
    default:
      return c.SORT_DIRECTIONS[0];
  }
}
export {
  y as amendTableWidth,
  N as cloneDeep,
  x as getNextSortOrder,
  C as logger,
  v as measureScrollbar,
  H as mergeColumns,
  O as mergeComponents
};
//# sourceMappingURL=utils.js.map
