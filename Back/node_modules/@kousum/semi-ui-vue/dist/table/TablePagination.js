import { defineComponent as g, useSlots as m, createVNode as n, isVNode as f, Fragment as c, mergeProps as u } from "vue";
import * as o from "../PropTypes";
import { vuePropsMake as P } from "../PropTypes";
import { get as s, isFunction as d, omit as T } from "lodash";
import { cssClasses as y } from '@douyinfe/semi-foundation/lib/es/table/constants';
import x from "../pagination";
const C = {
  style: o.object,
  prefixCls: o.string,
  pagination: o.object,
  info: o.oneOfType([o.string, o.node]),
  renderPagination: o.func
}, b = {
  prefixCls: y.PREFIX
}, v = P(C, b), S = /* @__PURE__ */ g({
  props: {
    ...v
  },
  name: "TablePagination",
  setup(r, {}) {
    return m(), () => {
      const {
        pagination: t,
        prefixCls: e,
        info: p,
        renderPagination: a
      } = r, l = s(t, "total"), i = a && d(a) ? a(t) : null;
      return n("div", {
        class: `${e}-pagination-outer`
      }, [f(i) ? i : n(c, null, [n("span", {
        class: `${e}-pagination-info`
      }, [p]), n("span", {
        class: `${e}-pagination-wrapper`
      }, [l > 0 ? n(x, u(T(t, "formatPageText"), {
        key: s(t, "pageSize", "pagination")
      }), null) : null])])]);
    };
  }
});
export {
  S as default,
  v as vuePropsType
};
//# sourceMappingURL=TablePagination.js.map
