{"version":3,"file":"index.js","sources":["../../src/components/table/index.tsx"],"sourcesContent":["import * as PropTypes from '../PropTypes';\nimport NormalTable_, { NormalTableProps, TablePropTypes } from './Table';\nimport ResizableTable from './ResizableTable';\nimport Column from './Column';\nimport { strings } from '@douyinfe/semi-foundation/table/constants';\nimport type { TableProps, Data } from './interface';\n\nimport { ComponentObjectPropsOptions, defineComponent, h, ref, useSlots } from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { useConfigContext } from '../configProvider/context/Consumer';\nimport { useHasInProps } from '../_base/baseComponent';\nimport { CombineProps } from '../interface';\nimport { getFragmentChildren } from '../_utils';\n\nconst propTypes: CombineProps<NormalTableProps<any> & {resizable?: any}> = {\n  ...TablePropTypes,\n  resizable: [PropTypes.bool, PropTypes.object],\n};\n\nconst defaultProps = {\n  hideExpandedColumn: true,\n};\n\nfunction Table<RecordType extends Record<string, any> = Data>() {\n  const NormalTable = NormalTable_<RecordType>();\n  const vuePropsType = vuePropsMake<TableProps<RecordType>>(propTypes, defaultProps);\n  const Table = defineComponent({\n    props: { ...vuePropsType } as CombineProps<TableProps<RecordType>>,\n    name: 'TableIndex',\n    setup(props, { expose }) {\n      const {getProps} = useHasInProps()\n      const slots = useSlots();\n      const tableRef = ref();\n      const { context } = useConfigContext();\n\n      const getCurrentPageData = () => tableRef.value && tableRef.value.getCurrentPageData();\n\n      expose({\n        getCurrentPageData,\n      });\n\n      return () => {\n        const direction = props.direction ?? context.value.direction;\n        const children = getFragmentChildren(slots)\n        // eslint-disable-next-line prefer-destructuring\n        if (props.resizable) {\n          return (\n            <ResizableTable\n              {...getProps(props)}\n              children={children}\n              ref={tableRef}\n              direction={direction}\n            ></ResizableTable>\n          );\n        } else {\n          return (\n            <NormalTable {...getProps(props)} children={children} ref={tableRef} direction={direction}></NormalTable>\n          );\n        }\n      };\n    },\n  });\n\n  return Table;\n}\n\nconst Table_ = Table();\nexport type TableType = typeof Table_ & {\n  Column: typeof Column;\n}\nconst BaseTable = Table_ as TableType;\nBaseTable.Column = Column\nexport default BaseTable;\nconst DEFAULT_KEY_COLUMN_SELECTION = strings.DEFAULT_KEY_COLUMN_SELECTION;\nconst DEFAULT_KEY_COLUMN_EXPAND = strings.DEFAULT_KEY_COLUMN_EXPAND;\nexport { Table as TableMaker, Column as TableColumn, DEFAULT_KEY_COLUMN_SELECTION, DEFAULT_KEY_COLUMN_EXPAND };\n\nexport * from './interface';\n"],"names":["propTypes","TablePropTypes","resizable","PropTypes","bool","object","defaultProps","hideExpandedColumn","Table","NormalTable","NormalTable_","vuePropsType","vuePropsMake","defineComponent","props","name","setup","expose","getProps","useHasInProps","slots","useSlots","tableRef","ref","context","useConfigContext","getCurrentPageData","value","direction","children","getFragmentChildren","_createVNode","ResizableTable","_mergeProps","Table_","BaseTable","Column","DEFAULT_KEY_COLUMN_SELECTION","strings","DEFAULT_KEY_COLUMN_EXPAND"],"mappings":";;;;;;;;;;;;AAcA,MAAMA,IAAqE;AAAA,EACzE,GAAGC;AAAAA,EACHC,WAAW,CAACC,EAAUC,MAAMD,EAAUE,MAAM;AAC9C,GAEMC,IAAe;AAAA,EACnBC,oBAAoB;AACtB;AAEA,SAASC,IAAuD;AAC9D,QAAMC,IAAcC,KACdC,IAAeC,EAAqCZ,GAAWM,CAAY;AAsCjF,SArCcO,gBAAAA,EAAgB;AAAA,IAC5BC,OAAO;AAAA,MAAE,GAAGH;AAAAA,IAAsD;AAAA,IAClEI,MAAM;AAAA,IACNC,MAAMF,GAAO;AAAA,MAAEG,QAAAA;AAAAA,IAAO,GAAG;AACvB,YAAM;AAAA,QAACC,UAAAA;AAAAA,MAAS,IAAGC,EAAa,GAC1BC,IAAQC,KACRC,IAAWC,KACX;AAAA,QAAEC,SAAAA;AAAAA,MAAS,IAAGC,EAAgB;AAIpCR,aAAAA,EAAO;AAAA,QACLS,oBAHyBA,MAAMJ,EAASK,SAASL,EAASK,MAAMD;MAIlE,CAAC,GAEM,MAAM;AACX,cAAME,IAAYd,EAAMc,aAAaJ,EAAQG,MAAMC,WAC7CC,IAAWC,EAAoBV,CAAK;AAE1C,eAAIN,EAAMZ,YACR6B,EAAAC,GAAAC,EAEQf,EAASJ,CAAK,GAAC;AAAA,UAAA,UACTe;AAAAA,UAAQ,KACbP;AAAAA,UAAQ,WACFM;AAAAA,QAAS,CAAA,GAAA,IAAA,IAIxBG,EAAAtB,GAAAwB,EACmBf,EAASJ,CAAK,GAAC;AAAA,UAAA,UAAYe;AAAAA,UAAQ,KAAOP;AAAAA,UAAQ,WAAaM;AAAAA,QAAS,CAAA,GAAA,IAAA;AAAA;IAIjG;AAAA,EACF,CAAC;AAGH;AAEA,MAAMM,IAAS1B,EAAK,GAId2B,IAAYD;AAClBC,EAAUC,SAASA;AAEnB,MAAMC,IAA+BC,EAAQD,8BACvCE,IAA4BD,EAAQC;"}