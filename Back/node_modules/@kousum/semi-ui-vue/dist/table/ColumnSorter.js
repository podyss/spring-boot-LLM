import { defineComponent as b, useSlots as I, createVNode as r, mergeProps as g, isVNode as w } from "vue";
import * as o from "../PropTypes";
import { vuePropsMake as P } from "../PropTypes";
import p from "classnames";
import { noop as $ } from "lodash";
import { IconCaretup as N, IconCaretdown as x } from "@kousum/semi-icons-vue";
import { cssClasses as h, strings as a } from '@douyinfe/semi-foundation/lib/es/table/constants';
import k from '@douyinfe/semi-foundation/lib/es/utils/isEnterPress';
import R from "../tooltip";
import { getNextSortOrder as j } from "./utils";
import v from "../locale/localeConsumer";
function E(n) {
  return typeof n == "function" || Object.prototype.toString.call(n) === "[object Object]" && !w(n);
}
const z = {
  className: o.string,
  style: o.object,
  onClick: o.func,
  prefixCls: o.string,
  sortOrder: o.oneOfType([o.string, o.bool]),
  sortIcon: o.func,
  title: o.any,
  showTooltip: o.bool
}, _ = {
  prefixCls: h.PREFIX,
  onClick: $,
  sortOrder: !1,
  showTooltip: !1
}, D = P(z, _), J = /* @__PURE__ */ b({
  props: {
    ...D
  },
  name: "ColumnSorter",
  setup(n, {}) {
    return I(), () => {
      const {
        prefixCls: s,
        onClick: l,
        sortOrder: e,
        style: m,
        title: u,
        sortIcon: i,
        showTooltip: f
      } = n, c = "default", d = p(`${s}-column-sorter-up`, {
        on: e === a.SORT_DIRECTIONS[0]
      }), C = p(`${s}-column-sorter-down`, {
        on: e === a.SORT_DIRECTIONS[1]
      }), S = {
        /**
         * Set 'aria-sort' to aria-columnheader is difficult, so set 'aria-label' about sort info to sorter
         * reference: https://developer.mozilla.org/en-US/docs/Web/API/Element/ariaSort
         */
        "aria-label": `Current sort order is ${e ? `${e}ing` : "none"}`,
        "aria-roledescription": "Sort data with this column"
      }, T = () => {
        if (typeof i == "function")
          return i({
            sortOrder: e
          });
        {
          const t = r("div", {
            style: m,
            class: `${s}-column-sorter`
          }, [r("span", {
            class: `${d}`
          }, [r(N, {
            size: c
          }, null)]), r("span", {
            class: `${C}`
          }, [r(x, {
            size: c
          }, null)])]);
          if (f) {
            let y = j(e);
            return r(v, {
              componentName: "Table"
            }, {
              default: (O, V) => r(R, {
                content: O[y]
              }, E(t) ? t : {
                default: () => [t]
              })
            });
          }
          return t;
        }
      };
      return r("div", g({
        role: "button"
      }, S, {
        tabindex: -1,
        class: `${s}-column-sorter-wrapper`,
        onClick: l,
        onKeypress: (t) => k(t) && l(t)
      }), [u, T()]);
    };
  }
});
export {
  J as default,
  D as vuePropsType
};
//# sourceMappingURL=ColumnSorter.js.map
