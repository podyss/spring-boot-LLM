{"version":3,"file":"utils.js","sources":["../../src/components/table/utils.ts"],"sourcesContent":["import { merge, clone as lodashClone, find, map } from 'lodash';\nimport Logger from '@douyinfe/semi-foundation/utils/Logger';\nimport { numbers, strings } from '@douyinfe/semi-foundation/table/constants';\nimport { cloneDeep } from '../_utils';\nimport { TableComponents, Virtualized } from './interface';\nimport { getColumnKey } from '@douyinfe/semi-foundation/table/utils';\n\n\nlet scrollbarVerticalSize: number,\n    scrollbarHorizontalSize: number;\n\n// Measure scrollbar width for padding body during modal show/hide\nconst scrollbarMeasure = {\n    position: 'absolute',\n    top: '-9999px',\n    width: '50px',\n    height: '50px',\n};\n\n/**\n * @param {'vertical'|'horizontal'} [direction]\n * @returns {number}\n */\nexport function measureScrollbar(direction = 'vertical') {\n    if (typeof document === 'undefined' || typeof window === 'undefined') {\n        return 0;\n    }\n    const isVertical = direction === 'vertical';\n    if (isVertical && scrollbarVerticalSize) {\n        return scrollbarVerticalSize;\n    } else if (!isVertical && scrollbarHorizontalSize) {\n        return scrollbarHorizontalSize;\n    }\n    const scrollDiv = document.createElement('div');\n    Object.keys(scrollbarMeasure).forEach(scrollProp => {\n        scrollDiv.style[scrollProp] = scrollbarMeasure[scrollProp];\n    });\n    // Append related overflow style\n    if (isVertical) {\n        scrollDiv.style.overflowY = 'scroll';\n    } else {\n        scrollDiv.style.overflowX = 'scroll';\n    }\n    document.body.appendChild(scrollDiv);\n    let size = 0;\n    if (isVertical) {\n        // clientWidth is the inner width (excluding borders and scrollbars)\n        // offsetWidth is the outer width (including padding and borders)\n        size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        scrollbarVerticalSize = size;\n    } else {\n        size = scrollDiv.offsetHeight - scrollDiv.clientHeight;\n        scrollbarHorizontalSize = size;\n    }\n\n    document.body.removeChild(scrollDiv);\n\n    // console.log(size);\n\n    return size;\n}\n\nexport function amendTableWidth(tableWidth: number) {\n    return typeof tableWidth === 'number' ?\n        tableWidth -\n              numbers.DEFAULT_CELL_PADDING_LEFT -\n              numbers.DEFAULT_CELL_PADDING_RIGHT -\n              numbers.DEFAULT_CELL_BORDER_WIDTH_LEFT -\n              numbers.DEFAULT_CELL_BORDER_WIDTH_RIGHT -\n              measureScrollbar('vertical') :\n        undefined;\n}\n\n/**\n * The user can pass a component to define the rendering method of each level of the table\n * This function merges the components passed in by the user with the default components\n * @param {Object} components\n * @param {Boolean|Object} virtualized\n * @returns\n */\nexport function mergeComponents(components: TableComponents, virtualized: Virtualized) {\n    return merge(\n        {},\n        {\n            table: 'table',\n            header: {\n                outer: 'table',\n                wrapper: 'thead',\n                row: 'tr',\n                cell: 'th',\n            },\n            body: virtualized ?\n                {\n                    outer: 'div',\n                    wrapper: 'div',\n                    row: 'div',\n                    cell: 'div',\n                    colgroup: {\n                        wrapper: 'div',\n                        col: 'div',\n                    },\n                } :\n                {\n                    outer: 'table',\n                    wrapper: 'tbody',\n                    row: 'tr',\n                    cell: 'td',\n                    colgroup: {\n                        wrapper: 'colgroup',\n                        col: 'col',\n                    },\n                },\n            footer: {\n                wrapper: 'tfoot',\n                row: 'tr',\n                cell: 'td',\n            },\n        },\n        components\n    );\n}\n\nexport const logger = new Logger('[@kousum/semi-ui-vue Table]');\n\nexport function mergeColumns(oldColumns: any[] = [], newColumns: any[] = [], keyPropNames: any[] = null, deep = true) {\n    const finalColumns: any[] = [];\n    const clone = deep ? cloneDeep : lodashClone;\n\n    map(newColumns, newColumn => {\n        newColumn = { ...newColumn };\n        const key = getColumnKey(newColumn, keyPropNames);\n\n        const oldColumn = key != null && find(oldColumns, item => getColumnKey(item, keyPropNames) === key);\n\n        if (oldColumn) {\n            finalColumns.push(\n              clone({\n                  ...oldColumn,\n                  ...newColumn,\n              })\n            );\n        } else {\n            finalColumns.push(clone(newColumn));\n        }\n    });\n\n    return finalColumns;\n}\n\nexport function getNextSortOrder(sortOrder: string | boolean) {\n    switch (sortOrder) {\n        case strings.SORT_DIRECTIONS[0]:\n            return strings.SORT_DIRECTIONS[1];\n        case strings.SORT_DIRECTIONS[1]:\n            return 'cancelSort';\n        default:\n            return strings.SORT_DIRECTIONS[0];\n    }\n}\n\nexport { cloneDeep };\n"],"names":["scrollbarVerticalSize","scrollbarHorizontalSize","scrollbarMeasure","measureScrollbar","direction","isVertical","scrollDiv","scrollProp","size","amendTableWidth","tableWidth","numbers","mergeComponents","components","virtualized","merge","logger","Logger","mergeColumns","oldColumns","newColumns","keyPropNames","deep","finalColumns","clone","cloneDeep","lodashClone","map","newColumn","key","getColumnKey","oldColumn","find","item","getNextSortOrder","sortOrder","strings"],"mappings":";;;;;;AAQA,IAAIA,GACAC;AAGJ,MAAMC,IAAmB;AAAA,EACrB,UAAU;AAAA,EACV,KAAK;AAAA,EACL,OAAO;AAAA,EACP,QAAQ;AACZ;AAMgB,SAAAC,EAAiBC,IAAY,YAAY;AACrD,MAAI,OAAO,WAAa,OAAe,OAAO,SAAW;AAC9C,WAAA;AAEX,QAAMC,IAAaD,MAAc;AACjC,MAAIC,KAAcL;AACP,WAAAA;AACX,MAAW,CAACK,KAAcJ;AACf,WAAAA;AAEL,QAAAK,IAAY,SAAS,cAAc,KAAK;AAC9C,SAAO,KAAKJ,CAAgB,EAAE,QAAQ,CAAcK,MAAA;AAChD,IAAAD,EAAU,MAAMC,CAAU,IAAIL,EAAiBK,CAAU;AAAA,EAAA,CAC5D,GAEGF,IACAC,EAAU,MAAM,YAAY,WAE5BA,EAAU,MAAM,YAAY,UAEvB,SAAA,KAAK,YAAYA,CAAS;AACnC,MAAIE,IAAO;AACX,SAAIH,KAGOG,IAAAF,EAAU,cAAcA,EAAU,aACjBN,IAAAQ,MAEjBA,IAAAF,EAAU,eAAeA,EAAU,cAChBL,IAAAO,IAGrB,SAAA,KAAK,YAAYF,CAAS,GAI5BE;AACX;AAEO,SAASC,EAAgBC,GAAoB;AAChD,SAAO,OAAOA,KAAe,WACzBA,IACMC,EAAQ,4BACRA,EAAQ,6BACRA,EAAQ,iCACRA,EAAQ,kCACRR,EAAiB,UAAU,IACjC;AACR;AASgB,SAAAS,EAAgBC,GAA6BC,GAA0B;AAC5E,SAAAC;AAAA,IACH,CAAC;AAAA,IACD;AAAA,MACI,OAAO;AAAA,MACP,QAAQ;AAAA,QACJ,OAAO;AAAA,QACP,SAAS;AAAA,QACT,KAAK;AAAA,QACL,MAAM;AAAA,MACV;AAAA,MACA,MAAMD,IACF;AAAA,QACI,OAAO;AAAA,QACP,SAAS;AAAA,QACT,KAAK;AAAA,QACL,MAAM;AAAA,QACN,UAAU;AAAA,UACN,SAAS;AAAA,UACT,KAAK;AAAA,QACT;AAAA,MAAA,IAEJ;AAAA,QACI,OAAO;AAAA,QACP,SAAS;AAAA,QACT,KAAK;AAAA,QACL,MAAM;AAAA,QACN,UAAU;AAAA,UACN,SAAS;AAAA,UACT,KAAK;AAAA,QACT;AAAA,MACJ;AAAA,MACJ,QAAQ;AAAA,QACJ,SAAS;AAAA,QACT,KAAK;AAAA,QACL,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,IACAD;AAAA,EAAA;AAER;AAEa,MAAAG,IAAS,IAAIC,EAAO,6BAA6B;AAE9C,SAAAC,EAAaC,IAAoB,CAAA,GAAIC,IAAoB,CAAI,GAAAC,IAAsB,MAAMC,IAAO,IAAM;AAClH,QAAMC,IAAsB,CAAA,GACtBC,IAAQF,IAAOG,IAAYC;AAEjC,SAAAC,EAAIP,GAAY,CAAaQ,MAAA;AACb,IAAAA,IAAA,EAAE,GAAGA;AACX,UAAAC,IAAMC,EAAaF,GAAWP,CAAY,GAE1CU,IAAYF,KAAO,QAAQG,EAAKb,GAAY,OAAQW,EAAaG,GAAMZ,CAAY,MAAMQ,CAAG;AAElG,IAAIE,IACaR,EAAA;AAAA,MACXC,EAAM;AAAA,QACF,GAAGO;AAAA,QACH,GAAGH;AAAA,MAAA,CACN;AAAA,IAAA,IAGUL,EAAA,KAAKC,EAAMI,CAAS,CAAC;AAAA,EACtC,CACH,GAEML;AACX;AAEO,SAASW,EAAiBC,GAA6B;AAC1D,UAAQA,GAAW;AAAA,IACf,KAAKC,EAAQ,gBAAgB,CAAC;AACnB,aAAAA,EAAQ,gBAAgB,CAAC;AAAA,IACpC,KAAKA,EAAQ,gBAAgB,CAAC;AACnB,aAAA;AAAA,IACX;AACW,aAAAA,EAAQ,gBAAgB,CAAC;AAAA,EACxC;AACJ;"}