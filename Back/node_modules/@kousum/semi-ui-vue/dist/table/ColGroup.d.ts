import { ColumnProps, TableComponents } from './interface';
import type { CSSProperties } from 'vue';
import { CombineProps } from '../interface';
export interface ColGroupProps {
    columns?: ColumnProps[];
    prefixCls?: string;
    className?: string;
    style?: CSSProperties;
    components?: TableComponents['body'];
}
export declare const vuePropsType: CombineProps<ColGroupProps>;
declare const ColGroup: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    columns: import("vue").PropType<ColumnProps<any>[]> | {
        type: import("vue").PropType<ColumnProps<any>[]>;
        default?: any;
        required?: false;
    };
    prefixCls: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    style: import("vue").PropType<CSSProperties> | {
        type: import("vue").PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    components: import("vue").PropType<{
        outer?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
            className?: string;
        }>;
        wrapper?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
            className?: string;
        }>;
        row?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
            className?: string;
        }>;
        cell?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
            className?: string;
        }>;
        colgroup?: {
            wrapper?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
                className?: string;
            }>;
            col?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
                className?: string;
            }>;
        };
    }> | {
        type: import("vue").PropType<{
            outer?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
                className?: string;
            }>;
            wrapper?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
                className?: string;
            }>;
            row?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
                className?: string;
            }>;
            cell?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
                className?: string;
            }>;
            colgroup?: {
                wrapper?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
                    className?: string;
                }>;
                col?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
                    className?: string;
                }>;
            };
        }>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    columns: import("vue").PropType<ColumnProps<any>[]> | {
        type: import("vue").PropType<ColumnProps<any>[]>;
        default?: any;
        required?: false;
    };
    prefixCls: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    style: import("vue").PropType<CSSProperties> | {
        type: import("vue").PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    components: import("vue").PropType<{
        outer?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
            className?: string;
        }>;
        wrapper?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
            className?: string;
        }>;
        row?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
            className?: string;
        }>;
        cell?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
            className?: string;
        }>;
        colgroup?: {
            wrapper?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
                className?: string;
            }>;
            col?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
                className?: string;
            }>;
        };
    }> | {
        type: import("vue").PropType<{
            outer?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
                className?: string;
            }>;
            wrapper?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
                className?: string;
            }>;
            row?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
                className?: string;
            }>;
            cell?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
                className?: string;
            }>;
            colgroup?: {
                wrapper?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
                    className?: string;
                }>;
                col?: import("vue").DefineSetupFnComponent<import("vue").HTMLAttributes & {
                    className?: string;
                }>;
            };
        }>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default ColGroup;
