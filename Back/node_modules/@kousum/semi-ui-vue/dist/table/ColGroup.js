import { defineComponent as C, useSlots as h, createVNode as c, isVNode as w } from "vue";
import * as e from "../PropTypes";
import { vuePropsMake as x } from "../PropTypes";
import n from "classnames";
import { get as i } from "lodash";
import { cssClasses as N } from '@douyinfe/semi-foundation/lib/es/table/constants';
import { flattenColumns as b } from '@douyinfe/semi-foundation/lib/es/table/utils';
function j(s) {
  return typeof s == "function" || Object.prototype.toString.call(s) === "[object Object]" && !w(s);
}
const P = {
  columns: e.array,
  prefixCls: e.string,
  className: e.string,
  style: e.object,
  components: e.object
}, S = {
  columns: [],
  prefixCls: N.PREFIX
}, k = x(P, S), $ = /* @__PURE__ */ C({
  props: {
    ...k
  },
  name: "ColGroup",
  setup(s, {}) {
    return h(), () => {
      const {
        columns: a,
        className: m,
        style: f,
        prefixCls: p,
        components: l
      } = s, u = i(l, "colgroup.wrapper", "colgroup"), d = i(l, "colgroup.col", "col"), r = b(a).map((o, g) => {
        const t = {};
        return o.width && (t.width = typeof o.width == "string" ? o.width : o.width + "px", t.minWidth = typeof t.width == "string" ? t.width : t.width + "px"), c(d, {
          className: n(`${p}-col`, o.className),
          key: o.key || o.dataIndex || g,
          style: t
        }, null);
      }), y = n(`${p}-colgroup`, m);
      return c(u, {
        className: y,
        style: f
      }, j(r) ? r : {
        default: () => [r]
      });
    };
  }
});
export {
  $ as default,
  k as vuePropsType
};
//# sourceMappingURL=ColGroup.js.map
