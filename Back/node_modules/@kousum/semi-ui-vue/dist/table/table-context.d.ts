import { ColumnProps, GetVirtualizedListRef, RowKey } from './interface';
import { BaseHeadWidth } from '@douyinfe/semi-foundation/lib/es/table/foundation';
import { VueJsxNode } from "../interface";
import type { ContextValue } from '../configProvider/context';
export interface TableContextProps {
    anyColumnFixed?: boolean;
    flattenedColumns?: ColumnProps[];
    tableWidth?: number;
    headWidths?: BaseHeadWidth[][];
    setHeadWidths?: (headWidth?: BaseHeadWidth[], index?: number) => void;
    getHeadWidths?: (index?: number) => number[];
    getCellWidths?: (flattenColumns: ColumnProps[], flattenedWidths?: number[], ignoreScrollBarKey?: boolean) => number[];
    handleRowExpanded?: (expanded: boolean, realKey: RowKey<any>, domEvent: MouseEvent) => void;
    renderExpandIcon?: (record: Record<string, any>, isNested?: boolean, groupKey?: string | number) => VueJsxNode;
    renderSelection?: (record?: Record<string, any>, isHeader?: boolean) => VueJsxNode;
    getVirtualizedListRef?: GetVirtualizedListRef;
    setBodyHasScrollbar?: (bodyHasScrollBar: boolean) => void;
    direction?: ContextValue['direction'];
}
declare const TableContext: {
    Provider: import("vue").DefineSetupFnComponent<{
        value: any;
    }, {}, {}, {
        value: any;
    } & {}, import("vue").PublicProps>;
    Consumer: import("vue").DefineSetupFnComponent<{
        name: string;
    }, {}, {}, {
        name: string;
    } & {}, import("vue").PublicProps>;
};
export default TableContext;
