{"version":3,"file":"HeadTable.js","sources":["../../src/components/table/HeadTable.tsx"],"sourcesContent":["/* eslint-disable max-len */\nimport * as PropTypes from '../PropTypes';\nimport { get, noop } from 'lodash';\nimport classnames from 'classnames';\n\nimport ColGroup from './ColGroup';\nimport TableHeader from './TableHeader';\nimport { Fixed, TableComponents, Scroll, BodyScrollEvent, ColumnProps, OnHeaderRow, Sticky } from './interface';\nimport { ComponentObjectPropsOptions, CSSProperties, defineComponent, h, PropType, useSlots } from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { useHasInProps } from '../_base/baseComponent';\nimport { CombineProps } from '../interface';\n\nexport interface HeadTableProps {\n  tableLayout?: 'fixed' | 'auto';\n  anyColumnFixed?: boolean;\n  bodyHasScrollBar?: boolean;\n  columns?: ColumnProps[];\n  components?: TableComponents;\n  dataSource?: Record<string, any>[];\n  fixed?: Fixed;\n  handleBodyScroll?: (e: BodyScrollEvent) => void;\n  prefixCls?: string;\n  forwardedRef?: any;\n  scroll?: Scroll;\n  selectedRowKeysSet: Set<any>;\n  showHeader?: boolean;\n  onDidUpdate?: (ref: any) => void;\n  onHeaderRow?: OnHeaderRow<any>;\n  sticky?: Sticky;\n}\n\n/**\n * When there are fixed columns, the header is rendered as a separate Table\n */\n\nconst propTypes: CombineProps<HeadTableProps> = {\n  tableLayout: PropTypes.string as PropType<HeadTableProps['tableLayout']>,\n  bodyHasScrollBar: PropTypes.bool,\n  columns: PropTypes.array,\n  components: PropTypes.object,\n  dataSource: PropTypes.array,\n  fixed: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  handleBodyScroll: PropTypes.func as PropType<HeadTableProps['handleBodyScroll']>,\n  prefixCls: PropTypes.string,\n  forwardedRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  scroll: PropTypes.object,\n  selectedRowKeysSet: {\n    type: PropTypes.object,\n    required: true,\n  }, // Useful when update is selected\n  showHeader: PropTypes.bool,\n  onDidUpdate: PropTypes.func as PropType<HeadTableProps['onDidUpdate']>,\n  onHeaderRow: PropTypes.func as PropType<HeadTableProps['onHeaderRow']>,\n  anyColumnFixed: PropTypes.bool,\n  sticky: [PropTypes.bool, PropTypes.object],\n};\n\nconst defaultProps = {\n  handleBodyScroll: noop,\n};\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst HeadTable = defineComponent({\n  props: { ...vuePropsType },\n  name: 'HeadTable',\n  setup(props, {}) {\n    const {getProps} = useHasInProps()\n    const slots = useSlots();\n\n    return () => {\n      const {\n        scroll,\n        prefixCls,\n        fixed,\n        forwardedRef,\n        handleBodyScroll,\n        columns,\n        components,\n        onDidUpdate,\n        showHeader,\n        tableLayout,\n        anyColumnFixed,\n        bodyHasScrollBar,\n        sticky,\n      } = getProps(props);\n\n      const Table = get(components, 'header.outer', 'table') as any;\n      const x = get(scroll, 'x');\n      const headStyle: Partial<CSSProperties> = {};\n      const tableStyle: { width?: number | string } = {};\n\n      if (x && !fixed) {\n        tableStyle.width = x + 'px';\n      }\n\n      if (bodyHasScrollBar) {\n        headStyle.overflowY = 'scroll';\n      }\n\n      const colgroup = <ColGroup columns={columns} prefixCls={prefixCls} />;\n      const tableHeader = (\n        <TableHeader {...getProps(props)} columns={columns} components={components} onDidUpdate={onDidUpdate} />\n      );\n\n      const headTableCls = classnames(`${prefixCls}-header`, {\n        [`${prefixCls}-header-sticky`]: sticky,\n        [`${prefixCls}-header-hidden`]: !showHeader,\n      });\n\n      const stickyTop = get(sticky, 'top', 0);\n      if (typeof stickyTop === 'number') {\n        headStyle.top = stickyTop;\n      }\n\n      return (\n        <div key=\"headTable\" style={headStyle} class={headTableCls} ref={forwardedRef} onScroll={handleBodyScroll}>\n          <Table\n            style={tableStyle}\n            className={classnames(prefixCls, {\n              [`${prefixCls}-fixed`]: tableLayout === 'fixed',\n            })}\n          >\n            {colgroup}\n            {tableHeader}\n          </Table>\n        </div>\n      );\n    };\n  },\n});\n\nexport default HeadTable;\n"],"names":["propTypes","tableLayout","PropTypes","string","bodyHasScrollBar","bool","columns","array","components","object","dataSource","fixed","oneOfType","handleBodyScroll","func","prefixCls","forwardedRef","scroll","selectedRowKeysSet","type","required","showHeader","onDidUpdate","onHeaderRow","anyColumnFixed","sticky","defaultProps","noop","vuePropsType","vuePropsMake","HeadTable","defineComponent","props","name","setup","getProps","useHasInProps","useSlots","Table","get","x","headStyle","tableStyle","width","overflowY","colgroup","_createVNode","ColGroup","tableHeader","TableHeader","_mergeProps","headTableCls","classnames","stickyTop","top","default"],"mappings":"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"}