import { PropType } from 'vue';
import { CombineProps } from '../interface';
export interface ResizableHeaderCellProps {
    onResize?: ResizeFn;
    onResizeStart?: ResizeFn;
    onResizeStop?: ResizeFn;
    width?: number | string;
    /** For compatibility with previous versions, the default value is true. If you don't want to resize, set it to false */
    resize?: boolean;
}
export declare const vuePropsType: CombineProps<ResizableHeaderCellProps>;
declare const ResizableHeaderCell: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    onResize: PropType<ResizeFn> | {
        type: PropType<ResizeFn>;
        default?: any;
        required?: false;
    };
    onResizeStart: PropType<ResizeFn> | {
        type: PropType<ResizeFn>;
        default?: any;
        required?: false;
    };
    onResizeStop: PropType<ResizeFn> | {
        type: PropType<ResizeFn>;
        default?: any;
        required?: false;
    };
    width: PropType<string | number> | {
        type: PropType<string | number>;
        default?: any;
        required?: false;
    };
    resize: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    onResize: PropType<ResizeFn> | {
        type: PropType<ResizeFn>;
        default?: any;
        required?: false;
    };
    onResizeStart: PropType<ResizeFn> | {
        type: PropType<ResizeFn>;
        default?: any;
        required?: false;
    };
    onResizeStop: PropType<ResizeFn> | {
        type: PropType<ResizeFn>;
        default?: any;
        required?: false;
    };
    width: PropType<string | number> | {
        type: PropType<string | number>;
        default?: any;
        required?: false;
    };
    resize: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export type ResizeFn = (e: any) => any;
export default ResizableHeaderCell;
