{"version":3,"file":"TableCell.js","sources":["../../src/components/table/TableCell.tsx"],"sourcesContent":["/* eslint-disable prefer-destructuring */\n/* eslint-disable eqeqeq */\nimport classnames from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport { get, noop, set, omit, isEqual, merge } from 'lodash';\n\nimport { cssClasses, numbers } from '@douyinfe/semi-foundation/table/constants';\nimport TableCellFoundation, { TableCellAdapter } from '@douyinfe/semi-foundation/table/cellFoundation';\nimport {\n  isSelectionColumn,\n  isExpandedColumn,\n  getRTLAlign,\n  shouldShowEllipsisTitle,\n  getRTLFlexAlign,\n} from '@douyinfe/semi-foundation/table/utils';\n\nimport { BaseProps, useBaseComponent } from '../_base/baseComponent';\nimport Context, { TableContextProps } from './table-context';\nimport { amendTableWidth } from './utils';\nimport { ColumnProps, ExpandIcon } from './interface';\nimport {\n  ComponentObjectPropsOptions,\n  CSSProperties,\n  defineComponent,\n  Fragment,\n  h,\n  isVNode,\n  PropType,\n  reactive,\n  ref,\n  useSlots,\n  watch,\n} from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { useTableContext } from './tableContext/Consumer';\nimport { FooterProps } from '../image/interface';\nimport { CombineProps, VueJsxNode } from '../interface';\nimport { styleNum } from '../_utils';\n\nexport interface TableCellProps extends BaseProps {\n  record?: Record<string, any>;\n  prefixCls?: string;\n  index?: number; // index of dataSource\n  fixedLeft?: boolean | number;\n  lastFixedLeft?: boolean;\n  fixedRight?: boolean | number;\n  firstFixedRight?: boolean;\n  indent?: number; // The level of the tree structure\n  indentSize?: number; // Tree structure indent size\n  column?: ColumnProps; // The column of the current cell\n  /**\n   * Does the first column include expandIcon\n   * When hideExpandedColumn is true or isSection is true\n   * expandIcon is a custom icon or true\n   */\n  expandIcon?: ExpandIcon;\n  renderExpandIcon?: (record: Record<string, any>) => VueJsxNode;\n  hideExpandedColumn?: boolean;\n  component?: any;\n  onClick?: (record: Record<string, any>, e: MouseEvent) => void; // callback of click cell event\n  onDidUpdate?: (ref: any) => void;\n  isSection?: boolean; // Whether it is in group row\n  width?: string | number; // cell width\n  height?: string | number; // cell height\n  selected?: boolean; // Whether the current row is selected\n  expanded?: boolean; // Whether the current line is expanded\n  disabled?: boolean;\n  colIndex?: number;\n}\n\nfunction isInvalidRenderCellText(text: any) {\n  return text && !isVNode(text) && Object.prototype.toString.call(text) === '[object Object]';\n}\n\nconst propTypes: CombineProps<TableCellProps> = {\n  record: PropTypes.object,\n  prefixCls: PropTypes.string,\n  index: PropTypes.number,\n  fixedLeft: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  lastFixedLeft: PropTypes.bool,\n  fixedRight: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  firstFixedRight: PropTypes.bool,\n  indent: PropTypes.number,\n  indentSize: PropTypes.number,\n  column: PropTypes.object,\n  expandIcon: PropTypes.any as PropType<TableCellProps['expandIcon']>,\n  renderExpandIcon: PropTypes.func as PropType<TableCellProps['renderExpandIcon']>,\n  hideExpandedColumn: PropTypes.bool,\n  component: PropTypes.any,\n  onClick: PropTypes.func as PropType<TableCellProps['onClick']>,\n  onDidUpdate: PropTypes.func as PropType<TableCellProps['onDidUpdate']>,\n  isSection: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  selected: PropTypes.bool,\n  expanded: PropTypes.bool,\n  colIndex: PropTypes.number,\n\n  disabled: PropTypes.bool,\n  style: PropTypes.object,\n  className: PropTypes.string,\n};\nconst defaultProps = {\n  indent: 0,\n  indentSize: numbers.DEFAULT_INDENT_WIDTH,\n  onClick: noop,\n  prefixCls: cssClasses.PREFIX,\n  component: 'td',\n  onDidUpdate: noop,\n  column: {},\n};\n\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst TableCell = defineComponent({\n  props: { ...vuePropsType },\n  name: 'TableCell',\n  setup(props, {}) {\n    const slots = useSlots();\n    let { context } = useTableContext();\n    const nodeRef = ref();\n    const state = reactive({});\n\n    const { adapter: adapterInject } = useBaseComponent<TableCellProps>(props, state);\n    function adapter_(): TableCellAdapter {\n      return {\n        ...adapterInject(),\n        notifyClick: (...args) => {\n          const { onClick } = props;\n\n          if (typeof onClick === 'function') {\n            onClick(...args);\n          }\n        },\n      };\n    }\n\n    const adapter = adapter_();\n\n    const foundation = new TableCellFoundation(adapter);\n\n    /**\n     * Control whether to execute the render function of the cell\n     * 1. Scenes that return true\n     *  - The cell contains the selection state, you need to calculate whether its selection state has changed during selection\n     *  - The cell contains the folding state, it needs to be calculated when the folding state has changed\n     * 2. Scenarios that return false\n     *  - Cells without table operation operation status, only need to judge that their props have changed\n     *    At this time, the update of the table cell is controlled by the user. At this time, its update will not affect other cells\n     *\n     * 控制是否执行cell的render函数\n     * 1. 返回true的场景\n     *  - cell内包含选择状态，需要在选择时计算它的选择态是否发生变化\n     *  - cell内包含折叠状态，需要在折叠时计算它的折叠态是否发生了变化\n     * 2. 返回false的场景\n     *  - 没有table操作操作状态的cell，只需判断自己的props发生了变化\n     *    此时table cell的更新由用户自己控制，此时它的更新不会影响其他cell\n     *\n     * @param {*} nextProps\n     * @returns\n     */\n    function shouldComponentUpdate(nextProps: TableCellProps) {\n      //组件是否需要更新，需要返回一个布尔值，返回true则更新，返回flase不更新，这是一个关键点\n      const { column, expandIcon } = props;\n      const cellInSelectionColumn = isSelectionColumn(column);\n      // The expand button may be in a separate column or in the first data column\n      const columnHasExpandIcon = isExpandedColumn(column) || expandIcon;\n      if ((cellInSelectionColumn || columnHasExpandIcon) && !isEqual(nextProps, props)) {\n        return true;\n      } else {\n        const omitProps = ['selected', 'expanded', 'expandIcon', 'disabled'];\n        const propsOmitSelected = omit(props, omitProps);\n        const nextPropsOmitSelected = omit(nextProps, omitProps);\n        if (!isEqual(nextPropsOmitSelected, propsOmitSelected)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    watch([() => props, state], () => {\n      props.onDidUpdate(nodeRef.value);\n    });\n\n    const handleClick = (e: MouseEvent) => {\n      foundation.handleClick(e);\n      const customCellProps = adapter.getCache('customCellProps');\n      if (customCellProps && typeof customCellProps.onClick === 'function') {\n        customCellProps.onClick(e);\n      }\n    };\n\n    function getTdProps() {\n      const { record, index, column = {}, fixedLeft, fixedRight, width, height } = props;\n\n      let tdProps: { style?: Partial<CSSProperties> } = {};\n      let customCellProps = {};\n      const { direction } = context.value;\n      const isRTL = direction === 'rtl';\n\n      const fixedLeftFlag = fixedLeft || typeof fixedLeft === 'number';\n      const fixedRightFlag = fixedRight || typeof fixedRight === 'number';\n\n      if (fixedLeftFlag) {\n        set(tdProps, isRTL ? 'style.right' : 'style.left', typeof fixedLeft === 'number' ? fixedLeft : 0);\n      } else if (fixedRightFlag) {\n        set(tdProps, isRTL ? 'style.left' : 'style.right', typeof fixedRight === 'number' ? fixedRight : 0);\n      }\n\n      if (width != null) {\n        set(tdProps, 'style.width', width + 'px');\n      }\n\n      if (height != null) {\n        set(tdProps, 'style.height', height + 'px');\n      }\n\n      // Vue3 补充\n      if (tdProps.style?.left && typeof tdProps.style?.left === 'number') {\n        tdProps.style.left = tdProps.style.left + 'px';\n      }\n      if (tdProps.style?.right && typeof tdProps.style?.right === 'number') {\n        tdProps.style.right = tdProps.style.right + 'px';\n      }\n\n      if (column.onCell) {\n        customCellProps = (column as any).onCell(record, index);\n        adapter.setCache('customCellProps', { ...customCellProps });\n        tdProps = { ...tdProps, ...omit(customCellProps, ['style', 'className', 'onClick']) };\n        const customCellStyle = get(customCellProps, 'style') || {};\n        tdProps.style = { ...tdProps.style, ...customCellStyle };\n      }\n\n      if (column.align) {\n        const textAlign = getRTLAlign(column.align, direction);\n        const justifyContent = getRTLFlexAlign(column.align, direction);\n        tdProps.style = { ...tdProps.style, textAlign, justifyContent };\n      }\n\n      return { tdProps, customCellProps };\n    }\n\n    /**\n     * We should return undefined if no dataIndex is specified, but in order to\n     * be compatible with object-path's behavior, we return the record object instead.\n     */\n    function renderText(tdProps: { style?: CSSProperties; colSpan?: number; rowSpan?: number }) {\n      const { record, indentSize, prefixCls, indent, index, expandIcon, renderExpandIcon, column = {} } = props;\n      const { dataIndex, render, useFullRender } = column;\n\n      let text: any, colSpan: number, rowSpan: number;\n\n      if (typeof dataIndex === 'number') {\n        text = get(record, dataIndex);\n      } else if (!dataIndex || dataIndex.length === 0) {\n        text = record;\n      } else {\n        text = get(record, dataIndex);\n      }\n\n      const indentText =\n        indent && indentSize ? (\n          <span\n            style={{ paddingLeft: `${indentSize * indent}px` }}\n            class={`${prefixCls}-row-indent indent-level-${indent}`}\n          />\n        ) : null;\n\n      // column.render\n      const realExpandIcon = (\n        typeof renderExpandIcon === 'function' ? renderExpandIcon(record) : expandIcon\n      ) as VueJsxNode;\n      if (render) {\n        const renderOptions = {\n          expandIcon: realExpandIcon,\n        };\n\n        // column.useFullRender\n        if (useFullRender) {\n          const { renderSelection } = context.value;\n          const realSelection = typeof renderSelection === 'function' ? renderSelection(record) : null;\n          Object.assign(renderOptions, {\n            selection: realSelection,\n            indentText,\n          });\n        }\n\n        text = render(text, record, index, renderOptions);\n        if (isInvalidRenderCellText(text)) {\n          // eslint-disable-next-line no-param-reassign\n          tdProps = text.props ? merge(tdProps, text.props) : tdProps;\n          colSpan = tdProps.colSpan;\n          rowSpan = tdProps.rowSpan;\n          text = text.children;\n        }\n      }\n\n      return { text, indentText, rowSpan, colSpan, realExpandIcon, tdProps };\n    }\n\n    function renderInner(text: VueJsxNode, indentText: VueJsxNode, realExpandIcon: VueJsxNode) {\n      const { prefixCls, isSection, expandIcon, column = {} } = props;\n      const { tableWidth, anyColumnFixed } = context.value;\n      const { useFullRender } = column;\n\n      let inner = null;\n\n      if (useFullRender) {\n        inner = text;\n      } else {\n        inner = [\n          <Fragment key={'indentText'}>{indentText}</Fragment>,\n          <Fragment key={'expandIcon'}>{expandIcon ? realExpandIcon : null}</Fragment>,\n          <Fragment key={'text'}>{text}</Fragment>,\n        ];\n      }\n\n      if (isSection) {\n        inner = (\n          <div\n            class={classnames(`${prefixCls}-section-inner`)}\n            style={{ width: anyColumnFixed ? styleNum(amendTableWidth(tableWidth)) : undefined }}\n          >\n            {inner}\n          </div>\n        );\n      }\n\n      return inner;\n    }\n\n    const setRef = (ref_: any) => (nodeRef.value = ref_);\n    return () => {\n      const {\n        prefixCls,\n        column = {},\n        component: BodyCell,\n        fixedLeft,\n        fixedRight,\n        lastFixedLeft,\n        firstFixedRight,\n        colIndex,\n      } = props;\n      const { direction } = context.value;\n      const isRTL = direction === 'rtl';\n      const { className, ellipsis } = column;\n      const fixedLeftFlag = fixedLeft || typeof fixedLeft === 'number';\n      const fixedRightFlag = fixedRight || typeof fixedRight === 'number';\n      const { tdProps, customCellProps } = getTdProps();\n\n      const renderTextResult = renderText(tdProps);\n      let { text } = renderTextResult;\n      const { indentText, rowSpan, colSpan, realExpandIcon, tdProps: newTdProps } = renderTextResult;\n      let title: string;\n\n      const shouldShowTitle = shouldShowEllipsisTitle(ellipsis);\n      if (shouldShowTitle) {\n        if (typeof text === 'string') {\n          title = text;\n        }\n      }\n\n      if (rowSpan === 0 || colSpan === 0) {\n        return null;\n      }\n\n      if (isInvalidRenderCellText(text)) {\n        text = null;\n      }\n\n      const inner = renderInner(text, indentText, realExpandIcon);\n      let isFixedLeft, isFixedLeftLast, isFixedRight, isFixedRightFirst;\n\n      if (isRTL) {\n        isFixedLeft = fixedRightFlag;\n        isFixedLeftLast = firstFixedRight;\n        isFixedRight = fixedLeftFlag;\n        isFixedRightFirst = lastFixedLeft;\n      } else {\n        isFixedLeft = fixedLeftFlag;\n        isFixedLeftLast = lastFixedLeft;\n        isFixedRight = fixedRightFlag;\n        isFixedRightFirst = firstFixedRight;\n      }\n\n      const columnCls = classnames(className, `${prefixCls}-row-cell`, get(customCellProps, 'className'), {\n        [`${prefixCls}-cell-fixed-left`]: isFixedLeft,\n        [`${prefixCls}-cell-fixed-left-last`]: isFixedLeftLast,\n        [`${prefixCls}-cell-fixed-right`]: isFixedRight,\n        [`${prefixCls}-cell-fixed-right-first`]: isFixedRightFirst,\n        [`${prefixCls}-row-cell-ellipsis`]: ellipsis,\n      });\n\n      return (\n        <BodyCell\n          role=\"gridcell\"\n          aria-colindex={colIndex + 1}\n          className={columnCls}\n          onClick={handleClick}\n          title={title}\n          {...newTdProps}\n          ref={setRef}\n        >\n          {inner}\n        </BodyCell>\n      );\n    };\n  },\n});\n\nexport default TableCell;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","isInvalidRenderCellText","text","isVNode","propTypes","record","PropTypes","object","prefixCls","string","index","number","fixedLeft","oneOfType","bool","lastFixedLeft","fixedRight","firstFixedRight","indent","indentSize","column","expandIcon","any","renderExpandIcon","func","hideExpandedColumn","component","onClick","onDidUpdate","isSection","width","height","selected","expanded","colIndex","disabled","style","className","defaultProps","numbers","DEFAULT_INDENT_WIDTH","noop","cssClasses","PREFIX","vuePropsType","vuePropsMake","TableCell","defineComponent","props","name","setup","useSlots","context","useTableContext","nodeRef","ref","state","reactive","adapter","adapterInject","useBaseComponent","adapter_","notifyClick","args","foundation","TableCellFoundation","watch","value","handleClick","e","customCellProps","getCache","getTdProps","tdProps","direction","isRTL","set","left","right","onCell","setCache","omit","customCellStyle","get","align","textAlign","getRTLAlign","justifyContent","getRTLFlexAlign","renderText","dataIndex","render","useFullRender","colSpan","rowSpan","length","indentText","_createVNode","paddingLeft","realExpandIcon","renderOptions","renderSelection","realSelection","assign","selection","merge","children","renderInner","tableWidth","anyColumnFixed","inner","_Fragment","classnames","styleNum","amendTableWidth","undefined","setRef","ref_","BodyCell","ellipsis","fixedLeftFlag","fixedRightFlag","renderTextResult","newTdProps","title","shouldShowEllipsisTitle","isFixedLeft","isFixedLeftLast","isFixedRight","isFixedRightFirst","columnCls","_mergeProps","default"],"mappings":"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"}