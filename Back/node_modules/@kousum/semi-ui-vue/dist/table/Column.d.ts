import { ColumnProps, Data } from './interface';
export declare function getColumn<RecordType extends Record<string, any> = Data>(): import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    clickToSort: import("vue").PropType<(e: any) => any> | {
        type: import("vue").PropType<(e: any) => any>;
        default?: any;
        required?: false;
    };
    align: import("vue").PropType<"left" | "right" | "center"> | {
        type: import("vue").PropType<"left" | "right" | "center">;
        default?: any;
        required?: false;
    };
    children: import("vue").PropType<ColumnProps<RecordType>[]> | {
        type: import("vue").PropType<ColumnProps<RecordType>[]>;
        default?: any;
        required?: false;
    };
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    colSpan: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
    dataIndex: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    defaultFilteredValue: import("vue").PropType<any[]> | {
        type: import("vue").PropType<any[]>;
        default?: any;
        required?: false;
    };
    defaultSortOrder: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseSortOrder> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseSortOrder>;
        default?: any;
        required?: false;
    };
    filterChildrenRecord: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    filterDropdown: import("vue").PropType<import("../interface").VueJsxNode> | {
        type: import("vue").PropType<import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    renderFilterDropdown: import("vue").PropType<(props?: import("./ColumnFilter").RenderFilterDropdownProps) => import("vue").VNode> | {
        type: import("vue").PropType<(props?: import("./ColumnFilter").RenderFilterDropdownProps) => import("vue").VNode>;
        default?: any;
        required?: false;
    };
    filterDropdownProps: import("vue").PropType<import("./ColumnFilter").FilterDropdownProps> | {
        type: import("vue").PropType<import("./ColumnFilter").FilterDropdownProps>;
        default?: any;
        required?: false;
    };
    filterDropdownVisible: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    filterIcon: import("vue").PropType<import("./interface").FilterIcon> | {
        type: import("vue").PropType<import("./interface").FilterIcon>;
        default?: any;
        required?: false;
    };
    filterMultiple: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    filteredValue: import("vue").PropType<any[]> | {
        type: import("vue").PropType<any[]>;
        default?: any;
        required?: false;
    };
    filters: import("vue").PropType<import("./interface").Filter[]> | {
        type: import("vue").PropType<import("./interface").Filter[]>;
        default?: any;
        required?: false;
    };
    fixed: import("vue").PropType<boolean | "left" | "right"> | {
        type: import("vue").PropType<boolean | "left" | "right">;
        default?: any;
        required?: false;
    };
    key: import("vue").PropType<string | number | symbol> | {
        type: import("vue").PropType<string | number | symbol>;
        default?: any;
        required?: false;
    };
    render: import("vue").PropType<import("./interface").ColumnRender<RecordType>> | {
        type: import("vue").PropType<import("./interface").ColumnRender<RecordType>>;
        default?: any;
        required?: false;
    };
    renderFilterDropdownItem: import("vue").PropType<import("./interface").RenderFilterDropdownItem> | {
        type: import("vue").PropType<import("./interface").RenderFilterDropdownItem>;
        default?: any;
        required?: false;
    };
    sortChildrenRecord: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    sortOrder: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseSortOrder> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseSortOrder>;
        default?: any;
        required?: false;
    };
    sorter: import("vue").PropType<import("./interface").Sorter<RecordType>> | {
        type: import("vue").PropType<import("./interface").Sorter<RecordType>>;
        default?: any;
        required?: false;
    };
    sortIcon: import("vue").PropType<import("./interface").SortIcon> | {
        type: import("vue").PropType<import("./interface").SortIcon>;
        default?: any;
        required?: false;
    };
    title: import("vue").PropType<import("./interface").ColumnTitle> | {
        type: import("vue").PropType<import("./interface").ColumnTitle>;
        default?: any;
        required?: false;
    };
    useFullRender: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    width: import("vue").PropType<string | number> | {
        type: import("vue").PropType<string | number>;
        default?: any;
        required?: false;
    };
    onCell: import("vue").PropType<import("./interface").OnCell<RecordType>> | {
        type: import("vue").PropType<import("./interface").OnCell<RecordType>>;
        default?: any;
        required?: false;
    };
    onFilter: import("vue").PropType<import("./interface").OnFilter<RecordType>> | {
        type: import("vue").PropType<import("./interface").OnFilter<RecordType>>;
        default?: any;
        required?: false;
    };
    onFilterDropdownVisibleChange: import("vue").PropType<import("./interface").OnFilterDropdownVisibleChange> | {
        type: import("vue").PropType<import("./interface").OnFilterDropdownVisibleChange>;
        default?: any;
        required?: false;
    };
    onHeaderCell: import("vue").PropType<import("./interface").OnHeaderCell<RecordType>> | {
        type: import("vue").PropType<import("./interface").OnHeaderCell<RecordType>>;
        default?: any;
        required?: false;
    };
    ellipsis: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseEllipsis> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseEllipsis>;
        default?: any;
        required?: false;
    };
    resize: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    showSortTip: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[], {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    clickToSort: import("vue").PropType<(e: any) => any> | {
        type: import("vue").PropType<(e: any) => any>;
        default?: any;
        required?: false;
    };
    align: import("vue").PropType<"left" | "right" | "center"> | {
        type: import("vue").PropType<"left" | "right" | "center">;
        default?: any;
        required?: false;
    };
    children: import("vue").PropType<ColumnProps<RecordType>[]> | {
        type: import("vue").PropType<ColumnProps<RecordType>[]>;
        default?: any;
        required?: false;
    };
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    colSpan: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
    dataIndex: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    defaultFilteredValue: import("vue").PropType<any[]> | {
        type: import("vue").PropType<any[]>;
        default?: any;
        required?: false;
    };
    defaultSortOrder: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseSortOrder> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseSortOrder>;
        default?: any;
        required?: false;
    };
    filterChildrenRecord: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    filterDropdown: import("vue").PropType<import("../interface").VueJsxNode> | {
        type: import("vue").PropType<import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    renderFilterDropdown: import("vue").PropType<(props?: import("./ColumnFilter").RenderFilterDropdownProps) => import("vue").VNode> | {
        type: import("vue").PropType<(props?: import("./ColumnFilter").RenderFilterDropdownProps) => import("vue").VNode>;
        default?: any;
        required?: false;
    };
    filterDropdownProps: import("vue").PropType<import("./ColumnFilter").FilterDropdownProps> | {
        type: import("vue").PropType<import("./ColumnFilter").FilterDropdownProps>;
        default?: any;
        required?: false;
    };
    filterDropdownVisible: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    filterIcon: import("vue").PropType<import("./interface").FilterIcon> | {
        type: import("vue").PropType<import("./interface").FilterIcon>;
        default?: any;
        required?: false;
    };
    filterMultiple: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    filteredValue: import("vue").PropType<any[]> | {
        type: import("vue").PropType<any[]>;
        default?: any;
        required?: false;
    };
    filters: import("vue").PropType<import("./interface").Filter[]> | {
        type: import("vue").PropType<import("./interface").Filter[]>;
        default?: any;
        required?: false;
    };
    fixed: import("vue").PropType<boolean | "left" | "right"> | {
        type: import("vue").PropType<boolean | "left" | "right">;
        default?: any;
        required?: false;
    };
    key: import("vue").PropType<string | number | symbol> | {
        type: import("vue").PropType<string | number | symbol>;
        default?: any;
        required?: false;
    };
    render: import("vue").PropType<import("./interface").ColumnRender<RecordType>> | {
        type: import("vue").PropType<import("./interface").ColumnRender<RecordType>>;
        default?: any;
        required?: false;
    };
    renderFilterDropdownItem: import("vue").PropType<import("./interface").RenderFilterDropdownItem> | {
        type: import("vue").PropType<import("./interface").RenderFilterDropdownItem>;
        default?: any;
        required?: false;
    };
    sortChildrenRecord: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    sortOrder: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseSortOrder> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseSortOrder>;
        default?: any;
        required?: false;
    };
    sorter: import("vue").PropType<import("./interface").Sorter<RecordType>> | {
        type: import("vue").PropType<import("./interface").Sorter<RecordType>>;
        default?: any;
        required?: false;
    };
    sortIcon: import("vue").PropType<import("./interface").SortIcon> | {
        type: import("vue").PropType<import("./interface").SortIcon>;
        default?: any;
        required?: false;
    };
    title: import("vue").PropType<import("./interface").ColumnTitle> | {
        type: import("vue").PropType<import("./interface").ColumnTitle>;
        default?: any;
        required?: false;
    };
    useFullRender: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    width: import("vue").PropType<string | number> | {
        type: import("vue").PropType<string | number>;
        default?: any;
        required?: false;
    };
    onCell: import("vue").PropType<import("./interface").OnCell<RecordType>> | {
        type: import("vue").PropType<import("./interface").OnCell<RecordType>>;
        default?: any;
        required?: false;
    };
    onFilter: import("vue").PropType<import("./interface").OnFilter<RecordType>> | {
        type: import("vue").PropType<import("./interface").OnFilter<RecordType>>;
        default?: any;
        required?: false;
    };
    onFilterDropdownVisibleChange: import("vue").PropType<import("./interface").OnFilterDropdownVisibleChange> | {
        type: import("vue").PropType<import("./interface").OnFilterDropdownVisibleChange>;
        default?: any;
        required?: false;
    };
    onHeaderCell: import("vue").PropType<import("./interface").OnHeaderCell<RecordType>> | {
        type: import("vue").PropType<import("./interface").OnHeaderCell<RecordType>>;
        default?: any;
        required?: false;
    };
    ellipsis: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseEllipsis> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseEllipsis>;
        default?: any;
        required?: false;
    };
    resize: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    showSortTip: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
declare const Column: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    clickToSort: import("vue").PropType<(e: any) => any> | {
        type: import("vue").PropType<(e: any) => any>;
        default?: any;
        required?: false;
    };
    align: import("vue").PropType<"left" | "right" | "center"> | {
        type: import("vue").PropType<"left" | "right" | "center">;
        default?: any;
        required?: false;
    };
    children: import("vue").PropType<ColumnProps<Data>[]> | {
        type: import("vue").PropType<ColumnProps<Data>[]>;
        default?: any;
        required?: false;
    };
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    colSpan: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
    dataIndex: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    defaultFilteredValue: import("vue").PropType<any[]> | {
        type: import("vue").PropType<any[]>;
        default?: any;
        required?: false;
    };
    defaultSortOrder: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseSortOrder> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseSortOrder>;
        default?: any;
        required?: false;
    };
    filterChildrenRecord: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    filterDropdown: import("vue").PropType<import("../interface").VueJsxNode> | {
        type: import("vue").PropType<import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    renderFilterDropdown: import("vue").PropType<(props?: import("./ColumnFilter").RenderFilterDropdownProps) => import("vue").VNode> | {
        type: import("vue").PropType<(props?: import("./ColumnFilter").RenderFilterDropdownProps) => import("vue").VNode>;
        default?: any;
        required?: false;
    };
    filterDropdownProps: import("vue").PropType<import("./ColumnFilter").FilterDropdownProps> | {
        type: import("vue").PropType<import("./ColumnFilter").FilterDropdownProps>;
        default?: any;
        required?: false;
    };
    filterDropdownVisible: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    filterIcon: import("vue").PropType<import("./interface").FilterIcon> | {
        type: import("vue").PropType<import("./interface").FilterIcon>;
        default?: any;
        required?: false;
    };
    filterMultiple: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    filteredValue: import("vue").PropType<any[]> | {
        type: import("vue").PropType<any[]>;
        default?: any;
        required?: false;
    };
    filters: import("vue").PropType<import("./interface").Filter[]> | {
        type: import("vue").PropType<import("./interface").Filter[]>;
        default?: any;
        required?: false;
    };
    fixed: import("vue").PropType<boolean | "left" | "right"> | {
        type: import("vue").PropType<boolean | "left" | "right">;
        default?: any;
        required?: false;
    };
    key: import("vue").PropType<string | number | symbol> | {
        type: import("vue").PropType<string | number | symbol>;
        default?: any;
        required?: false;
    };
    render: import("vue").PropType<import("./interface").ColumnRender<Data>> | {
        type: import("vue").PropType<import("./interface").ColumnRender<Data>>;
        default?: any;
        required?: false;
    };
    renderFilterDropdownItem: import("vue").PropType<import("./interface").RenderFilterDropdownItem> | {
        type: import("vue").PropType<import("./interface").RenderFilterDropdownItem>;
        default?: any;
        required?: false;
    };
    sortChildrenRecord: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    sortOrder: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseSortOrder> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseSortOrder>;
        default?: any;
        required?: false;
    };
    sorter: import("vue").PropType<import("./interface").Sorter<Data>> | {
        type: import("vue").PropType<import("./interface").Sorter<Data>>;
        default?: any;
        required?: false;
    };
    sortIcon: import("vue").PropType<import("./interface").SortIcon> | {
        type: import("vue").PropType<import("./interface").SortIcon>;
        default?: any;
        required?: false;
    };
    title: import("vue").PropType<import("./interface").ColumnTitle> | {
        type: import("vue").PropType<import("./interface").ColumnTitle>;
        default?: any;
        required?: false;
    };
    useFullRender: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    width: import("vue").PropType<string | number> | {
        type: import("vue").PropType<string | number>;
        default?: any;
        required?: false;
    };
    onCell: import("vue").PropType<import("./interface").OnCell<Data>> | {
        type: import("vue").PropType<import("./interface").OnCell<Data>>;
        default?: any;
        required?: false;
    };
    onFilter: import("vue").PropType<import("./interface").OnFilter<Data>> | {
        type: import("vue").PropType<import("./interface").OnFilter<Data>>;
        default?: any;
        required?: false;
    };
    onFilterDropdownVisibleChange: import("vue").PropType<import("./interface").OnFilterDropdownVisibleChange> | {
        type: import("vue").PropType<import("./interface").OnFilterDropdownVisibleChange>;
        default?: any;
        required?: false;
    };
    onHeaderCell: import("vue").PropType<import("./interface").OnHeaderCell<Data>> | {
        type: import("vue").PropType<import("./interface").OnHeaderCell<Data>>;
        default?: any;
        required?: false;
    };
    ellipsis: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseEllipsis> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseEllipsis>;
        default?: any;
        required?: false;
    };
    resize: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    showSortTip: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[], {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    clickToSort: import("vue").PropType<(e: any) => any> | {
        type: import("vue").PropType<(e: any) => any>;
        default?: any;
        required?: false;
    };
    align: import("vue").PropType<"left" | "right" | "center"> | {
        type: import("vue").PropType<"left" | "right" | "center">;
        default?: any;
        required?: false;
    };
    children: import("vue").PropType<ColumnProps<Data>[]> | {
        type: import("vue").PropType<ColumnProps<Data>[]>;
        default?: any;
        required?: false;
    };
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    colSpan: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
    dataIndex: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    defaultFilteredValue: import("vue").PropType<any[]> | {
        type: import("vue").PropType<any[]>;
        default?: any;
        required?: false;
    };
    defaultSortOrder: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseSortOrder> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseSortOrder>;
        default?: any;
        required?: false;
    };
    filterChildrenRecord: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    filterDropdown: import("vue").PropType<import("../interface").VueJsxNode> | {
        type: import("vue").PropType<import("../interface").VueJsxNode>;
        default?: any;
        required?: false;
    };
    renderFilterDropdown: import("vue").PropType<(props?: import("./ColumnFilter").RenderFilterDropdownProps) => import("vue").VNode> | {
        type: import("vue").PropType<(props?: import("./ColumnFilter").RenderFilterDropdownProps) => import("vue").VNode>;
        default?: any;
        required?: false;
    };
    filterDropdownProps: import("vue").PropType<import("./ColumnFilter").FilterDropdownProps> | {
        type: import("vue").PropType<import("./ColumnFilter").FilterDropdownProps>;
        default?: any;
        required?: false;
    };
    filterDropdownVisible: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    filterIcon: import("vue").PropType<import("./interface").FilterIcon> | {
        type: import("vue").PropType<import("./interface").FilterIcon>;
        default?: any;
        required?: false;
    };
    filterMultiple: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    filteredValue: import("vue").PropType<any[]> | {
        type: import("vue").PropType<any[]>;
        default?: any;
        required?: false;
    };
    filters: import("vue").PropType<import("./interface").Filter[]> | {
        type: import("vue").PropType<import("./interface").Filter[]>;
        default?: any;
        required?: false;
    };
    fixed: import("vue").PropType<boolean | "left" | "right"> | {
        type: import("vue").PropType<boolean | "left" | "right">;
        default?: any;
        required?: false;
    };
    key: import("vue").PropType<string | number | symbol> | {
        type: import("vue").PropType<string | number | symbol>;
        default?: any;
        required?: false;
    };
    render: import("vue").PropType<import("./interface").ColumnRender<Data>> | {
        type: import("vue").PropType<import("./interface").ColumnRender<Data>>;
        default?: any;
        required?: false;
    };
    renderFilterDropdownItem: import("vue").PropType<import("./interface").RenderFilterDropdownItem> | {
        type: import("vue").PropType<import("./interface").RenderFilterDropdownItem>;
        default?: any;
        required?: false;
    };
    sortChildrenRecord: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    sortOrder: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseSortOrder> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseSortOrder>;
        default?: any;
        required?: false;
    };
    sorter: import("vue").PropType<import("./interface").Sorter<Data>> | {
        type: import("vue").PropType<import("./interface").Sorter<Data>>;
        default?: any;
        required?: false;
    };
    sortIcon: import("vue").PropType<import("./interface").SortIcon> | {
        type: import("vue").PropType<import("./interface").SortIcon>;
        default?: any;
        required?: false;
    };
    title: import("vue").PropType<import("./interface").ColumnTitle> | {
        type: import("vue").PropType<import("./interface").ColumnTitle>;
        default?: any;
        required?: false;
    };
    useFullRender: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    width: import("vue").PropType<string | number> | {
        type: import("vue").PropType<string | number>;
        default?: any;
        required?: false;
    };
    onCell: import("vue").PropType<import("./interface").OnCell<Data>> | {
        type: import("vue").PropType<import("./interface").OnCell<Data>>;
        default?: any;
        required?: false;
    };
    onFilter: import("vue").PropType<import("./interface").OnFilter<Data>> | {
        type: import("vue").PropType<import("./interface").OnFilter<Data>>;
        default?: any;
        required?: false;
    };
    onFilterDropdownVisibleChange: import("vue").PropType<import("./interface").OnFilterDropdownVisibleChange> | {
        type: import("vue").PropType<import("./interface").OnFilterDropdownVisibleChange>;
        default?: any;
        required?: false;
    };
    onHeaderCell: import("vue").PropType<import("./interface").OnHeaderCell<Data>> | {
        type: import("vue").PropType<import("./interface").OnHeaderCell<Data>>;
        default?: any;
        required?: false;
    };
    ellipsis: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseEllipsis> | {
        type: import("vue").PropType<import("@douyinfe/semi-foundation/lib/es/table/foundation").BaseEllipsis>;
        default?: any;
        required?: false;
    };
    resize: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    showSortTip: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default Column;
