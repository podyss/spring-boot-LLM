{"version":3,"file":"ColumnFilter.js","sources":["../../src/components/table/ColumnFilter.tsx"],"sourcesContent":["import cls from 'classnames';\nimport { isEqual, noop, pick, omit } from 'lodash';\nimport { IconFilter } from '@kousum/semi-icons-vue';\n\nimport { cssClasses } from '@douyinfe/semi-foundation/table/constants';\n\nimport Dropdown, { DropdownMenu, DropdownItem, DropdownVuePropsType } from '../dropdown';\nimport type { DropdownProps } from '../dropdown';\nimport { Radio } from '../radio';\nimport { Checkbox } from '../checkbox';\nimport { FilterIcon, Filter, OnFilterDropdownVisibleChange, RenderFilterDropdownItem } from './interface';\nimport { CombineProps, VueJsxNode } from '../interface';\nimport { cloneVNode, isVNode, h, ref, watch, defineComponent, VNode, ComponentObjectPropsOptions, PropType } from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { useHasInProps } from '../_base/baseComponent';\nimport * as PropTypes from '../PropTypes';\n\nfunction renderDropdown(props: RenderDropdownProps, nestedElem: VueJsxNode = null, level = 0) {\n  const {\n    filterMultiple = true,\n    filters = [],\n    filteredValue = [],\n    filterDropdownVisible,\n    onSelect = noop,\n    onFilterDropdownVisibleChange = noop,\n    trigger = 'click',\n    position = 'bottom',\n    renderFilterDropdown,\n    renderFilterDropdownItem,\n  } = props ?? {};\n\n  const renderFilterDropdownProps: RenderFilterDropdownProps = pick(props, [\n    'tempFilteredValue',\n    'setTempFilteredValue',\n    'confirm',\n    'clear',\n    'close',\n    'filters',\n  ]);\n\n  const render =\n    typeof renderFilterDropdown === 'function' ? (\n      renderFilterDropdown(renderFilterDropdownProps)\n    ) : (\n      <DropdownMenu>\n        {Array.isArray(filters) &&\n          filters.map((filter, index) => {\n            const changeFn = (e: MouseEvent) => {\n              const domEvent = e;\n              if (domEvent) {\n                // Block this event to prevent the pop-up layer from closing\n                domEvent.stopImmediatePropagation();\n\n                // Prevent bubbling and default events to prevent label click events from triggering twice\n                domEvent.stopPropagation();\n                domEvent.preventDefault();\n              }\n              let values = [...filteredValue];\n\n              const included = values.includes(filter.value);\n              const idx = values.indexOf(filter.value);\n\n              if (idx > -1) {\n                values.splice(idx, 1);\n              } else if (filterMultiple) {\n                values.push(filter.value);\n              } else {\n                values = [filter.value];\n              }\n              return onSelect({\n                value: filter.value,\n                filteredValue: values,\n                included: !included,\n                domEvent,\n              });\n            };\n\n            const checked = filteredValue.includes(filter.value);\n            const { text } = filter;\n            const { value } = filter;\n            const key = `${level}_${index}`;\n\n            const dropdownItem =\n              typeof renderFilterDropdownItem === 'function'\n                ? renderFilterDropdownItem({\n                    onChange: changeFn,\n                    filterMultiple,\n                    value,\n                    text,\n                    checked,\n                    filteredValue,\n                    level,\n                  })\n                : null;\n\n            let item =\n              dropdownItem && isVNode(dropdownItem) ? (\n                cloneVNode(dropdownItem, { key })\n              ) : (\n                <DropdownItem key={key} onClick={changeFn}>\n                  {filterMultiple ? (\n                    <Checkbox checked={checked}>{text}</Checkbox>\n                  ) : (\n                    <Radio checked={checked}>{text}</Radio>\n                  )}\n                </DropdownItem>\n              );\n\n            if (Array.isArray(filter.children) && filter.children.length) {\n              const childrenDropdownProps = {\n                ...props,\n                filters: filter.children,\n                trigger: 'hover' as const,\n                position: 'right' as const,\n              };\n\n              delete childrenDropdownProps.filterDropdownVisible;\n\n              item = renderDropdown(childrenDropdownProps, item, level + 1);\n            }\n            return item;\n          })}\n      </DropdownMenu>\n    );\n\n  const dropdownProps: DropdownProps = {\n    ...pick(props, ...Object.keys(DropdownVuePropsType)),\n    onVisibleChange: (visible: boolean) => onFilterDropdownVisibleChange(visible),\n    trigger,\n    position,\n    render,\n  };\n\n  if (filterDropdownVisible != null) {\n    dropdownProps.visible = filterDropdownVisible;\n  }\n\n  return (\n    <Dropdown\n      {...dropdownProps}\n      key={`Dropdown_level_${level}`}\n      className={`${cssClasses.PREFIX}-column-filter-dropdown`}\n    >\n      {nestedElem}\n    </Dropdown>\n  );\n}\n\nconst propTypes: CombineProps<ColumnFilterProps> = {\n  ...DropdownVuePropsType,\n  prefixCls: String,\n  filteredValue: Array,\n  filterIcon: [Boolean, Object, Function] as PropType<ColumnFilterProps['filterIcon']>,\n  filterDropdown: [Boolean, Object, Function] as PropType<ColumnFilterProps['filterDropdown']>,\n  filterDropdownProps: Object,\n  filters: Array,\n  filterMultiple: Boolean,\n  filterDropdownVisible: Boolean,\n  onSelect: Function as PropType<ColumnFilterProps['onSelect']>,\n  onFilterDropdownVisibleChange: Function as PropType<ColumnFilterProps['onFilterDropdownVisibleChange']>,\n  renderFilterDropdown: Function as PropType<ColumnFilterProps['renderFilterDropdown']>,\n  renderFilterDropdownItem: Function as PropType<ColumnFilterProps['renderFilterDropdownItem']>,\n\n  title: PropTypes.any as PropType<ColumnFilterProps['title']>,\n  dataIndex: [Number, String],\n  width: [Number, String],\n  fixed: [Boolean, String],\n  //@ts-ignore\n  sortOrder: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  //@ts-ignore\n  sorter: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  //@ts-ignore\n  defaultFilteredValue: PropTypes.array\n};\nconst defaultProps = {};\nexport const ColumnFilterVueProps = vuePropsMake(propTypes, defaultProps);\nexport const ColumnFilter = defineComponent({\n  props: ColumnFilterVueProps as CombineProps<ColumnFilterProps>,\n  name: 'ColumnFilter',\n  setup(props, { attrs }) {\n    const {getProps} = useHasInProps()\n    // custom filter related status\n    const isFilterDropdownVisibleControlled_ = typeof props.filterDropdownVisible !== 'undefined';\n    const isCustomFilterDropdown_ = typeof props.renderFilterDropdown === 'function';\n    const isCustomDropdownVisible_ = !isFilterDropdownVisibleControlled_ && isCustomFilterDropdown_;\n    const dropdownVisibleInitValue = isCustomDropdownVisible_ ? false : props.filterDropdownVisible;\n\n    const tempFilteredValue = ref<any[]>(props.filteredValue);\n    const dropdownVisible = ref<boolean | undefined>(dropdownVisibleInitValue);\n\n    watch(\n      () => props.filterDropdownVisible,\n      () => {\n        if (typeof props.filterDropdownVisible !== 'undefined') {\n          dropdownVisible.value = props.filterDropdownVisible;\n        }\n      },\n      { immediate: true }\n    );\n\n    watch(\n      () => props.filteredValue,\n      () => {\n        tempFilteredValue.value = props.filteredValue;\n      },\n      { immediate: true }\n    );\n\n    const confirm: RenderFilterDropdownProps['confirm'] = (props_ = {}) => {\n      const newFilteredValue = props_?.filteredValue || tempFilteredValue;\n      if (!isEqual(newFilteredValue, props.filteredValue)) {\n        props.onSelect({ filteredValue: newFilteredValue });\n      }\n      if (props_.closeDropdown) {\n        dropdownVisible.value = false;\n      }\n    };\n\n    const clear: RenderFilterDropdownProps['clear'] = (props_: { closeDropdown?: boolean } = {}) => {\n      tempFilteredValue.value = [];\n      props.onSelect({ filteredValue: [] });\n      if (props_.closeDropdown) {\n        dropdownVisible.value = false;\n      }\n    };\n\n    const close: RenderFilterDropdownProps['close'] = () => {\n      dropdownVisible.value = false;\n    };\n\n    const handleFilterDropdownVisibleChange = (visible: boolean) => {\n      const isFilterDropdownVisibleControlled = typeof props.filterDropdownVisible !== 'undefined';\n      const isCustomFilterDropdown = typeof props.renderFilterDropdown === 'function';\n      const isCustomDropdownVisible = !isFilterDropdownVisibleControlled && isCustomFilterDropdown;\n      if (isCustomDropdownVisible) {\n        dropdownVisible.value = visible;\n      }\n      props.onFilterDropdownVisibleChange(visible);\n    };\n\n    return () => {\n      const {\n        prefixCls = cssClasses.PREFIX,\n        filteredValue,\n        filterIcon = 'filter',\n        filterDropdownProps,\n        onSelect,\n        filterDropdownVisible,\n        renderFilterDropdown,\n        onFilterDropdownVisibleChange,\n      } = getProps(props);\n      let { filterDropdown = null } = props;\n\n      // custom filter related status\n      const isFilterDropdownVisibleControlled = typeof props.filterDropdownVisible !== 'undefined';\n\n      const renderFilterDropdownProps: RenderFilterDropdownProps = {\n        tempFilteredValue: tempFilteredValue.value,\n        setTempFilteredValue: (v) => {\n          tempFilteredValue.value = v;\n        },\n        confirm,\n        clear,\n        close,\n      };\n\n      const finalCls = cls(`${prefixCls}-column-filter`, {\n        on: Array.isArray(filteredValue) && filteredValue.length,\n      });\n\n      let iconElem;\n\n      if (typeof filterIcon === 'function') {\n        iconElem = filterIcon(Array.isArray(filteredValue) && filteredValue.length > 0);\n      } else if (isVNode(filterIcon)) {\n        iconElem = filterIcon;\n      } else {\n        iconElem = (\n          <div class={finalCls}>\n            {'\\u200b' /* ZWSP(zero-width space) */}\n            <IconFilter\n              role=\"button\"\n              aria-label=\"Filter data with this column\"\n              aria-haspopup=\"listbox\"\n              tabIndex={-1}\n              size=\"default\"\n            />\n          </div>\n        );\n      }\n\n      const renderProps: RenderDropdownProps = {\n        ...getProps(props),\n        ...filterDropdownProps,\n        ...renderFilterDropdownProps,\n        filterDropdownVisible: isFilterDropdownVisibleControlled ? filterDropdownVisible : dropdownVisible.value,\n        onFilterDropdownVisibleChange: handleFilterDropdownVisibleChange,\n      };\n\n      filterDropdown = isVNode(filterDropdown) ? filterDropdown : renderDropdown(renderProps, iconElem);\n\n      return filterDropdown;\n    };\n  },\n});\n\nexport interface ColumnFilterProps extends Omit<RenderDropdownProps, keyof RenderFilterDropdownProps> {\n  prefixCls?: string;\n  filteredValue?: any[];\n  filterIcon?: FilterIcon;\n  filterDropdown?: VueJsxNode;\n  filterDropdownProps?: FilterDropdownProps;\n  filters?: Filter[];\n\n  // warning\n  title?: any;\n  dataIndex?: string | number;\n  width?: string | number;\n  fixed?: string | boolean;\n}\n\nexport interface RenderDropdownProps extends FilterDropdownProps, RenderFilterDropdownProps {\n  filterMultiple?: boolean;\n  filters?: Filter[];\n  filteredValue?: any[];\n  filterDropdownVisible?: boolean;\n  onSelect?: (data: OnSelectData) => void;\n  onFilterDropdownVisibleChange?: OnFilterDropdownVisibleChange;\n  renderFilterDropdown?: (props?: RenderFilterDropdownProps) => VNode;\n  renderFilterDropdownItem?: RenderFilterDropdownItem;\n}\n\nexport interface FilterDropdownProps extends Omit<DropdownProps, 'render' | 'onVisibleChange'> {}\n\nexport interface OnSelectData {\n  value?: any;\n  /** only this value is used now  */\n  filteredValue: any;\n  included?: boolean;\n  domEvent?: MouseEvent;\n}\n\nexport interface RenderFilterDropdownProps {\n  /** temporary filteredValue  */\n  tempFilteredValue: any[];\n  /** set temporary filteredValue  */\n  setTempFilteredValue: (tempFilteredValue: any[]) => void;\n  /** set tempFilteredValue to filteredValue. You can also pass filteredValue to directly set the filteredValue  */\n  confirm: (props?: { closeDropdown?: boolean; filteredValue?: any[] }) => void;\n  /** clear tempFilteredValue and filteredValue  */\n  clear: (props?: { closeDropdown?: boolean }) => void;\n  /** close dropdown  */\n  close: () => void;\n  /** column filters  */\n  filters?: RenderDropdownProps['filters'];\n}\n\nexport default ColumnFilter;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","renderDropdown","props","nestedElem","level","filterMultiple","filters","filteredValue","filterDropdownVisible","onSelect","noop","onFilterDropdownVisibleChange","trigger","position","renderFilterDropdown","renderFilterDropdownItem","renderFilterDropdownProps","pick","render","_createVNode","DropdownMenu","default","Array","isArray","map","filter","index","changeFn","e","domEvent","stopImmediatePropagation","stopPropagation","preventDefault","values","included","includes","value","idx","indexOf","splice","push","checked","text","key","dropdownItem","onChange","item","isVNode","cloneVNode","DropdownItem","Checkbox","Radio","children","length","childrenDropdownProps","dropdownProps","keys","DropdownVuePropsType","onVisibleChange","visible","Dropdown","_mergeProps","cssClasses","PREFIX","propTypes","prefixCls","String","filterIcon","Boolean","Function","filterDropdown","filterDropdownProps","title","PropTypes","any","dataIndex","Number","width","fixed","sortOrder","oneOfType","bool","string","sorter","func","defaultFilteredValue","array","defaultProps","ColumnFilterVueProps","vuePropsMake","ColumnFilter","defineComponent","name","setup","attrs","getProps","useHasInProps","isFilterDropdownVisibleControlled_","isCustomFilterDropdown_","dropdownVisibleInitValue","tempFilteredValue","ref","dropdownVisible","watch","immediate","confirm","props_","newFilteredValue","isEqual","closeDropdown","clear","close","handleFilterDropdownVisibleChange","isFilterDropdownVisibleControlled","isCustomFilterDropdown","setTempFilteredValue","v","finalCls","cls","on","iconElem","IconFilter","renderProps"],"mappings":"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"}