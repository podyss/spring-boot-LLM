{"version":3,"file":"TableContextProvider.js","sources":["../../src/components/table/TableContextProvider.tsx"],"sourcesContent":["import { ComponentObjectPropsOptions, computed, defineComponent, h, PropType, useSlots } from 'vue';\nimport Context, { TableContextProps } from './table-context';\nimport * as PropTypes from '../PropTypes';\nimport { CombineProps } from '../interface';\n\nexport const vuePropsType: CombineProps<TableContextProps> = {\n  headWidths: PropTypes.array,\n  setHeadWidths: PropTypes.func as PropType<TableContextProps['setHeadWidths']>,\n  handleRowExpanded: PropTypes.func as PropType<TableContextProps['handleRowExpanded']>,\n  tableWidth: PropTypes.number,\n  anyColumnFixed: PropTypes.bool,\n  flattenedColumns: PropTypes.array,\n  renderExpandIcon: PropTypes.func as PropType<TableContextProps['renderExpandIcon']>,\n  renderSelection: PropTypes.func as PropType<TableContextProps['renderSelection']>,\n  getHeadWidths: PropTypes.func as PropType<TableContextProps['getHeadWidths']>,\n  getCellWidths: PropTypes.func as PropType<TableContextProps['getCellWidths']>,\n  getVirtualizedListRef: [PropTypes.func, PropTypes.object] as PropType<TableContextProps['getVirtualizedListRef']>,\n  setBodyHasScrollbar: PropTypes.func as PropType<TableContextProps['setBodyHasScrollbar']>,\n  direction: PropTypes.string as PropType<TableContextProps['direction']>,\n};\nconst TableContextProvider = defineComponent({\n  props: { ...vuePropsType },\n  name: 'TableContextProvider',\n  setup(props, {}) {\n    const slots = useSlots();\n\n    const tableContextValue = computed(() => ({\n      anyColumnFixed: props.anyColumnFixed,\n      flattenedColumns: props.flattenedColumns,\n      renderExpandIcon: props.renderExpandIcon,\n      renderSelection: props.renderSelection,\n      setHeadWidths: props.setHeadWidths,\n      getHeadWidths: props.getHeadWidths,\n      getCellWidths: props.getCellWidths,\n      headWidths: props.headWidths,\n      tableWidth: props.tableWidth,\n      handleRowExpanded: props.handleRowExpanded,\n      getVirtualizedListRef: props.getVirtualizedListRef,\n      setBodyHasScrollbar: props.setBodyHasScrollbar,\n      direction: props.direction,\n    }));\n\n    return () => {\n      return <Context.Provider value={tableContextValue.value}>{{ default: slots.default }}</Context.Provider>;\n    };\n  },\n});\n\nexport default TableContextProvider;\n"],"names":["vuePropsType","headWidths","PropTypes","array","setHeadWidths","func","handleRowExpanded","tableWidth","number","anyColumnFixed","bool","flattenedColumns","renderExpandIcon","renderSelection","getHeadWidths","getCellWidths","getVirtualizedListRef","object","setBodyHasScrollbar","direction","string","TableContextProvider","defineComponent","props","name","setup","slots","useSlots","tableContextValue","computed","_createVNode","Context","Provider","value","default"],"mappings":";;;AAKO,MAAMA,IAAgD;AAAA,EAC3DC,YAAYC,EAAUC;AAAAA,EACtBC,eAAeF,EAAUG;AAAAA,EACzBC,mBAAmBJ,EAAUG;AAAAA,EAC7BE,YAAYL,EAAUM;AAAAA,EACtBC,gBAAgBP,EAAUQ;AAAAA,EAC1BC,kBAAkBT,EAAUC;AAAAA,EAC5BS,kBAAkBV,EAAUG;AAAAA,EAC5BQ,iBAAiBX,EAAUG;AAAAA,EAC3BS,eAAeZ,EAAUG;AAAAA,EACzBU,eAAeb,EAAUG;AAAAA,EACzBW,uBAAuB,CAACd,EAAUG,MAAMH,EAAUe,MAAM;AAAA,EACxDC,qBAAqBhB,EAAUG;AAAAA,EAC/Bc,WAAWjB,EAAUkB;AACvB,GACMC,IAAuBC,gBAAAA,EAAgB;AAAA,EAC3CC,OAAO;AAAA,IAAE,GAAGvB;AAAAA,EAAc;AAAA,EAC1BwB,MAAM;AAAA,EACNC,MAAMF,GAAO,IAAI;AACf,UAAMG,IAAQC,KAERC,IAAoBC,EAAS,OAAO;AAAA,MACxCpB,gBAAgBc,EAAMd;AAAAA,MACtBE,kBAAkBY,EAAMZ;AAAAA,MACxBC,kBAAkBW,EAAMX;AAAAA,MACxBC,iBAAiBU,EAAMV;AAAAA,MACvBT,eAAemB,EAAMnB;AAAAA,MACrBU,eAAeS,EAAMT;AAAAA,MACrBC,eAAeQ,EAAMR;AAAAA,MACrBd,YAAYsB,EAAMtB;AAAAA,MAClBM,YAAYgB,EAAMhB;AAAAA,MAClBD,mBAAmBiB,EAAMjB;AAAAA,MACzBU,uBAAuBO,EAAMP;AAAAA,MAC7BE,qBAAqBK,EAAML;AAAAA,MAC3BC,WAAWI,EAAMJ;AAAAA,IAClB,EAAC;AAEF,WAAO,MACLW,EAAAC,EAAAC,UAAA;AAAA,MAAA,OAAgCJ,EAAkBK;AAAAA,IAAK,GAAA;AAAA,MAAKC,SAASR,EAAMQ;AAAAA,IAAO,CAAA;AAAA,EAEtF;AACF,CAAC;"}