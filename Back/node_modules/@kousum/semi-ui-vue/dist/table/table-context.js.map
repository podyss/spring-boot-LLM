{"version":3,"file":"table-context.js","sources":["../../src/components/table/table-context.ts"],"sourcesContent":["\nimport { ColumnProps, GetVirtualizedListRef, RowKey } from './interface';\nimport {\n    BaseRowKeyType,\n    BaseHeadWidth,\n} from '@douyinfe/semi-foundation/table/foundation';\nimport Provider from \"./tableContext/Provider\";\nimport Consumer from \"./tableContext/Consumer\";\nimport {VueJsxNode} from \"../interface\";\nimport type { ContextValue } from '../configProvider/context';\n\nexport interface TableContextProps {\n    // children?: VueJsxNode;\n    anyColumnFixed?: boolean;\n    flattenedColumns?: ColumnProps[];\n    tableWidth?: number;\n    headWidths?: BaseHeadWidth[][];\n    setHeadWidths?: (headWidth?: BaseHeadWidth[], index?: number) => void;\n    getHeadWidths?: (index?: number) => number[];\n    getCellWidths?: (flattenColumns: ColumnProps[], flattenedWidths?: number[], ignoreScrollBarKey?: boolean) => number[];\n    handleRowExpanded?: (expanded: boolean, realKey: RowKey<any>, domEvent: MouseEvent) => void;\n    renderExpandIcon?: (record: Record<string, any>, isNested?: boolean, groupKey?: string | number) => VueJsxNode;\n    renderSelection?: (record?: Record<string, any>, isHeader?: boolean) => VueJsxNode;\n    getVirtualizedListRef?: GetVirtualizedListRef;\n    setBodyHasScrollbar?: (bodyHasScrollBar: boolean) => void;\n    direction?: ContextValue['direction']\n}\n\nconst TableContext = {\n    Provider,\n    Consumer\n}\n\nexport default TableContext;\n"],"names":["TableContext","Provider","Consumer"],"mappings":";;AA4BA,MAAMA,IAAe;AAAA,EACjB,UAAAC;AAAA,EACA,UAAAC;AACJ;"}