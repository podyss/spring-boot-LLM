import { defineComponent as k, useSlots as j, createVNode as r, mergeProps as B } from "vue";
import * as e from "../PropTypes";
import { vuePropsMake as v } from "../PropTypes";
import { get as l, noop as R } from "lodash";
import m from "classnames";
import $ from "./ColGroup";
import D from "./TableHeader";
import { useHasInProps as U } from "../_base/baseComponent";
const F = {
  tableLayout: e.string,
  bodyHasScrollBar: e.bool,
  columns: e.array,
  components: e.object,
  dataSource: e.array,
  fixed: e.oneOfType([e.bool, e.string]),
  handleBodyScroll: e.func,
  prefixCls: e.string,
  forwardedRef: e.oneOfType([e.object, e.func]),
  scroll: e.object,
  selectedRowKeysSet: {
    type: e.object,
    required: !0
  },
  // Useful when update is selected
  showHeader: e.bool,
  onDidUpdate: e.func,
  onHeaderRow: e.func,
  anyColumnFixed: e.bool,
  sticky: [e.bool, e.object]
}, L = {
  handleBodyScroll: R
}, N = v(F, L), z = /* @__PURE__ */ k({
  props: {
    ...N
  },
  name: "HeadTable",
  setup(s, {}) {
    const {
      getProps: a
    } = U();
    return j(), () => {
      const {
        scroll: u,
        prefixCls: o,
        fixed: y,
        forwardedRef: b,
        handleBodyScroll: h,
        columns: n,
        components: c,
        onDidUpdate: x,
        showHeader: T,
        tableLayout: S,
        anyColumnFixed: O,
        bodyHasScrollBar: H,
        sticky: d
      } = a(s), w = l(c, "header.outer", "table"), p = l(u, "x"), t = {}, f = {};
      p && !y && (f.width = p + "px"), H && (t.overflowY = "scroll");
      const C = r($, {
        columns: n,
        prefixCls: o
      }, null), g = r(D, B(a(s), {
        columns: n,
        components: c,
        onDidUpdate: x
      }), null), P = m(`${o}-header`, {
        [`${o}-header-sticky`]: d,
        [`${o}-header-hidden`]: !T
      }), i = l(d, "top", 0);
      return typeof i == "number" && (t.top = i), r("div", {
        key: "headTable",
        style: t,
        class: P,
        ref: b,
        onScroll: h
      }, [r(w, {
        style: f,
        className: m(o, {
          [`${o}-fixed`]: S === "fixed"
        })
      }, {
        default: () => [C, g]
      })]);
    };
  }
});
export {
  z as default,
  N as vuePropsType
};
//# sourceMappingURL=HeadTable.js.map
