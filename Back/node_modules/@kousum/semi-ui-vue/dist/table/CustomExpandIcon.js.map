{"version":3,"file":"CustomExpandIcon.js","sources":["../../src/components/table/CustomExpandIcon.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */ import * as PropTypes from '../PropTypes';\nimport { noop } from 'lodash';\n\nimport { IconChevronRight, IconChevronDown, IconTreeTriangleDown, IconTreeTriangleRight } from '@kousum/semi-icons-vue';\nimport { cssClasses } from '@douyinfe/semi-foundation/table/constants';\nimport isEnterPress from '@douyinfe/semi-foundation/utils/isEnterPress';\n\nimport CSSAnimation from '../_cssAnimation';\nimport {\n  cloneVNode,\n  ComponentObjectPropsOptions,\n  computed,\n  defineComponent,\n  h,\n  isVNode,\n  PropType,\n  useSlots,\n} from 'vue';\nimport { CombineProps, VueJsxNode } from '../interface';\nimport { vuePropsMake } from '../PropTypes';\n\nexport interface CustomExpandIconProps {\n  expanded?: boolean;\n  componentType?: 'tree' | 'expand';\n  onClick?: (nextExpand: boolean, e: MouseEvent) => void;\n  onMouseEnter?: (e: MouseEvent) => void;\n  onMouseLeave?: (e: MouseEvent) => void;\n  expandIcon?: ((expanded?: boolean) => VueJsxNode) | VueJsxNode;\n  prefixCls?: string;\n  motion?: boolean;\n}\n\n/**\n * render expand icon\n */\n\nconst propTypes: CombineProps<CustomExpandIconProps> = {\n  expanded: PropTypes.bool,\n  componentType: String as PropType<CustomExpandIconProps['componentType']>,\n  onClick: PropTypes.func as PropType<CustomExpandIconProps['onClick']>,\n  onMouseEnter: PropTypes.func as PropType<CustomExpandIconProps['onMouseEnter']>,\n  onMouseLeave: PropTypes.func as PropType<CustomExpandIconProps['onMouseLeave']>,\n  expandIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  prefixCls: PropTypes.string,\n  motion: PropTypes.bool,\n};\n\nconst defaultProps = {\n  componentType: 'expand',\n  onClick: noop,\n  onMouseEnter: noop,\n  onMouseLeave: noop,\n  prefixCls: cssClasses.PREFIX,\n};\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst CustomExpandIcon = defineComponent({\n  props: { ...vuePropsType },\n  name: 'CustomExpandIcon',\n  setup(props, {}) {\n    const slots = useSlots();\n\n    const handleClick = computed(() => (e) => {\n      if (typeof props.onClick === 'function') {\n        props.onClick(!props.expanded, e);\n      }\n    });\n    return () => {\n      const {\n        expanded,\n        componentType,\n        onClick = noop,\n        onMouseEnter = noop,\n        onMouseLeave = noop,\n        expandIcon,\n        prefixCls = cssClasses.PREFIX,\n        motion = true,\n      } = props;\n\n      let icon;\n\n      if (isVNode(expandIcon)) {\n        icon = expandIcon;\n      } else if (typeof expandIcon === 'function') {\n        icon = expandIcon(expanded);\n      } else if (componentType === 'tree') {\n        icon = expanded && !motion ? <IconTreeTriangleDown size=\"small\" /> : <IconTreeTriangleRight size=\"small\" />;\n      } else {\n        icon = expanded && !motion ? <IconChevronDown /> : <IconChevronRight />;\n      }\n\n      if (motion) {\n        const originIcon = icon;\n        icon = (\n          <CSSAnimation\n            animationState={expanded ? 'enter' : 'leave'}\n            startClassName={`${cssClasses.PREFIX}-expandedIcon-${expanded ? 'show' : 'hide'}`}\n            children={({ animationClassName }) => {\n              return cloneVNode(originIcon, { class: (originIcon.props?.class || '') + ' ' + animationClassName });\n            }}\n          ></CSSAnimation>\n        );\n      }\n\n      return (\n        <span\n          role=\"button\"\n          aria-label=\"Expand this row\"\n          tabindex={-1}\n          onClick={handleClick.value}\n          onMouseenter={onMouseEnter}\n          onMouseleave={onMouseLeave}\n          class={`${prefixCls}-expand-icon`}\n          onKeypress={(e) => isEnterPress(e) && handleClick.value(e as any)}\n        >\n          {icon}\n        </span>\n      );\n    };\n  },\n});\n\nexport default CustomExpandIcon;\n"],"names":["propTypes","expanded","PropTypes","bool","componentType","String","onClick","func","onMouseEnter","onMouseLeave","expandIcon","oneOfType","node","prefixCls","string","motion","defaultProps","noop","cssClasses","PREFIX","vuePropsType","vuePropsMake","CustomExpandIcon","defineComponent","props","name","setup","useSlots","handleClick","computed","e","icon","isVNode","_createVNode","IconTreeTriangleDown","IconTreeTriangleRight","IconChevronDown","IconChevronRight","originIcon","CSSAnimation","children","animationClassName","cloneVNode","class","value","isEnterPress"],"mappings":";;;;;;;;AAoCA,MAAMA,IAAiD;AAAA,EACrDC,UAAUC,EAAUC;AAAAA,EACpBC,eAAeC;AAAAA,EACfC,SAASJ,EAAUK;AAAAA,EACnBC,cAAcN,EAAUK;AAAAA,EACxBE,cAAcP,EAAUK;AAAAA,EACxBG,YAAYR,EAAUS,UAAU,CAACT,EAAUU,MAAMV,EAAUK,IAAI,CAAC;AAAA,EAChEM,WAAWX,EAAUY;AAAAA,EACrBC,QAAQb,EAAUC;AACpB,GAEMa,IAAe;AAAA,EACnBZ,eAAe;AAAA,EACfE,SAASW;AAAAA,EACTT,cAAcS;AAAAA,EACdR,cAAcQ;AAAAA,EACdJ,WAAWK,EAAWC;AACxB,GACaC,IAAeC,EAAarB,GAAWgB,CAAY,GAC1DM,IAAmBC,gBAAAA,EAAgB;AAAA,EACvCC,OAAO;AAAA,IAAE,GAAGJ;AAAAA,EAAc;AAAA,EAC1BK,MAAM;AAAA,EACNC,MAAMF,GAAO,IAAI;AACDG,IAAAA,EAAU;AAExB,UAAMC,IAAcC,EAAS,MAAOC,CAAAA,MAAM;AACxC,MAAI,OAAON,EAAMlB,WAAY,cAC3BkB,EAAMlB,QAAQ,CAACkB,EAAMvB,UAAU6B,CAAC;AAAA,IAEpC,CAAC;AACD,WAAO,MAAM;AACX,YAAM;AAAA,QACJ7B,UAAAA;AAAAA,QACAG,eAAAA;AAAAA,QACAE,SAAAA,IAAUW;AAAAA,QACVT,cAAAA,IAAeS;AAAAA,QACfR,cAAAA,IAAeQ;AAAAA,QACfP,YAAAA;AAAAA,QACAG,WAAAA,IAAYK,EAAWC;AAAAA,QACvBJ,QAAAA,IAAS;AAAA,MACV,IAAGS;AAEJ,UAAIO;AAYJ,UAVIC,EAAQtB,CAAU,IACpBqB,IAAOrB,IACE,OAAOA,KAAe,aAC/BqB,IAAOrB,EAAWT,CAAQ,IACjBG,MAAkB,SAC3B2B,IAAO9B,KAAY,CAACc,IAAMkB,EAAAC,GAAA;AAAA,QAAA,MAAA;AAAA,SAAAD,IAAAA,IAAAA,EAAAE,GAAA;AAAA,QAAA,MAAA;AAAA,MAAiF,GAAA,IAAA,IAE3GJ,IAAO9B,KAAY,CAACc,IAAMkB,EAAAG,GAAA,MAAA,IAAA,IAAAH,EAAAI,GAA6C,MAAA,IAAA,GAGrEtB,GAAQ;AACV,cAAMuB,IAAaP;AACnBA,QAAAA,IAAIE,EAAAM,GAAA;AAAA,UAAA,gBAEgBtC,IAAW,UAAU;AAAA,UAAO,gBAC5B,GAAGiB,EAAWC,MAAM,iBAAiBlB,IAAW,SAAS,MAAM;AAAA,UAAE,UACvEuC,CAAC;AAAA,YAAEC,oBAAAA;AAAAA,UAAmB,MAAM;;AACpC,mBAAOC,EAAWJ,GAAY;AAAA,cAAEK,UAAQL,IAAAA,EAAWd,UAAXc,gBAAAA,EAAkBK,UAAS,MAAM,MAAMF;AAAAA,YAAmB,CAAC;AAAA,UACrG;AAAA,QAEH,GAAA,IAAA;AAAA,MACH;AAEA,aAAAR,EAAA,QAAA;AAAA,QAAA,MAAA;AAAA,QAAA,cAAA;AAAA,QAAA,UAIc;AAAA,QAAE,SACHL,EAAYgB;AAAAA,QAAK,cACZpC;AAAAA,QAAY,cACZC;AAAAA,QAAY,OACnB,GAAGI,CAAS;AAAA,QAAc,YACpBiB,CAAAA,MAAMe,EAAaf,CAAC,KAAKF,EAAYgB,MAAMd,CAAQ;AAAA,MAAC,GAAA,CAEhEC,CAAI,CAAA;AAAA;EAIb;AACF,CAAC;"}