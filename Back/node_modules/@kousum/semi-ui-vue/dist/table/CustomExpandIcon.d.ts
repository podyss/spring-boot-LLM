import { PropType } from 'vue';
import { CombineProps, VueJsxNode } from '../interface';
export interface CustomExpandIconProps {
    expanded?: boolean;
    componentType?: 'tree' | 'expand';
    onClick?: (nextExpand: boolean, e: MouseEvent) => void;
    onMouseEnter?: (e: MouseEvent) => void;
    onMouseLeave?: (e: MouseEvent) => void;
    expandIcon?: ((expanded?: boolean) => VueJsxNode) | VueJsxNode;
    prefixCls?: string;
    motion?: boolean;
}
export declare const vuePropsType: CombineProps<CustomExpandIconProps>;
declare const CustomExpandIcon: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    expanded: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    componentType: PropType<"tree" | "expand"> | {
        type: PropType<"tree" | "expand">;
        default?: any;
        required?: false;
    };
    onClick: PropType<(nextExpand: boolean, e: MouseEvent) => void> | {
        type: PropType<(nextExpand: boolean, e: MouseEvent) => void>;
        default?: any;
        required?: false;
    };
    onMouseEnter: PropType<(e: MouseEvent) => void> | {
        type: PropType<(e: MouseEvent) => void>;
        default?: any;
        required?: false;
    };
    onMouseLeave: PropType<(e: MouseEvent) => void> | {
        type: PropType<(e: MouseEvent) => void>;
        default?: any;
        required?: false;
    };
    expandIcon: PropType<VueJsxNode | ((expanded?: boolean) => VueJsxNode)> | {
        type: PropType<VueJsxNode | ((expanded?: boolean) => VueJsxNode)>;
        default?: any;
        required?: false;
    };
    prefixCls: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    motion: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    expanded: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    componentType: PropType<"tree" | "expand"> | {
        type: PropType<"tree" | "expand">;
        default?: any;
        required?: false;
    };
    onClick: PropType<(nextExpand: boolean, e: MouseEvent) => void> | {
        type: PropType<(nextExpand: boolean, e: MouseEvent) => void>;
        default?: any;
        required?: false;
    };
    onMouseEnter: PropType<(e: MouseEvent) => void> | {
        type: PropType<(e: MouseEvent) => void>;
        default?: any;
        required?: false;
    };
    onMouseLeave: PropType<(e: MouseEvent) => void> | {
        type: PropType<(e: MouseEvent) => void>;
        default?: any;
        required?: false;
    };
    expandIcon: PropType<VueJsxNode | ((expanded?: boolean) => VueJsxNode)> | {
        type: PropType<VueJsxNode | ((expanded?: boolean) => VueJsxNode)>;
        default?: any;
        required?: false;
    };
    prefixCls: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    motion: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default CustomExpandIcon;
