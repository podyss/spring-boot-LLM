import { CSSProperties, PropType } from 'vue';
import '@douyinfe/semi-foundation/lib/es/space/space.css';
import { CombineProps } from '../interface';
export type Align = 'start' | 'center' | 'end' | 'baseline';
export type Spacing = 'loose' | 'medium' | 'tight' | number;
export type SpaceProps = {
    wrap?: boolean;
    align?: Align;
    vertical?: boolean;
    spacing?: Spacing | Spacing[];
    style?: CSSProperties;
    className?: string;
};
export declare const vuePropsType: CombineProps<SpaceProps>;
declare const Index: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    wrap: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    align: PropType<Align> | {
        type: PropType<Align>;
        default?: any;
        required?: false;
    };
    vertical: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    spacing: PropType<Spacing | Spacing[]> | {
        type: PropType<Spacing | Spacing[]>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    wrap: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    align: PropType<Align> | {
        type: PropType<Align>;
        default?: any;
        required?: false;
    };
    vertical: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    spacing: PropType<Spacing | Spacing[]> | {
        type: PropType<Spacing | Spacing[]>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default Index;
