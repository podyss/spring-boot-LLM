import * as e from "../PropTypes";
import { TimeShape as o } from "./TimeShape";
import { noop as t } from "lodash";
import { numbers as r } from '@douyinfe/semi-foundation/lib/es/popover/constants';
import { strings as n } from '@douyinfe/semi-foundation/lib/es/timePicker/constants';
import { PanelShape as a } from "./PanelShape";
const b = {
  "aria-labelledby": e.string,
  "aria-invalid": e.bool,
  "aria-errormessage": e.string,
  "aria-describedby": e.string,
  "aria-required": e.bool,
  prefixCls: e.string,
  borderless: e.bool,
  clearText: { type: e.string, default: "clear" },
  value: o,
  inputReadOnly: e.bool,
  disabled: e.bool,
  showClear: e.bool,
  defaultValue: o,
  stopPropagation: e.bool,
  open: e.bool,
  defaultOpen: e.bool,
  onOpenChange: { type: e.func, default: t },
  position: e.any,
  getPopupContainer: { type: e.func, default: () => document.body },
  placeholder: e.string,
  format: e.string,
  style: e.object,
  className: e.string,
  popupClassName: e.string,
  popupStyle: e.object,
  disabledHours: e.func,
  disabledMinutes: e.func,
  disabledSeconds: e.func,
  hideDisabledOptions: e.bool,
  onChange: e.func,
  use12Hours: e.bool,
  hourStep: e.number,
  minuteStep: e.number,
  secondStep: e.number,
  focusOnOpen: e.bool,
  autoFocus: e.bool,
  size: e.string,
  panels: e.array,
  onFocus: e.func,
  onBlur: e.func,
  locale: e.object,
  localeCode: e.string,
  dateFnsLocale: e.object,
  zIndex: {
    type: [e.number, e.string],
    default: r.DEFAULT_Z_INDEX
  },
  insetLabel: e.node,
  insetLabelId: e.string,
  validateStatus: e.string,
  type: e.string,
  rangeSeparator: { type: e.string, default: n.DEFAULT_RANGE_SEPARATOR },
  triggerRender: e.func,
  timeZone: [e.string, e.number],
  scrollItemProps: e.object,
  motion: [e.bool, e.func, e.object],
  autoAdjustOverflow: { type: e.bool, default: !0 },
  ...a,
  inputStyle: e.object,
  clearIcon: e.node,
  dropdownMargin: e.oneOfType([e.number, e.object]),
  preventScroll: e.bool,
  id: e.string,
  onChangeWithDateFirst: e.bool
};
export {
  b as timePickerPropTypes
};
//# sourceMappingURL=propTypes.js.map
