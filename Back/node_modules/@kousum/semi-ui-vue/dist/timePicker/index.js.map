{"version":3,"file":"index.js","sources":["../../src/components/timePicker/index.tsx"],"sourcesContent":["import { defineComponent, ref, h, Fragment, useSlots } from 'vue';\n\nimport LocaleConsumer from '../locale/localeConsumer';\nimport BaseTimePicker, { defaultProps, propTypes } from './TimePicker';\nimport type { TimePickerProps as BasePickerProps, BaseValueType } from './TimePicker';\n\nimport type { ValidateStatus } from '../_base/baseComponent';\nimport type { ScrollItemProps } from '../scrollList';\nimport { get } from 'lodash';\nimport { Locale } from '../locale/interface';\nimport { vuePropsMake } from '../PropTypes';\nimport Context from '../configProvider/context';\nimport { useHasInProps } from '../_base/baseComponent';\n\nexport type { TimeInputProps } from './TimeInput';\nexport type { TimePickerProps } from './TimePicker';\n\nexport { BaseValueType, ScrollItemProps, ValidateStatus };\n\nexport type LocalePickerProps = BasePickerProps;\n\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst index = defineComponent({\n  props: { ...vuePropsType },\n  name: 'TimePickerIndex',\n  setup(props, {}) {\n    const slots = useSlots();\n    const { getProps, hasInProps } = useHasInProps();\n\n    return () => {\n      const { type } = props;\n      return (\n        <Context.Consumer>\n          {({ timeZone }: { timeZone?: string | number }) => (\n            <LocaleConsumer componentName=\"TimePicker\">\n              {(locale: Locale['TimePicker'], localeCode: string, dateFnsLocale: Locale['dateFnsLocale']) => (\n                <BaseTimePicker\n                  timeZone={timeZone}\n                  placeholder={get(locale, ['placeholder', type])}\n                  {...getProps(props)}\n                  locale={locale}\n                  localeCode={localeCode}\n                  dateFnsLocale={dateFnsLocale}\n                />\n              )}\n            </LocaleConsumer>\n          )}\n        </Context.Consumer>\n      );\n    };\n  },\n});\n\nexport default index;\n"],"names":["vuePropsType","vuePropsMake","propTypes","defaultProps","index","defineComponent","props","name","setup","useSlots","getProps","hasInProps","useHasInProps","type","_createVNode","Context","Consumer","default","timeZone","LocaleConsumer","locale","localeCode","dateFnsLocale","BaseTimePicker","_mergeProps","get"],"mappings":";;;;;;;AAqBO,MAAMA,IAAeC,EAAaC,GAAWC,CAAY,GAC1DC,IAAQC,gBAAAA,EAAgB;AAAA,EAC5BC,OAAO;AAAA,IAAE,GAAGN;AAAAA,EAAc;AAAA,EAC1BO,MAAM;AAAA,EACNC,MAAMF,GAAO,IAAI;AACDG,IAAAA,EAAU;AACxB,UAAM;AAAA,MAAEC,UAAAA;AAAAA,MAAUC,YAAAA;AAAAA,IAAY,IAAGC,EAAa;AAE9C,WAAO,MAAM;AACX,YAAM;AAAA,QAAEC,MAAAA;AAAAA,MAAM,IAAGP;AACjB,aAAAQ,EAAAC,EAAAC,UAAA,MAAA;AAAA,QAAAC,SAEKA,CAAC;AAAA,UAAEC,UAAAA;AAAAA,cAA0CJ,EAAAK,GAAA;AAAA,UAAA,eAAA;AAAA,QAAA,GAAA;AAAA,UAAAF,SAEzCA,CAACG,GAA8BC,GAAoBC,MAAsCR,EAAAS,GAAAC,EAAA;AAAA,YAAA,UAE5EN;AAAAA,YAAQ,aACLO,EAAIL,GAAQ,CAAC,eAAeP,CAAI,CAAC;AAAA,aAC1CH,EAASJ,CAAK,GAAC;AAAA,YAAA,QACXc;AAAAA,YAAM,YACFC;AAAAA,YAAU,eACPC;AAAAA,UAAa,CAAA,GAAA,IAAA;AAAA,QAE/B,CAAA;AAAA,MAEJ,CAAA;AAAA;EAIT;AACF,CAAC;"}