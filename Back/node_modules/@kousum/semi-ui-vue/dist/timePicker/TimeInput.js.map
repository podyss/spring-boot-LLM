{"version":3,"file":"TimeInput.js","sources":["../../src/components/timePicker/TimeInput.tsx"],"sourcesContent":["import {\n  defineComponent,\n  ref,\n  h,\n  Fragment,\n  reactive,\n  onMounted,\n  watch,\n  ComponentObjectPropsOptions,\n  PropType,\n} from 'vue';\nimport * as PropTypes from '../PropTypes';\nimport classNames from 'classnames';\nimport { strings } from '@douyinfe/semi-foundation/timePicker/constants';\nimport { noop } from 'lodash';\n\nimport Input from '../input';\nimport { BaseProps, useBaseComponent } from '../_base/baseComponent';\nimport InputFoundation, { TimeInputAdapter } from '@douyinfe/semi-foundation/timePicker/inputFoundation';\nimport { IconClock } from '@kousum/semi-icons-vue';\nimport { TimePickerProps } from './TimePicker';\nimport { vuePropsMake } from '../PropTypes';\nimport { CombineProps } from '../interface';\n\nexport type TimeInputProps = Pick<\n  TimePickerProps,\n  | 'value'\n  | 'format'\n  | 'prefixCls'\n  | 'placeholder'\n  | 'clearText'\n  | 'inputReadOnly'\n  | 'disabled'\n  | 'type'\n  | 'timeZone'\n  | 'defaultOpen'\n  | 'disabledHours'\n  | 'disabledMinutes'\n  | 'disabledSeconds'\n  | 'dateFnsLocale'\n  | 'onFocus'\n  | 'onBlur'\n  | 'focusOnOpen'\n  | 'locale'\n  | 'localeCode'\n  | 'insetLabel'\n  | 'validateStatus'\n  | 'borderless'\n  | 'preventScroll'\n> &\n  BaseProps & {\n    onChange?: (value: string) => void;\n    onEsc?: () => void;\n    onClick?: any;\n    defaultOpenValue?: boolean;\n    currentSelectPanel?: string;\n    timeStampValue?: any;\n    invalid?: boolean;\n\n    hourOptions?: any[];\n    minuteOptions?: any[];\n    secondOptions?: any[];\n  };\n\nconst propTypes: CombineProps<TimeInputProps> = {\n  value: String,\n  borderless: PropTypes.bool,\n  format: { type: PropTypes.string, default: strings.DEFAULT_FORMAT },\n  prefixCls: PropTypes.string,\n  placeholder: PropTypes.string,\n  clearText: PropTypes.string,\n  inputReadOnly: { type: PropTypes.bool, default: false },\n  hourOptions: PropTypes.array as PropType<TimeInputProps['hourOptions']>,\n  minuteOptions: PropTypes.array as PropType<TimeInputProps['minuteOptions']>,\n  secondOptions: PropTypes.array as PropType<TimeInputProps['secondOptions']>,\n  disabledHours: { type: PropTypes.func as PropType<TimeInputProps['disabledHours']>, default: noop },\n  disabledMinutes: { type: PropTypes.func as PropType<TimeInputProps['disabledMinutes']>, default: noop },\n  disabledSeconds: { type: PropTypes.func as PropType<TimeInputProps['disabledSeconds']>, default: noop },\n  onChange: { type: PropTypes.func as PropType<TimeInputProps['onChange']>, default: noop },\n  onFocus: { type: PropTypes.func, default: noop },\n  onBlur: { type: PropTypes.func, default: noop },\n  onEsc: PropTypes.func as PropType<TimeInputProps['onEsc']>,\n  onClick: { type: PropTypes.func, default: noop },\n  defaultOpenValue: PropTypes.object,\n  currentSelectPanel: PropTypes.string,\n  focusOnOpen: PropTypes.bool,\n  timeStampValue: PropTypes.any,\n  locale: PropTypes.object,\n  localeCode: PropTypes.string,\n  insetLabel: PropTypes.node as PropType<TimeInputProps['insetLabel']>,\n  validateStatus: PropTypes.string as PropType<TimeInputProps['validateStatus']>,\n  preventScroll: PropTypes.bool,\n  disabled: PropTypes.bool,\n  type: PropTypes.string as PropType<TimeInputProps['type']>,\n  timeZone: [PropTypes.string, PropTypes.number],\n  defaultOpen: PropTypes.bool,\n  dateFnsLocale: PropTypes.object,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  invalid: PropTypes.bool,\n};\nconst defaultProps = {\n  borderless: false,\n  inputReadOnly: false,\n  onChange: noop,\n  onBlur: noop,\n  onFocus: noop,\n  onClick: noop,\n  disabledHours: noop,\n  disabledMinutes: noop,\n  disabledSeconds: noop,\n  format: strings.DEFAULT_FORMAT,\n};\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst TimeInput = defineComponent({\n  props: { ...vuePropsType },\n  name: 'TimeInput',\n  setup(props, { slots }) {\n    const state = reactive<Record<any, any>>({\n      // focusing: props.focusOnOpen,\n    });\n    const { adapter: adapterInject, isControlled } = useBaseComponent<TimeInputProps>(props, state);\n\n    function adapter_(): TimeInputAdapter {\n      return {\n        ...adapterInject<TimeInputProps>(),\n        notifyChange: (...args) => props.onChange(...args),\n        notifyFocus: (...args) => props.onFocus(...args),\n        notifyBlur: (...args) => props.onBlur(...args),\n      };\n    }\n    const adapter = adapter_();\n    const foundation: InputFoundation = new InputFoundation(adapter);\n\n    onMounted(() => {\n      const { focusOnOpen, preventScroll } = props;\n      if (focusOnOpen) {\n        const requestAnimationFrame = window.requestAnimationFrame || window.setTimeout;\n        requestAnimationFrame(() => {\n          const inputNode = adapter.getCache('inputNode');\n          if (inputNode) {\n            inputNode.focus({ preventScroll });\n            inputNode.select();\n          }\n        });\n      }\n    });\n\n    watch(\n      [() => props.timeStampValue, () => state.timeStampValue, () => props.value],\n      (value, [a, b, prevPropsValue]) => {\n        const { timeStampValue } = props;\n\n        if (isControlled('timeStampValue') && timeStampValue !== state.timeStampValue) {\n          foundation.restoreCursor();\n        }\n\n        if (props.value !== prevPropsValue) {\n          foundation.restoreCursor();\n        }\n      },\n      { immediate: true }\n    );\n\n    const setRef = (node: HTMLElement) => adapter.setCache('inputNode', node);\n\n    const handleClick: any = (e) => props.onClick(e);\n\n    const handleFocus: any = (e) => foundation.handleFocus(e);\n\n    const handleBlur: any = (e) => foundation.handleBlur(e);\n\n    const handleChange = (v: string) => foundation.handleChange(v);\n\n    function getInput() {\n      const {\n        prefixCls,\n        placeholder,\n        inputReadOnly,\n        onFocus,\n        disabled,\n        type,\n        locale,\n        localeCode,\n        insetLabel,\n        validateStatus,\n        value,\n        onChange,\n        invalid,\n        format,\n        clearText,\n        disabledHours,\n        disabledMinutes,\n        disabledSeconds,\n        onEsc,\n        defaultOpenValue,\n        currentSelectPanel,\n        focusOnOpen,\n        timeStampValue,\n        timeZone,\n        defaultOpen,\n        dateFnsLocale,\n        onBlur,\n        ...rest\n      } = props;\n      // const { focusing } = state;\n      const inputCls = classNames(`${prefixCls}-input`, {\n        [`${prefixCls}-input-invalid`]: invalid,\n        [`${prefixCls}-input-readonly`]: inputReadOnly,\n      });\n      const mergeValidateStatus = invalid ? 'error' : validateStatus;\n      // debugger\n      return (\n        <Input\n          {...rest}\n          hideSuffix\n          className={inputCls}\n          ref={setRef as any}\n          value={value as any}\n          placeholder={placeholder || locale.placeholder[type]}\n          readonly={Boolean(inputReadOnly)}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          suffix={<IconClock onClick={handleClick} />}\n          validateStatus={mergeValidateStatus}\n          disabled={disabled}\n          insetLabel={insetLabel}\n        />\n      );\n    }\n\n    return () => {\n      const { prefixCls } = props;\n      return <div class={`${prefixCls}-input-wrap`}>{getInput()}</div>;\n    };\n  },\n});\n\nexport default TimeInput;\n"],"names":["propTypes","value","String","borderless","PropTypes","bool","format","type","string","default","strings","DEFAULT_FORMAT","prefixCls","placeholder","clearText","inputReadOnly","hourOptions","array","minuteOptions","secondOptions","disabledHours","func","noop","disabledMinutes","disabledSeconds","onChange","onFocus","onBlur","onEsc","onClick","defaultOpenValue","object","currentSelectPanel","focusOnOpen","timeStampValue","any","locale","localeCode","insetLabel","node","validateStatus","preventScroll","disabled","timeZone","number","defaultOpen","dateFnsLocale","style","className","invalid","defaultProps","vuePropsType","vuePropsMake","TimeInput","defineComponent","props","name","setup","slots","state","reactive","adapter","adapterInject","isControlled","useBaseComponent","adapter_","notifyChange","args","notifyFocus","notifyBlur","foundation","InputFoundation","onMounted","window","requestAnimationFrame","setTimeout","inputNode","getCache","focus","select","watch","a","b","prevPropsValue","restoreCursor","immediate","setRef","setCache","handleClick","e","handleFocus","handleBlur","handleChange","v","getInput","rest","inputCls","classNames","mergeValidateStatus","_createVNode","Input","_mergeProps","Boolean","IconClock"],"mappings":";;;;;;;;;;AAgEA,MAAMA,IAA0C;AAAA,EAC9CC,OAAOC;AAAAA,EACPC,YAAYC,EAAUC;AAAAA,EACtBC,QAAQ;AAAA,IAAEC,MAAMH,EAAUI;AAAAA,IAAQC,SAASC,EAAQC;AAAAA,EAAgB;AAAA,EACnEC,WAAWR,EAAUI;AAAAA,EACrBK,aAAaT,EAAUI;AAAAA,EACvBM,WAAWV,EAAUI;AAAAA,EACrBO,eAAe;AAAA,IAAER,MAAMH,EAAUC;AAAAA,IAAMI,SAAS;AAAA,EAAO;AAAA,EACvDO,aAAaZ,EAAUa;AAAAA,EACvBC,eAAed,EAAUa;AAAAA,EACzBE,eAAef,EAAUa;AAAAA,EACzBG,eAAe;AAAA,IAAEb,MAAMH,EAAUiB;AAAAA,IAAmDZ,SAASa;AAAAA,EAAM;AAAA,EACnGC,iBAAiB;AAAA,IAAEhB,MAAMH,EAAUiB;AAAAA,IAAqDZ,SAASa;AAAAA,EAAM;AAAA,EACvGE,iBAAiB;AAAA,IAAEjB,MAAMH,EAAUiB;AAAAA,IAAqDZ,SAASa;AAAAA,EAAM;AAAA,EACvGG,UAAU;AAAA,IAAElB,MAAMH,EAAUiB;AAAAA,IAA8CZ,SAASa;AAAAA,EAAM;AAAA,EACzFI,SAAS;AAAA,IAAEnB,MAAMH,EAAUiB;AAAAA,IAAMZ,SAASa;AAAAA,EAAM;AAAA,EAChDK,QAAQ;AAAA,IAAEpB,MAAMH,EAAUiB;AAAAA,IAAMZ,SAASa;AAAAA,EAAM;AAAA,EAC/CM,OAAOxB,EAAUiB;AAAAA,EACjBQ,SAAS;AAAA,IAAEtB,MAAMH,EAAUiB;AAAAA,IAAMZ,SAASa;AAAAA,EAAM;AAAA,EAChDQ,kBAAkB1B,EAAU2B;AAAAA,EAC5BC,oBAAoB5B,EAAUI;AAAAA,EAC9ByB,aAAa7B,EAAUC;AAAAA,EACvB6B,gBAAgB9B,EAAU+B;AAAAA,EAC1BC,QAAQhC,EAAU2B;AAAAA,EAClBM,YAAYjC,EAAUI;AAAAA,EACtB8B,YAAYlC,EAAUmC;AAAAA,EACtBC,gBAAgBpC,EAAUI;AAAAA,EAC1BiC,eAAerC,EAAUC;AAAAA,EACzBqC,UAAUtC,EAAUC;AAAAA,EACpBE,MAAMH,EAAUI;AAAAA,EAChBmC,UAAU,CAACvC,EAAUI,QAAQJ,EAAUwC,MAAM;AAAA,EAC7CC,aAAazC,EAAUC;AAAAA,EACvByC,eAAe1C,EAAU2B;AAAAA,EACzBgB,OAAO3C,EAAU2B;AAAAA,EACjBiB,WAAW5C,EAAUI;AAAAA,EACrByC,SAAS7C,EAAUC;AACrB,GACM6C,IAAe;AAAA,EACnB/C,YAAY;AAAA,EACZY,eAAe;AAAA,EACfU,UAAUH;AAAAA,EACVK,QAAQL;AAAAA,EACRI,SAASJ;AAAAA,EACTO,SAASP;AAAAA,EACTF,eAAeE;AAAAA,EACfC,iBAAiBD;AAAAA,EACjBE,iBAAiBF;AAAAA,EACjBhB,QAAQI,EAAQC;AAClB,GACawC,IAAeC,EAAapD,GAAWkD,CAAY,GAC1DG,KAAYC,gBAAAA,EAAgB;AAAA,EAChCC,OAAO;AAAA,IAAE,GAAGJ;AAAAA,EAAc;AAAA,EAC1BK,MAAM;AAAA,EACNC,MAAMF,GAAO;AAAA,IAAEG,OAAAA;AAAAA,EAAM,GAAG;AACtB,UAAMC,IAAQC,EAA2B;AAAA;AAAA,IACvC,CACD,GACK;AAAA,MAAEC,SAASC;AAAAA,MAAeC,cAAAA;AAAAA,IAAa,IAAIC,EAAiCT,GAAOI,CAAK;AAE9F,aAASM,IAA6B;AACpC,aAAO;AAAA,QACL,GAAGH,EAA+B;AAAA,QAClCI,cAAcA,IAAIC,MAASZ,EAAM9B,SAAS,GAAG0C,CAAI;AAAA,QACjDC,aAAaA,IAAID,MAASZ,EAAM7B,QAAQ,GAAGyC,CAAI;AAAA,QAC/CE,YAAYA,IAAIF,MAASZ,EAAM5B,OAAO,GAAGwC,CAAI;AAAA;IAEjD;AACA,UAAMN,IAAUI,KACVK,IAA8B,IAAIC,EAAgBV,CAAO;AAE/DW,IAAAA,EAAU,MAAM;AACd,YAAM;AAAA,QAAEvC,aAAAA;AAAAA,QAAaQ,eAAAA;AAAAA,MAAe,IAAGc;AACvC,MAAItB,MAC4BwC,OAAOC,yBAAyBD,OAAOE,YAC/C,MAAM;AAC1B,cAAMC,IAAYf,EAAQgB,SAAS,WAAW;AAC9C,QAAID,MACFA,EAAUE,MAAM;AAAA,UAAErC,eAAAA;AAAAA,QAAc,CAAC,GACjCmC,EAAUG,OAAM;AAAA,MAEpB,CAAC;AAAA,IAEL,CAAC,GAEDC,EACE,CAAC,MAAMzB,EAAMrB,gBAAgB,MAAMyB,EAAMzB,gBAAgB,MAAMqB,EAAMtD,KAAK,GAC1E,CAACA,GAAO,CAACgF,GAAGC,GAAGC,CAAc,MAAM;AACjC,YAAM;AAAA,QAAEjD,gBAAAA;AAAAA,MAAgB,IAAGqB;AAE3B,MAAIQ,EAAa,gBAAgB,KAAK7B,MAAmByB,EAAMzB,kBAC7DoC,EAAWc,cAAa,GAGtB7B,EAAMtD,UAAUkF,KAClBb,EAAWc,cAAa;AAAA,IAE5B,GACA;AAAA,MAAEC,WAAW;AAAA,IAAK,CACpB;AAEA,UAAMC,IAAU/C,CAAAA,MAAsBsB,EAAQ0B,SAAS,aAAahD,CAAI,GAElEiD,IAAoBC,CAAAA,MAAMlC,EAAM1B,QAAQ4D,CAAC,GAEzCC,IAAoBD,CAAAA,MAAMnB,EAAWoB,YAAYD,CAAC,GAElDE,IAAmBF,CAAAA,MAAMnB,EAAWqB,WAAWF,CAAC,GAEhDG,IAAgBC,CAAAA,MAAcvB,EAAWsB,aAAaC,CAAC;AAE7D,aAASC,IAAW;AAClB,YAAM;AAAA,QACJlF,WAAAA;AAAAA,QACAC,aAAAA;AAAAA,QACAE,eAAAA;AAAAA,QACAW,SAAAA;AAAAA,QACAgB,UAAAA;AAAAA,QACAnC,MAAAA;AAAAA,QACA6B,QAAAA;AAAAA,QACAC,YAAAA;AAAAA,QACAC,YAAAA;AAAAA,QACAE,gBAAAA;AAAAA,QACAvC,OAAAA;AAAAA,QACAwB,UAAAA;AAAAA,QACAwB,SAAAA;AAAAA,QACA3C,QAAAA;AAAAA,QACAQ,WAAAA;AAAAA,QACAM,eAAAA;AAAAA,QACAG,iBAAAA;AAAAA,QACAC,iBAAAA;AAAAA,QACAI,OAAAA;AAAAA,QACAE,kBAAAA;AAAAA,QACAE,oBAAAA;AAAAA,QACAC,aAAAA;AAAAA,QACAC,gBAAAA;AAAAA,QACAS,UAAAA;AAAAA,QACAE,aAAAA;AAAAA,QACAC,eAAAA;AAAAA,QACAnB,QAAAA;AAAAA,QACA,GAAGoE;AAAAA,MACJ,IAAGxC,GAEEyC,IAAWC,EAAW,GAAGrF,CAAS,UAAU;AAAA,QAChD,CAAC,GAAGA,CAAS,gBAAgB,GAAGqC;AAAAA,QAChC,CAAC,GAAGrC,CAAS,iBAAiB,GAAGG;AAAAA,MACnC,CAAC,GACKmF,IAAsBjD,IAAU,UAAUT;AAEhD,aAAA2D,EAAAC,GAAAC,EAEQN,GAAI;AAAA,QAAA,YAAA;AAAA,QAAA,WAEGC;AAAAA,QAAQ,KACdV;AAAAA,QAAM,OACJrF;AAAAA,QAAK,aACCY,KAAeuB,EAAOvB,YAAYN,CAAI;AAAA,QAAC,UAC1C+F,EAAQvF;AAAAA,QAAc,UACtB6E;AAAAA,QAAY,SACbF;AAAAA,QAAW,QACZC;AAAAA,QAAU,QAAAQ,EAAAI,GAAA;AAAA,UAAA,SACUf;AAAAA,QAAW,GAAA,IAAA;AAAA,QAAA,gBACvBU;AAAAA,QAAmB,UACzBxD;AAAAA,QAAQ,YACNJ;AAAAA,MAAU,CAAA,GAAA,IAAA;AAAA,IAG5B;AAEA,WAAO,MAAM;AACX,YAAM;AAAA,QAAE1B,WAAAA;AAAAA,MAAW,IAAG2C;AACtB,aAAA4C,EAAA,OAAA;AAAA,QAAA,OAAmB,GAAGvF,CAAS;AAAA,SAAgBkF,CAAAA,EAAU,CAAA,CAAA;AAAA;EAE7D;AACF,CAAC;"}