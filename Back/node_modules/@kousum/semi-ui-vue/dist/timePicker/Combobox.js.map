{"version":3,"file":"Combobox.js","sources":["../../src/components/timePicker/Combobox.tsx"],"sourcesContent":["import {\n  defineComponent,\n  ref,\n  h,\n  Fragment,\n  useSlots,\n  reactive,\n  onMounted,\n  watch,\n  ComponentObjectPropsOptions,\n  PropType,\n} from 'vue';\n\nimport { format as dateFnsFormat } from 'date-fns';\nimport { noop, omit } from 'lodash';\n\nimport { BaseProps, useBaseComponent } from '../_base/baseComponent';\nimport { strings } from '@douyinfe/semi-foundation/timePicker/constants';\nimport ScrollList from '../scrollList/index';\nimport { scrollItemFunc } from '../scrollList/scrollItem';\nimport ComboboxFoundation, { formatOption } from '@douyinfe/semi-foundation/timePicker/ComboxFoundation';\nimport LocaleConsumer from '../locale/localeConsumer';\nimport type { TimePickerProps } from './TimePicker';\nimport { Locale } from '../locale/interface';\nimport { vuePropsMake } from '../PropTypes';\nimport * as PropTypes from '../PropTypes';\nimport { timePickerPropTypes } from './propTypes';\nimport { CombineProps } from '../interface';\nconst ScrollItemFormatOptionReturn = scrollItemFunc<FormatOptionReturn>();\nconst ScrollItemAMPMOptionItem = scrollItemFunc<AMPMOptionItem>();\n\nexport type ComboboxProps = Pick<\n  TimePickerProps,\n  | 'format'\n  | 'prefixCls'\n  | 'disabledHours'\n  | 'disabledMinutes'\n  | 'disabledSeconds'\n  | 'hideDisabledOptions'\n  | 'use12Hours'\n  | 'scrollItemProps'\n  | 'panelFooter'\n  | 'panelHeader'\n> &\n  BaseProps & {\n    defaultOpenValue?: TimePickerProps['value'];\n    showHour?: boolean;\n    showMinute?: boolean;\n    showSecond?: boolean;\n    onChange?: (value: { isAM: boolean; value: string; timeStampValue: number }) => void;\n    onCurrentSelectPanelChange?: (range: string) => void;\n    isAM?: boolean;\n    timeStampValue?: any;\n    class?: string;\n  };\n\nexport interface ComboboxState {\n  showHour: boolean;\n  showMinute: boolean;\n  showSecond: boolean;\n  hourOptions: number[];\n  minuteOptions: number[];\n  secondOptions: number[];\n}\n\nexport type FormatOptionReturn = ReturnType<typeof formatOption>;\nexport interface AMPMOptionItem {\n  value: string;\n  text: string;\n}\n\nconst staticPropTypes: CombineProps<ComboboxProps> = {\n  class: [PropTypes.string, PropTypes.object],\n  className: PropTypes.string,\n  style: [PropTypes.string, PropTypes.object] as PropType<ComboboxProps['style']>,\n  format: PropTypes.string,\n  defaultOpenValue: PropTypes.object,\n  prefixCls: PropTypes.string,\n  onChange: PropTypes.func as PropType<ComboboxProps['onChange']>,\n  showHour: PropTypes.bool,\n  showMinute: PropTypes.bool,\n  showSecond: PropTypes.bool,\n  disabledHours: PropTypes.func as PropType<ComboboxProps['disabledHours']>,\n  disabledMinutes: PropTypes.func as PropType<ComboboxProps['disabledMinutes']>,\n  disabledSeconds: PropTypes.func as PropType<ComboboxProps['disabledSeconds']>,\n  hideDisabledOptions: PropTypes.bool,\n  onCurrentSelectPanelChange: PropTypes.func as PropType<ComboboxProps['onCurrentSelectPanelChange']>,\n  use12Hours: PropTypes.bool,\n  isAM: PropTypes.bool,\n  timeStampValue: PropTypes.any,\n  scrollItemProps: PropTypes.object,\n\n  panelHeader: PropTypes.string as PropType<ComboboxProps['panelHeader']>,\n\n  ...omit(timePickerPropTypes, [\n    'prefixCls',\n    'format',\n    'style',\n    'disabledHours',\n    'disabledMinutes',\n    'disabledSeconds',\n    'hideDisabledOptions',\n    'onChange',\n    'use12Hours',\n    'scrollItemProps',\n  ]),\n  panelFooter: PropTypes.node as PropType<ComboboxProps['panelFooter']>,\n};\n\nconst staticDefaultProps = {\n  disabledHours: noop,\n  disabledMinutes: noop,\n  disabledSeconds: noop,\n  format: strings.DEFAULT_FORMAT,\n};\nexport const vuePropsType = vuePropsMake(staticPropTypes, staticDefaultProps);\nconst Combobox = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Combobox',\n  setup(props, {}) {\n    const slots = useSlots();\n    const state = reactive<ComboboxState>({\n      hourOptions: [],\n      minuteOptions: [],\n      secondOptions: [],\n      showHour: false,\n      showMinute: false,\n      showSecond: false,\n    });\n\n    const { adapter: adapterInject } = useBaseComponent<ComboboxProps>(props, state);\n\n    const foundation = new ComboboxFoundation(adapterInject());\n\n    function setState() {\n      const foundationState = foundation.initData();\n      Object.keys(foundationState).forEach((key) => {\n        state[key] = foundationState[key];\n      });\n    }\n\n    setState();\n\n    watch([() => props.timeStampValue, () => props.format], ([], [prevPropsTimeStampValue, prevPropsFormat]) => {\n      if (prevPropsTimeStampValue !== props.timeStampValue || prevPropsFormat !== props.format) {\n        setState();\n      }\n    });\n\n    const cacheRefCurrent = (key: string, current: any) => {\n      if (key && typeof key === 'string') {\n        adapterInject().setCache(key, current);\n      }\n    };\n\n    const reselect = () => {\n      const currentKeys = ['ampm', 'hour', 'minute', 'second'];\n\n      currentKeys.forEach((key) => {\n        const current = adapterInject().getCache(key);\n\n        if (current && current.scrollToIndex) {\n          current.scrollToIndex();\n        }\n      });\n    };\n\n    const onItemChange = ({ type, value, disabled }: { type?: string; value: string; disabled?: boolean }) => {\n      // eslint-disable-next-line prefer-const\n      let { onChange, use12Hours, isAM, format, timeStampValue } = props;\n      const transformValue = foundation.getDisplayDateFromTimeStamp(timeStampValue);\n      // TODO: foundation\n      if (type === 'hour') {\n        if (use12Hours) {\n          if (isAM) {\n            transformValue.setHours(Number(value) % 12);\n          } else {\n            transformValue.setHours((Number(value) % 12) + 12);\n          }\n        } else {\n          transformValue.setHours(Number(value));\n        }\n      } else if (type === 'minute') {\n        transformValue.setMinutes(Number(value));\n      } else if (type === 'ampm') {\n        const ampm = value.toUpperCase();\n        if (use12Hours) {\n          if (ampm === 'PM') {\n            isAM = false;\n            transformValue.getHours() < 12 && transformValue.setHours((transformValue.getHours() % 12) + 12);\n          }\n\n          if (ampm === 'AM') {\n            isAM = true;\n            transformValue.getHours() >= 12 && transformValue.setHours(transformValue.getHours() - 12);\n          }\n        }\n      } else {\n        transformValue.setSeconds(Number(value));\n      }\n\n      onChange &&\n        onChange({\n          isAM,\n          value: dateFnsFormat(transformValue, format && format.replace(/(\\s+)A/g, '$1a')), // dateFns only supports \"h: mm: ss a\"\n          timeStampValue: Number(transformValue),\n        });\n    };\n\n    const onEnterSelectPanel = (range: string) => {\n      const { onCurrentSelectPanelChange } = props;\n\n      onCurrentSelectPanelChange(range);\n    };\n\n    function renderHourSelect(hour: number, locale: Locale['TimePicker']) {\n      const { prefixCls, disabledHours, use12Hours, scrollItemProps } = props;\n\n      const { showHour, hourOptions } = state;\n\n      if (!showHour) {\n        return null;\n      }\n      const disabledOptions = disabledHours();\n\n      let hourOptionsAdj, hourAdj;\n      if (use12Hours) {\n        hourOptionsAdj = [12].concat(hourOptions.filter((h) => h < 12 && h > 0));\n        hourAdj = hour % 12 || 12;\n      } else {\n        hourOptionsAdj = hourOptions;\n        hourAdj = hour;\n      }\n\n      const transformHour = (value: string) => value + locale.hour;\n\n      const className = `${prefixCls}-list-hour`;\n      return (\n        <ScrollItemFormatOptionReturn\n          ref={(current) => cacheRefCurrent('hour', current)}\n          mode={'normal'}\n          transform={transformHour}\n          className={className}\n          list={hourOptionsAdj.map((option) => formatOption(option, disabledOptions))}\n          selectedIndex={hourOptionsAdj.indexOf(hourAdj)}\n          type=\"hour\"\n          onSelect={onItemChange}\n          {...scrollItemProps}\n        />\n      );\n    }\n\n    function renderMinuteSelect(minute: number, locale: Locale['TimePicker']) {\n      const { prefixCls, disabledMinutes, timeStampValue, scrollItemProps } = props;\n\n      const { showMinute, minuteOptions } = state;\n\n      if (!showMinute) {\n        return null;\n      }\n      const value = new Date(timeStampValue);\n      const disabledOptions = disabledMinutes && disabledMinutes(value.getHours());\n\n      const className = `${prefixCls}-list-minute`;\n\n      const transformMinute = (min: string) => min + locale.minute;\n\n      return (\n        <ScrollItemFormatOptionReturn\n          ref={(current) => cacheRefCurrent('minute', current)}\n          mode={'normal'}\n          transform={transformMinute}\n          list={minuteOptions.map((option) => formatOption(option, disabledOptions))}\n          selectedIndex={minuteOptions.indexOf(minute)}\n          type=\"minute\"\n          onSelect={onItemChange}\n          className={className}\n          {...scrollItemProps}\n        />\n      );\n    }\n\n    function renderSecondSelect(second: number, locale: Locale['TimePicker']) {\n      const { prefixCls, disabledSeconds, timeStampValue, scrollItemProps } = props;\n\n      const { showSecond, secondOptions } = state;\n\n      if (!showSecond) {\n        return null;\n      }\n      const value = new Date(timeStampValue);\n\n      const disabledOptions = disabledSeconds && disabledSeconds(value.getHours(), value.getMinutes());\n\n      const className = `${prefixCls}-list-second`;\n\n      const transformSecond = (sec: number) => String(sec) + locale.second;\n\n      return (\n        <ScrollItemFormatOptionReturn\n          ref={(current) => cacheRefCurrent('second', current)}\n          mode={'normal'}\n          transform={transformSecond}\n          list={secondOptions.map((option) => formatOption(option, disabledOptions))}\n          selectedIndex={secondOptions.indexOf(second)}\n          className={className}\n          type=\"second\"\n          onSelect={onItemChange}\n          {...scrollItemProps}\n        />\n      );\n    }\n\n    function renderAMPMSelect(locale: Locale['TimePicker'], localeCode: string) {\n      const { prefixCls, use12Hours, isAM, scrollItemProps } = props;\n      if (!use12Hours) {\n        return null;\n      }\n\n      const AMPMOptions: AMPMOptionItem[] = [\n        {\n          value: 'AM',\n          text: locale.AM || '上午',\n        },\n        {\n          value: 'PM',\n          text: locale.PM || '下午',\n        },\n      ];\n\n      const selected = isAM ? 0 : 1;\n\n      const className = `${prefixCls}-list-ampm`;\n\n      return (\n        <ScrollItemAMPMOptionItem\n          ref={(current) => cacheRefCurrent('ampm', current)}\n          mode={'normal'}\n          className={className}\n          list={AMPMOptions}\n          selectedIndex={selected}\n          type=\"ampm\"\n          onSelect={onItemChange}\n          {...scrollItemProps}\n        />\n      );\n    }\n\n    const getDisplayDateFromTimeStamp = (timeStampValue: Date | string) =>\n      foundation.getDisplayDateFromTimeStamp(timeStampValue);\n\n    return () => {\n      const { timeStampValue, panelHeader, panelFooter } = props;\n\n      const value = getDisplayDateFromTimeStamp(timeStampValue);\n      return (\n        <LocaleConsumer componentName=\"TimePicker\">\n          {(locale: Locale['TimePicker'], localeCode: Locale['code']) => (\n            <ScrollList\n              header={panelHeader}\n              footer={panelFooter}\n              x-semi-header-alias=\"panelHeader\"\n              x-semi-footer-alias=\"panelFooter\"\n            >\n              {renderAMPMSelect(locale, localeCode)}\n              {renderHourSelect(value.getHours(), locale)}\n              {renderMinuteSelect(value.getMinutes(), locale)}\n              {renderSecondSelect(value.getSeconds(), locale)}\n            </ScrollList>\n          )}\n        </LocaleConsumer>\n      );\n    };\n  },\n});\n\nexport default Combobox;\n"],"names":["ScrollItemFormatOptionReturn","scrollItemFunc","ScrollItemAMPMOptionItem","staticPropTypes","class","PropTypes","string","object","className","style","format","defaultOpenValue","prefixCls","onChange","func","showHour","bool","showMinute","showSecond","disabledHours","disabledMinutes","disabledSeconds","hideDisabledOptions","onCurrentSelectPanelChange","use12Hours","isAM","timeStampValue","any","scrollItemProps","panelHeader","omit","timePickerPropTypes","panelFooter","node","staticDefaultProps","noop","strings","DEFAULT_FORMAT","vuePropsType","vuePropsMake","Combobox","defineComponent","props","name","setup","useSlots","state","reactive","hourOptions","minuteOptions","secondOptions","adapter","adapterInject","useBaseComponent","foundation","ComboboxFoundation","setState","foundationState","initData","Object","keys","forEach","key","watch","prevPropsTimeStampValue","prevPropsFormat","cacheRefCurrent","current","setCache","onItemChange","type","value","disabled","transformValue","getDisplayDateFromTimeStamp","setHours","Number","setMinutes","ampm","toUpperCase","getHours","setSeconds","dateFnsFormat","replace","renderHourSelect","hour","locale","disabledOptions","hourOptionsAdj","hourAdj","concat","filter","h","transformHour","_createVNode","_mergeProps","map","option","formatOption","indexOf","renderMinuteSelect","minute","Date","min","renderSecondSelect","second","getMinutes","sec","String","renderAMPMSelect","localeCode","AMPMOptions","text","AM","PM","selected","LocaleConsumer","default","ScrollList","getSeconds"],"mappings":"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"}