{"version":3,"file":"TimePicker.js","sources":["../../src/components/timePicker/TimePicker.tsx"],"sourcesContent":["import { defineComponent, ref, h, Fragment, reactive, CSSProperties, VNode, nextTick, watch } from 'vue';\nimport * as PropTypes from '../PropTypes';\nimport classNames from 'classnames';\nimport { noop, get, values } from 'lodash';\n\nimport { useBaseComponent, useHasInProps, ValidateStatus } from '../_base/baseComponent';\nimport { strings, cssClasses } from '@douyinfe/semi-foundation/timePicker/constants';\nimport Popover, { PopoverProps } from '../popover';\nimport { numbers as popoverNumbers } from '@douyinfe/semi-foundation/popover/constants';\nimport TimePickerFoundation, { TimePickerAdapter } from '@douyinfe/semi-foundation/timePicker/foundation';\nimport isNullOrUndefined from '@douyinfe/semi-foundation/utils/isNullOrUndefined';\nimport Combobox from './Combobox';\nimport TimeInput from './TimeInput';\n\nimport { PanelShape, PanelShapeDefaults } from './PanelShape';\n\nimport '@douyinfe/semi-foundation/timePicker/timePicker.scss';\nimport Trigger from '../trigger';\n\nimport { InputSize } from '../input';\nimport type { Position } from '../tooltip';\nimport { ScrollItemProps } from '../scrollList/scrollItem';\nimport { Locale } from '../locale/interface';\nimport { Motion } from '../_base/base';\nimport { vuePropsMake } from '../PropTypes';\nimport { AriaAttributes } from '../AriaAttributes';\nimport { VueJsxNode } from '../interface';\nimport { timePickerPropTypes } from './propTypes';\n\nexport interface Panel {\n  panelHeader?: VNode | string;\n  panelFooter?: VNode | string;\n}\n\nexport type BaseValueType = string | number | Date | undefined;\n\nexport type Type = 'time' | 'timeRange';\n\nexport type TimePickerProps = {\n  'aria-describedby'?: AriaAttributes['aria-describedby'];\n  'aria-errormessage'?: AriaAttributes['aria-errormessage'];\n  'aria-invalid'?: AriaAttributes['aria-invalid'];\n  'aria-labelledby'?: AriaAttributes['aria-labelledby'];\n  'aria-required'?: AriaAttributes['aria-required'];\n  autoAdjustOverflow?: boolean;\n  autoFocus?: boolean; // TODO: autoFocus did not take effect\n  borderless?: boolean;\n  className?: string;\n  clearText?: string;\n  dateFnsLocale?: Locale['dateFnsLocale'];\n  defaultOpen?: boolean;\n  defaultValue?: BaseValueType | BaseValueType[];\n  disabled?: boolean;\n  disabledHours?: () => number[];\n  disabledMinutes?: (selectedHour: number) => number[];\n  disabledSeconds?: (selectedHour: number, selectedMinute: number) => number[];\n  focusOnOpen?: boolean;\n  format?: string;\n  getPopupContainer?: () => HTMLElement;\n  hideDisabledOptions?: boolean;\n  hourStep?: number;\n  id?: string;\n  inputReadOnly?: boolean;\n  inputStyle?: CSSProperties;\n  insetLabel?: VNode | string;\n  insetLabelId?: string;\n  locale?: Locale['TimePicker'];\n  localeCode?: string;\n  minuteStep?: number;\n  motion?: Motion;\n  open?: boolean;\n  panelFooter?: VNode | string;\n  panelHeader?: VNode | string;\n  panels?: Panel[]; // FIXME:\n  placeholder?: string;\n  popupClassName?: string;\n  popupStyle?: CSSProperties;\n  position?: Position;\n  prefixCls?: string;\n  rangeSeparator?: string;\n  scrollItemProps?: ScrollItemProps<any>;\n  secondStep?: number;\n  showClear?: boolean;\n  size?: InputSize;\n  stopPropagation?: boolean;\n  style?: CSSProperties;\n  timeZone?: string | number;\n  triggerRender?: (props?: any) => VNode | string;\n  type?: Type;\n  use12Hours?: boolean;\n  validateStatus?: ValidateStatus;\n  value?: BaseValueType | BaseValueType[];\n  zIndex?: number | string;\n  onBlur?: any;\n  onChange?: TimePickerAdapter['notifyChange'];\n  onChangeWithDateFirst?: boolean;\n  onFocus?: any;\n  onOpenChange?: (open: boolean) => void;\n\n  clearIcon?: VueJsxNode;\n  dropdownMargin?: PopoverProps['margin'];\n  preventScroll?: boolean;\n};\n\nexport interface TimePickerState {\n  open: boolean;\n  value: Date[];\n  inputValue: string;\n  currentSelectPanel: string | number;\n  isAM: [boolean, boolean];\n  showHour: boolean;\n  showMinute: boolean;\n  showSecond: boolean;\n  invalid: boolean;\n}\n\nexport const propTypes = timePickerPropTypes;\nexport const defaultProps = {\n  autoAdjustOverflow: true,\n  getPopupContainer: () => document.body,\n  showClear: true,\n  zIndex: popoverNumbers.DEFAULT_Z_INDEX,\n  rangeSeparator: strings.DEFAULT_RANGE_SEPARATOR,\n  onOpenChange: noop,\n  clearText: 'clear',\n  prefixCls: cssClasses.PREFIX,\n  borderless: false,\n  inputReadOnly: false,\n  style: {},\n  stopPropagation: true,\n  className: '',\n  popupClassName: '',\n  popupStyle: { left: '0px', top: '0px' },\n  disabledHours: () => [] as number[],\n  disabledMinutes: () => [] as number[],\n  disabledSeconds: () => [] as number[],\n  hideDisabledOptions: false,\n  // position: 'bottomLeft',\n  onFocus: noop,\n  onBlur: noop,\n  onChange: noop,\n  onChangeWithDateFirst: true,\n  use12Hours: false,\n  focusOnOpen: false,\n  onKeyDown: noop,\n  size: 'default' as const,\n  type: strings.DEFAULT_TYPE,\n  motion: true,\n  ...PanelShapeDefaults,\n  // format: strings.DEFAULT_FORMAT,\n  // open and value controlled\n};\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\n// console.log(vuePropsType)\n// debugger\nconst TimePicker = defineComponent({\n  props: { ...vuePropsType },\n  name: 'TimePicker',\n  setup(props, { slots }) {\n    const { getProps } = useHasInProps();\n    const { format = strings.DEFAULT_FORMAT } = props;\n    const state = reactive<TimePickerState>({\n      open: props.open || props.defaultOpen || false,\n      value: [], // Date[]\n      inputValue: '', // time string\n      currentSelectPanel: 0,\n      isAM: [true, false],\n      showHour: Boolean(format.match(/HH|hh|H|h/g)),\n      showMinute: Boolean(format.match(/mm/g)),\n      showSecond: Boolean(format.match(/ss/g)),\n      invalid: undefined,\n    });\n    const timePickerRef = ref();\n    const savePanelRef = ref();\n    let useCustomTrigger: boolean = typeof props.triggerRender === 'function';\n\n    let clickOutSideHandler: (e: MouseEvent) => void;\n    const { adapter: adapterInject, isControlled } = useBaseComponent<TimePickerProps>(props, state);\n\n    const foundation: TimePickerFoundation = new TimePickerFoundation(adapter());\n\n    function adapter(): TimePickerAdapter<TimePickerProps, TimePickerState> {\n      return {\n        ...adapterInject<TimePickerProps, TimePickerState>(),\n        togglePanel: (show) => {\n          state.open = show;\n        },\n        registerClickOutSide: () => {\n          if (clickOutSideHandler) {\n            adapter().unregisterClickOutSide();\n          }\n          clickOutSideHandler = (e) => {\n            // const panel = this.savePanelRef && this.savePanelRef.current;\n            const panel = savePanelRef.value;\n            const trigger = timePickerRef.value;\n            const target = e.target as Element;\n            const path = (e.composedPath && e.composedPath()) || [target];\n\n            if (\n              !(panel && panel.contains(target)) &&\n              !(trigger && trigger.contains(target)) &&\n              !(path.includes(trigger) || path.includes(panel))\n            ) {\n              foundation.handlePanelClose(true, e);\n            }\n          };\n          document.addEventListener('mousedown', clickOutSideHandler);\n        },\n        setInputValue: (inputValue, cb) => {\n          state.inputValue = inputValue;\n          nextTick(() => {\n            cb();\n          });\n        },\n        unregisterClickOutSide: () => {\n          if (clickOutSideHandler) {\n            document.removeEventListener('mousedown', clickOutSideHandler);\n            clickOutSideHandler = null;\n          }\n        },\n        notifyOpenChange: (...args) => props.onOpenChange(...args),\n        notifyChange: (agr1, arg2) => props.onChange && props.onChange(agr1, arg2),\n        notifyFocus: (...args) => props.onFocus && props.onFocus(...args),\n        notifyBlur: (...args) => props.onBlur && props.onBlur(...args),\n        isRangePicker: () => props.type === strings.TYPE_TIME_RANGE_PICKER,\n      };\n    }\n\n    // ok\n    function getDerivedStateFromProps(nextProps: TimePickerProps, prevState: TimePickerState) {\n      if ('open' in getProps(nextProps) && nextProps.open !== prevState.open) {\n        return {\n          open: nextProps.open,\n        };\n      }\n      return null;\n    }\n    watch(\n      [() => props.open, () => state.open],\n      (val) => {\n        const newState = getDerivedStateFromProps({ ...props }, { ...state });\n        if (newState) {\n          Object.keys(newState).forEach((key) => {\n            state[key] = newState[key];\n          });\n        }\n      },\n      { immediate: true }\n    );\n\n    watch(\n      [() => props.value, () => props.timeZone, () => state.value],\n      (value, oldValue) => {\n        if (isControlled('value') && value[0] !== oldValue[0]) {\n          foundation.refreshProps({\n            ...props,\n          });\n        } else if (value[1] !== oldValue[1]) {\n          foundation.refreshProps({\n            timeZone: props.timeZone,\n            __prevTimeZone: oldValue[1],\n            value: state.value,\n          });\n        }\n      },\n      { immediate: true }\n    );\n\n    const onCurrentSelectPanelChange = (currentSelectPanel: string) => {\n      state.currentSelectPanel = currentSelectPanel;\n    };\n\n    const handlePanelChange = (value: { isAM: boolean; value: string; timeStampValue: number }, index: number) => {\n      foundation.handlePanelChange(value, index);\n    };\n\n    const handleInput = (value: string) => {\n      foundation.handleInputChange(value);\n    };\n\n    const createPanelProps = (index = 0) => {\n      const { panels, panelFooter, panelHeader, locale } = props;\n\n      const panelProps = {\n        panelHeader,\n        panelFooter,\n      };\n\n      if (adapter().isRangePicker()) {\n        const defaultHeaderMap = {\n          0: locale.begin,\n          1: locale.end,\n        };\n\n        panelProps.panelHeader = get(\n          panels,\n          index,\n          isNullOrUndefined(panelHeader) ? get(defaultHeaderMap, index, null) : panelHeader\n        );\n        panelProps.panelFooter = get(panels, index, panelFooter) as VNode;\n      }\n\n      return panelProps;\n    };\n\n    function getPanelElement() {\n      const { prefixCls, type } = props;\n      const { isAM, value } = state;\n\n      const format = foundation.getDefaultFormatIfNeed();\n\n      const timePanels = [\n        <Combobox\n          {...{\n            ...props,\n            key: 0,\n            format,\n            isAM: isAM[0],\n            timeStampValue: value[0],\n            prefixCls: `${prefixCls}-panel`,\n            onChange: (v) => handlePanelChange(v, 0),\n            onCurrentSelectPanelChange: onCurrentSelectPanelChange,\n            ...createPanelProps(0),\n          }}\n        />,\n      ];\n\n      if (type === strings.TYPE_TIME_RANGE_PICKER) {\n        timePanels.push(\n          <Combobox\n            {...{\n              ...props,\n              key: 1,\n              format,\n              isAM: isAM[1],\n              timeStampValue: value[1],\n              prefixCls: `${prefixCls}-panel`,\n              onChange: (v) => handlePanelChange(v, 1),\n              onCurrentSelectPanelChange: onCurrentSelectPanelChange,\n              ...createPanelProps(1),\n            }}\n          />\n        );\n      }\n\n      const wrapCls = classNames({\n        [cssClasses.RANGE_PANEL_LISTS]: adapter().isRangePicker(),\n      });\n\n      return (\n        <div ref={savePanelRef} class={wrapCls}>\n          {timePanels.map((panel) => panel)}\n        </div>\n      );\n    }\n\n    function getPopupClassName() {\n      const { use12Hours, prefixCls, popupClassName } = props;\n      const { showHour, showMinute, showSecond } = state;\n      let selectColumnCount = 0;\n      if (showHour) {\n        selectColumnCount += 1;\n      }\n      if (showMinute) {\n        selectColumnCount += 1;\n      }\n      if (showSecond) {\n        selectColumnCount += 1;\n      }\n      if (use12Hours) {\n        selectColumnCount += 1;\n      }\n      return classNames(\n        `${prefixCls}-panel`,\n        popupClassName,\n        {\n          [`${prefixCls}-panel-narrow`]: (!showHour || !showMinute || !showSecond) && !use12Hours,\n          [cssClasses.RANGE_PICKER]: adapter().isRangePicker(),\n        },\n        `${prefixCls}-panel-column-${selectColumnCount}`\n      );\n    }\n\n    function focus() {\n      // TODO this.picker is undefined, confirm keep this func or not\n      // picker.focus();\n    }\n\n    function blur() {\n      // TODO picker is undefined, confirm keep this func or not\n      // picker.blur();\n    }\n\n    const handlePanelVisibleChange = (visible: boolean) => foundation.handleVisibleChange(visible);\n\n    const openPanel = () => {\n      foundation.handlePanelOpen();\n    };\n\n    const handleFocus = (e: any) => {\n      foundation.handleFocus(e);\n    };\n\n    const handleBlur = (e: any) => foundation.handleInputBlur(e);\n\n    const setTimePickerRef: any = (node) => (timePickerRef.value = node);\n\n    return () => {\n      const {\n        prefixCls,\n        placeholder,\n        disabled,\n        defaultValue,\n        dropdownMargin,\n        className,\n        popupStyle,\n        size,\n        style,\n        locale,\n        localeCode,\n        zIndex,\n        getPopupContainer,\n        insetLabel,\n        insetLabelId,\n        inputStyle,\n        showClear,\n        panelHeader,\n        panelFooter,\n        rangeSeparator,\n        onOpenChange,\n        onChangeWithDateFirst,\n        popupClassName: propPopupClassName,\n        hideDisabledOptions,\n        use12Hours,\n        minuteStep,\n        hourStep,\n        secondStep,\n        scrollItemProps,\n        triggerRender,\n        motion,\n        autoAdjustOverflow,\n        stopPropagation,\n        ...rest\n      } = props;\n      const format = foundation.getDefaultFormatIfNeed();\n      const position = foundation.getPosition();\n\n      const { open, inputValue, invalid, value } = state;\n      const popupClassName = getPopupClassName();\n\n      const headerPrefix = classNames({\n        [`${prefixCls}-header`]: true,\n      });\n\n      const panelPrefix = classNames({\n        [`${prefixCls}-panel`]: true,\n        [`${prefixCls}-panel-${size}`]: size,\n      });\n\n      const inputProps = {\n        ...rest,\n        disabled,\n        prefixCls,\n        size,\n        showClear: disabled ? false : showClear,\n        style: inputStyle,\n        value: inputValue,\n        onFocus: handleFocus,\n        insetLabel,\n        insetLabelId,\n        format,\n        locale,\n        localeCode,\n        invalid,\n        placeholder,\n        onChange: handleInput,\n        onBlur: handleBlur,\n      };\n\n      const outerProps = {} as { onClick: () => void };\n\n      if (useCustomTrigger) {\n        outerProps.onClick = openPanel;\n      }\n\n      return (\n        <div ref={setTimePickerRef} class={classNames({ [prefixCls]: true }, className)} style={style} {...outerProps}>\n          <Popover\n            getPopupContainer={getPopupContainer}\n            zIndex={zIndex as number}\n            prefixCls={panelPrefix}\n            contentClassName={popupClassName}\n            style={popupStyle}\n            content={getPanelElement()}\n            trigger={'custom'}\n            position={position}\n            visible={disabled ? false : Boolean(open)}\n            motion={motion}\n            margin={dropdownMargin}\n            autoAdjustOverflow={autoAdjustOverflow}\n            stopPropagation={stopPropagation}\n          >\n            {useCustomTrigger ? (\n              <Trigger\n                triggerRender={triggerRender}\n                disabled={disabled}\n                value={value}\n                inputValue={inputValue}\n                onChange={handleInput}\n                placeholder={placeholder}\n                componentName={'TimePicker'}\n                componentProps={{ ...props }}\n              />\n            ) : (\n              <span class={headerPrefix}>\n                <TimeInput {...inputProps} />\n              </span>\n            )}\n          </Popover>\n        </div>\n      );\n    };\n  },\n});\n\nexport default TimePicker;\n"],"names":["propTypes","timePickerPropTypes","defaultProps","autoAdjustOverflow","getPopupContainer","document","body","showClear","zIndex","popoverNumbers","DEFAULT_Z_INDEX","rangeSeparator","strings","DEFAULT_RANGE_SEPARATOR","onOpenChange","noop","clearText","prefixCls","cssClasses","PREFIX","borderless","inputReadOnly","style","stopPropagation","className","popupClassName","popupStyle","left","top","disabledHours","disabledMinutes","disabledSeconds","hideDisabledOptions","onFocus","onBlur","onChange","onChangeWithDateFirst","use12Hours","focusOnOpen","onKeyDown","size","type","DEFAULT_TYPE","motion","PanelShapeDefaults","vuePropsType","vuePropsMake","TimePicker","defineComponent","props","name","setup","slots","getProps","useHasInProps","format","DEFAULT_FORMAT","state","reactive","open","defaultOpen","value","inputValue","currentSelectPanel","isAM","showHour","Boolean","match","showMinute","showSecond","invalid","undefined","timePickerRef","ref","savePanelRef","useCustomTrigger","triggerRender","clickOutSideHandler","adapter","adapterInject","isControlled","useBaseComponent","foundation","TimePickerFoundation","togglePanel","show","registerClickOutSide","unregisterClickOutSide","e","panel","trigger","target","path","composedPath","contains","includes","handlePanelClose","addEventListener","setInputValue","cb","nextTick","removeEventListener","notifyOpenChange","args","notifyChange","agr1","arg2","notifyFocus","notifyBlur","isRangePicker","TYPE_TIME_RANGE_PICKER","getDerivedStateFromProps","nextProps","prevState","watch","val","newState","Object","keys","forEach","key","immediate","timeZone","oldValue","refreshProps","__prevTimeZone","onCurrentSelectPanelChange","handlePanelChange","index","handleInput","handleInputChange","createPanelProps","panels","panelFooter","panelHeader","locale","panelProps","defaultHeaderMap","begin","end","get","isNullOrUndefined","getPanelElement","getDefaultFormatIfNeed","timePanels","_createVNode","Combobox","timeStampValue","v","push","wrapCls","classNames","RANGE_PANEL_LISTS","map","getPopupClassName","selectColumnCount","RANGE_PICKER","openPanel","handlePanelOpen","handleFocus","handleBlur","handleInputBlur","setTimePickerRef","node","placeholder","disabled","defaultValue","dropdownMargin","localeCode","insetLabel","insetLabelId","inputStyle","propPopupClassName","minuteStep","hourStep","secondStep","scrollItemProps","rest","position","getPosition","headerPrefix","panelPrefix","inputProps","outerProps","onClick","_mergeProps","Popover","default","Trigger","TimeInput"],"mappings":"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"}