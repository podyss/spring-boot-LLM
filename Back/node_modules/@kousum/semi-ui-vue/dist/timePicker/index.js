import { defineComponent as a, useSlots as l, createVNode as e, mergeProps as i } from "vue";
import u from "../locale/localeConsumer";
import c, { propTypes as d, defaultProps as f } from "./TimePicker";
import { get as P } from "lodash";
import { vuePropsMake as C } from "../PropTypes";
import T from "../configProvider/context";
import { useHasInProps as k } from "../_base/baseComponent";
const x = C(d, f), F = /* @__PURE__ */ a({
  props: {
    ...x
  },
  name: "TimePickerIndex",
  setup(o, {}) {
    l();
    const {
      getProps: t,
      hasInProps: g
    } = k();
    return () => {
      const {
        type: m
      } = o;
      return e(T.Consumer, null, {
        default: ({
          timeZone: p
        }) => e(u, {
          componentName: "TimePicker"
        }, {
          default: (r, n, s) => e(c, i({
            timeZone: p,
            placeholder: P(r, ["placeholder", m])
          }, t(o), {
            locale: r,
            localeCode: n,
            dateFnsLocale: s
          }), null)
        })
      });
    };
  }
});
export {
  F as default,
  x as vuePropsType
};
//# sourceMappingURL=index.js.map
