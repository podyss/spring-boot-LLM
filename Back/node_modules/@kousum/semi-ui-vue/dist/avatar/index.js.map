{"version":3,"file":"index.js","sources":["../../src/components/avatar/index.tsx"],"sourcesContent":["import {\n  ComponentObjectPropsOptions,\n  CSSProperties,\n  defineComponent,\n  h,\n  HtmlHTMLAttributes,\n  onMounted,\n  onUnmounted,\n  PropType,\n  reactive,\n  ref,\n  VNode,\n  watch,\n} from 'vue';\n\nimport cls from 'classnames';\nimport { cssClasses, strings } from '@douyinfe/semi-foundation/avatar/constants';\nimport AvatarFoundation, { AvatarAdapter } from '@douyinfe/semi-foundation/avatar/foundation';\nimport '@douyinfe/semi-foundation/avatar/avatar.scss';\nimport { noop } from '@douyinfe/semi-foundation/utils/function';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport type { AvatarProps } from './interface';\nimport { RadioInnerProps } from '../radio/radioInner';\nimport { handlePrevent } from '@douyinfe/semi-foundation/utils/a11y';\nimport TopSlotSvg from './TopSlotSvg';\nimport { styleNum } from '../_utils';\nimport { CombineProps } from '../interface';\n\nconst sizeSet = strings.SIZE;\nconst shapeSet = strings.SHAPE;\nconst colorSet = strings.COLOR;\nconst prefixCls = cssClasses.PREFIX;\n\nexport * from './interface';\n\nexport interface AvatarState {\n  isImgExist: boolean;\n  hoverContent: VNode | string;\n  focusVisible: boolean;\n  scale: number;\n}\n\nexport const vuePropsType: CombineProps<AvatarProps> = {\n  style: [Object, String] as PropType<AvatarProps['style']>,\n  className: String,\n  color: { type: String as PropType<AvatarProps['color']>, default: 'grey' },\n  shape: { type: String as PropType<AvatarProps['shape']>, default: 'circle' },\n  size: { type: String as PropType<AvatarProps['size']>, default: 'medium' },\n  gap: { type: Number as PropType<AvatarProps['gap']>, default: 3 },\n  hoverMask: [Object, String, Number] as PropType<AvatarProps['hoverMask']>,\n  src: String,\n  srcSet: String,\n  alt: String,\n  onError: Function as PropType<AvatarProps['onError']>,\n  onClick: {\n    type: Function as PropType<AvatarProps['onClick']>,\n    default: noop,\n  },\n  onMouseEnter: {\n    type: Function as PropType<AvatarProps['onMouseEnter']>,\n    default: noop,\n  },\n  onMouseLeave: {\n    type: Function as PropType<AvatarProps['onMouseLeave']>,\n    default: noop,\n  },\n  imgAttr: Object,\n  bottomSlot: Object,\n  topSlot: Object,\n  border: [Object, Boolean],\n  contentMotion: Boolean,\n};\nconst Index = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Avatar',\n  setup(props, { slots }) {\n    let foundation!: AvatarFoundation;\n\n    const state = reactive<AvatarState>({\n      isImgExist: true,\n      hoverContent: '',\n      focusVisible: false,\n      scale: 1,\n    });\n    const avatarRef = ref();\n\n    let textChildren = '';\n\n    function watchTextChildren() {\n      const children = slots.default?.() || [];\n      if (foundation && children.length === 1 && children[0].type.toString() === 'Symbol(v-txt)') {\n        const newTextChildren = children[0].children as string;\n        if (textChildren !== newTextChildren) {\n          foundation.changeScale();\n          textChildren = newTextChildren;\n        }\n      }\n    }\n\n    watch(\n      () => props.src,\n      () => {\n        const image = new Image(0, 0);\n        image.src = props.src;\n        image.onload = () => {\n          state.isImgExist = true;\n        };\n        image.onerror = () => {\n          state.isImgExist = false;\n        };\n        image.onabort = () => {\n          state.isImgExist = false;\n        };\n        watchTextChildren();\n      }\n    );\n    const { adapter: adapterInject } = useBaseComponent<RadioInnerProps>(props, state);\n\n    const theAdapter = adapter();\n\n    function adapter(): AvatarAdapter<AvatarProps, AvatarState> {\n      return {\n        ...adapterInject<AvatarProps, AvatarState>(),\n        notifyImgState: (isImgExist: boolean) => {\n          state.isImgExist = isImgExist;\n        },\n        notifyEnter: (e: MouseEvent) => {\n          const { hoverMask } = props;\n          state.hoverContent = hoverMask;\n\n          const { onMouseEnter } = props;\n          onMouseEnter && onMouseEnter(e);\n        },\n        notifyLeave: (e: MouseEvent) => {\n          state.hoverContent = '';\n          const { onMouseLeave } = props;\n          onMouseLeave && onMouseLeave(e);\n        },\n        setFocusVisible: (focusVisible: boolean): void => {\n          state.focusVisible = focusVisible;\n        },\n        setScale: (scale: number) => {\n          state.scale = scale;\n        },\n        getAvatarNode: () => {\n          return avatarRef.value;\n        },\n      };\n    }\n\n    onMounted(() => {\n      foundation = new AvatarFoundation<AvatarProps, AvatarState>(theAdapter);\n      foundation.init();\n    });\n\n    onUnmounted(() => {\n      foundation.destroy();\n    });\n\n    function onEnter(e: MouseEvent) {\n      foundation.handleEnter(e);\n    }\n\n    function onLeave(e: MouseEvent) {\n      foundation.handleLeave(e);\n    }\n\n    function handleError() {\n      foundation.handleImgLoadError();\n    }\n\n    function handleKeyDown(event: any) {\n      const { onClick } = props;\n      switch (event.key) {\n        case 'Enter':\n          onClick(event);\n          handlePrevent(event);\n          break;\n        case 'Escape':\n          event.target.blur();\n          break;\n        default:\n          break;\n      }\n    }\n\n    const handleFocusVisible = (event: FocusEvent) => {\n      foundation.handleFocusVisible(event);\n    };\n\n    const handleBlur = (event: FocusEvent) => {\n      foundation.handleBlur();\n    };\n\n    const getContent = () => {\n      const { onClick, imgAttr, src, srcSet, alt } = props;\n      const { isImgExist } = state;\n      const children = slots.default?.();\n      let content = children;\n      const clickable = onClick !== noop;\n      const isImg = src && isImgExist;\n      const a11yFocusProps = {\n        tabIndex: 0,\n        onKeyDown: handleKeyDown,\n        onFocus: handleFocusVisible,\n        onBlur: handleBlur,\n      };\n      if (isImg) {\n        const finalAlt = clickable ? `clickable Avatar: ${alt}` : alt;\n        const imgBasicProps = {\n          src,\n          srcSet,\n          onError: handleError,\n          ...imgAttr,\n          className: cls({\n            [`${prefixCls}-no-focus-visible`]: clickable,\n          }),\n        };\n        const imgProps = clickable ? { ...imgBasicProps, ...a11yFocusProps } : imgBasicProps;\n        content = [<img alt={finalAlt} {...imgProps} />];\n      } else if (typeof children === 'string') {\n        const tempAlt = alt ?? children;\n        const finalAlt = clickable ? `clickable Avatar: ${tempAlt}` : tempAlt;\n        const props = {\n          role: 'img',\n          'aria-label': finalAlt,\n          className: cls(`${prefixCls}-label`, {\n            [`${prefixCls}-no-focus-visible`]: clickable,\n          }),\n        };\n        const finalProps = clickable ? { ...props, ...a11yFocusProps } : props;\n        const stringStyle: CSSProperties = {\n          transform: `scale(${state.scale})`,\n        };\n        content = [\n          <span class={`${prefixCls}-content`} style={stringStyle}>\n            <span {...finalProps} x-semi-prop=\"children\">\n              {children}\n            </span>\n          </span>,\n        ];\n      }\n      return content;\n    };\n\n    const renderBottomSlot = () => {\n      if (!props.bottomSlot) {\n        return null;\n      }\n\n      if (props.bottomSlot.render) {\n        return props.bottomSlot.render();\n      }\n\n      const renderContent =\n        props.bottomSlot.render ??\n        (() => {\n          const style: CSSProperties = {};\n          if (props.bottomSlot.bgColor) {\n            style['backgroundColor'] = props.bottomSlot.bgColor;\n          }\n          if (props.bottomSlot.textColor) {\n            style['color'] = props.bottomSlot.textColor;\n          }\n          return (\n            <span\n              style={style}\n              class={cls(\n                `${prefixCls}-bottom_slot-shape_${props.bottomSlot.shape}`,\n                `${prefixCls}-bottom_slot-shape_${props.bottomSlot.shape}-${props.size}`,\n                props.bottomSlot.className ?? ''\n              )}\n            >\n              {props.bottomSlot.text}\n            </span>\n          );\n        });\n\n      return (\n        <div class={cls([`${prefixCls}-bottom_slot`])} style={props.bottomSlot.style ?? {}}>\n          {renderContent()}\n        </div>\n      );\n    };\n\n    const renderTopSlot = () => {\n      if (!props.topSlot) {\n        return null;\n      }\n\n      if (props.topSlot.render) {\n        return props.topSlot.render();\n      }\n\n      const textStyle: CSSProperties = {};\n      if (props.topSlot.textColor) {\n        textStyle['color'] = props.topSlot.textColor;\n      }\n      return (\n        <div\n          style={props.topSlot.style ?? {}}\n          class={cls([\n            `${prefixCls}-top_slot-wrapper`,\n            props.topSlot.className ?? '',\n            {\n              [`${prefixCls}-animated`]: props.contentMotion,\n            },\n          ])}\n        >\n          <div class={cls([`${prefixCls}-top_slot-bg`, `${prefixCls}-top_slot-bg-${props.size}`])}>\n            <div class={cls([`${prefixCls}-top_slot-bg-svg`, `${prefixCls}-top_slot-bg-svg-${props.size}`])}>\n              <TopSlotSvg\n                gradientStart={props.topSlot.gradientStart ?? 'var(--semi-color-primary)'}\n                gradientEnd={props.topSlot.gradientEnd ?? 'var(--semi-color-primary)'}\n              />\n            </div>\n          </div>\n          <div class={cls([`${prefixCls}-top_slot`])}>\n            <div\n              style={textStyle}\n              class={cls([`${prefixCls}-top_slot-content`, `${prefixCls}-top_slot-content-${props.size}`])}\n            >\n              {props.topSlot.text}\n            </div>\n          </div>\n        </div>\n      );\n    };\n    return () => {\n      watchTextChildren();\n      const {\n        shape,\n        size,\n        color,\n        className,\n        hoverMask,\n        onClick,\n        imgAttr,\n        src,\n        srcSet,\n        style,\n        alt,\n        gap,\n        bottomSlot,\n        topSlot,\n        border,\n        contentMotion,\n        ...others\n      } = props;\n      const { isImgExist, hoverContent, focusVisible } = state;\n      let customStyle: CSSProperties = {};\n      if (!strings.SIZE.includes(size)) {\n        customStyle = { width: styleNum(size), height: styleNum(size) };\n      }\n      customStyle = { ...customStyle, ...style };\n      const shouldWrap = bottomSlot || topSlot || border;\n      const mouseEvent: HtmlHTMLAttributes = {\n        onClick: onClick,\n        onMouseenter: onEnter,\n        onMouseleave: onLeave,\n      };\n      const isImg = src && isImgExist;\n      const avatarCls = cls(\n        prefixCls,\n        {\n          [`${prefixCls}-${shape}`]: shape,\n          [`${prefixCls}-${size}`]: size,\n          [`${prefixCls}-${color}`]: color && !isImg,\n          [`${prefixCls}-img`]: isImg,\n          [`${prefixCls}-focus`]: focusVisible,\n          [`${prefixCls}-animated`]: contentMotion,\n        },\n        className\n      );\n\n      const hoverRender = hoverContent ? (\n        <div class={`${prefixCls}-hover`} x-semi-prop=\"hoverContent\">\n          {hoverContent}\n        </div>\n      ) : null;\n\n      let avatar = (\n        <span\n          {...(others as any)}\n          style={shouldWrap ? {} : customStyle}\n          class={avatarCls}\n          {...(shouldWrap ? {} : mouseEvent)}\n          role=\"listitem\"\n          ref={avatarRef}\n        >\n          {getContent()}\n          {hoverRender}\n        </span>\n      );\n\n      if (border) {\n        const borderStyle: CSSProperties = {};\n        if (typeof border === 'object' && border?.color) {\n          borderStyle['borderColor'] = border?.color;\n        }\n        avatar = (\n          <div style={{ position: 'relative', ...customStyle }}>\n            {avatar}\n            <span\n              style={borderStyle}\n              class={cls([\n                `${prefixCls}-additionalBorder`,\n                `${prefixCls}-additionalBorder-${size}`,\n                {\n                  [`${prefixCls}-${shape}`]: shape,\n                },\n              ])}\n            ></span>\n            {typeof props.border === 'object' && (\n              <span\n                style={borderStyle}\n                class={cls([\n                  `${prefixCls}-additionalBorder`,\n                  `${prefixCls}-additionalBorder-${size}`,\n                  {\n                    [`${prefixCls}-${shape}`]: shape,\n                    [`${prefixCls}-additionalBorder-animated`]:\n                      typeof props.border === 'object' && props.border?.motion,\n                  },\n                ])}\n              />\n            )}\n          </div>\n        );\n      }\n\n      if (shouldWrap) {\n        return (\n          <span class={cls([`${prefixCls}-wrapper`])} style={customStyle} {...mouseEvent}>\n            {avatar}\n            {topSlot &&\n              ['extra-small', 'small', 'default', 'medium', 'large', 'extra-large'].includes(size) &&\n              shape === 'circle' &&\n              renderTopSlot()}\n            {bottomSlot &&\n              ['extra-small', 'small', 'default', 'medium', 'large', 'extra-large'].includes(size) &&\n              renderBottomSlot()}\n          </span>\n        );\n      } else {\n        return avatar;\n      }\n    };\n  },\n});\n\nexport default Index;\n"],"names":["strings","SIZE","SHAPE","COLOR","prefixCls","cssClasses","PREFIX","vuePropsType","style","Object","String","className","color","type","default","shape","size","gap","Number","hoverMask","src","srcSet","alt","onError","Function","onClick","noop","onMouseEnter","onMouseLeave","imgAttr","bottomSlot","topSlot","border","Boolean","contentMotion","Index","defineComponent","props","name","setup","slots","foundation","state","reactive","isImgExist","hoverContent","focusVisible","scale","avatarRef","ref","textChildren","watchTextChildren","children","length","toString","newTextChildren","changeScale","watch","image","Image","onload","onerror","onabort","adapter","adapterInject","useBaseComponent","theAdapter","notifyImgState","notifyEnter","e","notifyLeave","setFocusVisible","setScale","getAvatarNode","value","onMounted","AvatarFoundation","init","onUnmounted","destroy","onEnter","handleEnter","onLeave","handleLeave","handleError","handleImgLoadError","handleKeyDown","event","key","handlePrevent","target","blur","handleFocusVisible","handleBlur","getContent","content","clickable","isImg","a11yFocusProps","tabIndex","onKeyDown","onFocus","onBlur","finalAlt","imgBasicProps","cls","imgProps","_createVNode","_mergeProps","tempAlt","role","finalProps","stringStyle","transform","renderBottomSlot","render","renderContent","bgColor","textColor","text","renderTopSlot","textStyle","TopSlotSvg","gradientStart","gradientEnd","others","customStyle","includes","width","styleNum","height","shouldWrap","mouseEvent","onMouseenter","onMouseleave","avatarCls","hoverRender","avatar","borderStyle","position","motion"],"mappings":"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"}