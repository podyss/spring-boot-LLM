{"version":3,"file":"index.js","sources":["../../src/components/rating/index.tsx"],"sourcesContent":["import { useBaseComponent, useHasInProps } from '../_base/baseComponent';\nimport cls from 'classnames';\nimport { cssClasses, strings } from '@douyinfe/semi-foundation/rating/constants';\nimport * as PropTypes from '../PropTypes';\nimport { noop } from '@douyinfe/semi-foundation/utils/function';\nimport Item from './item';\nimport Tooltip from '../tooltip';\nimport RatingFoundation, { RatingAdapter } from '@douyinfe/semi-foundation/rating/foundation';\n\nimport '@douyinfe/semi-foundation/rating/rating.scss';\nimport {\n  ComponentObjectPropsOptions,\n  CSSProperties,\n  defineComponent,\n  h,\n  onMounted,\n  onUnmounted,\n  PropType,\n  reactive,\n  ref,\n  useSlots,\n  VNode,\n  watch,\n} from 'vue';\nimport { CombineProps, VueJsxNode } from '../interface';\nimport { vuePropsMake } from '../PropTypes';\n\nexport type { RatingItemProps } from './item';\nexport interface RatingProps {\n  'aria-describedby'?: string;\n  'aria-errormessage'?: string;\n  'aria-invalid'?: boolean;\n  'aria-label'?: string;\n  'aria-labelledby'?: string;\n  'aria-required'?: boolean;\n  disabled?: boolean;\n  value?: number;\n  defaultValue?: number;\n  count?: number;\n  allowHalf?: boolean;\n  allowClear?: boolean;\n  style?: CSSProperties;\n  prefixCls?: string;\n  onChange?: (value: number) => void;\n  onHoverChange?: (value: number) => void;\n  className?: string;\n  character?: VueJsxNode;\n  tabIndex?: number;\n  onFocus?: (e: FocusEvent) => void;\n  onBlur?: (e: FocusEvent) => void;\n  onKeyDown?: (e: KeyboardEvent) => void;\n  onClick?: (e: MouseEvent | KeyboardEvent, index: number) => void;\n  autoFocus?: boolean;\n  size?: 'small' | 'default' | number;\n  tooltips?: string[];\n  id?: string;\n  preventScroll?: boolean;\n}\n\nexport interface RatingState {\n  value: number;\n  hoverValue: number;\n  focused: boolean;\n  clearedValue: number;\n  emptyStarFocusVisible: boolean;\n}\n\nconst propTypes: CombineProps<RatingProps> = {\n  'aria-describedby': PropTypes.string,\n  'aria-errormessage': PropTypes.string,\n  'aria-invalid': [PropTypes.bool, PropTypes.string] as PropType<RatingProps['aria-invalid']>,\n  'aria-label': PropTypes.string,\n  'aria-labelledby': PropTypes.string,\n  'aria-required': PropTypes.bool,\n  disabled: PropTypes.bool,\n  value: PropTypes.number,\n  defaultValue: PropTypes.number,\n  count: PropTypes.number,\n  allowHalf: PropTypes.bool,\n  allowClear: PropTypes.bool,\n  style: PropTypes.object,\n  prefixCls: PropTypes.string,\n  onChange: PropTypes.func as PropType<RatingProps['onChange']>,\n  onHoverChange: PropTypes.func as PropType<RatingProps['onHoverChange']>,\n  className: PropTypes.string,\n  character: PropTypes.node,\n  tabIndex: PropTypes.number,\n  onFocus: PropTypes.func as PropType<RatingProps['onFocus']>,\n  onBlur: PropTypes.func as PropType<RatingProps['onBlur']>,\n  onKeyDown: PropTypes.func as PropType<RatingProps['onKeyDown']>,\n  autoFocus: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  tooltips: Array,\n  id: PropTypes.string,\n  preventScroll: PropTypes.bool,\n  onClick: PropTypes.func as PropType<RatingProps['onClick']>,\n};\n\nconst defaultProps = {\n  defaultValue: 0,\n  count: 5,\n  allowHalf: false,\n  allowClear: true,\n  style: {},\n  prefixCls: cssClasses.PREFIX,\n  onChange: noop,\n  onHoverChange: noop,\n  tabIndex: -1,\n  size: 'default' as const,\n};\nexport const vuePropsType = vuePropsMake<RatingProps>(propTypes, defaultProps);\nconst Rating = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Rating',\n  setup(props, {}) {\n    const { getProps } = useHasInProps();\n    const slots = useSlots();\n\n    const rate = ref();\n    const stars: Record<string, VNode> = {};\n    const state = reactive<RatingState>({\n      value: props.value === undefined ? props.defaultValue : props.value,\n      focused: false,\n      hoverValue: undefined,\n      clearedValue: null,\n      emptyStarFocusVisible: false,\n    });\n\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent<RatingProps>(props, state);\n    function adapter_(): RatingAdapter<RatingProps, RatingState> {\n      return {\n        ...adapterInject<RatingProps, RatingState>(),\n        focus: () => {\n          const { disabled, count } = props;\n          const { value } = state;\n          if (!disabled) {\n            const index = Math.ceil(value) - 1;\n            // @ts-ignore\n            stars[index < 0 ? count : index].starFocus();\n          }\n        },\n        getStarDOM: (index: number) => {\n          const instance = stars && stars[index];\n          // eslint-disable-next-line react/no-find-dom-node\n          // @ts-ignore\n          return instance.$el;\n        },\n        notifyHoverChange: (hoverValue: number, clearedValue: number) => {\n          const { onHoverChange } = props;\n          state.hoverValue = hoverValue;\n          state.clearedValue = clearedValue;\n          onHoverChange(hoverValue);\n        },\n        updateValue: (value: number) => {\n          const { onChange } = props;\n          if (!('value' in getProps(props))) {\n            state.value = value;\n          }\n          onChange(value);\n        },\n        clearValue: (clearedValue: number) => {\n          state.clearedValue = clearedValue;\n        },\n        notifyFocus: (e: FocusEvent) => {\n          const { onFocus } = props;\n          state.focused = true;\n          onFocus && onFocus(e);\n        },\n        notifyBlur: (e: FocusEvent) => {\n          const { onBlur } = props;\n          state.focused = false;\n          onBlur && onBlur(e);\n        },\n        notifyKeyDown: (e: KeyboardEvent) => {\n          const { onKeyDown } = props;\n          state.focused = false;\n          onKeyDown && onKeyDown(e);\n        },\n        setEmptyStarFocusVisible: (focusVisible: boolean): void => {\n          state.emptyStarFocusVisible = focusVisible;\n        },\n      };\n    }\n    const adapter = adapter_();\n    const foundation = new RatingFoundation(adapter);\n\n    function getDerivedStateFromProps(nextProps: RatingProps, state: RatingState) {\n      if ('value' in nextProps && nextProps.value !== undefined) {\n        return {\n          ...state,\n          value: nextProps.value,\n        };\n      }\n      return state;\n    }\n\n    watch(\n      () => props.value,\n      () => {\n        const newState = getDerivedStateFromProps({ ...getProps(props) }, { ...state });\n        newState &&\n          Object.keys(newState).forEach((key) => {\n            state[key] = newState[key];\n          });\n      }\n    );\n\n    onMounted(() => {\n      foundation.init();\n    });\n\n    onUnmounted(() => {\n      foundation.destroy();\n    });\n\n    const onHover = (event: MouseEvent, index: number) => {\n      foundation.handleHover(event, index);\n    };\n\n    const onMouseLeave = () => {\n      foundation.handleMouseLeave();\n    };\n\n    const onClick: RatingProps['onClick'] = (event, index) => {\n      foundation.handleClick(event, index);\n    };\n\n    const onFocus: RatingProps['onFocus'] = (e) => {\n      foundation.handleFocus(e);\n    };\n\n    const onBlur: RatingProps['onBlur'] = (e) => {\n      foundation.handleBlur(e);\n    };\n\n    const onKeyDown: RatingProps['onKeyDown'] = (event) => {\n      const { value } = state;\n      foundation.handleKeyDown(event, value);\n    };\n\n    const focus = () => {\n      const { disabled, preventScroll } = props;\n      if (!disabled) {\n        rate.value.focus({ preventScroll });\n      }\n    };\n\n    const blur = () => {\n      const { disabled } = props;\n      if (!disabled) {\n        rate.value.blur();\n      }\n    };\n\n    const saveRef = (index: number) => (node: any) => {\n      stars[index] = node;\n    };\n\n    const handleStarFocusVisible = (event: FocusEvent) => {\n      foundation.handleStarFocusVisible(event);\n    };\n\n    const handleStarBlur = (event: FocusEvent) => {\n      foundation.handleStarBlur(event);\n    };\n\n    const getAriaLabelPrefix = () => {\n      if (props['aria-label']) {\n        return props['aria-label'];\n      }\n      let prefix = 'star';\n      const { character } = props;\n      if (typeof character === 'string') {\n        prefix = character;\n      }\n      return prefix;\n    };\n\n    const getItemList = (ariaLabelPrefix: string) => {\n      const { count, allowHalf, prefixCls, disabled, character, size, tooltips } = props;\n      const { value, hoverValue, focused } = state;\n      // index == count is for Empty rating\n      const itemList = [...Array(count + 1).keys()].map((ind) => {\n        const content = (\n          <Item\n            ref={(node) => {\n              saveRef(ind)(node);\n            }}\n            index={ind}\n            count={count}\n            prefixCls={`${prefixCls}-star`}\n            allowHalf={allowHalf}\n            value={hoverValue === undefined ? value : hoverValue}\n            onClick={disabled ? noop : onClick}\n            onHover={disabled ? noop : onHover}\n            key={ind}\n            disabled={disabled}\n            character={character}\n            focused={focused}\n            size={ind === count ? 0 : size}\n            ariaLabelPrefix={ariaLabelPrefix}\n            onFocus={disabled || count !== ind ? noop : handleStarFocusVisible}\n            onBlur={disabled || count !== ind ? noop : handleStarBlur}\n          />\n        );\n        if (tooltips) {\n          const text = tooltips[ind] ? tooltips[ind] : '';\n          const showTips = hoverValue - 1 === ind;\n          return (\n            <Tooltip visible={showTips} trigger=\"custom\" content={text} key={`${ind}-${showTips}`}>\n              {content}\n            </Tooltip>\n          );\n        }\n        return content;\n      });\n      return itemList;\n    };\n\n    return () => {\n      const { style, prefixCls, disabled, className, id, count, tabIndex, ...rest } = props;\n      const { value, emptyStarFocusVisible } = state;\n      const ariaLabelPrefix = getAriaLabelPrefix();\n      const ariaLabel = `Rating: ${value} of ${count} ${ariaLabelPrefix}${value === 1 ? '' : 's'},`;\n      const itemList = getItemList(ariaLabelPrefix);\n      const listCls = cls(\n        prefixCls,\n        {\n          [`${prefixCls}-disabled`]: disabled,\n          [`${prefixCls}-focus`]: emptyStarFocusVisible,\n        },\n        className\n      );\n      return (\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n        <ul\n          aria-label={ariaLabel}\n          aria-labelledby={props['aria-labelledby']}\n          aria-describedby={props['aria-describedby']}\n          class={listCls}\n          style={style}\n          onMouseleave={disabled ? noop : onMouseLeave}\n          tabindex={disabled ? -1 : tabIndex}\n          onFocus={disabled ? noop : onFocus}\n          onBlur={disabled ? noop : onBlur}\n          onKeydown={disabled ? noop : onKeyDown}\n          ref={rate}\n          id={id}\n          {...getDataAttr()}\n        >\n          {itemList}\n        </ul>\n      );\n    };\n  },\n});\n\nexport default Rating;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","propTypes","PropTypes","string","bool","disabled","value","number","defaultValue","count","allowHalf","allowClear","style","object","prefixCls","onChange","func","onHoverChange","className","character","node","tabIndex","onFocus","onBlur","onKeyDown","autoFocus","size","oneOfType","tooltips","Array","id","preventScroll","onClick","defaultProps","cssClasses","PREFIX","noop","vuePropsType","vuePropsMake","Rating","defineComponent","props","name","setup","getProps","useHasInProps","useSlots","rate","ref","stars","state","reactive","undefined","focused","hoverValue","clearedValue","emptyStarFocusVisible","adapter","adapterInject","getDataAttr","useBaseComponent","adapter_","focus","index","Math","ceil","starFocus","getStarDOM","$el","notifyHoverChange","updateValue","clearValue","notifyFocus","e","notifyBlur","notifyKeyDown","setEmptyStarFocusVisible","focusVisible","foundation","RatingFoundation","getDerivedStateFromProps","nextProps","watch","newState","keys","forEach","key","onMounted","init","onUnmounted","destroy","onHover","event","handleHover","onMouseLeave","handleMouseLeave","handleClick","handleFocus","handleBlur","handleKeyDown","saveRef","handleStarFocusVisible","handleStarBlur","getAriaLabelPrefix","prefix","getItemList","ariaLabelPrefix","map","ind","content","_createVNode","Item","text","showTips","Tooltip","default","rest","ariaLabel","itemList","listCls","cls","_mergeProps"],"mappings":"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"}