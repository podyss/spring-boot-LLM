import { createVNode as n, mergeProps as p } from "vue";
import g from "classnames";
import { cssClasses as $ } from '@douyinfe/semi-foundation/lib/es/divider/constants';
import '@douyinfe/semi-foundation/lib/es/divider/divider.css';
const e = $.PREFIX, C = (l, {
  slots: a
}) => {
  var d;
  const {
    layout: i = "horizontal",
    dashed: s,
    align: c = "center",
    className: m,
    margin: t,
    style: h,
    ...v
  } = l, r = (d = a.default) == null ? void 0 : d.call(a), f = g(`${e}-divider`, m, {
    [`${e}-divider-horizontal`]: i === "horizontal",
    [`${e}-divider-vertical`]: i === "vertical",
    [`${e}-divider-dashed`]: !!s,
    [`${e}-divider-with-text`]: r && i === "horizontal",
    [`${e}-divider-with-text-${c}`]: r && i === "horizontal"
  });
  let o = {};
  return t !== void 0 && (i === "vertical" ? o = {
    marginLeft: t,
    marginRight: t
  } : i === "horizontal" && (o = {
    marginTop: t,
    marginBottom: t
  })), n("div", p(v, {
    class: f,
    style: {
      ...o,
      ...h
    }
  }), [r && i === "horizontal" ? typeof r == "string" ? n("span", {
    class: `${e}-divider_inner-text`,
    "x-semi-prop": "children"
  }, [r]) : r : null]);
};
export {
  C as default
};
//# sourceMappingURL=index.js.map
