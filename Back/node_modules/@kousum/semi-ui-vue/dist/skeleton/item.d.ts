import { strings } from '@douyinfe/semi-foundation/lib/es/avatar/constants';
import '@douyinfe/semi-foundation/lib/es/skeleton/skeleton.css';
import { CSSProperties, DefineComponent } from 'vue';
import { CombineProps } from '../interface';
export type BasicProps = {
    prefixCls?: string;
    className?: string;
    style?: CSSProperties;
    type?: string;
};
export interface ParagraphProps extends BasicProps {
    rows?: number;
}
export interface AvatarProps extends BasicProps {
    size?: (typeof strings.SIZE)[number];
    shape?: string;
}
export type GenericProps = BasicProps & AvatarProps;
export declare const vuePropsTypeGeneric: CombineProps<AvatarProps & BasicProps>;
export declare const Avatar: (props: any) => import("vue/jsx-runtime").JSX.Element;
export declare const Image: (props: any) => import("vue/jsx-runtime").JSX.Element;
export declare const Title: (props: any) => import("vue/jsx-runtime").JSX.Element;
export declare const Button: (props: any) => import("vue/jsx-runtime").JSX.Element;
export declare const vuePropsTypeParagraph: CombineProps<{
    rows?: number;
    prefixCls?: string;
    style?: any;
    className?: string;
}>;
export declare const Paragraph: DefineComponent<import("vue").ExtractPropTypes<CombineProps<{
    rows?: number;
    prefixCls?: string;
    style?: any;
    className?: string;
}>>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<CombineProps<{
    rows?: number;
    prefixCls?: string;
    style?: any;
    className?: string;
}>>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
