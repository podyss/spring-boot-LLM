import { defineComponent as g, useSlots as k, createVNode as v, mergeProps as P } from "vue";
import h from "classnames";
import * as e from "../PropTypes";
import { vuePropsMake as S } from "../PropTypes";
import { cssClasses as T } from '@douyinfe/semi-foundation/lib/es/skeleton/constants';
import '@douyinfe/semi-foundation/lib/es/skeleton/skeleton.css';
import { Avatar as y, Image as B, Title as I, Button as x, Paragraph as A } from "./item";
import { Avatar as w, Button as z, Image as D, Paragraph as G, Title as H } from "./item";
const s = T.PREFIX, C = {
  loading: !0
}, b = {
  active: e.bool,
  placeholder: e.node,
  style: e.object,
  className: e.string,
  loading: e.bool
}, N = S(b, C), j = /* @__PURE__ */ g({
  props: {
    ...N
  },
  name: "Skeleton",
  setup(l, {}) {
    const t = k();
    return () => {
      var r;
      const n = (r = t.default) == null ? void 0 : r.call(t), {
        placeholder: p,
        active: c,
        className: i,
        loading: m,
        style: d,
        ...u
      } = l, f = h(s, {
        [`${s}-active`]: !!c
      }, i);
      let a;
      return m ? a = v("div", P({
        class: f,
        style: d
      }, u, {
        "x-semi-prop": "placeholder"
      }), [p]) : a = n, a;
    };
  }
}), o = j;
o.Avatar = y;
o.Image = B;
o.Title = I;
o.Button = x;
o.Paragraph = A;
export {
  w as SkeletonAvatar,
  z as SkeletonButton,
  D as SkeletonImage,
  G as SkeletonParagraph,
  H as SkeletonTitle,
  o as default,
  N as vuePropsType
};
//# sourceMappingURL=index.js.map
