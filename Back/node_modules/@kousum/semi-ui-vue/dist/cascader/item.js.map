{"version":3,"file":"item.js","sources":["../../src/components/cascader/item.tsx"],"sourcesContent":["import { defineComponent, ref, h, useSlots, VNode, cloneVNode, PropType, onMounted } from 'vue';\nimport cls from 'classnames';\nimport { cssClasses, strings } from '@douyinfe/semi-foundation/cascader/constants';\nimport isEnterPress from '@douyinfe/semi-foundation/utils/isEnterPress';\nimport { includes } from 'lodash';\nimport LocaleConsumer from '../locale/localeConsumer';\nimport { IconChevronRight, IconTick } from '@kousum/semi-icons-vue';\nimport { Locale } from '../locale/interface';\nimport Spin from '../spin';\nimport Checkbox, { CheckboxEvent } from '../checkbox';\nimport {\n  BasicCascaderData,\n  BasicEntity,\n  ShowNextType,\n  BasicData,\n  Virtualize,\n} from '@douyinfe/semi-foundation/cascader/foundation';\nimport { BaseProps, useBaseComponent } from '../_base/baseComponent';\nimport { CombineProps, VueJsxNode } from '../interface';\nimport { ComponentObjectPropsOptions } from 'vue';\nimport { FixedSizeList as List } from '@kousum/vue3-window';\nimport VirtualRow from './virtualRow';\n\nexport interface CascaderData extends BasicCascaderData {\n  label: VNode | string;\n}\n\nexport interface Entity extends BasicEntity {\n  /* children list */\n  children?: Array<Entity>;\n  /* treedata */\n  data: CascaderData;\n  /* parent data */\n  parent?: Entity;\n}\n\nexport interface Entities {\n  [idx: string]: Entity;\n}\n\nexport interface Data extends BasicData {\n  data: CascaderData;\n  searchText: VNode[] | string[];\n}\n\nexport interface FilterRenderProps {\n  className: string;\n  inputValue: string;\n  disabled: boolean;\n  data: CascaderData[];\n  checkStatus: {\n    checked: boolean;\n    halfChecked: boolean;\n  };\n  selected: boolean;\n  onClick: (e: MouseEvent) => void;\n  onCheck: (e: MouseEvent) => void;\n}\n\nexport interface CascaderItemProps extends BaseProps {\n  activeKeys: Set<string>;\n  selectedKeys: Set<string>;\n  loadedKeys: Set<string>;\n  loadingKeys: Set<string>;\n  onItemClick: (e: MouseEvent | KeyboardEvent, item: Entity | Data) => void;\n  onItemHover: (e: MouseEvent, item: Entity) => void;\n  showNext: ShowNextType;\n  onItemCheckboxClick: (item: Entity | Data) => void;\n  onListScroll: (e: any, ind: number) => void;\n  searchable: boolean;\n  keyword: string;\n  empty?: boolean;\n  emptyContent?: VNode | string;\n  loadData?: (selectOptions: CascaderData[]) => Promise<void>;\n  data: Array<Data | Entity>;\n  separator: string;\n  multiple: boolean;\n  checkedKeys: Set<string>;\n  halfCheckedKeys: Set<string>;\n  filterRender?: (props: FilterRenderProps) => VueJsxNode;\n  virtualize?: Virtualize;\n  expandIcon?: VNode | string;\n}\n\nconst prefixcls = cssClasses.PREFIX_OPTION;\n\nexport const vuePropsType: CombineProps<CascaderItemProps> = {\n  activeKeys: {\n    type: Object,\n    required: true\n  },\n  selectedKeys: {\n    type: Object,\n    required: true\n  },\n  loadedKeys: {\n    type: Object,\n    required: true\n  },\n  loadingKeys: {\n    type: Object,\n    required: true\n  },\n  onItemClick: {\n    type: Function as PropType<CascaderItemProps['onItemClick']>,\n    required: true\n  },\n  onItemHover: {\n    type: Function as PropType<CascaderItemProps['onItemHover']>,\n    required: true\n  },\n  showNext: {\n    type: String as PropType<CascaderItemProps['showNext']>,\n    required: true\n  },\n  onItemCheckboxClick: {\n    type: Function as PropType<CascaderItemProps['onItemCheckboxClick']>,\n    required: true\n  },\n  onListScroll: {\n    type: Function as PropType<CascaderItemProps['onListScroll']>,\n    required: true\n  },\n  searchable: {\n    type: Boolean,\n    required: true\n  },\n  keyword: {\n    type: String,\n    required: true\n  },\n  virtualize: Object,\n  expandIcon: [Object, String],\n  emptyContent: {\n    type: [Object, String],\n    required: false\n  },\n  loadData: {\n    type: Function as PropType<CascaderItemProps['loadData']>,\n    required: false\n  },\n  data: {\n    type: Array,\n    required: true\n  },\n  separator: {\n    type: String,\n    required: true\n  },\n  multiple: {\n    type: Boolean,\n    required: true\n  },\n  checkedKeys: {\n    type: Object,\n    required: true\n  },\n  halfCheckedKeys: {\n    type: Object,\n    required: true\n  },\n  empty: {\n    type: Boolean,\n    default: false,\n  },\n  filterRender: Function as PropType<CascaderItemProps['filterRender']>,\n  style: Object,\n  className: String,\n};\nconst Item = defineComponent({\n  props: { ...vuePropsType },\n  name: 'CascaderItem',\n  setup(props, {}) {\n    const slots = useSlots();\n\n    // TODO context\n    const { context } = useBaseComponent<CascaderItemProps>(props, {});\n    const onClick = (e: MouseEvent | KeyboardEvent, item: Entity | Data) => {\n      const { onItemClick } = props;\n      if (item.data.disabled || ('disabled' in item && item.disabled)) {\n        return;\n      }\n      onItemClick(e, item);\n    };\n\n    /**\n     * A11y: simulate item click\n     */\n    const handleItemEnterPress = (keyboardEvent: KeyboardEvent, item: Entity | Data) => {\n      if (isEnterPress(keyboardEvent)) {\n        onClick(keyboardEvent, item);\n      }\n    };\n\n    const onHover = (e: MouseEvent, item: Entity) => {\n      const { showNext, onItemHover } = props;\n      if (item.data.disabled) {\n        return;\n      }\n      if (showNext === strings.SHOW_NEXT_BY_HOVER) {\n        onItemHover(e, item);\n      }\n    };\n\n    const onCheckboxChange = (e: CheckboxEvent, item: Entity | Data) => {\n      const { onItemCheckboxClick } = props;\n      // Prevent Checkbox's click event bubbling to trigger the li click event\n      e.stopPropagation();\n      if (e && e.nativeEvent && typeof e.nativeEvent.stopImmediatePropagation === 'function') {\n        e.nativeEvent.stopImmediatePropagation();\n      }\n      // @ts-ignore\n      if (e && e.stopImmediatePropagation && typeof e.stopImmediatePropagation === 'function') {\n        // @ts-ignore\n        e.stopImmediatePropagation();\n      }\n      onItemCheckboxClick(item);\n    };\n\n    const getItemStatus = (key: string) => {\n      const { activeKeys, selectedKeys, loadedKeys, loadingKeys } = props;\n      const state = { active: false, selected: false, loading: false };\n      if (activeKeys.has(key)) {\n        state.active = true;\n      }\n      if (selectedKeys.has(key)) {\n        state.selected = true;\n      }\n      if (loadingKeys.has(key) && !loadedKeys.has(key)) {\n        state.loading = true;\n      }\n      return state;\n    };\n\n    const renderIcon = (type: string) => {\n      switch (type) {\n        case 'child':\n          const { expandIcon } = props;\n          if (expandIcon) {\n            return expandIcon;\n          }\n          return <IconChevronRight className={`${prefixcls}-icon ${prefixcls}-icon-expand`} />;\n        case 'tick':\n          return <IconTick className={`${prefixcls}-icon ${prefixcls}-icon-active`} />;\n        case 'loading':\n          return <Spin wrapperClassName={`${prefixcls}-spin-icon`} />;\n        case 'empty':\n          return <span aria-hidden={true} class={`${prefixcls}-icon ${prefixcls}-icon-empty`} />;\n        default:\n          return null;\n      }\n    };\n\n    const highlight = (searchText: (VNode | string | JSX.Element)[]) => {\n      const content: (VNode | string | JSX.Element)[] = [];\n      const { keyword, separator } = props;\n      searchText.forEach((item, idx) => {\n        if (typeof item === 'string' && includes(item, keyword)) {\n          item.split(keyword).forEach((node, index) => {\n            if (index > 0) {\n              content.push(\n                <span class={`${prefixcls}-label-highlight`} key={`${index}-${idx}`}>\n                  {keyword}\n                </span>\n              );\n            }\n            content.push(node);\n          });\n        } else {\n          content.push(item);\n        }\n        if (idx !== searchText.length - 1) {\n          content.push(separator);\n        }\n      });\n      return content;\n    };\n\n    const renderFlattenOptionItem = (data: Data, index?: number, style?: any) => {\n      const { multiple, selectedKeys, checkedKeys, halfCheckedKeys, keyword, filterRender, virtualize } = props;\n      const { searchText, key, disabled, pathData } = data;\n      const selected = selectedKeys.has(key);\n      const className = cls(prefixcls, {\n        [`${prefixcls}-flatten`]: true && !filterRender,\n        [`${prefixcls}-disabled`]: disabled,\n        [`${prefixcls}-select`]: selected && !multiple,\n      });\n      const onClick_ = (e) => {\n        onClick(e, data);\n      };\n      const onKeyPress = (e) => handleItemEnterPress(e, data);\n      const onCheck = (e: CheckboxEvent) => onCheckboxChange(e, data);\n      if (filterRender) {\n        const props_ = {\n          className,\n          inputValue: keyword,\n          disabled,\n          data: pathData,\n          checkStatus: {\n            checked: checkedKeys.has(data.key),\n            halfChecked: halfCheckedKeys.has(data.key),\n          },\n          selected,\n          onClick: onClick_,\n          onCheck,\n        };\n        const item = filterRender(props_) as any;\n        const otherProps = virtualize\n          ? {\n              key,\n              style: {\n                ...(item.props.style ?? {}),\n                ...style,\n              },\n            }\n          : { key };\n        return cloneVNode(item, otherProps);\n      }\n      return (\n        <li role=\"menuitem\" class={className} style={style} key={key} onClick={onClick_} onKeypress={onKeyPress}>\n          <span class={`${prefixcls}-label`}>\n            {!multiple && renderIcon('empty')}\n            {multiple && (\n              <Checkbox\n                onChange={onCheck}\n                disabled={disabled}\n                indeterminate={halfCheckedKeys.has(data.key)}\n                checked={checkedKeys.has(data.key)}\n                className={`${prefixcls}-label-checkbox`}\n              />\n            )}\n            {highlight(searchText)}\n          </span>\n        </li>\n      );\n    };\n\n    const renderFlattenOption = (data: Data[]) => {\n      const { virtualize } = props;\n      const content = (\n        <ul class={`${prefixcls}-list`} key={'flatten-list'}>\n          {virtualize ? renderVirtualizeList(data) : data.map((item) => renderFlattenOptionItem(item))}\n        </ul>\n      );\n      return content;\n    };\n\n    const renderVirtualizeList = (visibleOptions: any) => {\n      const { direction } = context.value;\n      const { virtualize } = props;\n      return (\n        <List\n          height={parseInt('' + virtualize.height)}\n          itemCount={visibleOptions.length}\n          itemSize={virtualize.itemSize}\n          itemData={{ visibleOptions, renderOption: renderFlattenOptionItem }}\n          width={virtualize.width ?? '100%'}\n          style={{ direction }}\n        >\n          {VirtualRow}\n        </List>\n      );\n    };\n\n    const contentNode = ref();\n    function renderItem(renderData: Array<Entity>, content: Array<VNode> = []) {\n      const { multiple, checkedKeys, halfCheckedKeys } = props;\n      let showChildItem: Entity;\n      const ind = content.length;\n      content.push(\n        <ul\n          role=\"menu\"\n          class={`${prefixcls}-list`}\n          key={renderData[0].key}\n          onScroll={(e) => props.onListScroll(e, ind)}\n        >\n          {renderData.map((item) => {\n            const { data, key, parentKey } = item;\n            const { children, label, disabled, isLeaf } = data;\n            const { active, selected, loading } = getItemStatus(key);\n            const hasChild = Boolean(children) && children.length;\n            const showExpand = hasChild || (props.loadData && !isLeaf);\n            if (active && hasChild) {\n              showChildItem = item;\n            }\n            const className = cls(prefixcls, {\n              [`${prefixcls}-active`]: active && !selected,\n              [`${prefixcls}-select`]: selected && !multiple,\n              [`${prefixcls}-disabled`]: disabled,\n            });\n            const otherAriaProps = parentKey ? { ['aria-owns']: `cascaderItem-${parentKey}` } : {};\n            return (\n              <li\n                role=\"menuitem\"\n                id={`cascaderItem-${key}`}\n                aria-expanded={active}\n                aria-haspopup={Boolean(showExpand)}\n                aria-disabled={disabled}\n                {...otherAriaProps}\n                class={className}\n                key={key}\n                onClick={(e) => {\n                  onClick(e, item);\n                }}\n                onKeypress={(e) => handleItemEnterPress(e, item)}\n                onMouseenter={(e) => {\n                  onHover(e, item);\n                }}\n              >\n                <span class={`${prefixcls}-label`}>\n                  {selected && !multiple && renderIcon('tick')}\n                  {!selected && !multiple && renderIcon('empty')}\n                  {multiple && (\n                    <Checkbox\n                      onChange={(e: CheckboxEvent) => onCheckboxChange(e, item)}\n                      disabled={disabled}\n                      indeterminate={halfCheckedKeys.has(item.key)}\n                      checked={checkedKeys.has(item.key)}\n                      className={`${prefixcls}-label-checkbox`}\n                    />\n                  )}\n                  <span>{label}</span>\n                </span>\n                {showExpand ? renderIcon(loading ? 'loading' : 'child') : null}\n              </li>\n            );\n          })}\n        </ul>\n      );\n      if (showChildItem) {\n        content.concat(renderItem(showChildItem.children, content));\n      }\n      return content;\n    }\n\n    function renderEmpty() {\n      const { emptyContent } = props;\n      if (emptyContent === null) {\n        return null;\n      }\n      return (\n        <LocaleConsumer componentName=\"Cascader\">\n          {(locale: Locale['Cascader']) => (\n            <ul class={`${prefixcls} ${prefixcls}-empty`} key={'empty-list'}>\n              <span class={`${prefixcls}-label`}>{emptyContent || locale.emptyText}</span>\n            </ul>\n          )}\n        </LocaleConsumer>\n      );\n    }\n\n    function updateScrollTop() {\n      props.activeKeys.forEach((item) => {\n        let optionId = `cascaderItem-${item}`;\n\n        let destNode = (contentNode.value as HTMLDivElement)?.querySelector('#' + optionId) as HTMLElement;\n        // let destNode = document.getElementById(optionId);\n        if (destNode) {\n          /**\n           * Scroll the first selected item into view.\n           * The reason why ScrollIntoView is not used here is that it may cause page to move.\n           */\n          const destParent = destNode.parentNode as HTMLDivElement;\n          destParent.scrollTop =\n            destNode.offsetTop - destParent.offsetTop - destParent.clientHeight / 2 + destNode.clientHeight / 2;\n        }\n      });\n    }\n\n    onMounted(() => {\n      updateScrollTop();\n    });\n    // onUnmounted(()=>{\n    //   console.log('onUnmounted');\n    // })\n    //\n    // watch(()=>props, (value, oldValue, onCleanup)=>{\n    //   console.log(toRaw(value), toRaw(oldValue));\n    // }, {deep: true})\n\n    return () => {\n      const { data, searchable } = props;\n      const { direction } = context.value;\n      const isEmpty = !data || !data.length;\n      let content;\n      const listsCls = cls({\n        [`${prefixcls}-lists`]: true,\n        [`${prefixcls}-lists-rtl`]: direction === 'rtl',\n        [`${prefixcls}-lists-empty`]: isEmpty,\n      });\n\n      if (isEmpty) {\n        content = renderEmpty();\n      } else {\n        content = searchable ? renderFlattenOption(data as Data[]) : renderItem(data as Entity[]);\n      }\n      return (\n        <div ref={contentNode} class={listsCls}>\n          {content}\n        </div>\n      );\n    };\n  },\n});\n\nexport default Item;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","prefixcls","cssClasses","PREFIX_OPTION","vuePropsType","activeKeys","type","required","selectedKeys","loadedKeys","loadingKeys","onItemClick","Function","onItemHover","showNext","String","onItemCheckboxClick","onListScroll","searchable","Boolean","keyword","virtualize","expandIcon","emptyContent","loadData","data","Array","separator","multiple","checkedKeys","halfCheckedKeys","empty","default","filterRender","style","className","Item","defineComponent","props","name","setup","useSlots","context","useBaseComponent","onClick","e","item","disabled","handleItemEnterPress","keyboardEvent","isEnterPress","onHover","strings","SHOW_NEXT_BY_HOVER","onCheckboxChange","stopPropagation","nativeEvent","stopImmediatePropagation","getItemStatus","key","state","active","selected","loading","has","renderIcon","_createVNode","IconChevronRight","IconTick","Spin","highlight","searchText","content","forEach","idx","includes","split","node","index","push","length","renderFlattenOptionItem","pathData","cls","onClick_","onKeyPress","onCheck","props_","inputValue","checkStatus","checked","halfChecked","otherProps","cloneVNode","Checkbox","renderFlattenOption","renderVirtualizeList","map","visibleOptions","direction","value","List","parseInt","height","itemSize","renderOption","width","VirtualRow","contentNode","ref","renderItem","renderData","showChildItem","ind","parentKey","children","label","isLeaf","hasChild","showExpand","otherAriaProps","_mergeProps","concat","renderEmpty","LocaleConsumer","locale","emptyText","updateScrollTop","optionId","destNode","querySelector","destParent","parentNode","scrollTop","offsetTop","clientHeight","onMounted","isEmpty","listsCls"],"mappings":"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"}