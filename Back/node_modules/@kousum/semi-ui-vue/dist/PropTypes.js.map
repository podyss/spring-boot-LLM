{"version":3,"file":"PropTypes.js","sources":["../src/components/PropTypes.ts"],"sourcesContent":["import {ComponentObjectPropsOptions} from \"vue\";\nimport { CombineProps } from './interface';\n\n\nexport const any = [Array, Object, String, Number, Boolean, Function];\nexport const array = Array;\nexport const bool = Boolean;\nexport const func = Function;\nexport const number = Number;\nexport const object = Object\nexport const string = String;\nexport const node = [Array, Object, String, Number];\nexport const element = [Array, Object, String, Number];\nexport const symbol = Object;\n\nexport function oneOfType(arr:any[]) {\n  let newArr = []\n  arr.map(item=>{\n    if (Array.isArray(item)){\n      newArr = [...newArr, ...item]\n    }else{\n      newArr.push(item)\n    }\n  })\n\n  return newArr\n}\n\ntype Prop = ArrayConstructor | ObjectConstructor | StringConstructor | NumberConstructor | BooleanConstructor | FunctionConstructor | typeof any\nexport type PropObj = Record<any, {\n  type: Prop;\n  required?: boolean;\n  default?: any;\n  validator?(value: unknown): boolean;\n} | Prop>\nexport function vuePropsMake<T>(typeObj:CombineProps<T>, defaultProps:{[key:string]: any}) {\n  const obj = {}\n  Object.keys(typeObj).forEach(typeKey=>{\n    if (defaultProps.hasOwnProperty(typeKey)){\n      if (typeObj[typeKey].hasOwnProperty('type')) {\n        obj[typeKey] = {\n          // @ts-ignore\n          type: typeObj[typeKey].type,\n          default: defaultProps[typeKey],\n        }\n      }else{\n        let defaultValue = typeof defaultProps[typeKey] === 'object' ? () => defaultProps[typeKey] : defaultProps[typeKey]\n        obj[typeKey] = {\n          type: typeObj[typeKey],\n          default: defaultValue,\n        }\n      }\n    }else{\n      obj[typeKey] = {\n        type: (typeObj[typeKey] === undefined?undefined:typeObj[typeKey].hasOwnProperty('type')?\n          // @ts-ignore\n          typeObj[typeKey].type:\n          typeObj[typeKey]),\n        default: undefined\n      }\n    }\n\n\n\n\n  })\n  return obj as CombineProps<T>\n}\n"],"names":["any","array","bool","func","number","object","string","node","element","symbol","oneOfType","arr","newArr","item","vuePropsMake","typeObj","defaultProps","obj","typeKey","defaultValue"],"mappings":"AAIO,MAAMA,IAAM,CAAC,OAAO,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,GACvDC,IAAQ,OACRC,IAAO,SACPC,IAAO,UACPC,IAAS,QACTC,IAAS,QACTC,IAAS,QACTC,IAAO,CAAC,OAAO,QAAQ,QAAQ,MAAM,GACrCC,IAAU,CAAC,OAAO,QAAQ,QAAQ,MAAM,GACxCC,IAAS;AAEf,SAASC,EAAUC,GAAW;AACnC,MAAIC,IAAS,CAAA;AACb,SAAAD,EAAI,IAAI,CAAME,MAAA;AACR,IAAA,MAAM,QAAQA,CAAI,IACpBD,IAAS,CAAC,GAAGA,GAAQ,GAAGC,CAAI,IAE5BD,EAAO,KAAKC,CAAI;AAAA,EAClB,CACD,GAEMD;AACT;AASgB,SAAAE,EAAgBC,GAAyBC,GAAkC;AACzF,QAAMC,IAAM,CAAA;AACZ,gBAAO,KAAKF,CAAO,EAAE,QAAQ,CAASG,MAAA;AAChC,QAAAF,EAAa,eAAeE,CAAO;AACrC,UAAIH,EAAQG,CAAO,EAAE,eAAe,MAAM;AACxC,QAAAD,EAAIC,CAAO,IAAI;AAAA;AAAA,UAEb,MAAMH,EAAQG,CAAO,EAAE;AAAA,UACvB,SAASF,EAAaE,CAAO;AAAA,QAAA;AAAA,WAE5B;AACC,YAAAC,IAAe,OAAOH,EAAaE,CAAO,KAAM,WAAW,MAAMF,EAAaE,CAAO,IAAIF,EAAaE,CAAO;AACjH,QAAAD,EAAIC,CAAO,IAAI;AAAA,UACb,MAAMH,EAAQG,CAAO;AAAA,UACrB,SAASC;AAAA,QAAA;AAAA,MAEb;AAAA;AAEA,MAAAF,EAAIC,CAAO,IAAI;AAAA,QACb,MAAOH,EAAQG,CAAO,MAAM,SAAU,SAAUH,EAAQG,CAAO,EAAE,eAAe,MAAM;AAAA;AAAA,UAEpFH,EAAQG,CAAO,EAAE;AAAA,YACjBH,EAAQG,CAAO;AAAA,QACjB,SAAS;AAAA,MAAA;AAAA,EAEb,CAKD,GACMD;AACT;"}