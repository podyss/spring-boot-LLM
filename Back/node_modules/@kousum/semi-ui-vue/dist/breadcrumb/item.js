import { defineComponent as j, useSlots as x, reactive as B, onMounted as N, onUnmounted as O, createVNode as l, mergeProps as F, h as L, Fragment as f, isVNode as g, cloneVNode as R } from "vue";
import h from "classnames";
import * as n from "../PropTypes";
import { vuePropsMake as z } from "../PropTypes";
import { cssClasses as V } from '@douyinfe/semi-foundation/lib/es/breadcrumb/constants';
import _ from '@douyinfe/semi-foundation/lib/es/breadcrumb/itemFoundation';
import { useBaseComponent as A } from "../_base/baseComponent";
import { noop as H } from '@douyinfe/semi-foundation/lib/es/utils/function';
import { Text as M } from "../typography";
import { isUndefined as U, isNull as D, merge as E } from "lodash";
import { useBreadContext as W } from "./context/Consumer";
import { getFragmentChildren as X, styleNum as q } from "../_utils";
function G(r) {
  return typeof r == "function" || Object.prototype.toString.call(r) === "[object Object]" && !g(r);
}
const i = V.PREFIX, J = {
  onClick: n.func,
  route: [n.object, n.string],
  active: n.bool,
  shouldRenderSeparator: n.bool,
  icon: n.node,
  separator: n.node,
  noLink: n.bool,
  //@ts-ignore
  path: n.string,
  //@ts-ignore
  href: n.string,
  //@ts-ignore
  name: n.string,
  //@ts-ignore
  _origin: n.object
}, K = {
  onClick: H,
  shouldRenderSeparator: !0
}, Q = z(J, K), lt = /* @__PURE__ */ j({
  props: {
    ...Q
  },
  name: "BreadcrumbItem",
  setup(r, {}) {
    const u = x(), y = B({}), {
      context: p
    } = W(), {
      adapter: b,
      getDataAttr: v
    } = A(r, y);
    function C() {
      return {
        ...b(),
        notifyClick: (...t) => {
          r.onClick(...t);
        },
        notifyParent: (...t) => {
          p.value.onClick(...t);
        }
      };
    }
    const d = new _(C());
    N(() => {
      d.init();
    }), O(() => {
      d.destroy();
    });
    const I = () => {
      const t = r.icon, {
        compact: e
      } = p.value, s = e ? "small" : "default", o = `${i}-item-icon`;
      return g(t) ? R(t, {
        class: o,
        size: s
      }) : t;
    }, k = () => {
      const {
        showTooltip: t
      } = p.value;
      if (!t)
        return {
          width: 150,
          ellipsisPos: "end"
        };
      const e = {
        width: 150,
        ellipsisPos: "end",
        opts: {
          autoAdjustOverflow: !0,
          position: "top"
        }
      };
      return typeof t == "object" ? E(e, t) : e;
    }, w = () => {
      var c;
      let t = {};
      const e = (c = u.default) == null ? void 0 : c.call(u), {
        route: s,
        href: o
      } = r, a = !U(o) && !D(o);
      return s ? t = s : (t.name = e, a && (t.href = o)), t;
    }, P = () => {
      const t = X(u), {
        compact: e
      } = p.value, s = k(), o = I();
      if (t && t[0].type.toString() === "Symbol(v-txt)") {
        const {
          opts: a,
          ellipsisPos: c,
          width: m
        } = s;
        return l(f, null, [o, l("span", {
          class: `${i}-item-title`
        }, [l(M, {
          ellipsis: {
            showTooltip: a ? {
              opts: a
            } : !1,
            pos: c
          },
          style: {
            maxWidth: q(m)
          },
          size: e ? "small" : "normal"
        }, G(t) ? t : {
          default: () => [t]
        })])]);
      }
      return l(f, null, [o, t ? l("span", {
        class: `${i}-item-title ${i}-item-title-inline`
      }, [t]) : null]);
    }, S = () => {
      const {
        href: t,
        active: e,
        noLink: s
      } = r, o = t !== null && typeof t < "u", a = h({
        [`${i}-item`]: !0,
        [`${i}-item-active`]: e,
        [`${i}-item-link`]: !s
      }), c = P(), m = e || !o ? "span" : "a", T = w();
      return L(m, {
        className: a,
        onClick: ($) => d.handleClick(T, $),
        href: t
      }, c);
    };
    return () => {
      var m;
      const {
        active: t,
        shouldRenderSeparator: e
        // children,
      } = r, s = t ? {
        "aria-current": "page"
      } : {}, o = S(), a = r.separator || l("span", {
        class: `${i}-separator`
      }, [(m = p.value) == null ? void 0 : m.separator]), c = h({
        [`${i}-item-wrap`]: !0
        // [`${clsPrefix}-item-wrap-iconOnly`]: !!children && props.icon,
      });
      return l("span", F({
        class: c
      }, s, v()), [o, e && a]);
    };
  }
});
export {
  lt as default,
  Q as vuePropsType
};
//# sourceMappingURL=item.js.map
