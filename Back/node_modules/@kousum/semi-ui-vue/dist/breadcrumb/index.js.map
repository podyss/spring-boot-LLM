{"version":3,"file":"index.js","sources":["../../src/components/breadcrumb/index.tsx"],"sourcesContent":["/* eslint-disable max-len */\nimport cls from 'classnames';\nimport {\n  cloneVNode,\n  ComponentObjectPropsOptions,\n  CSSProperties,\n  defineComponent,\n  Fragment,\n  h,\n  onMounted,\n  onUnmounted,\n  PropType,\n  reactive,\n  useSlots,\n  VNode,\n} from 'vue';\nimport * as propTypes from '../PropTypes';\nimport { vuePropsMake } from '../PropTypes';\nimport { cssClasses } from '@douyinfe/semi-foundation/breadcrumb/constants';\nimport BreadcrumbFoundation, { BreadcrumbAdapter } from '@douyinfe/semi-foundation/breadcrumb/foundation';\nimport warning from '@douyinfe/semi-foundation/utils/warning';\nimport { isFunction } from 'lodash';\nimport '@douyinfe/semi-foundation/breadcrumb/breadcrumb.scss';\nimport { noop } from '@douyinfe/semi-foundation/utils/function';\nimport { BaseProps, useBaseComponent } from '../_base/baseComponent';\nimport Popover from '../popover';\nimport type { BreadcrumbItemInfo, BreadcrumbItemProps, RouteProps } from './item';\nimport BreadcrumbItem from './item';\nimport BreadContext from './bread-context';\nimport { TooltipProps } from '../tooltip';\nimport { IconMore } from '@kousum/semi-icons-vue';\n\nimport { AriaAttributes } from '../AriaAttributes';\nimport { CombineProps, VueJsxNode } from '../interface';\nimport { getFragmentChildren, getVNodeChildren } from '../_utils';\n\nconst clsPrefix = cssClasses.PREFIX;\n\nexport { RouteProps, BreadcrumbItemProps, BreadcrumbItemInfo };\nexport interface showToolTipProps {\n  width?: string | number;\n  ellipsisPos?: 'end' | 'middle';\n  opts?: TooltipProps;\n}\n\nexport type MoreType = 'default' | 'popover';\n\nexport interface BreadcrumbProps extends BaseProps {\n  routes?: Array<RouteProps>;\n  onClick?: (route: RouteProps, event: MouseEvent) => void;\n  separator?: VueJsxNode;\n  compact?: boolean;\n  style?: CSSProperties;\n  renderItem?: (route: RouteProps) => VNode;\n  className?: string;\n  showTooltip?: boolean | showToolTipProps;\n  maxItemCount?: number;\n  autoCollapse?: boolean;\n  /* Customize the contents of the ellipsis area */\n  renderMore?: (restItem: Array<VNode>) => VNode;\n  /* Style type for ellipsis area */\n  moreType?: MoreType;\n  'aria-label'?: AriaAttributes['aria-label'];\n  activeIndex?: number;\n}\n\ninterface BreadcrumbState {\n  isCollapsed: boolean;\n}\n\nconst propTypes_: CombineProps<BreadcrumbProps> = {\n  activeIndex: propTypes.number,\n  routes: propTypes.array,\n  onClick: propTypes.func as PropType<BreadcrumbProps['onClick']>,\n  separator: propTypes.node as PropType<BreadcrumbProps['separator']>,\n  compact: propTypes.bool,\n  style: propTypes.object,\n  renderItem: propTypes.func as PropType<BreadcrumbProps['renderItem']>,\n  showTooltip: [propTypes.object, propTypes.bool],\n  className: propTypes.string,\n  autoCollapse: propTypes.bool,\n  maxItemCount: propTypes.number,\n\n  /* Customize the contents of the ellipsis area */\n  renderMore: propTypes.func as PropType<BreadcrumbProps['renderMore']>,\n\n  /* Type of ellipsis area */\n  moreType: String as PropType<BreadcrumbProps['moreType']>,\n  'aria-label': propTypes.string,\n};\nconst defaultProps = {\n  routes: [] as [],\n  onClick: noop,\n  renderItem: undefined as undefined,\n  separator: '/',\n  compact: true,\n  showTooltip: {\n    width: 150,\n    ellipsisPos: 'end',\n  },\n  autoCollapse: true,\n  moreType: 'default',\n  maxItemCount: 4,\n  'aria-label': 'Breadcrumb',\n};\nexport const vuePropsType = vuePropsMake(propTypes_, defaultProps);\nconst Breadcrumb = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Breadcrumb',\n  setup(props, {}) {\n    const state = reactive<BreadcrumbState>({\n      isCollapsed: true,\n    });\n\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent<BreadcrumbProps>(props, state);\n    function adapter(): BreadcrumbAdapter<BreadcrumbProps, BreadcrumbState> {\n      return {\n        ...adapterInject<BreadcrumbProps, BreadcrumbState>(),\n        notifyClick: (...args) => {\n          props.onClick(...args);\n        },\n        expandCollapsed: () => (state.isCollapsed = false),\n      };\n    }\n    const foundation = new BreadcrumbFoundation(adapter());\n\n    onMounted(() => {\n      foundation.init();\n    });\n    onUnmounted(() => {\n      foundation.destroy();\n    });\n\n    function renderPopoverMore(restItem: Array<VNode>) {\n      const { separator } = props;\n      const content = (\n        <>\n          {restItem.map((item: VNode, idx: number) => (\n            <Fragment key={`restItem-${idx}`}>\n              {item}\n              {idx !== restItem.length - 1 && <span class={`${clsPrefix}-restItem`}>{separator}</span>}\n            </Fragment>\n          ))}\n        </>\n      );\n      return (\n        <Popover\n          content={content}\n          style={{\n            padding: 12,\n          }}\n          showArrow\n        >\n          <IconMore />\n        </Popover>\n      );\n    }\n\n    const handleCollapse = (template: Array<VNode>, itemsLen: number) => {\n      const { maxItemCount, renderMore, moreType } = props;\n      const hasRenderMore = isFunction(renderMore);\n      const restItem = template.slice(1, itemsLen - maxItemCount + 1);\n      const spread = (\n        <span class={`${clsPrefix}-collapse`} key={`more-${itemsLen}`}>\n          <span class={`${clsPrefix}-item-wrap`}>\n            <span\n              role=\"button\"\n              tabindex={0}\n              aria-label=\"Expand breadcrumb items\"\n              class={`${clsPrefix}-item ${clsPrefix}-item-more`}\n              onClick={(item) => foundation.handleExpand(item)}\n              onKeypress={(e) => foundation.handleExpandEnterPress(e)}\n            >\n              {hasRenderMore && renderMore(restItem)}\n              {!hasRenderMore && moreType === 'default' && <IconMore />}\n              {!hasRenderMore && moreType === 'popover' && renderPopoverMore(restItem)}\n            </span>\n            <span class={`${clsPrefix}-separator`} x-semi-prop=\"separator\">\n              {props.separator}\n            </span>\n          </span>\n        </span>\n      );\n      template.splice(1, itemsLen - maxItemCount, spread);\n      return template;\n    };\n\n    const renderRouteItems = (items: Array<RouteProps>, shouldCollapse: boolean, moreTypeIsPopover: boolean) => {\n      const { renderItem, renderMore, maxItemCount } = props;\n      const restItemLength = items.length - maxItemCount;\n      const hasRenderMore = isFunction(renderMore);\n      const template = items.map((route, idx: number) => {\n        const key = route._origin.key || `item-${route.name || route.path}-${idx}`;\n        const inCollapseArea = idx > 0 && idx <= restItemLength;\n        return (\n          <BreadcrumbItem\n            {...route}\n            key={key}\n            active={props.activeIndex !== undefined ? props.activeIndex === idx : idx === items.length - 1}\n            route={route._origin}\n            // eslint-disable-next-line max-len\n            shouldRenderSeparator={\n              idx !== items.length - 1 && !(shouldCollapse && (hasRenderMore || moreTypeIsPopover) && inCollapseArea)\n            }\n          >\n            {renderItem ? renderItem(route._origin) : route.name}\n          </BreadcrumbItem>\n        );\n      });\n      return template;\n    };\n\n    const slots = useSlots();\n    const renderList = (): Array<VNode> => {\n      const { routes, autoCollapse, maxItemCount, renderMore, moreType } = props;\n      const { isCollapsed } = state;\n      const hasRoutes = routes && routes.length > 0;\n      const items = hasRoutes ? foundation.genRoutes(routes) : getFragmentChildren(slots) || [];\n\n      let template;\n\n      const itemLength = items.length; // children length\n\n      const restItemLength = itemLength - maxItemCount; // Omitted children items\n\n      const shouldCollapse = items && autoCollapse && itemLength > maxItemCount && isCollapsed; // Whether the number of children exceeds, need to collapse\n\n      const hasRenderMore = isFunction(renderMore); // Whether the user passes in the renderMore method\n      const moreTypeIsPopover = moreType === 'popover';\n\n      if (hasRoutes) {\n        template = renderRouteItems(items, shouldCollapse, moreTypeIsPopover);\n      } else {\n        template = items.map((item: any, idx: number) => {\n          const inCollapseArea = idx > 0 && idx <= restItemLength;\n          if (!item) {\n            return item;\n          }\n          warning(\n            item.type && item.type.name !== 'BreadcrumbItem',\n            '[Semi Breadcrumb]: Only accepts Breadcrumb.Item as its children'\n          );\n\n          return cloneVNode(item, {\n            key: `${idx}-item`,\n            active: props.activeIndex !== undefined ? props.activeIndex === idx : idx === items.length - 1,\n            shouldRenderSeparator:\n              idx !== items.length - 1 && !(shouldCollapse && (hasRenderMore || moreTypeIsPopover) && inCollapseArea),\n          });\n        });\n      }\n\n      if (shouldCollapse) {\n        return handleCollapse(template, items.length);\n      }\n\n      return template;\n    };\n\n    const onClick = (info: BreadcrumbItemInfo, event: MouseEvent) => {\n      foundation.handleClick(info, event);\n    };\n\n    return () => {\n      const breadcrumbs = renderList();\n      const { compact, className, style, separator, showTooltip } = props;\n      const sizeCls = cls(className, {\n        [`${clsPrefix}-wrapper`]: true,\n        [`${clsPrefix}-wrapper-compact`]: compact,\n        [`${clsPrefix}-wrapper-loose`]: !compact,\n      });\n      return (\n        <BreadContext.Provider\n          value={{\n            onClick: onClick,\n            showTooltip,\n            compact,\n            separator,\n          }}\n        >\n          <nav aria-label={props['aria-label']} class={sizeCls} style={style} {...getDataAttr()}>\n            {breadcrumbs}\n          </nav>\n        </BreadContext.Provider>\n      );\n    };\n  },\n});\n\n\nexport type BreadcrumbType = typeof Breadcrumb & {\n  Item: typeof BreadcrumbItem\n}\nconst BaseBreadcrumb = Breadcrumb as BreadcrumbType\nBaseBreadcrumb.Item = BreadcrumbItem\nexport default BaseBreadcrumb;\nexport { BreadcrumbItem };\n"],"names":["clsPrefix","cssClasses","PREFIX","propTypes_","activeIndex","propTypes","number","routes","array","onClick","func","separator","node","compact","bool","style","object","renderItem","showTooltip","className","string","autoCollapse","maxItemCount","renderMore","moreType","String","defaultProps","noop","undefined","width","ellipsisPos","vuePropsType","vuePropsMake","Breadcrumb","defineComponent","props","name","setup","state","reactive","isCollapsed","adapter","adapterInject","getDataAttr","useBaseComponent","notifyClick","args","expandCollapsed","foundation","BreadcrumbFoundation","onMounted","init","onUnmounted","destroy","renderPopoverMore","restItem","content","_createVNode","_Fragment","map","item","idx","length","Popover","padding","default","IconMore","handleCollapse","template","itemsLen","hasRenderMore","isFunction","slice","spread","handleExpand","e","handleExpandEnterPress","splice","renderRouteItems","items","shouldCollapse","moreTypeIsPopover","restItemLength","route","key","_origin","path","inCollapseArea","BreadcrumbItem","_mergeProps","slots","useSlots","renderList","hasRoutes","genRoutes","getFragmentChildren","itemLength","warning","type","cloneVNode","active","shouldRenderSeparator","info","event","handleClick","breadcrumbs","sizeCls","cls","BreadContext","Provider","BaseBreadcrumb","Item"],"mappings":"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"}