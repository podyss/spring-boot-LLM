import { showToolTipProps } from './index';
import { BreadcrumbItemInfo } from './item';
import { VNode } from "vue";
import { VueJsxNode } from "../interface";
export interface BreadContextType {
    onClick?: (info: BreadcrumbItemInfo, event: MouseEvent) => void;
    showTooltip?: boolean | showToolTipProps;
    compact?: boolean;
    separator?: VueJsxNode;
}
declare const BreadContext: {
    Consumer: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
        name: StringConstructor;
    }>, () => VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>[], {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
        name: StringConstructor;
    }>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
    Provider: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
        value: ObjectConstructor;
    }>, () => VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>[], {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
        value: ObjectConstructor;
    }>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
};
export default BreadContext;
