{"version":3,"file":"item.js","sources":["../../src/components/breadcrumb/item.tsx"],"sourcesContent":["import cls from 'classnames';\nimport * as propTypes from '../PropTypes';\nimport { cssClasses } from '@douyinfe/semi-foundation/breadcrumb/constants';\nimport BreadcrumbItemFoundation from '@douyinfe/semi-foundation/breadcrumb/itemFoundation';\nimport type {\n  BreadcrumbItemAdapter,\n  BreadcrumbItemInfo,\n  Route,\n} from '@douyinfe/semi-foundation/breadcrumb/itemFoundation';\n\nimport { BaseProps, useBaseComponent } from '../_base/baseComponent';\nimport { noop } from '@douyinfe/semi-foundation/utils/function';\nimport { Text as TypographyText } from '../typography';\nimport type { EllipsisPos, ShowTooltip as ShowTooltipType } from '../typography';\nimport { merge, isUndefined, isNull } from 'lodash';\nimport {\n  h,\n  Fragment,\n  VNode,\n  defineComponent,\n  reactive,\n  onMounted,\n  onUnmounted,\n  isVNode,\n  cloneVNode,\n  useSlots,\n  ComponentObjectPropsOptions,\n  PropType,\n} from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { useBreadContext } from './context/Consumer';\nimport { getFragmentChildren, styleNum } from '../_utils';\nimport { CombineProps } from '../interface';\n\nconst clsPrefix = cssClasses.PREFIX;\n\nexport { BreadcrumbItemInfo };\n\nexport interface RouteProps extends Route {\n  icon?: VNode;\n}\n\nexport interface BreadcrumbItemProps extends BaseProps {\n  onClick?: (item: RouteProps, e: MouseEvent) => void;\n  icon?: VNode;\n  href?: string;\n  separator?: VNode;\n  noLink?: boolean;\n  active?: boolean;\n  shouldRenderSeparator?: boolean;\n  route?: RouteProps;\n}\n\ntype BreadcrumbItemState = Record<string, never>;\n\ninterface GetTooltipOptType {\n  width: number;\n  ellipsisPos: EllipsisPos;\n  opts?: ShowTooltipType['opts'];\n}\n\nconst propTypes_: CombineProps<BreadcrumbItemProps> = {\n  onClick: propTypes.func as PropType<BreadcrumbItemProps['onClick']>,\n  route: [propTypes.object, propTypes.string],\n  active: propTypes.bool,\n  shouldRenderSeparator: propTypes.bool,\n  icon: propTypes.node as PropType<BreadcrumbItemProps['icon']>,\n  separator: propTypes.node as PropType<BreadcrumbItemProps['separator']>,\n  noLink: propTypes.bool,\n\n  //@ts-ignore\n  path: propTypes.string,\n  //@ts-ignore\n  href: propTypes.string,\n  //@ts-ignore\n  name: propTypes.string,\n  //@ts-ignore\n  _origin: propTypes.object,\n};\n\nconst defaultProps = {\n  onClick: noop,\n  shouldRenderSeparator: true,\n};\n\nexport const vuePropsType = vuePropsMake(propTypes_, defaultProps);\nconst BreadcrumbItem = defineComponent({\n  props: { ...vuePropsType },\n  name: 'BreadcrumbItem',\n  setup(props, {}) {\n    const slots = useSlots();\n    const state = reactive<BreadcrumbItemState>({});\n    const { context } = useBreadContext();\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent<BreadcrumbItemProps>(props, state);\n\n    function adapter(): BreadcrumbItemAdapter<BreadcrumbItemProps, BreadcrumbItemState> {\n      return {\n        ...adapterInject<BreadcrumbItemProps, BreadcrumbItemState>(),\n        notifyClick: (...args) => {\n          props.onClick(...args);\n        },\n        notifyParent: (...args) => {\n          context.value.onClick(...args);\n        },\n      };\n    }\n\n    const foundation = new BreadcrumbItemFoundation(adapter());\n\n    onMounted(() => {\n      foundation.init();\n    });\n    onUnmounted(() => {\n      foundation.destroy();\n    });\n\n    const renderIcon = () => {\n      const iconType = props.icon;\n      const { compact } = context.value;\n      const iconSize = compact ? 'small' : 'default';\n      const className = `${clsPrefix}-item-icon`;\n      if (isVNode(iconType)) {\n        return cloneVNode(iconType, { class: className, size: iconSize });\n      }\n      return iconType;\n    };\n\n    const getTooltipOpt = () => {\n      const { showTooltip } = context.value;\n      if (!showTooltip) {\n        return {\n          width: 150,\n          ellipsisPos: 'end',\n        };\n      }\n      const defaultOpts = {\n        width: 150,\n        ellipsisPos: 'end',\n        opts: {\n          autoAdjustOverflow: true,\n          position: 'top',\n        },\n      };\n      if (typeof showTooltip === 'object') {\n        return merge(defaultOpts, showTooltip);\n      }\n      return defaultOpts;\n    };\n\n    const getItemInfo = (): BreadcrumbItemInfo => {\n      let itemInfo: BreadcrumbItemInfo = {};\n      const children = slots.default?.();\n      const { route, href } = props;\n      const hasHref = !isUndefined(href) && !isNull(href);\n      if (route) {\n        itemInfo = route;\n      } else {\n        itemInfo.name = children;\n        if (hasHref) {\n          itemInfo.href = href;\n        }\n      }\n      return itemInfo;\n    };\n\n    const renderBreadItem = () => {\n      const children = getFragmentChildren(slots);\n      const { compact } = context.value;\n      const showTooltip = getTooltipOpt();\n      const icon = renderIcon();\n      if (Boolean(children) && children[0].type.toString() === 'Symbol(v-txt)') {\n        const { opts, ellipsisPos, width } = showTooltip as GetTooltipOptType;\n        return (\n          <Fragment>\n            {icon}\n            <span class={`${clsPrefix}-item-title`}>\n              <TypographyText\n                ellipsis={{\n                  showTooltip: opts ? { opts } : false,\n                  pos: ellipsisPos,\n                }}\n                // icon={renderIcon(icon)}\n                style={{ maxWidth: styleNum(width) }}\n                size={compact ? 'small' : 'normal'}\n              >\n                {children}\n              </TypographyText>\n            </span>\n          </Fragment>\n        );\n      }\n\n      return (\n        <Fragment>\n          {icon}\n          {children ? <span class={`${clsPrefix}-item-title ${clsPrefix}-item-title-inline`}>{children}</span> : null}\n        </Fragment>\n      );\n    };\n\n    const renderItem = () => {\n      const { href, active, noLink } = props;\n      const hasHref = href !== null && typeof href !== 'undefined';\n      const itemCls = cls({\n        [`${clsPrefix}-item`]: true,\n        [`${clsPrefix}-item-active`]: active,\n        [`${clsPrefix}-item-link`]: !noLink,\n      });\n      const itemInner = renderBreadItem();\n      const tag = active || !hasHref ? 'span' : 'a';\n      const itemInfo = getItemInfo();\n\n      return h(\n        tag,\n        {\n          className: itemCls,\n          onClick: (e) => foundation.handleClick(itemInfo, e),\n          href,\n        },\n        itemInner\n      );\n    };\n\n    return () => {\n      const {\n        active,\n        shouldRenderSeparator,\n        // children,\n      } = props;\n      const pageLabel = active ? { 'aria-current': 'page' as const } : {};\n      const item = renderItem();\n      const separator = props.separator || <span class={`${clsPrefix}-separator`}>\n        {(context.value as any)?.separator}\n      </span>;\n      const wrapperCLs = cls({\n        [`${clsPrefix}-item-wrap`]: true,\n        // [`${clsPrefix}-item-wrap-iconOnly`]: !!children && props.icon,\n      });\n      return (\n        <span class={wrapperCLs} {...pageLabel} {...getDataAttr()}>\n          {item}\n          {shouldRenderSeparator && separator}\n        </span>\n      );\n    };\n  },\n});\n\nexport default BreadcrumbItem;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","clsPrefix","cssClasses","PREFIX","propTypes_","onClick","propTypes","func","route","object","string","active","bool","shouldRenderSeparator","icon","node","separator","noLink","path","href","name","_origin","defaultProps","noop","vuePropsType","vuePropsMake","BreadcrumbItem","defineComponent","props","setup","slots","useSlots","state","reactive","context","useBreadContext","adapter","adapterInject","getDataAttr","useBaseComponent","notifyClick","args","notifyParent","value","foundation","BreadcrumbItemFoundation","onMounted","init","onUnmounted","destroy","renderIcon","iconType","compact","iconSize","className","isVNode","cloneVNode","class","size","getTooltipOpt","showTooltip","width","ellipsisPos","defaultOpts","opts","autoAdjustOverflow","position","merge","getItemInfo","itemInfo","children","default","hasHref","isUndefined","isNull","renderBreadItem","getFragmentChildren","type","_createVNode","_Fragment","TypographyText","pos","maxWidth","styleNum","renderItem","itemCls","cls","itemInner","tag","h","e","handleClick","pageLabel","item","wrapperCLs","_mergeProps"],"mappings":"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"}