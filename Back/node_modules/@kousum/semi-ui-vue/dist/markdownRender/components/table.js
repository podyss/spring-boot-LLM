import { createVNode as u, mergeProps as f } from "vue";
import { get as i, omit as p } from "lodash";
import b from "../../table";
const S = (t) => {
  var s;
  const {
    children: n
  } = t, o = (r) => Array.isArray(r) ? r : [r], m = o(i(n[0], "children[0].children")), a = o(i(n[1], "children")), c = m.map((r) => (r == null ? void 0 : r.children) || ""), l = [];
  for (let r = 0; r < a.length; r++) {
    let d = {
      key: String(r)
    };
    (s = a[r]) == null || s.children.forEach((e, h) => {
      d[c[h]] = (e == null ? void 0 : e.children) ?? "";
    }), l.push(d);
  }
  return u(b, f({
    dataSource: l,
    columns: c.map((r) => ({
      title: r,
      dataIndex: r
    }))
  }, p(t, "children")), null);
};
export {
  S as default
};
//# sourceMappingURL=table.js.map
