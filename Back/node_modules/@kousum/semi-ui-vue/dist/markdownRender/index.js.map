{"version":3,"file":"index.js","sources":["../../src/components/markdownRender/index.tsx"],"sourcesContent":["import { defineComponent, ref, h, Fragment, useSlots, PropType, CSSProperties, reactive, watch } from 'vue';\nimport { CombineProps } from '../interface';\nimport * as PropTypes from '../PropTypes';\nimport { vuePropsMake } from '../PropTypes';\nimport * as SemiMarkdownComponents from './components';\nimport MarkdownRenderFoundation, {\n  type MarkdownRenderAdapter,\n  type MarkdownRenderBaseProps,\n  type MarkdownRenderBaseState,\n} from '@douyinfe/semi-foundation/markdownRender/foundation';\nimport \"@douyinfe/semi-foundation/markdownRender/markdownRender.scss\";\nimport cls from 'classnames';\nimport { cssClasses } from '@douyinfe/semi-foundation/markdownRender/constants';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport { omit } from 'lodash';\nexport type { MDXProps } from 'mdx/types';\nexport interface MarkdownRenderProps extends Omit<MarkdownRenderBaseProps, 'format'> {\n  style?: CSSProperties;\n  className?: string;\n  format?: string\n}\n\nexport interface MarkdownRenderState extends MarkdownRenderBaseState {}\nconst propTypes: CombineProps<MarkdownRenderProps> = {\n  className: PropTypes.string,\n  style: PropTypes.object,\n  format: {\n    type: PropTypes.node as PropType<MarkdownRenderProps['format']>,\n    required: false,\n  },\n  components: {\n    type: PropTypes.any as PropType<MarkdownRenderProps['components']>,\n    required: true,\n  },\n  raw: {\n    type: PropTypes.string as PropType<MarkdownRenderProps['raw']>,\n    required: true,\n  },\n  remarkPlugins: PropTypes.array,\n  rehypePlugins: PropTypes.array,\n};\nconst defaultProps = {\n  format: 'mdx',\n};\n\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst markdownRender = defineComponent({\n  props: { ...vuePropsType },\n  name: 'markdownRender',\n  setup(props, { attrs }) {\n    const slots = useSlots();\n    const state = reactive<MarkdownRenderState>({\n      MDXContentComponent: undefined,\n    });\n\n    const { adapter: adapterInject, setStateAsync } = useBaseComponent(props, state);\n\n    function jsx(type: any, props: any, key: any) {\n      const na = typeof type ===  'symbol'?Fragment:type\n      if (arguments.length > 2) {\n        props.key = key\n      }\n      return h(\n        na,\n        typeof na === 'string' || na === Fragment ? omit(props, 'children') : props,\n        typeof na === 'string' || na === Fragment ? props.children : () => props.children\n      );\n    }\n\n    function adapter_(): MarkdownRenderAdapter<MarkdownRenderProps, MarkdownRenderState> {\n      return {\n        ...adapterInject(),\n        getRuntime: () => ({\n          Fragment: Fragment,\n          jsx: jsx,\n          jsxs: jsx,\n        }),\n      };\n    }\n\n    const adapter = adapter_();\n    const foundation = new MarkdownRenderFoundation(adapter);\n    watch(\n      () => props.raw,\n      (value) => {\n        if (value) {\n          state.MDXContentComponent = foundation.evaluateSync(props.raw);\n        }\n      },\n      { immediate: true }\n    );\n\n    return () => {\n      const ComponentConstructor = state.MDXContentComponent;\n      return (\n        <div class={cls(cssClasses.PREFIX, props.className)} style={props.style} {...attrs}>\n          <ComponentConstructor\n            components={{ ...SemiMarkdownComponents, ...props.components } as any}\n          ></ComponentConstructor>\n        </div>\n      );\n    };\n  },\n});\n\nexport default markdownRender;\n"],"names":["propTypes","className","PropTypes","string","style","object","format","type","node","required","components","any","raw","remarkPlugins","array","rehypePlugins","defaultProps","vuePropsType","vuePropsMake","markdownRender","defineComponent","props","name","setup","attrs","useSlots","state","reactive","MDXContentComponent","undefined","adapter","adapterInject","setStateAsync","useBaseComponent","jsx","key","na","Fragment","arguments","length","h","omit","children","adapter_","getRuntime","jsxs","foundation","MarkdownRenderFoundation","watch","value","evaluateSync","immediate","ComponentConstructor","_createVNode","_mergeProps","cls","cssClasses","PREFIX","SemiMarkdownComponents"],"mappings":";;;;;;;;;;AAuBA,MAAMA,IAA+C;AAAA,EACnDC,WAAWC,EAAUC;AAAAA,EACrBC,OAAOF,EAAUG;AAAAA,EACjBC,QAAQ;AAAA,IACNC,MAAML,EAAUM;AAAAA,IAChBC,UAAU;AAAA,EACX;AAAA,EACDC,YAAY;AAAA,IACVH,MAAML,EAAUS;AAAAA,IAChBF,UAAU;AAAA,EACX;AAAA,EACDG,KAAK;AAAA,IACHL,MAAML,EAAUC;AAAAA,IAChBM,UAAU;AAAA,EACX;AAAA,EACDI,eAAeX,EAAUY;AAAAA,EACzBC,eAAeb,EAAUY;AAC3B,GACME,IAAe;AAAA,EACnBV,QAAQ;AACV,GAEaW,IAAeC,EAAalB,GAAWgB,CAAY,GAC1DG,IAAiBC,gBAAAA,EAAgB;AAAA,EACrCC,OAAO;AAAA,IAAE,GAAGJ;AAAAA,EAAc;AAAA,EAC1BK,MAAM;AAAA,EACNC,MAAMF,GAAO;AAAA,IAAEG,OAAAA;AAAAA,EAAM,GAAG;AACRC,IAAAA,EAAU;AACxB,UAAMC,IAAQC,EAA8B;AAAA,MAC1CC,qBAAqBC;AAAAA,IACvB,CAAC,GAEK;AAAA,MAAEC,SAASC;AAAAA,MAAeC,eAAAA;AAAAA,IAAc,IAAIC,EAAiBZ,GAAOK,CAAK;AAE/E,aAASQ,EAAI3B,GAAWc,GAAYc,GAAU;AAC5C,YAAMC,IAAK,OAAO7B,KAAU,WAAS8B,IAAS9B;AAC9C,aAAI+B,UAAUC,SAAS,MACrBlB,EAAMc,MAAMA,IAEPK,EACLJ,GACA,OAAOA,KAAO,YAAYA,MAAOC,IAAWI,EAAKpB,GAAO,UAAU,IAAIA,GACtE,OAAOe,KAAO,YAAYA,MAAOC,IAAWhB,EAAMqB,WAAW,MAAMrB,EAAMqB,QAC3E;AAAA,IACF;AAEA,aAASC,IAA4E;AACnF,aAAO;AAAA,QACL,GAAGZ,EAAe;AAAA,QAClBa,YAAYA,OAAO;AAAA,UACjBP,UAAUA;AAAAA,UACVH,KAAKA;AAAAA,UACLW,MAAMX;AAAAA;;IAGZ;AAEA,UAAMJ,IAAUa,KACVG,IAAa,IAAIC,EAAyBjB,CAAO;AACvDkB,WAAAA,EACE,MAAM3B,EAAMT,KACXqC,CAAAA,MAAU;AACT,MAAIA,MACFvB,EAAME,sBAAsBkB,EAAWI,aAAa7B,EAAMT,GAAG;AAAA,IAEjE,GACA;AAAA,MAAEuC,WAAW;AAAA,IAAK,CACpB,GAEO,MAAM;AACX,YAAMC,IAAuB1B,EAAME;AACnC,aAAAyB,SAAAC,EAAA;AAAA,QAAA,OACcC,EAAIC,EAAWC,QAAQpC,EAAMpB,SAAS;AAAA,QAAC,OAASoB,EAAMjB;AAAAA,MAAK,GAAMoB,CAAK,GAAA,CAAA6B,EAAAD,GAAA;AAAA,QAAA,YAElE;AAAA,UAAE,GAAGM;AAAAA,UAAwB,GAAGrC,EAAMX;AAAAA,QAAW;AAAA,MAAC,GAAA,IAAA,CAAA,CAAA;AAAA;EAKxE;AACF,CAAC;"}