{"version":3,"file":"intersectionObserver.js","sources":["../../src/components/overflowList/intersectionObserver.tsx"],"sourcesContent":["import * as PropTypes from '../PropTypes';\nimport { isEqual, isEmpty } from 'lodash';\nimport {\n  ComponentObjectPropsOptions,\n  defineComponent,\n  h,\n  onBeforeUnmount,\n  onMounted,\n  PropType,\n  useSlots, VNode,\n  watch,\n} from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { CombineProps, VueJsxNode } from '../interface';\nimport isElement from '@douyinfe/semi-foundation/utils/isElement';\n\nexport interface ReactIntersectionObserverProps {\n  onIntersect?: IntersectionObserverCallback;\n  option?: IntersectionObserverInit;\n  // children?: VueJsxNode;\n  root?: IntersectionObserverInit['root'];\n  threshold?: IntersectionObserverInit['threshold'];\n  rootMargin?: IntersectionObserverInit['rootMargin'];\n  items?: Record<string, Element>;\n  children?: ()=>(VNode[] | VNode)\n}\n\nconst propTypes: CombineProps<ReactIntersectionObserverProps> = {\n  onIntersect: PropTypes.func as PropType<ReactIntersectionObserverProps['onIntersect']>,\n  option: PropTypes.object,\n  root: PropTypes.any as PropType<ReactIntersectionObserverProps['root']>,\n  threshold: [PropTypes.number, PropTypes.array],\n  rootMargin: PropTypes.string,\n  items: PropTypes.object,\n  children: PropTypes.func as PropType<ReactIntersectionObserverProps['children']>,\n};\n\nconst defaultProps = {\n  onIntersect: (): void => undefined,\n  threshold: 0.75,\n  rootMargin: '0px',\n  option: {},\n  items: {},\n};\n\nexport const vuePropsType = vuePropsMake<ReactIntersectionObserverProps>(propTypes, defaultProps);\nconst ReactIntersectionObserver = defineComponent({\n  props: { ...vuePropsType },\n  name: 'ReactIntersectionObserver',\n  setup(props, {}) {\n    const slots = useSlots();\n    let observer: IntersectionObserver;\n    let cachedKeys: Array<string>;\n\n\n    watch(()=>props.root, (v)=>{\n      if(!observer && v){\n        const { items } = props;\n        cachedKeys = Object.keys(items);\n        const { root, threshold, rootMargin, option, onIntersect } = props;\n        observer = new IntersectionObserver(onIntersect, {\n          root,\n          threshold,\n          rootMargin,\n          ...option,\n        });\n        observeElement();\n      }\n    }, {immediate: true})\n\n\n\n\n    watch(\n      [\n        () => Object.keys(props.items),\n        () => props.children,\n        () => props.root,\n      ],\n      () => {\n        if(observer){\n          const { items } = props;\n          const itemKeys = Object.keys(items);\n          if (!isEqual(cachedKeys, itemKeys)) {\n            observeElement(true);\n            cachedKeys = itemKeys;\n          }\n        }\n      }\n    );\n\n    onBeforeUnmount(() => {\n      if (observer) {\n        observer.disconnect();\n        observer = null;\n      }\n    });\n\n    function observeElement(force = false): void {\n      const { items } = props;\n      if (isEmpty(items)) {\n        // stop everything if not defined\n        observer?.disconnect();\n        return;\n      }\n      if (force) {\n        observer?.disconnect();\n      }\n\n      // observer callback is invoked immediately when observing new elements\n      Object.keys(items).forEach((key) => {\n        const node = items[key];\n        if (!node) {\n          return;\n        }\n        //@ts-ignore\n        const node_ = isElement(node) ? node : node.$el;\n        observer?.observe(node_);\n      });\n    }\n\n    // 不能直接 return slots.default，会失去响应\n    return () => props.children?.();\n  },\n});\n\nexport default ReactIntersectionObserver;\n"],"names":["propTypes","onIntersect","PropTypes","func","option","object","root","any","threshold","number","array","rootMargin","string","items","children","defaultProps","vuePropsType","vuePropsMake","ReactIntersectionObserver","defineComponent","props","name","setup","useSlots","observer","cachedKeys","watch","v","Object","keys","IntersectionObserver","observeElement","immediate","itemKeys","isEqual","onBeforeUnmount","disconnect","force","isEmpty","forEach","key","node","node_","isElement","$el","observe"],"mappings":";;;;;AA2BA,MAAMA,IAA0D;AAAA,EAC9DC,aAAaC,EAAUC;AAAAA,EACvBC,QAAQF,EAAUG;AAAAA,EAClBC,MAAMJ,EAAUK;AAAAA,EAChBC,WAAW,CAACN,EAAUO,QAAQP,EAAUQ,KAAK;AAAA,EAC7CC,YAAYT,EAAUU;AAAAA,EACtBC,OAAOX,EAAUG;AAAAA,EACjBS,UAAUZ,EAAUC;AACtB,GAEMY,IAAe;AAAA,EACnBd,aAAaA,MAAAA;AAAAA;AAAAA,EACbO,WAAW;AAAA,EACXG,YAAY;AAAA,EACZP,QAAQ,CAAE;AAAA,EACVS,OAAO,CAAC;AACV,GAEaG,IAAeC,EAA6CjB,GAAWe,CAAY,GAC1FG,IAA4BC,gBAAAA,EAAgB;AAAA,EAChDC,OAAO;AAAA,IAAE,GAAGJ;AAAAA,EAAc;AAAA,EAC1BK,MAAM;AAAA,EACNC,MAAMF,GAAO,IAAI;AACDG,IAAAA,EAAU;AACxB,QAAIC,GACAC;AAGJC,IAAAA,EAAM,MAAIN,EAAMd,MAAOqB,CAAAA,MAAI;AACzB,UAAG,CAACH,KAAYG,GAAE;AAChB,cAAM;AAAA,UAAEd,OAAAA;AAAAA,QAAO,IAAGO;AAClBK,QAAAA,IAAaG,OAAOC,KAAKhB,CAAK;AAC9B,cAAM;AAAA,UAAEP,MAAAA;AAAAA,UAAME,WAAAA;AAAAA,UAAWG,YAAAA;AAAAA,UAAYP,QAAAA;AAAAA,UAAQH,aAAAA;AAAAA,QAAa,IAAGmB;AAC7DI,QAAAA,IAAW,IAAIM,qBAAqB7B,GAAa;AAAA,UAC/CK,MAAAA;AAAAA,UACAE,WAAAA;AAAAA,UACAG,YAAAA;AAAAA,UACA,GAAGP;AAAAA,QACL,CAAC,GACD2B;MACF;AAAA,IACF,GAAG;AAAA,MAACC,WAAW;AAAA,IAAI,CAAC,GAKpBN,EACE,CACE,MAAME,OAAOC,KAAKT,EAAMP,KAAK,GAC7B,MAAMO,EAAMN,UACZ,MAAMM,EAAMd,IAAI,GAElB,MAAM;AACJ,UAAGkB,GAAS;AACV,cAAM;AAAA,UAAEX,OAAAA;AAAAA,QAAO,IAAGO,GACZa,IAAWL,OAAOC,KAAKhB,CAAK;AAClC,QAAKqB,EAAQT,GAAYQ,CAAQ,MAC/BF,EAAe,EAAI,GACnBN,IAAaQ;AAAAA,MAEjB;AAAA,IACF,CACF,GAEAE,EAAgB,MAAM;AACpB,MAAIX,MACFA,EAASY,WAAU,GACnBZ,IAAW;AAAA,IAEf,CAAC;AAED,aAASO,EAAeM,IAAQ,IAAa;AAC3C,YAAM;AAAA,QAAExB,OAAAA;AAAAA,MAAO,IAAGO;AAClB,UAAIkB,EAAQzB,CAAK,GAAG;AAElBW,QAAAA,KAAAA,QAAAA,EAAUY;AACV;AAAA,MACF;AACA,MAAIC,MACFb,KAAAA,QAAAA,EAAUY,eAIZR,OAAOC,KAAKhB,CAAK,EAAE0B,QAASC,CAAAA,MAAQ;AAClC,cAAMC,IAAO5B,EAAM2B,CAAG;AACtB,YAAI,CAACC;AACH;AAGF,cAAMC,IAAQC,EAAUF,CAAI,IAAIA,IAAOA,EAAKG;AAC5CpB,QAAAA,KAAAA,QAAAA,EAAUqB,QAAQH;AAAAA,MACpB,CAAC;AAAA,IACH;AAGA,WAAO,MAAMtB;;AAAAA,cAAAA,IAAAA,EAAMN,aAANM,gBAAAA,EAAAA,KAAAA;AAAAA;AAAAA,EACf;AACF,CAAC;"}