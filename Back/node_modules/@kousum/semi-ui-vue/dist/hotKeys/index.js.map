{"version":3,"file":"index.js","sources":["../../src/components/hotKeys/index.tsx"],"sourcesContent":["import { CSSProperties, onMounted, onUnmounted, PropType, reactive, VNode } from 'vue';\nimport { defineComponent, ref, h, Fragment, useSlots } from 'vue';\nimport classNames from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport HotKeysFoudation, { HotKeysAdapter } from '@douyinfe/semi-foundation/hotKeys/foundation';\nimport { cssClasses, Keys } from '@douyinfe/semi-foundation/hotKeys/constants';\n\nimport { noop } from 'lodash';\nimport '@douyinfe/semi-foundation/hotKeys/hotKeys.scss';\nimport { CombineProps } from '../interface';\nimport { vuePropsMake } from '../PropTypes';\nimport { useBaseComponent } from '../_base/baseComponent';\nconst prefixCls = cssClasses.PREFIX;\n\nexport interface HotKeysProps {\n  preventDefault?: boolean;\n  hotKeys?: KeyboardEvent['key'][];\n  content?: string[];\n  onClick?: () => void;\n  onHotKey?: (e: KeyboardEvent) => void;\n  mergeMetaCtrl?: boolean;\n  render?: () => VNode | VNode[];\n  getListenerTarget?: () => HTMLElement;\n  className?: string;\n  style?: CSSProperties;\n}\n\nexport interface HotKeysState {}\n\nconst propTypes: CombineProps<HotKeysProps> = {\n  preventDefault: PropTypes.bool,\n  hotKeys: PropTypes.array,\n  content: PropTypes.array,\n  onClick: PropTypes.func as PropType<HotKeysProps['onClick']>,\n  onHotKey: PropTypes.func as PropType<HotKeysProps['onHotKey']>,\n  mergeMetaCtrl: PropTypes.bool,\n  render: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  getListenerTarget: PropTypes.func as PropType<HotKeysProps['getListenerTarget']>,\n  className: PropTypes.string,\n  style: PropTypes.object,\n};\n\nconst defaultProps: Partial<HotKeysProps> = {\n  preventDefault: false,\n  hotKeys: null,\n  content: null,\n  onClick: noop,\n  onHotKey: noop,\n  mergeMetaCtrl: false,\n  render: undefined,\n  getListenerTarget: () => document.body,\n  className: '',\n  style: null,\n};\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\n\nconst HotKeys = defineComponent({\n  props: { ...vuePropsType },\n  name: 'HotKeys',\n  setup(props, { attrs }) {\n    const slots = useSlots();\n\n    const state = reactive<HotKeysState>({});\n\n    onMounted(() => {\n      foundation.init();\n    });\n\n    onUnmounted(() => {\n      foundation.destroy();\n    });\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent(props, state);\n    function adapter_(): HotKeysAdapter<HotKeysProps, HotKeysState> {\n      return {\n        ...adapterInject(),\n        notifyHotKey: (e: KeyboardEvent) => {\n          props.onHotKey?.(e);\n        },\n        registerEvent: () => {\n          let target = props.getListenerTarget?.() ?? document.body;\n          target.addEventListener('keydown', foundation.handleKeyDown);\n        },\n        unregisterEvent: () => {\n          let target = props.getListenerTarget?.() ?? document.body;\n          target.removeEventListener('keydown', foundation.handleKeyDown);\n        }\n      };\n    }\n    const adapter = adapter_();\n\n    const foundation = new HotKeysFoudation(adapter);\n\n    return () => {\n      const { hotKeys, content, onClick, render, getListenerTarget, className, style, ...rest } = props;\n\n      if (typeof render !== 'undefined') {\n        if (render === null || (typeof render === 'function' && render() === null)) {\n          return null;\n        }\n        return (\n          <div onClick={onClick} class={classNames(prefixCls, className)} style={style} {...getDataAttr()}>\n            {typeof render === 'function' ? render() : render}\n          </div>\n        );\n      }\n      const renderContent = content ?? hotKeys;\n\n      return (\n        <div onClick={onClick} class={classNames(prefixCls, className)} style={style} {...getDataAttr()}>\n          {renderContent.map((key: KeyboardEvent['key'], index) => {\n            return index === 0 ? (\n              <span key={index}>\n                <span class={prefixCls + '-content'}>{key}</span>\n              </span>\n            ) : (\n              <span key={index}>\n                <span class={prefixCls + '-split'}>+</span>\n                <span class={prefixCls + '-content'}>{key}</span>\n              </span>\n            );\n          })}\n        </div>\n      );\n    };\n  },\n});\n\nexport type HotKeys = typeof HotKeys & {\n    Keys: typeof Keys\n}\nconst baseHotKeys = HotKeys as HotKeys\nbaseHotKeys.Keys = Keys\nexport default baseHotKeys;\n"],"names":["prefixCls","cssClasses","PREFIX","propTypes","preventDefault","PropTypes","bool","hotKeys","array","content","onClick","func","onHotKey","mergeMetaCtrl","render","oneOfType","node","getListenerTarget","className","string","style","object","defaultProps","noop","undefined","document","body","vuePropsType","vuePropsMake","HotKeys","defineComponent","props","name","setup","attrs","useSlots","state","reactive","onMounted","foundation","init","onUnmounted","destroy","adapter","adapterInject","getDataAttr","useBaseComponent","adapter_","notifyHotKey","e","registerEvent","target","addEventListener","handleKeyDown","unregisterEvent","removeEventListener","HotKeysFoudation","rest","_createVNode","_mergeProps","classNames","renderContent","map","key","index","_createTextVNode","baseHotKeys","Keys"],"mappings":"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"}