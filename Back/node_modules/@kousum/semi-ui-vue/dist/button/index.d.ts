import { ButtonProps as BaseButtonProps } from './Button';
import { IconButtonProps } from '../iconButton';
export interface ButtonProps extends IconButtonProps, BaseButtonProps {
}
declare const Button: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    id: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    block: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    circle: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    disabled: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    htmlType: import("vue").PropType<"button" | "reset" | "submit"> | {
        type: import("vue").PropType<"button" | "reset" | "submit">;
        default?: any;
        required?: false;
    };
    icon: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    iconPosition: import("vue").PropType<"left" | "right"> | {
        type: import("vue").PropType<"left" | "right">;
        default?: any;
        required?: false;
    };
    loading: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    size: import("vue").PropType<import("./Button").Size> | {
        type: import("vue").PropType<import("./Button").Size>;
        default?: any;
        required?: false;
    };
    style: import("vue").PropType<import("vue").StyleValue> | {
        type: import("vue").PropType<import("vue").StyleValue>;
        default?: any;
        required?: false;
    };
    theme: import("vue").PropType<import("./Button").Theme> | {
        type: import("vue").PropType<import("./Button").Theme>;
        default?: any;
        required?: false;
    };
    type: import("vue").PropType<import("./Button").Type> | {
        type: import("vue").PropType<import("./Button").Type>;
        default?: any;
        required?: false;
    };
    prefixCls: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    onClick: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    onMouseDown: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    onMouseEnter: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    onMouseLeave: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    autoFocus: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    role: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    'aria-label': import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    contentClassName: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "click"[], "click", import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    id: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    block: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    circle: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    disabled: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    htmlType: import("vue").PropType<"button" | "reset" | "submit"> | {
        type: import("vue").PropType<"button" | "reset" | "submit">;
        default?: any;
        required?: false;
    };
    icon: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    iconPosition: import("vue").PropType<"left" | "right"> | {
        type: import("vue").PropType<"left" | "right">;
        default?: any;
        required?: false;
    };
    loading: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    size: import("vue").PropType<import("./Button").Size> | {
        type: import("vue").PropType<import("./Button").Size>;
        default?: any;
        required?: false;
    };
    style: import("vue").PropType<import("vue").StyleValue> | {
        type: import("vue").PropType<import("vue").StyleValue>;
        default?: any;
        required?: false;
    };
    theme: import("vue").PropType<import("./Button").Theme> | {
        type: import("vue").PropType<import("./Button").Theme>;
        default?: any;
        required?: false;
    };
    type: import("vue").PropType<import("./Button").Type> | {
        type: import("vue").PropType<import("./Button").Type>;
        default?: any;
        required?: false;
    };
    prefixCls: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    onClick: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    onMouseDown: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    onMouseEnter: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    onMouseLeave: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    autoFocus: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    role: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    'aria-label': import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    contentClassName: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{
    onClick?: (...args: any[]) => any;
}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default Button;
