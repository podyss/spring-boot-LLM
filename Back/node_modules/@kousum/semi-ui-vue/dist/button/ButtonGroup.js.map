{"version":3,"file":"ButtonGroup.js","sources":["../../src/components/button/ButtonGroup.tsx"],"sourcesContent":["import { cloneVNode, CSSProperties, defineComponent, h, isVNode, PropType, VNode } from 'vue';\nimport { BaseProps } from '../_base/baseComponent';\nimport { get } from 'lodash';\nimport { cssClasses, strings } from '@douyinfe/semi-foundation/button/constants';\nimport { Size, Type } from './Button';\nimport { CombineProps } from '../interface';\nimport { ButtonProps } from './index';\nimport classNames from 'classnames';\n\nexport type Theme = 'solid' | 'borderless' | 'light' | 'outline'\n\nexport interface ButtonGroupProps extends BaseProps {\n  disabled?: boolean;\n  type?: Type;\n  size?: Size;\n  theme?: Theme;\n  'aria-label'?: string\n}\n\nconst prefixCls = cssClasses.PREFIX;\nconst btnSizes = strings.sizes;\n\nexport const vuePropsType: CombineProps<ButtonGroupProps> = {\n  disabled: Boolean,\n  size: {\n    type: String as PropType<ButtonGroupProps['size']>,\n    default: 'default',\n  },\n  type: {\n    type: String as PropType<ButtonGroupProps['type']>,\n    default: 'primary',\n  },\n  theme: {\n    type: String as PropType<ButtonGroupProps['theme']>,\n    default: 'light',\n  },\n  'aria-label': String,\n  style: Object as PropType<CSSProperties>,\n  className: String\n};\nconst ButtonGroup = defineComponent({\n  props: { ...vuePropsType },\n  name: 'ButtonGroup',\n  setup(props, { slots }) {\n\n    function getInnerWithLine(inner) {\n      const innerWithLine: VNode[] = [];\n      if (inner.length > 1) {\n        inner.slice(0, -1).forEach((item, index) => {\n          const isButtonType = get(item, 'type.elementType') === 'Button';\n          const buttonProps = get(item, 'props') as ButtonProps;\n          const { type, theme, disabled } = buttonProps ?? {};\n          if (isButtonType && theme !== 'outline') {\n            const lineCls = classNames(\n              `${prefixCls}-group-line`,\n              `${prefixCls}-group-line-${theme ?? 'light'}`,\n              `${prefixCls}-group-line-${type ?? 'primary'}`,\n              {\n                [`${prefixCls}-group-line-disabled`]: disabled,\n              }\n            );\n            innerWithLine.push(item, <span class={lineCls} key={`line-${index}`} />);\n          } else {\n            innerWithLine.push(item);\n          }\n        });\n        innerWithLine.push(inner.slice(-1));\n        return innerWithLine;\n      } else {\n        return inner;\n      }\n    }\n    return () => {\n      const children = slots.default?.()\n      const { disabled, size, type, className, style, 'aria-label': ariaLabel, ...rest } = props;\n      let inner: VNode[];\n      let innerWithLine: VNode[] = [];\n      const cls = classNames(`${prefixCls}-group`, className);\n\n      if (children) {\n        inner = ((Array.isArray(children) ? children : [children])).map((itm: VNode, index) => (\n          isVNode(itm)\n            ? cloneVNode(itm, { disabled, size, type, ...itm.props, ...rest, key: itm.key ?? index })\n            : itm\n        ));\n        innerWithLine = getInnerWithLine(inner);\n      }\n      return <div class={cls} style={style} role=\"group\" aria-label={ariaLabel}>{innerWithLine}</div>;\n    };\n  },\n});\n\nexport default ButtonGroup;\n"],"names":["prefixCls","cssClasses","PREFIX","strings","sizes","vuePropsType","disabled","Boolean","size","type","String","default","theme","style","Object","className","ButtonGroup","defineComponent","props","name","setup","slots","getInnerWithLine","inner","innerWithLine","length","slice","forEach","item","index","isButtonType","get","buttonProps","lineCls","classNames","push","_createVNode","children","ariaLabel","rest","cls","Array","isArray","map","itm","isVNode","cloneVNode","key"],"mappings":";;;;AAmBA,MAAMA,IAAYC,EAAWC;AACZC,EAAQC;AAElB,MAAMC,IAA+C;AAAA,EAC1DC,UAAUC;AAAAA,EACVC,MAAM;AAAA,IACJC,MAAMC;AAAAA,IACNC,SAAS;AAAA,EACV;AAAA,EACDF,MAAM;AAAA,IACJA,MAAMC;AAAAA,IACNC,SAAS;AAAA,EACV;AAAA,EACDC,OAAO;AAAA,IACLH,MAAMC;AAAAA,IACNC,SAAS;AAAA,EACV;AAAA,EACD,cAAcD;AAAAA,EACdG,OAAOC;AAAAA,EACPC,WAAWL;AACb,GACMM,IAAcC,gBAAAA,EAAgB;AAAA,EAClCC,OAAO;AAAA,IAAE,GAAGb;AAAAA,EAAc;AAAA,EAC1Bc,MAAM;AAAA,EACNC,MAAMF,GAAO;AAAA,IAAEG,OAAAA;AAAAA,EAAM,GAAG;AAEtB,aAASC,EAAiBC,GAAO;AAC/B,YAAMC,IAAyB,CAAA;AAC/B,aAAID,EAAME,SAAS,KACjBF,EAAMG,MAAM,GAAG,EAAE,EAAEC,QAAQ,CAACC,GAAMC,MAAU;AAC1C,cAAMC,IAAeC,EAAIH,GAAM,kBAAkB,MAAM,UACjDI,IAAcD,EAAIH,GAAM,OAAO,GAC/B;AAAA,UAAEnB,MAAAA;AAAAA,UAAMG,OAAAA;AAAAA,UAAON,UAAAA;AAAAA,QAAS,IAAI0B,KAAe,CAAA;AACjD,YAAIF,KAAgBlB,MAAU,WAAW;AACvC,gBAAMqB,IAAUC,EACd,GAAGlC,CAAS,eACZ,GAAGA,CAAS,eAAeY,KAAS,OAAO,IAC3C,GAAGZ,CAAS,eAAeS,KAAQ,SAAS,IAC5C;AAAA,YACE,CAAC,GAAGT,CAAS,sBAAsB,GAAGM;AAAAA,UACxC,CACF;AACAkB,UAAAA,EAAcW,KAAKP,GAAIQ,EAAA,QAAA;AAAA,YAAA,OAAeH;AAAAA,YAAO,KAAO,QAAQJ,CAAK;AAAA,UAAE,GAAA,IAAA,CAAI;AAAA,QACzE;AACEL,UAAAA,EAAcW,KAAKP,CAAI;AAAA,MAE3B,CAAC,GACDJ,EAAcW,KAAKZ,EAAMG,MAAM,EAAE,CAAC,GAC3BF,KAEAD;AAAAA,IAEX;AACA,WAAO,MAAM;;AACX,YAAMc,KAAWhB,IAAAA,EAAMV,YAANU,gBAAAA,EAAAA,KAAAA,IACX;AAAA,QAAEf,UAAAA;AAAAA,QAAUE,MAAAA;AAAAA,QAAMC,MAAAA;AAAAA,QAAMM,WAAAA;AAAAA,QAAWF,OAAAA;AAAAA,QAAO,cAAcyB;AAAAA,QAAW,GAAGC;AAAAA,MAAM,IAAGrB;AACrF,UAAIK,GACAC,IAAyB,CAAA;AAC7B,YAAMgB,IAAMN,EAAW,GAAGlC,CAAS,UAAUe,CAAS;AAEtD,aAAIsB,MACFd,KAAUkB,MAAMC,QAAQL,CAAQ,IAAIA,IAAW,CAACA,CAAQ,GAAIM,IAAI,CAACC,GAAYf,MAC3EgB,EAAQD,CAAG,IACPE,EAAWF,GAAK;AAAA,QAAEtC,UAAAA;AAAAA,QAAUE,MAAAA;AAAAA,QAAMC,MAAAA;AAAAA,QAAM,GAAGmC,EAAI1B;AAAAA,QAAO,GAAGqB;AAAAA,QAAMQ,KAAKH,EAAIG,OAAOlB;AAAAA,OAAO,IACtFe,CACL,GACDpB,IAAgBF,EAAiBC,CAAK,IAExCa,EAAA,OAAA;AAAA,QAAA,OAAmBI;AAAAA,QAAG,OAAS3B;AAAAA,QAAK,MAAA;AAAA,QAAA,cAA2ByB;AAAAA,MAAS,GAAA,CAAGd,CAAa,CAAA;AAAA;EAE5F;AACF,CAAC;"}