import { defineComponent as h, createVNode as c, mergeProps as u } from "vue";
import p from "classnames";
import { strings as C, cssClasses as P } from '@douyinfe/semi-foundation/lib/es/button/constants';
import '@douyinfe/semi-foundation/lib/es/button/button.css';
import { noop as n } from '@douyinfe/semi-foundation/lib/es/utils/function';
C.sizes;
const B = {
  id: String,
  circle: Boolean,
  className: String,
  icon: [Object, String, Function],
  iconPosition: String,
  loading: Boolean,
  block: {
    type: Boolean,
    default: !1
  },
  htmlType: {
    type: String,
    default: "button"
  },
  disabled: {
    type: Boolean,
    default: !1
  },
  size: {
    type: String,
    default: "default"
  },
  style: Object,
  type: {
    type: String,
    default: "primary"
  },
  theme: {
    type: String,
    default: "light"
  },
  onClick: {
    type: Function,
    default: n
  },
  onMouseDown: {
    type: Function,
    default: n
  },
  onMouseEnter: {
    type: Function,
    default: n
  },
  onMouseLeave: {
    type: Function,
    default: n
  },
  prefixCls: {
    type: String,
    default: P.PREFIX
  },
  autoFocus: {
    type: Boolean,
    default: void 0
  },
  role: String,
  "aria-label": String,
  contentClassName: String
}, j = /* @__PURE__ */ h({
  props: {
    ...B
  },
  name: "Button",
  setup(t, {
    slots: s
  }) {
    return () => {
      const {
        block: f,
        loading: F,
        circle: m,
        className: o,
        style: y,
        disabled: i,
        size: r,
        theme: a,
        type: l,
        prefixCls: e,
        iconPosition: x,
        htmlType: g,
        ...b
      } = t, S = {
        disabled: i,
        ...b,
        class: p(e, {
          [`${e}-${l}`]: !t.disabled && l,
          [`${e}-disabled`]: t.disabled,
          [`${e}-size-large`]: r === "large",
          [`${e}-size-small`]: r === "small",
          // [`${prefixCls}-loading`]: loading,
          [`${e}-light`]: a === "light",
          [`${e}-block`]: f,
          [`${e}-circle`]: m,
          [`${e}-borderless`]: a === "borderless",
          [`${e}-outline`]: a === "outline",
          [`${e}-${l}-disabled`]: i && l
        }, o),
        type: g,
        "aria-disabled": i
      }, d = {};
      return o && o.includes("-with-icon") || (d["x-semi-prop"] = t["x-semi-children-alias"] || "children"), c("button", u(S, {
        style: y
      }), [c("span", u({
        class: p(`${e}-content`, t.contentClassName),
        onClick: ($) => t.disabled && $.stopPropagation()
      }, d), [s.default ? s.default() : null])]);
    };
  }
});
export {
  j as default,
  B as vuePropsType
};
//# sourceMappingURL=Button.js.map
