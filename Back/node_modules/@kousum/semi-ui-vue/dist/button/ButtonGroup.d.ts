import { CSSProperties, PropType } from 'vue';
import { BaseProps } from '../_base/baseComponent';
import { Size, Type } from './Button';
import { CombineProps } from '../interface';
export type Theme = 'solid' | 'borderless' | 'light' | 'outline';
export interface ButtonGroupProps extends BaseProps {
    disabled?: boolean;
    type?: Type;
    size?: Size;
    theme?: Theme;
    'aria-label'?: string;
}
export declare const vuePropsType: CombineProps<ButtonGroupProps>;
declare const ButtonGroup: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    disabled: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    type: PropType<Type> | {
        type: PropType<Type>;
        default?: any;
        required?: false;
    };
    size: PropType<Size> | {
        type: PropType<Size>;
        default?: any;
        required?: false;
    };
    theme: PropType<Theme> | {
        type: PropType<Theme>;
        default?: any;
        required?: false;
    };
    'aria-label': PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    disabled: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    type: PropType<Type> | {
        type: PropType<Type>;
        default?: any;
        required?: false;
    };
    size: PropType<Size> | {
        type: PropType<Size>;
        default?: any;
        required?: false;
    };
    theme: PropType<Theme> | {
        type: PropType<Theme>;
        default?: any;
        required?: false;
    };
    'aria-label': PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default ButtonGroup;
