import { defineComponent as v, reactive as b, watch as h, ref as C, onUnmounted as I, createVNode as o, mergeProps as $ } from "vue";
import u from "classnames";
import { cssClasses as j } from '@douyinfe/semi-foundation/lib/es/spin/constants';
import w from '@douyinfe/semi-foundation/lib/es/spin/foundation';
import x from "./icon";
import '@douyinfe/semi-foundation/lib/es/spin/spin.css';
import { useHasInProps as P, useBaseComponent as N } from "../_base/baseComponent";
const n = j.PREFIX, O = {
  size: {
    type: String,
    default: "middle"
  },
  spinning: {
    type: Boolean,
    default: !0
  },
  indicator: Object,
  delay: {
    type: Number,
    default: 0
  },
  tip: [Object, String],
  wrapperClassName: String,
  style: Object,
  childStyle: Object
}, A = /* @__PURE__ */ v({
  props: O,
  name: "Spin",
  setup(a, {
    slots: d
  }) {
    const {
      getProps: s
    } = P(), i = b({
      delay: a.delay,
      loading: !0
    });
    function p(e) {
      return e.delay ? e.spinning === !1 ? {
        delay: 0,
        loading: !1
      } : {
        delay: e.delay
      } : {
        loading: e.spinning
      };
    }
    h(() => a, (e) => {
      const t = p({
        ...s(a)
      });
      t && Object.keys(t).forEach((r) => {
        i[r] = t[r];
      });
    }, {
      deep: !0,
      immediate: !0
    });
    const {
      adapter: m,
      getDataAttr: f
    } = N(a, i);
    function g() {
      return {
        ...m(),
        setLoading: (e) => {
          i.loading = e;
        }
      };
    }
    const c = C(new w(g()));
    I(() => {
      c.value.destroy();
    });
    function y() {
      const {
        indicator: e,
        tip: t
      } = a, {
        loading: r
      } = i, l = u({
        [`${n}-animate`]: r
      });
      return i.loading ? o("div", {
        class: `${n}-wrapper`
      }, [e ? o("div", {
        class: l,
        "x-semi-prop": "indicator"
      }, [e]) : o(x, null, null), t ? o("div", {
        "x-semi-prop": "tip"
      }, [t]) : null]) : null;
    }
    return () => {
      c.value.updateLoadingIfNeedDelay();
      const {
        style: e,
        wrapperClassName: t,
        childStyle: r,
        size: l,
        ...D
      } = s(a), {
        loading: S
      } = i;
      return o("div", $({
        class: u(n, t, {
          [`${n}-${l}`]: l,
          [`${n}-block`]: d.default,
          [`${n}-hidden`]: !S
        }),
        style: e
      }, f()), [y(), o("div", {
        class: `${n}-children`,
        style: r,
        "x-semi-prop": "children"
      }, [d.default ? d.default() : null])]);
    };
  }
});
export {
  O as VuePropsType,
  A as default
};
//# sourceMappingURL=index.js.map
