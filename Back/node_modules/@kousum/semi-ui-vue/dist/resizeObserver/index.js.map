{"version":3,"file":"index.js","sources":["../../src/components/resizeObserver/index.tsx"],"sourcesContent":["import * as PropTypes from '../PropTypes';\nimport { BaseProps } from '../_base/baseComponent';\nimport {\n  cloneVNode,\n  ComponentObjectPropsOptions,\n  defineComponent,\n  h,\n  onBeforeUnmount,\n  onMounted,\n  PropType,\n  useSlots,\n  watch,\n} from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { CombineProps } from '../interface';\n\n/** A parallel type to `ResizeObserverEntry` (from resize-observer-polyfill). */\nexport interface ResizeEntry {\n  contentRect: DOMRectReadOnly;\n  target: Element;\n}\n\nexport interface ReactResizeObserverProps extends BaseProps {\n  onResize?: (entries: ResizeEntry[]) => void;\n  observeParent?: boolean;\n  observerProperty?: ObserverProperty;\n  delayTick?: number;\n}\n\nexport enum ObserverProperty {\n  Width = 'width',\n  Height = 'height',\n  All = 'all',\n}\nconst propTypes: CombineProps<ReactResizeObserverProps> = {\n  onResize: PropTypes.func as PropType<ReactResizeObserverProps['onResize']>,\n  observeParent: PropTypes.bool,\n  observerProperty: PropTypes.string as PropType<ReactResizeObserverProps['observerProperty']>,\n  delayTick: PropTypes.number,\n  style: PropTypes.object,\n  className: PropTypes.string,\n};\n\nconst defaultProps = {\n  onResize: () => {}, // eslint-disable-line\n  observeParent: false,\n  observerProperty: 'all',\n  delayTick: 0,\n};\nexport const vuePropsType = vuePropsMake<ReactResizeObserverProps>(propTypes, defaultProps);\nconst ReactResizeObserver = defineComponent({\n  props: { ...vuePropsType },\n  name: 'ReactResizeObserver',\n  setup(props, {}) {\n    const slots = useSlots();\n    let observer: ResizeObserver;\n    if (globalThis['ResizeObserver']) {\n      observer = new ResizeObserver(handleResizeEventTriggered);\n    }\n    let childNode: any;\n    let element: Element;\n    let _parentNode: HTMLElement;\n\n    let formerPropertyValue: Map<Element, number> = new Map();\n\n    onMounted(() => {\n      if (globalThis['ResizeObserver']) {\n        observeElement();\n      }\n    });\n    watch(\n      () => props.observeParent,\n      (value, oldValue) => {\n        if (globalThis['ResizeObserver']) {\n          observeElement(value !== oldValue);\n        }\n      }\n    );\n\n    onBeforeUnmount(() => {\n      if (observer) {\n        observer.disconnect();\n        observer = null;\n        element = null;\n      }\n    });\n\n    const getElement = () => {\n      try {\n        // using findDOMNode for two reasons:\n        // 1. cloning to insert a ref is unwieldy and not performant.\n        // 2. ensure that we resolve to an actual DOM node (instead of any JSX ref instance).\n        // eslint-disable-next-line\n        return childNode;\n      } catch (error) {\n        // swallow error if findDOMNode is run on unmounted component.\n        return null;\n      }\n    };\n\n    function handleResizeEventTriggered(entries: ResizeEntry[]) {\n      if (props.observerProperty === ObserverProperty.All) {\n        props.onResize?.(entries);\n      } else {\n        const finalEntries: ResizeEntry[] = [];\n        for (const entry of entries) {\n          if (formerPropertyValue.has(entry.target)) {\n            if (entry.contentRect[props.observerProperty] !== formerPropertyValue.get(entry.target)) {\n              formerPropertyValue.set(entry.target, entry.contentRect[props.observerProperty]);\n              finalEntries.push(entry);\n            }\n          } else {\n            formerPropertyValue.set(entry.target, entry.contentRect[props.observerProperty]);\n            finalEntries.push(entry);\n          }\n        }\n        if (finalEntries.length > 0) {\n          props.onResize?.(finalEntries);\n        }\n      }\n    }\n\n    function observeElement(force = false) {\n      const element_ = getElement();\n      if (!observer) {\n        observer = new ResizeObserver(handleResizeEventTriggered);\n      }\n      if (!(element_ && element_ instanceof Element)) {\n        // stop everything if not defined\n        observer.disconnect();\n        return;\n      }\n\n      if (element_ === element && !force) {\n        // abort if given same element -- nothing to update (unless forced)\n        return;\n      } else {\n        // clear observer list if new element\n        observer.disconnect();\n        // remember element reference for next time\n        element = element_;\n      }\n\n      // observer callback is invoked immediately when observing new elements\n      observer.observe(element_);\n\n      if (\n        props.observeParent &&\n        element_.parentNode &&\n        element_.parentNode.ownerDocument &&\n        element_.parentNode.ownerDocument.defaultView &&\n        element_.parentNode instanceof element_.parentNode.ownerDocument.defaultView.HTMLElement\n      ) {\n        _parentNode = element_.parentNode;\n        observer.observe(_parentNode);\n      }\n    }\n\n    const mergeRef = (ref: any, node: HTMLDivElement) => {\n      childNode = node;\n      if (typeof ref === 'function') {\n        ref(node);\n      } else if (typeof ref === 'object' && ref && 'current' in ref) {\n        ref.current = node;\n      }\n    };\n\n    return () => {\n      const child = slots.default?.();\n      const { ref } = child?.[0] as any;\n      return cloneVNode(child[0], {\n        ref: (node: any) => mergeRef(ref?.r, node),\n      });\n    };\n  },\n});\n\nexport default ReactResizeObserver;\n"],"names":["ObserverProperty","propTypes","onResize","PropTypes","func","observeParent","bool","observerProperty","string","delayTick","number","style","object","className","defaultProps","vuePropsType","vuePropsMake","ReactResizeObserver","defineComponent","props","name","setup","slots","useSlots","observer","globalThis","ResizeObserver","handleResizeEventTriggered","childNode","element","_parentNode","formerPropertyValue","Map","onMounted","observeElement","watch","value","oldValue","onBeforeUnmount","disconnect","getElement","entries","All","finalEntries","entry","has","target","contentRect","get","set","push","length","force","element_","Element","observe","parentNode","ownerDocument","defaultView","HTMLElement","mergeRef","ref","node","current","child","default","cloneVNode","r"],"mappings":"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"}