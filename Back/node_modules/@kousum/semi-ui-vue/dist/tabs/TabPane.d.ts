import { CombineProps } from '../interface';
export declare const vuePropsType: CombineProps<{
    className?: string;
    style?: any;
    children?: any;
    disabled?: boolean;
    itemKey?: string;
    tab?: any;
    icon?: any;
    closable?: boolean;
    tabIndex?: number;
}>;
declare const TabPane: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    style: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    children: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    disabled: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    itemKey: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    tab: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    icon: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    closable: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    tabIndex: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    className: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    style: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    children: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    disabled: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    itemKey: import("vue").PropType<string> | {
        type: import("vue").PropType<string>;
        default?: any;
        required?: false;
    };
    tab: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    icon: import("vue").PropType<any> | {
        type: import("vue").PropType<any>;
        default?: any;
        required?: false;
    };
    closable: import("vue").PropType<boolean> | {
        type: import("vue").PropType<boolean>;
        default?: any;
        required?: false;
    };
    tabIndex: import("vue").PropType<number> | {
        type: import("vue").PropType<number>;
        default?: any;
        required?: false;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default TabPane;
