import { defineComponent as I, useSlots as C, computed as K, createVNode as s, mergeProps as S } from "vue";
import * as e from "../PropTypes";
import { vuePropsMake as _ } from "../PropTypes";
import $ from "classnames";
import { cssClasses as t } from '@douyinfe/semi-foundation/lib/es/tabs/constants';
import { IconClose as k } from "@kousum/semi-icons-vue";
const w = {
  tab: [Function, ...e.node],
  icon: e.node,
  size: e.string,
  type: e.string,
  tabPosition: e.string,
  selected: e.bool,
  closable: e.bool,
  disabled: e.bool,
  itemKey: e.string,
  handleKeyDown: e.func,
  deleteTabItem: e.func,
  onClick: e.func,
  forwardRef: [e.object, e.func]
}, P = _(w, {}), V = /* @__PURE__ */ I({
  props: {
    ...P
  },
  name: "Tabs.TabItem",
  setup(o, {
    attrs: D
  }) {
    C();
    const r = K(() => o.closable ? s(k, {
      "aria-label": "Close",
      role: "button",
      className: `${t.TABS_TAB}-icon-close`,
      onClick: (n) => o.deleteTabItem(o.itemKey, n)
    }, null) : null), d = (n) => s("span", null, [n]), b = (n) => {
      o.handleKeyDown && o.handleKeyDown(n, o.itemKey, o.closable);
    }, T = (n) => {
      !o.disabled && o.onClick && o.onClick(o.itemKey, n);
    };
    return () => {
      const {
        tab: n,
        size: i,
        type: u,
        icon: c,
        selected: l,
        closable: g,
        disabled: m,
        itemKey: a,
        deleteTabItem: h,
        tabPosition: f,
        handleKeyDown: v,
        onClick: p,
        ...A
      } = o, B = c ? d(c) : null, y = $(t.TABS_TAB, `${t.TABS_TAB}-${u}`, `${t.TABS_TAB}-${f}`, `${t.TABS_TAB}-single`, {
        [t.TABS_TAB_ACTIVE]: l,
        [t.TABS_TAB_DISABLED]: m,
        [`${t.TABS_TAB}-small`]: i === "small",
        [`${t.TABS_TAB}-medium`]: i === "medium"
      });
      return s("div", S({
        role: "tab",
        id: `semiTab${a}`,
        "data-tabkey": `semiTab${a}`,
        "aria-controls": `semiTabPanel${a}`,
        "aria-disabled": m ? "true" : "false",
        "aria-selected": l ? "true" : "false",
        tabindex: l ? 0 : -1,
        onKeydown: b,
        onClick: T,
        class: y
      }, A, {
        ref: o.forwardRef
      }), [B, typeof n == "function" ? n() : n, r.value]);
    };
  }
});
export {
  V as default,
  P as vuePropsType
};
//# sourceMappingURL=TabItem.js.map
