import { defineComponent as b, useSlots as B, createVNode as A, mergeProps as v } from "vue";
import * as n from "../PropTypes";
import { vuePropsMake as C } from "../PropTypes";
import f from "classnames";
import { cssClasses as s } from '@douyinfe/semi-foundation/lib/es/tabs/constants';
import M from '@douyinfe/semi-foundation/lib/es/utils/getDataAttr';
import K from "../_cssAnimation";
import { useTabsContext as g } from "./tabs-context/Consumer";
const R = {
  className: n.string,
  style: n.object,
  children: n.node,
  disabled: n.bool,
  itemKey: n.string,
  tab: [Function, ...n.node],
  icon: n.node,
  closable: n.bool,
  tabIndex: n.number
}, H = C(R, {}), j = /* @__PURE__ */ b({
  props: {
    ...H
  },
  name: "TabPane",
  isTabPane: !0,
  setup(_, {}) {
    const T = B(), {
      context: a
    } = g();
    let p;
    const P = (t, i, e, d) => {
      if (i !== null && t !== null && Array.isArray(e) && e.length) {
        const c = e.findIndex((r) => r.itemKey === t), o = e.findIndex((r) => r.itemKey === i), u = e.findIndex((r) => r.itemKey === d);
        return c === o ? u > c : o < c;
      }
      return !1;
    }, y = () => {
      const {
        itemKey: t
      } = _, {
        activeKey: i,
        lazyRender: e
      } = a.value;
      return p = p || i === t, e ? p : !0;
    }, N = /* @__PURE__ */ b(() => () => {
      var t;
      return (t = T.default) == null ? void 0 : t.call(T);
    });
    return () => {
      const {
        tabPaneMotion: t,
        tabPosition: i,
        prevActiveKey: e
      } = a.value, {
        className: d,
        style: c,
        itemKey: o,
        tabIndex: u,
        ...r
      } = _, m = a.value.activeKey === o, I = f(d, {
        [s.TABS_PANE_INACTIVE]: !m,
        [s.TABS_PANE_ACTIVE]: m,
        [s.TABS_PANE]: !0
      }), E = y(), S = (() => {
        const l = P(a.value.activeKey, o, a.value.panes, e);
        return i === "top" ? l ? s.TABS_PANE_ANIMATE_RIGHT_SHOW : s.TABS_PANE_ANIMATE_LEFT_SHOW : l ? s.TABS_PANE_ANIMATE_BOTTOM_SHOW : s.TABS_PANE_ANIMATE_TOP_SHOW;
      })(), x = !a.value.panes.find((l) => l.itemKey === e), h = t && m && !x && !a.value.forceDisableMotion;
      return A("div", v({
        role: "tabpanel",
        id: `semiTabPanel${o}`,
        key: `semiTabPanel${o}`,
        "aria-labelledby": `semiTab${o}`,
        class: I,
        style: c,
        "aria-hidden": m ? "false" : "true",
        tabindex: u || 0
      }, M(r), {
        "x-semi-prop": "children"
      }), [A(K, {
        motion: h,
        animationState: m ? "enter" : "leave",
        startClassName: S,
        children: ({
          animationClassName: l,
          animationEventsNeedBind: O
        }) => A("div", v({
          class: f(s.TABS_PANE_MOTION_OVERLAY, l),
          "x-semi-prop": "children"
        }, O), [E ? A(N, null, null) : null])
      }, null)]);
    };
  }
});
export {
  j as default,
  H as vuePropsType
};
//# sourceMappingURL=TabPane.js.map
