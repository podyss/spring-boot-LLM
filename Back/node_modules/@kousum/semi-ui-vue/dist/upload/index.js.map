{"version":3,"file":"index.js","sources":["../../src/components/upload/index.tsx"],"sourcesContent":["/* eslint-disable max-len */\nimport cls from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport { noop, pick } from 'lodash';\nimport UploadFoundation from '@douyinfe/semi-foundation/upload/foundation';\nimport { strings, cssClasses } from '@douyinfe/semi-foundation/upload/constants';\nimport FileCard, { FileCardProps, vuePropsType as vuePropsTypeFileCard } from './fileCard';\nimport { useBaseComponent, useHasInProps } from '../_base/baseComponent';\nimport LocaleConsumer from '../locale/localeConsumer';\nimport { IconUpload } from '@kousum/semi-icons-vue';\nimport type {\n  FileItem,\n  RenderFileItemProps,\n  UploadListType,\n  PromptPositionType,\n  BeforeUploadProps,\n  AfterUploadProps,\n  OnChangeProps,\n  customRequestArgs,\n  CustomError,\n} from './interface';\nimport { Locale } from '../locale/interface';\nimport '@douyinfe/semi-foundation/upload/upload.scss';\nimport {\n  VNode,\n  CSSProperties,\n  defineComponent,\n  useSlots,\n  h,\n  reactive,\n  ref,\n  watch,\n  onMounted,\n  Fragment,\n  nextTick,\n  ComponentObjectPropsOptions,\n  PropType,\n  onUnmounted,\n} from 'vue';\n\nimport type {\n  CustomFile,\n  UploadAdapter,\n  BeforeUploadObjectResult,\n  AfterUploadResult,\n  FileItemStatus,\n} from '@douyinfe/semi-foundation/upload/foundation';\nimport type { ValidateStatus } from '../_base/baseComponent';\nimport { vuePropsMake } from '../PropTypes';\nimport { styleNum } from '../_utils';\nimport { CombineProps } from '../interface';\n\nconst prefixCls = cssClasses.PREFIX;\n\nexport {\n  FileItem,\n  FileItemStatus,\n  RenderFileItemProps,\n  UploadListType,\n  PromptPositionType,\n  BeforeUploadProps,\n  AfterUploadProps,\n  OnChangeProps,\n  customRequestArgs,\n  CustomError,\n  BeforeUploadObjectResult,\n  AfterUploadResult,\n};\n\nexport interface UploadProps {\n  accept?: string;\n  action: string;\n  afterUpload?: (object: AfterUploadProps) => AfterUploadResult;\n  beforeUpload?: (object: BeforeUploadProps) => BeforeUploadObjectResult | Promise<BeforeUploadObjectResult> | boolean;\n  beforeClear?: (fileList: Array<FileItem>) => boolean | Promise<boolean>;\n  beforeRemove?: (file: FileItem, fileList: Array<FileItem>) => boolean | Promise<boolean>;\n  capture?: boolean | 'user' | 'environment' | undefined;\n  className?: string;\n  customRequest?: (object: customRequestArgs) => void;\n  data?: Record<string, any> | ((file: File) => Record<string, unknown>);\n  defaultFileList?: Array<FileItem>;\n  directory?: boolean;\n  disabled?: boolean;\n  dragIcon?: VNode | string;\n  dragMainText?: VNode | string;\n  dragSubText?: VNode | string;\n  draggable?: boolean;\n  addOnPasting?: boolean;\n  fileList?: Array<FileItem>;\n  fileName?: string;\n  headers?: Record<string, any> | ((file: File) => Record<string, string>);\n  hotSpotLocation?: 'start' | 'end';\n  itemStyle?: CSSProperties;\n  limit?: number;\n  listType?: UploadListType;\n  maxSize?: number;\n  minSize?: number;\n  multiple?: boolean;\n  name?: string;\n  onAcceptInvalid?: (files: File[]) => void;\n  onChange?: (object: OnChangeProps) => void;\n  onClear?: () => void;\n  onDrop?: (e: Event, files: Array<File>, fileList: Array<FileItem>) => void;\n  onError?: (e: CustomError, file: File, fileList: Array<FileItem>, xhr: XMLHttpRequest) => void;\n  onPastingError?: (error: Error | PermissionStatus) => void;\n  onExceed?: (fileList: Array<File>) => void;\n  onFileChange?: (files: Array<File>) => void;\n  onOpenFileDialog?: () => void;\n  onPreviewClick?: (fileItem: FileItem) => void;\n  onProgress?: (percent: number, file: File, fileList: Array<FileItem>) => void;\n  onRemove?: (currentFile: File, fileList: Array<FileItem>, currentFileItem: FileItem) => void;\n  onRetry?: (fileItem: FileItem) => void;\n  onSizeError?: (file: File, fileList: Array<FileItem>) => void;\n  onSuccess?: (responseBody: any, file: File, fileList: Array<FileItem>) => void;\n  previewFile?: (renderFileItemProps: RenderFileItemProps) => VNode | string;\n  prompt?: VNode | string;\n  promptPosition?: PromptPositionType;\n  picHeight?: string | number;\n  picWidth?: string | number;\n  renderFileItem?: (renderFileItemProps: RenderFileItemProps) => VNode | string;\n  renderPicInfo?: (renderFileItemProps: RenderFileItemProps) => VNode | string;\n  renderThumbnail?: (renderFileItemProps: RenderFileItemProps) => VNode | string;\n  renderPicPreviewIcon?: (renderFileItemProps: RenderFileItemProps) => VNode | string;\n  renderFileOperation?: (fileItem: RenderFileItemProps) => VNode | string;\n  showClear?: boolean;\n  showPicInfo?: boolean; // Show pic info in picture wall\n  showReplace?: boolean; // Display replacement function\n  showRetry?: boolean;\n  showUploadList?: boolean;\n  style?: CSSProperties;\n  timeout?: number;\n  transformFile?: (file: File) => FileItem;\n  uploadTrigger?: 'auto' | 'custom';\n  validateMessage?: VNode | string;\n  validateStatus?: ValidateStatus;\n  withCredentials?: boolean;\n}\n\nexport interface UploadState {\n  dragAreaStatus: 'default' | 'legal' | 'illegal'; // Status of the drag zone\n  fileList: Array<FileItem>;\n  inputKey: number;\n  localUrls: Array<string>;\n  replaceIdx: number;\n  replaceInputKey: number;\n}\n\nconst propTypes: CombineProps<UploadProps> = {\n  accept: PropTypes.string, // Limit allowed file types\n  action: {\n    type: String,\n    required: true,\n  },\n  addOnPasting: PropTypes.bool,\n  afterUpload: PropTypes.func as PropType<UploadProps['afterUpload']>,\n  beforeClear: PropTypes.func as PropType<UploadProps['beforeClear']>,\n  beforeRemove: PropTypes.func as PropType<UploadProps['beforeRemove']>,\n  beforeUpload: PropTypes.func as PropType<UploadProps['beforeUpload']>,\n  // children: PropTypes.node as PropType<any>,\n  className: PropTypes.string,\n  customRequest: PropTypes.func as PropType<UploadProps['customRequest']>,\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]), // Extra parameters attached when uploading\n  defaultFileList: PropTypes.array,\n  directory: PropTypes.bool, // Support folder upload\n  disabled: PropTypes.bool,\n  dragIcon: PropTypes.node as PropType<UploadProps['dragIcon']>,\n  dragMainText: PropTypes.node as PropType<UploadProps['dragMainText']>,\n  dragSubText: PropTypes.node as PropType<UploadProps['dragMainText']>,\n  draggable: PropTypes.bool,\n  fileList: PropTypes.array, // files had been uploaded\n  fileName: PropTypes.string, // same as name, to avoid props conflict in Form.Upload\n  headers: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  hotSpotLocation: String as PropType<UploadProps['hotSpotLocation']>,\n  itemStyle: PropTypes.object,\n  limit: PropTypes.number, // 最大允许上传文件个数\n  listType: String as PropType<UploadProps['listType']>,\n  maxSize: PropTypes.number, // 文件大小限制，单位kb\n  minSize: PropTypes.number, // 文件大小限制，单位kb\n  multiple: PropTypes.bool,\n  name: PropTypes.string, // file name\n  onAcceptInvalid: PropTypes.func as PropType<UploadProps['onAcceptInvalid']>,\n  onChange: PropTypes.func as PropType<UploadProps['onChange']>,\n  onClear: PropTypes.func as PropType<UploadProps['onClear']>,\n  onDrop: PropTypes.func as PropType<UploadProps['onDrop']>,\n  onError: PropTypes.func as PropType<UploadProps['onError']>,\n  onExceed: PropTypes.func as PropType<UploadProps['onExceed']>,\n  onFileChange: PropTypes.func as PropType<UploadProps['onFileChange']>,\n  onOpenFileDialog: PropTypes.func as PropType<UploadProps['onOpenFileDialog']>,\n  onPreviewClick: PropTypes.func as PropType<UploadProps['onPreviewClick']>,\n  onProgress: PropTypes.func as PropType<UploadProps['onProgress']>,\n  onRemove: PropTypes.func as PropType<UploadProps['onRemove']>,\n  onRetry: PropTypes.func as PropType<UploadProps['onRetry']>,\n  onSizeError: PropTypes.func as PropType<UploadProps['onSizeError']>,\n  onSuccess: PropTypes.func as PropType<UploadProps['onSuccess']>,\n  onPastingError: PropTypes.func as PropType<UploadProps['onPastingError']>,\n  previewFile: PropTypes.func as PropType<UploadProps['previewFile']>,\n  prompt: PropTypes.node as PropType<UploadProps['prompt']>,\n  promptPosition: String as PropType<UploadProps['promptPosition']>,\n  picWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  picHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  renderFileItem: PropTypes.func as PropType<UploadProps['renderFileItem']>,\n  renderPicPreviewIcon: PropTypes.func as PropType<UploadProps['renderPicPreviewIcon']>,\n  renderFileOperation: PropTypes.func as PropType<UploadProps['renderFileOperation']>,\n  renderPicInfo: PropTypes.func as PropType<UploadProps['renderPicInfo']>,\n  renderThumbnail: PropTypes.func as PropType<UploadProps['renderThumbnail']>,\n  showClear: PropTypes.bool,\n  showPicInfo: PropTypes.bool,\n  showReplace: PropTypes.bool,\n  showRetry: PropTypes.bool,\n  showUploadList: PropTypes.bool, // whether to show fileList\n  style: PropTypes.object,\n  timeout: PropTypes.number,\n  transformFile: PropTypes.func as PropType<UploadProps['transformFile']>,\n  uploadTrigger: String as PropType<UploadProps['uploadTrigger']>, // auto、custom\n  validateMessage: PropTypes.node as PropType<UploadProps['validateMessage']>,\n  validateStatus: String as PropType<UploadProps['validateStatus']>,\n  withCredentials: PropTypes.bool,\n  capture: [PropTypes.bool, PropTypes.string] as PropType<UploadProps['capture']>,\n};\nconst defaultProps: Partial<UploadProps> = {\n  defaultFileList: [],\n  disabled: false,\n  listType: 'list' as const,\n  hotSpotLocation: 'end',\n  multiple: false,\n  onAcceptInvalid: noop,\n  onChange: noop,\n  beforeRemove: () => true,\n  beforeClear: () => true,\n  onClear: noop,\n  onDrop: noop,\n  onError: noop,\n  onExceed: noop,\n  onFileChange: noop,\n  onOpenFileDialog: noop,\n  onProgress: noop,\n  onRemove: noop,\n  onRetry: noop,\n  onSizeError: noop,\n  onSuccess: noop,\n  onPastingError: noop,\n  promptPosition: 'right' as const,\n  showClear: true,\n  showPicInfo: false,\n  showReplace: false,\n  showRetry: true,\n  showUploadList: true,\n  uploadTrigger: 'auto' as const,\n  withCredentials: false,\n};\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\nconst Upload = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Upload',\n  setup(props, { expose }) {\n    const slots = useSlots();\n    const {getProps} = useHasInProps()\n\n    const state = reactive<UploadState>({\n      fileList: props.defaultFileList || [],\n      replaceIdx: -1,\n      inputKey: Math.random(),\n      replaceInputKey: Math.random(),\n      // Status of the drag zone\n      dragAreaStatus: 'default',\n      localUrls: [],\n    });\n    const inputRef = ref();\n    const replaceInputRef = ref();\n    let pastingCb: null | ((params: any) => void);\n\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent<UploadProps>(props, state);\n    function adapter_(): UploadAdapter<UploadProps, UploadState> {\n      return {\n        ...adapterInject<UploadProps, UploadState>(),\n        notifyFileSelect: (files): void => props.onFileChange(files),\n        notifyError: (error, fileInstance, fileList, xhr): void => props.onError(error, fileInstance, fileList, xhr),\n        notifySuccess: (responseBody, file, fileList): void => props.onSuccess(responseBody, file, fileList),\n        notifyProgress: (percent, file, fileList): void => props.onProgress(percent, file, fileList),\n        notifyRemove: (file, fileList, fileItem): void => props.onRemove(file, fileList, fileItem),\n        notifySizeError: (file, fileList): void => props.onSizeError(file, fileList),\n        notifyExceed: (fileList): void => props.onExceed(fileList),\n        updateFileList: (fileList, cb): void => {\n          if (typeof cb === 'function') {\n            state.fileList = fileList;\n            nextTick(() => {\n              cb?.();\n            });\n          } else {\n            state.fileList = fileList;\n          }\n        },\n        notifyBeforeUpload: ({\n          file,\n          fileList,\n        }): boolean | BeforeUploadObjectResult | Promise<BeforeUploadObjectResult> =>\n          props.beforeUpload({ file, fileList }),\n        notifyAfterUpload: ({ response, file, fileList }): AfterUploadResult =>\n          props.afterUpload({ response, file, fileList }),\n        resetInput: (): void => {\n          state.inputKey = Math.random();\n        },\n        resetReplaceInput: (): void => {\n          state.replaceInputKey = Math.random();\n        },\n        isMac: (): boolean => {\n          return navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n        },\n        registerPastingHandler: (cb?: (e: KeyboardEvent) => void): void => {\n          document.body.addEventListener('keydown', cb);\n          pastingCb = cb;\n        },\n        unRegisterPastingHandler: (): void => {\n          if (pastingCb) {\n            document.body.removeEventListener('keydown', pastingCb);\n          }\n        },\n        notifyPastingError: (error): void => props.onPastingError(error),\n        updateDragAreaStatus: (dragAreaStatus: string): void => (state.dragAreaStatus = dragAreaStatus as any),\n        notifyChange: ({ currentFile, fileList }): void => props.onChange({ currentFile, fileList }),\n        updateLocalUrls: (urls): void => {\n          state.localUrls = urls;\n        },\n        notifyClear: (): void => props.onClear(),\n        notifyPreviewClick: (file): void => props.onPreviewClick(file),\n        notifyDrop: (e, files, fileList): void => props.onDrop(e, files, fileList),\n        notifyAcceptInvalid: (invalidFiles): void => props.onAcceptInvalid(invalidFiles),\n        notifyBeforeRemove: (file, fileList): boolean | Promise<boolean> => props.beforeRemove(file, fileList),\n        notifyBeforeClear: (fileList): boolean | Promise<boolean> => props.beforeClear(fileList),\n      };\n    }\n    const adapter = adapter_();\n    const foundation = new UploadFoundation(adapter);\n\n    /**\n   * Notes:\n   *   The input parameter and return value here do not declare the type, otherwise tsc may report an error in form/fields.tsx when wrap after withField\n   *   `The types of the parameters \"props\" and \"nextProps\" are incompatible.\n   The attribute \"action\" is missing in the type \"Readonly<any>\", but it is required in the type \"UploadProps\".`\n   *   which seems to be a bug, remove props type declare here\n   */\n    function getDerivedStateFromProps(props) {\n      const { fileList } = getProps(props);\n      if ('fileList' in getProps(props)) {\n        return {\n          fileList: fileList || [],\n        };\n      }\n      return null;\n    }\n    watch(\n      () => props.fileList,\n      (val) => {\n        if ('fileList' in getProps(props)) {\n          state.fileList = val || [];\n        }\n      },\n      { immediate: true }\n    );\n\n    onMounted(() => {\n      foundation.init();\n    });\n    onUnmounted(() => {\n      foundation.destroy();\n    });\n\n    const onClick = (): void => {\n      const { onOpenFileDialog } = props;\n      const isDisabled = Boolean(props.disabled);\n      if (isDisabled || !inputRef || !inputRef.value) {\n        return;\n      }\n      inputRef.value.click();\n      if (onOpenFileDialog && typeof onOpenFileDialog) {\n        onOpenFileDialog();\n      }\n    };\n\n    const onChange = (e: any): void => {\n      const { files } = e.target;\n      foundation.handleChange(files);\n    };\n\n    const replace = (index: number): void => {\n      state.replaceIdx = index;\n      nextTick(() => {\n        replaceInputRef.value.click();\n      });\n    };\n\n    const onReplaceChange = (e: any): void => {\n      const { files } = e.target;\n      foundation.handleReplaceChange(files);\n    };\n\n    const clear = (): void => {\n      foundation.handleClear();\n    };\n\n    const remove = (fileItem: FileItem): void => {\n      foundation.handleRemove(fileItem);\n    };\n\n    /**\n     * ref method\n     * insert files at index\n     * @param files Array<CustomFile>\n     * @param index number\n     * @returns\n     */\n    const insert = (files: Array<CustomFile>, index?: number): void => {\n      return foundation.insertFileToList(files, index);\n    };\n\n    /**\n     * ref method\n     * manual upload by user\n     */\n    const upload = (): void => {\n      foundation.manualUpload();\n    };\n\n    expose({\n      insert,\n      upload,\n    });\n\n    const renderFile = (file: FileItem, index: number, locale: Locale['Upload']): VNode | string => {\n      const { name, status, validateMessage, _sizeInvalid, uid } = file;\n      const {\n        previewFile,\n        listType,\n        itemStyle,\n        showPicInfo,\n        renderPicInfo,\n        renderPicPreviewIcon,\n        renderFileOperation,\n        renderFileItem,\n        renderThumbnail,\n        disabled,\n        onPreviewClick,\n        picWidth,\n        picHeight,\n      } = props;\n      const onRemove = (): void => remove(file);\n      const onRetry = (): void => {\n        foundation.retry(file);\n      };\n      const onReplace = (): void => {\n        replace(index);\n      };\n      const fileCardProps: FileCardProps = {\n        ...pick(props, ['showRetry', 'showReplace', '']),\n        ...(pick(file, [...Object.keys(vuePropsTypeFileCard)]) as FileItem),\n        previewFile,\n        listType,\n        onRemove,\n        onRetry,\n        index,\n        //@ts-ignore\n        key: uid || `${name}${index}`,\n        style: itemStyle,\n        disabled,\n        showPicInfo,\n        renderPicInfo,\n        renderPicPreviewIcon,\n        renderFileOperation,\n        renderThumbnail,\n        onReplace,\n        onPreviewClick:\n          typeof onPreviewClick !== 'undefined' ? (): void => foundation.handlePreviewClick(file) : undefined,\n        picWidth,\n        picHeight,\n      };\n\n      if (status === strings.FILE_STATUS_UPLOAD_FAIL && !validateMessage) {\n        fileCardProps.validateMessage = locale.fail;\n      }\n\n      if (_sizeInvalid && !validateMessage) {\n        fileCardProps.validateMessage = locale.illegalSize;\n      }\n\n      if (typeof renderFileItem === 'undefined') {\n        return <FileCard {...fileCardProps} />;\n      } else {\n        return renderFileItem(fileCardProps);\n      }\n    };\n\n    const renderFileList = (): VNode | string => {\n      const { listType } = props;\n      if (listType === strings.FILE_LIST_PIC) {\n        return renderFileListPic();\n      }\n\n      if (listType === strings.FILE_LIST_DEFAULT) {\n        return renderFileListDefault();\n      }\n\n      return null;\n    };\n\n    const renderFileListPic = () => {\n      const children = slots.default?.();\n      const { showUploadList, limit, disabled, draggable, hotSpotLocation, picHeight, picWidth } = props;\n      const { fileList: stateFileList, dragAreaStatus } = state;\n      const fileList = props.fileList || stateFileList;\n      const showAddTriggerInList = limit ? limit > fileList.length : true;\n      const dragAreaBaseCls = `${prefixCls}-drag-area`;\n      const uploadAddCls = cls(`${prefixCls}-add`, {\n        [`${prefixCls}-picture-add`]: true,\n        [`${prefixCls}-picture-add-disabled`]: disabled,\n      });\n      const fileListCls = cls(`${prefixCls}-file-list`, {\n        [`${prefixCls}-picture-file-list`]: true,\n      });\n      const dragAreaCls = cls({\n        [`${dragAreaBaseCls}-legal`]: dragAreaStatus === strings.DRAG_AREA_LEGAL,\n        [`${dragAreaBaseCls}-illegal`]: dragAreaStatus === strings.DRAG_AREA_ILLEGAL,\n      });\n      const mainCls = `${prefixCls}-file-list-main`;\n      const addContentProps = {\n        role: 'button',\n        className: uploadAddCls,\n        onClick: onClick,\n        style: {\n          height: styleNum(picHeight),\n          width: styleNum(picWidth),\n        },\n      };\n      const containerProps = {\n        class: fileListCls,\n      };\n      const draggableProps = {\n        onDrop: onDrop,\n        onDragover: onDragover,\n        onDragleave: onDragleave,\n        onDragenter: onDragenter,\n      };\n      if (draggable) {\n        Object.assign(addContentProps, draggableProps, { className: cls(uploadAddCls, dragAreaCls) });\n      }\n      const addContent = (\n        <div {...addContentProps} x-semi-prop=\"children\">\n          {children}\n        </div>\n      );\n\n      if (!showUploadList || !fileList.length) {\n        if (showAddTriggerInList) {\n          return addContent;\n        }\n        return null;\n      }\n\n      return (\n        <LocaleConsumer componentName=\"Upload\">\n          {(locale: Locale['Upload']) => (\n            <div {...containerProps}>\n              <div class={mainCls} role=\"list\" aria-label=\"picture list\">\n                {showAddTriggerInList && hotSpotLocation === 'start' ? addContent : null}\n                {fileList.map((file, index) => renderFile(file, index, locale))}\n                {showAddTriggerInList && hotSpotLocation === 'end' ? addContent : null}\n              </div>\n            </div>\n          )}\n        </LocaleConsumer>\n      );\n    };\n\n    const renderFileListDefault = () => {\n      const { showUploadList, limit, disabled } = props;\n      const { fileList: stateFileList } = state;\n      const fileList = props.fileList || stateFileList;\n      const fileListCls = cls(`${prefixCls}-file-list`);\n      const titleCls = `${prefixCls}-file-list-title`;\n      const mainCls = `${prefixCls}-file-list-main`;\n      const showTitle = limit !== 1 && fileList.length;\n      const showClear = props.showClear && !disabled;\n      const containerProps = {\n        class: fileListCls,\n      };\n\n      if (!showUploadList || !fileList.length) {\n        return null;\n      }\n\n      return (\n        <LocaleConsumer componentName=\"Upload\">\n          {(locale: Locale['Upload']) => (\n            <div {...containerProps}>\n              {showTitle ? (\n                <div class={titleCls}>\n                  <span class={`${titleCls}-choosen`}>{locale.selectedFiles}</span>\n                  {showClear ? (\n                    <span role=\"button\" tabindex={0} onClick={clear} class={`${titleCls}-clear`}>\n                      {locale.clear}\n                    </span>\n                  ) : null}\n                </div>\n              ) : null}\n\n              <div class={mainCls} role=\"list\" aria-label=\"file list\">\n                {fileList.map((file, index) => renderFile(file, index, locale))}\n              </div>\n            </div>\n          )}\n        </LocaleConsumer>\n      );\n    };\n\n    const onDrop = (e: DragEvent): void => {\n      foundation.handleDrop(e);\n    };\n\n    const onDragover = (e: DragEvent): void => {\n      // When a drag element moves within the target element\n      foundation.handleDragOver(e);\n    };\n\n    const onDragleave = (e: DragEvent): void => {\n      foundation.handleDragLeave(e);\n    };\n\n    const onDragenter = (e: DragEvent): void => {\n      foundation.handleDragEnter(e);\n    };\n\n    const renderAddContent = () => {\n      const children = slots.default?.();\n      const { draggable, listType, disabled } = props;\n      const uploadAddCls = cls(`${prefixCls}-add`);\n      if (listType === strings.FILE_LIST_PIC) {\n        return null;\n      }\n      if (draggable) {\n        return renderDragArea();\n      }\n      return (\n        <div role=\"button\" tabindex={0} aria-disabled={disabled} class={uploadAddCls} onClick={onClick}>\n          {children}\n        </div>\n      );\n    };\n\n    const renderDragArea = (): VNode | string => {\n      const { dragAreaStatus } = state;\n      const children = slots.default?.();\n      const { dragIcon, dragMainText, dragSubText, disabled } = props;\n      const dragAreaBaseCls = `${prefixCls}-drag-area`;\n      const dragAreaCls = cls(dragAreaBaseCls, {\n        [`${dragAreaBaseCls}-legal`]: dragAreaStatus === strings.DRAG_AREA_LEGAL,\n        [`${dragAreaBaseCls}-illegal`]: dragAreaStatus === strings.DRAG_AREA_ILLEGAL,\n        [`${dragAreaBaseCls}-custom`]: children,\n      });\n\n      return (\n        <LocaleConsumer componentName=\"Upload\">\n          {(locale: Locale['Upload']): VNode | string => (\n            <div\n              role=\"button\"\n              tabindex={0}\n              aria-disabled={disabled}\n              class={dragAreaCls}\n              onDrop={onDrop}\n              onDragover={onDragover}\n              onDragleave={onDragleave}\n              onDragenter={onDragenter}\n              onClick={onClick}\n            >\n              {children ? (\n                children\n              ) : (\n                <>\n                  <div class={`${dragAreaBaseCls}-icon`} x-semi-prop=\"dragIcon\">\n                    {dragIcon || <IconUpload size=\"extra-large\" />}\n                  </div>\n                  <div class={`${dragAreaBaseCls}-text`}>\n                    <div class={`${dragAreaBaseCls}-main-text`} x-semi-prop=\"dragMainText\">\n                      {dragMainText || locale.mainText}\n                    </div>\n                    <div class={`${dragAreaBaseCls}-sub-text`} x-semi-prop=\"dragSubText\">\n                      {dragSubText}\n                    </div>\n                    <div class={`${dragAreaBaseCls}-tips`}>\n                      {dragAreaStatus === strings.DRAG_AREA_LEGAL && (\n                        <span class={`${dragAreaBaseCls}-tips-legal`}>{locale.legalTips}</span>\n                      )}\n                      {dragAreaStatus === strings.DRAG_AREA_ILLEGAL && (\n                        <span class={`${dragAreaBaseCls}-tips-illegal`}>{locale.illegalTips}</span>\n                      )}\n                    </div>\n                  </div>\n                </>\n              )}\n            </div>\n          )}\n        </LocaleConsumer>\n      );\n    };\n\n    return () => {\n      const {\n        style,\n        className,\n        multiple,\n        accept,\n        disabled,\n        capture,\n        listType,\n        prompt,\n        promptPosition,\n        draggable,\n        validateMessage,\n        validateStatus,\n        directory,\n      } = props;\n      const uploadCls = cls(\n        prefixCls,\n        {\n          [`${prefixCls}-picture`]: listType === strings.FILE_LIST_PIC,\n          [`${prefixCls}-disabled`]: disabled,\n          [`${prefixCls}-default`]: validateStatus === 'default',\n          [`${prefixCls}-error`]: validateStatus === 'error',\n          [`${prefixCls}-warning`]: validateStatus === 'warning',\n          [`${prefixCls}-success`]: validateStatus === 'success',\n        },\n        className\n      );\n      const inputCls = cls(`${prefixCls}-hidden-input`);\n      const inputReplaceCls = cls(`${prefixCls}-hidden-input-replace`);\n      const promptCls = cls(`${prefixCls}-prompt`);\n      const validateMsgCls = cls(`${prefixCls}-validate-message`);\n\n      const dirProps = directory ? { directory: 'directory', webkitdirectory: 'webkitdirectory' } : {};\n\n      return (\n        <div class={uploadCls} style={style} x-prompt-pos={promptPosition} {...getDataAttr()}>\n          <input\n            key={state.inputKey}\n            capture={capture}\n            multiple={multiple}\n            accept={accept}\n            onChange={onChange}\n            type=\"file\"\n            data-testid=\"upload-bt\"\n            autocomplete=\"off\"\n            tabindex={-1}\n            class={inputCls}\n            ref={inputRef}\n            {...dirProps}\n          />\n          <input\n            key={state.replaceInputKey}\n            multiple={false}\n            accept={accept}\n            onChange={onReplaceChange}\n            type=\"file\"\n            autocomplete=\"off\"\n            tabindex={-1}\n            class={inputReplaceCls}\n            ref={replaceInputRef}\n          />\n          {renderAddContent()}\n          {prompt ? (\n            <div class={promptCls} x-semi-prop=\"prompt\">\n              {prompt}\n            </div>\n          ) : null}\n\n          {validateMessage ? (\n            <div class={validateMsgCls} x-semi-prop=\"validateMessage\">\n              {validateMessage}\n            </div>\n          ) : null}\n          {renderFileList()}\n        </div>\n      );\n    };\n  },\n});\n\nexport default Upload;\n"],"names":["prefixCls","cssClasses","PREFIX","propTypes","accept","PropTypes","string","action","type","String","required","addOnPasting","bool","afterUpload","func","beforeClear","beforeRemove","beforeUpload","className","customRequest","data","oneOfType","object","defaultFileList","array","directory","disabled","dragIcon","node","dragMainText","dragSubText","draggable","fileList","fileName","headers","hotSpotLocation","itemStyle","limit","number","listType","maxSize","minSize","multiple","name","onAcceptInvalid","onChange","onClear","onDrop","onError","onExceed","onFileChange","onOpenFileDialog","onPreviewClick","onProgress","onRemove","onRetry","onSizeError","onSuccess","onPastingError","previewFile","prompt","promptPosition","picWidth","picHeight","renderFileItem","renderPicPreviewIcon","renderFileOperation","renderPicInfo","renderThumbnail","showClear","showPicInfo","showReplace","showRetry","showUploadList","style","timeout","transformFile","uploadTrigger","validateMessage","validateStatus","withCredentials","capture","defaultProps","noop","vuePropsType","vuePropsMake","Upload","defineComponent","props","setup","expose","slots","useSlots","getProps","useHasInProps","state","reactive","replaceIdx","inputKey","Math","random","replaceInputKey","dragAreaStatus","localUrls","inputRef","ref","replaceInputRef","pastingCb","adapter","adapterInject","getDataAttr","useBaseComponent","adapter_","notifyFileSelect","files","notifyError","error","fileInstance","xhr","notifySuccess","responseBody","file","notifyProgress","percent","notifyRemove","fileItem","notifySizeError","notifyExceed","updateFileList","cb","nextTick","notifyBeforeUpload","notifyAfterUpload","response","resetInput","resetReplaceInput","isMac","navigator","platform","toUpperCase","indexOf","registerPastingHandler","document","body","addEventListener","unRegisterPastingHandler","removeEventListener","notifyPastingError","updateDragAreaStatus","notifyChange","currentFile","updateLocalUrls","urls","notifyClear","notifyPreviewClick","notifyDrop","e","notifyAcceptInvalid","invalidFiles","notifyBeforeRemove","notifyBeforeClear","foundation","UploadFoundation","watch","val","immediate","onMounted","init","onUnmounted","destroy","onClick","value","click","target","handleChange","replace","index","onReplaceChange","handleReplaceChange","clear","handleClear","remove","handleRemove","insert","insertFileToList","upload","manualUpload","renderFile","locale","status","_sizeInvalid","uid","retry","onReplace","fileCardProps","pick","Object","keys","vuePropsTypeFileCard","key","handlePreviewClick","undefined","strings","FILE_STATUS_UPLOAD_FAIL","fail","illegalSize","_createVNode","FileCard","renderFileList","FILE_LIST_PIC","renderFileListPic","FILE_LIST_DEFAULT","renderFileListDefault","children","default","stateFileList","showAddTriggerInList","length","dragAreaBaseCls","uploadAddCls","cls","fileListCls","dragAreaCls","DRAG_AREA_LEGAL","DRAG_AREA_ILLEGAL","mainCls","addContentProps","role","height","styleNum","width","containerProps","class","assign","onDragover","onDragleave","onDragenter","addContent","_mergeProps","LocaleConsumer","map","titleCls","showTitle","selectedFiles","handleDrop","handleDragOver","handleDragLeave","handleDragEnter","renderAddContent","renderDragArea","_Fragment","IconUpload","mainText","legalTips","illegalTips","uploadCls","inputCls","inputReplaceCls","promptCls","validateMsgCls","dirProps","webkitdirectory"],"mappings":"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"}