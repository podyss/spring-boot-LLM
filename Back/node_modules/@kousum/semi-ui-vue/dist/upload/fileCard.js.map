{"version":3,"file":"fileCard.js","sources":["../../src/components/upload/fileCard.tsx"],"sourcesContent":["import cls from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport { cssClasses, strings } from '@douyinfe/semi-foundation/upload/constants';\nimport FileCardFoundation, { FileCardAdapter } from '@douyinfe/semi-foundation/upload/fileCardFoundation';\n\nimport { getFileSize } from '@douyinfe/semi-foundation/upload/utils';\nimport { IconAlertCircle, IconClose, IconClear, IconFile, IconRefresh, IconEyeOpened } from '@kousum/semi-icons-vue';\nimport LocaleConsumer from '../locale/localeConsumer';\nimport { Locale } from '../locale/interface';\n\nimport Button from '../button/index';\nimport Progress from '../progress/index';\nimport Tooltip from '../tooltip/index';\nimport Spin from '../spin/index';\nimport { isElement } from '../_base/reactUtils';\nimport { RenderFileItemProps, UploadListType } from './interface';\nimport { defineComponent, h, useSlots, Fragment, ComponentObjectPropsOptions, PropType, reactive } from 'vue';\nimport type { CSSProperties, FunctionalComponent, VNode } from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { styleNum } from '../_utils';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport { CombineProps } from '../interface';\n\nconst prefixCls = cssClasses.PREFIX;\n\nconst ErrorSvg: FunctionalComponent<any> = (props = {}) => (\n  // @ts-ignore\n  <svg\n    focusable={false}\n    aria-hidden\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <circle cx=\"7.99992\" cy=\"7.99992\" r=\"6.66667\" fill=\"white\" />\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M15.3332 8.00008C15.3332 12.0502 12.0499 15.3334 7.99984 15.3334C3.94975 15.3334 0.666504 12.0502 0.666504 8.00008C0.666504 3.94999 3.94975 0.666748 7.99984 0.666748C12.0499 0.666748 15.3332 3.94999 15.3332 8.00008ZM8.99984 11.6667C8.99984 11.1145 8.55212 10.6667 7.99984 10.6667C7.44755 10.6667 6.99984 11.1145 6.99984 11.6667C6.99984 12.219 7.44755 12.6667 7.99984 12.6667C8.55212 12.6667 8.99984 12.219 8.99984 11.6667ZM7.99984 3.33341C7.27573 3.33341 6.7003 3.94171 6.74046 4.66469L6.94437 8.33495C6.97549 8.89513 7.4388 9.33341 7.99984 9.33341C8.56087 9.33341 9.02419 8.89513 9.05531 8.33495L9.25921 4.66469C9.29938 3.94171 8.72394 3.33341 7.99984 3.33341Z\"\n      fill=\"#F93920\"\n    />\n  </svg>\n);\n\nconst ReplaceSvg: FunctionalComponent<any> = (props = {}) => (\n  // @ts-ignore\n  <svg\n    focusable={false}\n    aria-hidden\n    width=\"28\"\n    height=\"28\"\n    viewBox=\"0 0 28 28\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <circle cx=\"14\" cy=\"14\" r=\"14\" fill=\"#16161A\" fill-opacity=\"0.6\" />\n    <path\n      d=\"M9 10.25V18.25L10.25 13.25H17.875V11.75C17.875 11.4739 17.6511 11.25 17.375 11.25H14L12.75 9.75H9.5C9.22386 9.75 9 9.97386 9 10.25Z\"\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M18 18.25L19 13.25H10.2031L9 18.25H18Z\"\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n);\n\nconst DirectorySvg: FunctionalComponent<any> = (props = {}) => (\n  // @ts-ignore\n  <svg\n    focusable={false}\n    aria-hidden\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M6 17V7.58824C6 7.26336 6.26863 7 6.6 7H10.5L12 8.76471H16.05C16.3814 8.76471 16.65 9.02806 16.65 9.35294V11.1176H7.5L6 17ZM6 17L7.44375 11.1176H18L16.8 17L6 17Z\"\n      stroke=\"currentColor\"\n      stroke-width=\"1.5\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n);\n\nexport interface FileCardProps extends RenderFileItemProps {\n  className?: string;\n  style?: CSSProperties;\n  picWidth?: string | number;\n  picHeight?: string | number;\n\n  renderThumbnail?: any\n}\n\nconst propTypes: CombineProps<FileCardProps> = {\n  className: PropTypes.string,\n  disabled: {\n    type: PropTypes.bool,\n    required: true,\n  },\n  listType: {\n    type: PropTypes.string as PropType<FileCardProps['listType']>,\n    required: true,\n  },\n  name: {\n    type: PropTypes.string,\n    required: true,\n  },\n  onPreviewClick: {\n    type: PropTypes.func as PropType<FileCardProps['onPreviewClick']>,\n    required: true,\n  },\n  onRemove: {\n    type: PropTypes.func as PropType<FileCardProps['onRemove']>,\n    required: true,\n  },\n  onReplace: {\n    type: PropTypes.func as PropType<FileCardProps['onReplace']>,\n    required: true,\n  },\n  onRetry: {\n    type: PropTypes.func as PropType<FileCardProps['onRetry']>,\n    required: true,\n  },\n  percent: PropTypes.number,\n  preview: PropTypes.bool,\n  previewFile: PropTypes.func as PropType<FileCardProps['previewFile']>,\n  picWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  picHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  showReplace: PropTypes.bool,\n  showRetry: PropTypes.bool,\n  size: {\n    type: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    required: true,\n  },\n  status: {\n    type: PropTypes.string as PropType<FileCardProps['status']>,\n    required: true,\n  },\n  style: PropTypes.object,\n  url: PropTypes.string,\n  validateMessage: PropTypes.node as PropType<FileCardProps['validateMessage']>,\n  index: PropTypes.number,\n  // key: String,\n  showPicInfo: Boolean,\n  renderPicInfo: Function as PropType<FileCardProps['renderPicInfo']>,\n  renderPicPreviewIcon: Function as PropType<FileCardProps['renderPicPreviewIcon']>,\n  renderFileOperation: Function as PropType<FileCardProps['renderFileOperation']>,\n  uid: {\n    type: String,\n    required: true,\n  },\n  fileInstance: Object,\n  renderThumbnail: Function,\n  response: Object,\n  event: Object,\n  shouldUpload: Boolean,\n  _sizeInvalid: Boolean,\n};\n\nconst defaultProps = {\n  listType: strings.FILE_LIST_DEFAULT,\n  name: '',\n  onRemove: (): void => undefined,\n  onRetry: (): void => undefined,\n  preview: false,\n  size: '',\n};\n\nexport const vuePropsType = vuePropsMake(propTypes, defaultProps);\n\nexport interface FileCardState {\n  fallbackPreview?: boolean;\n}\n\nconst FileCard = defineComponent({\n  props: { ...vuePropsType },\n  name: 'FileCard',\n  setup(props, {}) {\n    const slots = useSlots();\n    const state = reactive({\n      fallbackPreview: false,\n    });\n\n    const { adapter: adapterInject } = useBaseComponent<FileCardProps>(props, state);\n\n    function adapter_(): FileCardAdapter<FileCardProps, FileCardState> {\n      return {\n        ...adapterInject(),\n        updateFallbackPreview: (fallbackPreview: boolean): void => {\n          state.fallbackPreview = fallbackPreview;\n        },\n      };\n    }\n\n    const adapter = adapter_();\n    const foundation = new FileCardFoundation(adapter);\n\n    function transSize(size: string | number): string {\n      if (typeof size === 'number') {\n        return getFileSize(size);\n      }\n      return size;\n    }\n\n    function renderValidateMessage(): VNode | string {\n      const { status, validateMessage } = props;\n      let content = null;\n      switch (true) {\n        case typeof validateMessage === 'string' && status === strings.FILE_STATUS_VALIDATING:\n          content = (\n            <>\n              <Spin size=\"small\" wrapperClassName={`${prefixCls}-file-card-icon-loading`} />\n              {validateMessage}\n            </>\n          );\n          break;\n        case typeof validateMessage === 'string':\n          content = (\n            <>\n              <IconAlertCircle class={`${prefixCls}-file-card-icon-error`} />\n              {validateMessage}\n            </>\n          );\n          break;\n        case isElement(validateMessage):\n          content = validateMessage;\n          break;\n        default:\n          break;\n      }\n      return content;\n    }\n\n    function renderPicValidateMsg(): VNode | string {\n      const { status, validateMessage } = props;\n      let icon = null;\n      switch (true) {\n        case validateMessage && status === strings.FILE_STATUS_VALIDATING:\n          icon = <Spin size=\"small\" wrapperClassName={`${prefixCls}-picture-file-card-icon-loading`} />;\n          break;\n        case validateMessage &&\n          (status === strings.FILE_STATUS_VALID_FAIL || status === strings.FILE_STATUS_UPLOAD_FAIL):\n          icon = (\n            <div class={`${prefixCls}-picture-file-card-icon-error`}>\n              <ErrorSvg />\n            </div>\n          );\n          break;\n        default:\n          break;\n      }\n      return icon ? (\n        <Tooltip content={validateMessage} trigger=\"hover\" position=\"bottom\">\n          {icon}\n        </Tooltip>\n      ) : null;\n    }\n\n    function renderPic(locale: Locale['Upload']): VNode | string {\n      const { fallbackPreview } = state;\n      const {\n        url,\n        percent,\n        status,\n        disabled,\n        style,\n        onPreviewClick,\n        showPicInfo,\n        renderPicInfo,\n        renderPicPreviewIcon,\n        renderThumbnail,\n        name,\n        index,\n        picHeight,\n        picWidth,\n      } = props;\n      const showProgress = status === strings.FILE_STATUS_UPLOADING && percent !== 100;\n      const showRetry = status === strings.FILE_STATUS_UPLOAD_FAIL && props.showRetry;\n      const showReplace = status === strings.FILE_STATUS_SUCCESS && props.showReplace;\n      const showPreview = status === strings.FILE_STATUS_SUCCESS && !props.showReplace;\n      const customThumbnail = typeof renderThumbnail === 'function';\n      const filePicCardCls = cls({\n        [`${prefixCls}-picture-file-card`]: true,\n        [`${prefixCls}-picture-file-card-preview-fallback`]: fallbackPreview,\n        [`${prefixCls}-picture-file-card-disabled`]: disabled,\n        [`${prefixCls}-picture-file-card-show-pointer`]: typeof onPreviewClick !== 'undefined',\n        [`${prefixCls}-picture-file-card-error`]: status === strings.FILE_STATUS_UPLOAD_FAIL,\n        [`${prefixCls}-picture-file-card-uploading`]: showProgress,\n        [`${prefixCls}-picture-file-card-custom-thumbnail`]: customThumbnail && picHeight && picWidth\n      });\n      const retry = (\n        <div role=\"button\" tab-index={0} class={`${prefixCls}-picture-file-card-retry`} onClick={(e) => onRetry(e)}>\n          <IconRefresh class={`${prefixCls}-picture-file-card-icon-retry`} />\n        </div>\n      );\n      const replace = (\n        <Tooltip trigger=\"hover\" position=\"top\" content={locale.replace} showArrow={false} spacing={4}>\n          <div\n            role=\"button\"\n            tab-index={0}\n            class={`${prefixCls}-picture-file-card-replace`}\n            onClick={(e): void => onReplace(e)}\n          >\n            <ReplaceSvg class={`${prefixCls}-picture-file-card-icon-replace`} />\n          </div>\n        </Tooltip>\n      );\n      const preview = (\n        <div class={`${prefixCls}-picture-file-card-preview`}>\n          {typeof renderPicPreviewIcon === 'function' ? renderPicPreviewIcon(props) : null}\n        </div>\n      );\n      const close = (\n        <div role=\"button\" tab-index={0} class={`${prefixCls}-picture-file-card-close`} onClick={(e) => onRemove(e)}>\n          <IconClear class={`${prefixCls}-picture-file-card-icon-close`} />\n        </div>\n      );\n\n      const picInfo =\n        typeof renderPicInfo === 'function' ? (\n          renderPicInfo(props)\n        ) : (\n          <div class={`${prefixCls}-picture-file-card-pic-info`}>{index + 1}</div>\n        );\n\n      let imgStyle: { height?: number | string; width?: number | string } = {};\n      let itemStyle = style ? { ...style } : {};\n\n      if (picHeight) {\n        itemStyle.height = styleNum(picHeight);\n        imgStyle.height = styleNum(picHeight);\n      }\n\n      if (picWidth) {\n        itemStyle.width = styleNum(picWidth);\n        imgStyle.width = styleNum(picWidth);\n      }\n      const defaultThumbTail = !fallbackPreview ? (\n        <img src={url} alt={name} onError={(error) => foundation.handleImageError(error)} style={imgStyle} />\n      ) : (\n        <IconFile size=\"large\" />\n      );\n\n      const thumbnail = customThumbnail ? renderThumbnail(props) : defaultThumbTail;\n\n      return (\n        <div role=\"listitem\" class={filePicCardCls} style={itemStyle} onClick={onPreviewClick}>\n          {thumbnail}\n          {showProgress ? (\n            <Progress\n              percent={percent}\n              type=\"circle\"\n              size=\"small\"\n              orbitStroke={'#FFF'}\n              aria-label=\"uploading file progress\"\n            />\n          ) : null}\n          {showRetry ? retry : null}\n          {showReplace && replace}\n          {showPreview && preview}\n          {showPicInfo && picInfo}\n          {!disabled && close}\n          {renderPicValidateMsg()}\n        </div>\n      );\n    }\n\n    function renderFile(locale: Locale['Upload']) {\n      const {\n        name,\n        size,\n        percent,\n        url,\n        showRetry: propsShowRetry,\n        showReplace: propsShowReplace,\n        preview,\n        previewFile,\n        status,\n        style,\n        onPreviewClick,\n        renderFileOperation,\n      } = props;\n      const { fallbackPreview } = state;\n      const fileCardCls = cls({\n        [`${prefixCls}-file-card`]: true,\n        [`${prefixCls}-file-card-fail`]:\n          status === strings.FILE_STATUS_VALID_FAIL || status === strings.FILE_STATUS_UPLOAD_FAIL,\n        [`${prefixCls}-file-card-show-pointer`]: typeof onPreviewClick !== 'undefined',\n      });\n      const previewCls = cls({\n        [`${prefixCls}-file-card-preview`]: true,\n        [`${prefixCls}-file-card-preview-placeholder`]: !preview || previewFile || fallbackPreview,\n      });\n      const infoCls = `${prefixCls}-file-card-info`;\n      const closeCls = `${prefixCls}-file-card-close`;\n      const replaceCls = `${prefixCls}-file-card-replace`;\n      const showProgress =\n        !(percent === 100 || typeof percent === 'undefined') && status === strings.FILE_STATUS_UPLOADING;\n      // only show retry when upload fail & showRetry is true, no need to show during validate fail\n      const showRetry = status === strings.FILE_STATUS_UPLOAD_FAIL && propsShowRetry;\n      const showReplace = status === strings.FILE_STATUS_SUCCESS && propsShowReplace;\n      const fileSize = transSize(size);\n      let previewContent: VNode | string =\n        preview && !fallbackPreview ? (\n          <img src={url} alt={name} onError={(error) => foundation.handleImageError(error)} />\n        ) : (\n          <IconFile size=\"large\" />\n        );\n      if (previewFile) {\n        previewContent = previewFile(props);\n      }\n      const operation =\n        typeof renderFileOperation === 'function' ? (\n          renderFileOperation(props)\n        ) : (\n          <Button\n            onClick={(e) => onRemove(e)}\n            type=\"tertiary\"\n            icon={<IconClose />}\n            theme=\"borderless\"\n            size=\"small\"\n            class={closeCls}\n          />\n        );\n      return (\n        <div role=\"listitem\" class={fileCardCls} style={style} onClick={onPreviewClick}>\n          <div class={previewCls}>{previewContent}</div>\n          <div class={`${infoCls}-main`}>\n            <div class={`${infoCls}-main-text`}>\n              <span class={`${infoCls}-name`}>{name}</span>\n              <span>\n                <span class={`${infoCls}-size`}>{fileSize}</span>\n                {showReplace && (\n                  <Tooltip trigger=\"hover\" position=\"top\" showArrow={false} content={locale.replace}>\n                    <Button\n                      onClick={(e) => onReplace(e)}\n                      type=\"tertiary\"\n                      theme=\"borderless\"\n                      size=\"small\"\n                      icon={<DirectorySvg />}\n                      className={replaceCls}\n                    />\n                  </Tooltip>\n                )}\n              </span>\n            </div>\n            {showProgress ? (\n              <Progress percent={percent} style={{ width: '100%' }} aria-label=\"uploading file progress\" />\n            ) : null}\n            <div class={`${infoCls}-main-control`}>\n              <span class={`${infoCls}-validate-message`}>{renderValidateMessage()}</span>\n              {showRetry ? (\n                <span role=\"button\" tab-index={0} class={`${infoCls}-retry`} onClick={(e) => onRetry(e)}>\n                  {locale.retry}\n                </span>\n              ) : null}\n            </div>\n          </div>\n          {operation}\n        </div>\n      );\n    }\n\n    function onRemove(e: MouseEvent): void {\n      e.stopPropagation();\n      props.onRemove();\n    }\n\n    function onReplace(e: MouseEvent): void {\n      e.stopPropagation();\n      props.onReplace();\n    }\n\n    function onRetry(e: MouseEvent): void {\n      e.stopPropagation();\n      props.onRetry();\n    }\n\n    return () => {\n      const { listType } = props;\n      if (listType === strings.FILE_LIST_PIC) {\n        return (\n          <LocaleConsumer componentName=\"Upload\">{(locale: Locale['Upload']) => renderPic(locale)}</LocaleConsumer>\n        );\n      }\n\n      if (listType === strings.FILE_LIST_DEFAULT) {\n        return (\n          <LocaleConsumer componentName=\"Upload\">{(locale: Locale['Upload']) => renderFile(locale)}</LocaleConsumer>\n        );\n      }\n\n      return null;\n    };\n  },\n});\n\nexport default FileCard;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","prefixCls","cssClasses","PREFIX","ErrorSvg","props","_createVNode","_mergeProps","ReplaceSvg","DirectorySvg","propTypes","className","PropTypes","string","disabled","type","bool","required","listType","name","onPreviewClick","func","onRemove","onReplace","onRetry","percent","number","preview","previewFile","picWidth","oneOfType","picHeight","showReplace","showRetry","size","status","style","object","url","validateMessage","node","index","showPicInfo","Boolean","renderPicInfo","Function","renderPicPreviewIcon","renderFileOperation","uid","String","fileInstance","renderThumbnail","response","event","shouldUpload","_sizeInvalid","defaultProps","strings","FILE_LIST_DEFAULT","vuePropsType","vuePropsMake","FileCard","defineComponent","setup","useSlots","state","reactive","fallbackPreview","adapter","adapterInject","useBaseComponent","adapter_","updateFallbackPreview","foundation","FileCardFoundation","transSize","getFileSize","renderValidateMessage","content","FILE_STATUS_VALIDATING","_Fragment","Spin","IconAlertCircle","isElement","renderPicValidateMsg","icon","FILE_STATUS_VALID_FAIL","FILE_STATUS_UPLOAD_FAIL","Tooltip","default","renderPic","locale","showProgress","FILE_STATUS_UPLOADING","FILE_STATUS_SUCCESS","showPreview","customThumbnail","filePicCardCls","cls","retry","e","IconRefresh","replace","close","IconClear","picInfo","imgStyle","itemStyle","height","styleNum","width","defaultThumbTail","IconFile","error","handleImageError","thumbnail","Progress","renderFile","propsShowRetry","propsShowReplace","fileCardCls","previewCls","infoCls","closeCls","replaceCls","fileSize","previewContent","operation","Button","IconClose","stopPropagation","FILE_LIST_PIC","LocaleConsumer"],"mappings":"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"}