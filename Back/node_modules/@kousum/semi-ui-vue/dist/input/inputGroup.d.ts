import { LabelProps } from '../form/label';
import { CombineProps } from '../interface';
export type InputSize = 'small' | 'large' | 'default';
export interface InputGroupProps {
    className?: string;
    size?: InputSize;
    style?: Record<string, any>;
    onBlur?: (e: FocusEvent) => void;
    onFocus?: (e: FocusEvent) => void;
    label?: LabelProps;
    labelPosition?: string;
    disabled?: boolean;
}
export interface InputGroupState {
}
export declare const VuePropsType: CombineProps<InputGroupProps>;
export interface InputGroupState {
}
declare const InputGroup: import("vue").DefineComponent<import("vue").ExtractPropTypes<CombineProps<InputGroupProps>>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<CombineProps<InputGroupProps>>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default InputGroup;
