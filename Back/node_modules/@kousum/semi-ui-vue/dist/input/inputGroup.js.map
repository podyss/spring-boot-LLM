{"version":3,"file":"inputGroup.js","sources":["../../src/components/input/inputGroup.tsx"],"sourcesContent":["import { defineComponent, ref, h, cloneVNode, VNode, ComponentObjectPropsOptions, PropType } from 'vue';\n\nimport * as PropTypes from '../PropTypes';\nimport cls from 'classnames';\n\nimport { cssClasses, strings } from '@douyinfe/semi-foundation/input/constants';\nimport Label, { LabelProps } from '../form/label';\n\nimport { noop } from '@douyinfe/semi-foundation/utils/function';\nimport { get, isFunction } from 'lodash';\nimport { CombineProps } from '../interface';\nimport { getFragmentChildren } from '../_utils';\nimport { useHasInProps } from '../_base/baseComponent';\n\nconst prefixCls = cssClasses.PREFIX;\nconst sizeSet = strings.SIZE;\n\nexport type InputSize = 'small' | 'large' | 'default';\n\nexport interface InputGroupProps {\n  className?: string;\n  size?: InputSize;\n  style?: Record<string, any>;\n  onBlur?: (e: FocusEvent) => void;\n  onFocus?: (e: FocusEvent) => void;\n  label?: LabelProps;\n  labelPosition?: string;\n  disabled?: boolean;\n}\n\n// eslint-disable-next-line\nexport interface InputGroupState {}\n\nexport const VuePropsType: CombineProps<InputGroupProps> = {\n  className: { type: String, default: '' },\n  size: { type: String as PropType<InputGroupProps['size']>, default: 'default' },\n  style: [String, Object],\n  onBlur: {\n    type: Function as PropType<InputGroupProps['onBlur']>,\n    default: noop,\n  },\n  onFocus: {\n    type: Function as PropType<InputGroupProps['onFocus']>,\n    default: noop,\n  },\n  label: Object,\n  labelPosition: String,\n  disabled: Boolean,\n};\n// eslint-disable-next-line\nexport interface InputGroupState {}\n\nconst InputGroup = defineComponent({\n  props: VuePropsType,\n  name: 'InputGroup',\n  setup(props, { slots }) {\n    const { getProps } = useHasInProps()\n    function renderGroupWithLabel(inner: VNode[]) {\n      // eslint-disable-next-line no-unused-vars\n      const { size, className, label, labelPosition, ...rest } = props;\n      const groupWrapperCls = cls({\n        [`${prefixCls}-group-wrapper`]: true,\n        [`${prefixCls}-group-wrapper-with-top-label`]: labelPosition === 'top',\n        [`${prefixCls}-group-wrapper-with-left-label`]: labelPosition === 'left',\n      });\n      const groupCls = cls(`${prefixCls}-group`, className, {\n        [`${prefixCls}-${size}`]: size !== 'default',\n      });\n      // const labelCls = cls(label.className, '');\n      const defaultName = 'input-group';\n      return (\n        <div class={groupWrapperCls}>\n          {label && label.text ? <Label name={defaultName} {...label} /> : null}\n          <span\n            role=\"group\"\n            aria-disabled={props.disabled}\n            id={(label && label.name) || defaultName}\n            class={groupCls}\n            style={props.style}\n            onFocus={props.onFocus}\n            onBlur={props.onBlur}\n          >\n            {inner}\n          </span>\n        </div>\n      );\n    }\n    return () => {\n      const {\n        size,\n        style,\n        className,\n        label,\n        onBlur: groupOnBlur,\n        onFocus: groupOnFocus,\n        disabled: groupDisabled,\n        labelPosition,\n        ...rest\n      } = getProps(props);\n      const children = getFragmentChildren(slots);\n      const groupCls = cls(\n        `${prefixCls}-group`,\n        {\n          [`${prefixCls}-${size}`]: size !== 'default',\n        },\n        className\n      );\n      let inner;\n      if (children) {\n        inner = (Array.isArray(children) ? children : [children]).map((item, index) => {\n          if (item) {\n            const { onBlur: itemOnBlur, onFocus: itemOnFocus, disabled: itemDisabled } = (item as any).props;\n            const onBlur = isFunction(itemOnBlur) && get(itemOnBlur, 'name') !== 'noop' ? itemOnBlur : groupOnBlur;\n            const onFocus = isFunction(itemOnFocus) && get(itemOnFocus, 'name') !== 'noop' ? itemOnFocus : groupOnFocus;\n            const disabled = typeof itemDisabled === 'boolean' ? itemDisabled : groupDisabled;\n            return cloneVNode(item as any, { key: index, ...rest, size, onBlur, onFocus, disabled });\n          }\n          return null;\n        });\n      }\n\n      if (label && label.text) {\n        return renderGroupWithLabel(inner);\n      }\n\n      return (\n        <span\n          role=\"group\"\n          aria-label=\"Input group\"\n          aria-disabled={props.disabled}\n          class={groupCls}\n          style={style}\n          onFocus={props.onFocus}\n          onBlur={props.onBlur}\n        >\n          {inner}\n        </span>\n      );\n    };\n  },\n});\n\nexport default InputGroup;\n"],"names":["prefixCls","cssClasses","PREFIX","strings","SIZE","VuePropsType","className","type","String","default","size","style","Object","onBlur","Function","noop","onFocus","label","labelPosition","disabled","Boolean","InputGroup","defineComponent","props","name","setup","slots","getProps","useHasInProps","renderGroupWithLabel","inner","rest","groupWrapperCls","cls","groupCls","defaultName","_createVNode","text","Label","_mergeProps","groupOnBlur","groupOnFocus","groupDisabled","children","getFragmentChildren","Array","isArray","map","item","index","itemOnBlur","itemOnFocus","itemDisabled","isFunction","get","cloneVNode","key"],"mappings":"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"}