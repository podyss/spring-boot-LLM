{"version":3,"file":"index.js","sources":["../../src/components/slider/index.tsx"],"sourcesContent":["/* eslint-disable max-lines-per-function */\n/* eslint-disable react/no-find-dom-node */\nimport * as PropTypes from '../PropTypes';\nimport cls from 'classnames';\nimport { cssClasses } from '@douyinfe/semi-foundation/slider/constants';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport SliderFoundation, {\n  SliderAdapter,\n  SliderProps as BasicSliceProps,\n  SliderState,\n  tipFormatterBasicType,\n} from '@douyinfe/semi-foundation/slider/foundation';\nimport Tooltip from '../tooltip/index';\nimport '@douyinfe/semi-foundation/slider/slider.scss';\nimport { isEqual, noop } from 'lodash';\nimport {\n  CSSProperties,\n  defineComponent,\n  h,\n  onMounted,\n  onUnmounted,\n  reactive,\n  ref,\n  useSlots,\n  watch,\n  Fragment,\n  nextTick,\n  ComponentObjectPropsOptions,\n  PropType,\n} from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { CombineProps } from '../interface';\n\nconst prefixCls = cssClasses.PREFIX;\n\nexport interface SliderProps extends BasicSliceProps {\n  style?: CSSProperties;\n  railStyle?: CSSProperties;\n}\n\nexport type { SliderState };\n\nfunction domIsInRenderTree(e: HTMLElement) {\n  if (!e) {\n    return false;\n  }\n  return Boolean(e.offsetWidth || e.offsetHeight || e.getClientRects().length);\n}\n\nconst propTypes: CombineProps<SliderProps> = {\n  // allowClear: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  'aria-labelledby': PropTypes.string,\n  'aria-valuetext': PropTypes.string,\n  defaultValue: [PropTypes.number, PropTypes.array],\n  disabled: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  showMarkLabel: PropTypes.bool,\n  included: {\n    type: PropTypes.bool,\n    default: undefined,\n  }, // Whether to juxtapose. Allow dragging\n  marks: PropTypes.object, // Scale\n  max: PropTypes.number,\n  min: PropTypes.number,\n  range: {\n    type: PropTypes.bool,\n    default: undefined,\n  }, // Whether both sides\n  step: PropTypes.number,\n  tipFormatter: PropTypes.func as PropType<SliderProps['tipFormatter']>,\n  value: [PropTypes.number, PropTypes.array],\n  vertical: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  onAfterChange: PropTypes.func as PropType<SliderProps['onAfterChange']>, // OnmouseUp and triggered when clicked\n  onChange: PropTypes.func as PropType<SliderProps['onChange']>,\n  onMouseUp: PropTypes.func as PropType<SliderProps['onMouseUp']>,\n  tooltipOnMark: PropTypes.bool,\n  tooltipVisible: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  showArrow: PropTypes.bool,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  showBoundary: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  railStyle: PropTypes.object,\n  verticalReverse: {\n    type: PropTypes.bool,\n    default: undefined,\n  },\n  getAriaValueText: PropTypes.func as PropType<SliderProps['getAriaValueText']>,\n  handleDot: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\n\nconst defaultProps: Partial<SliderProps> = {\n  // allowClear: false,\n  disabled: false,\n  showMarkLabel: true,\n  tooltipOnMark: false,\n  included: true, // No is juxtaposition. Allow dragging\n  max: 100,\n  min: 0,\n  range: false, // Whether both sides\n  showArrow: true,\n  step: 1,\n  tipFormatter: (value: tipFormatterBasicType | tipFormatterBasicType[]) => value,\n  vertical: false,\n  showBoundary: false,\n  onAfterChange: (value: number | number[]) => {\n    // console.log(value);\n  },\n  onChange: (value: number | number[]) => {\n    // console.log(value);\n  },\n  verticalReverse: false,\n};\nexport const vuePropsType = vuePropsMake<SliderProps>(propTypes, defaultProps);\nconst Slider = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Slider',\n  setup(props, {}) {\n    const slots = useSlots();\n\n    let { value } = props;\n    if (!value) {\n      value = props.defaultValue;\n    }\n\n    const state = reactive<SliderState>({\n      // eslint-disable-next-line no-nested-ternary\n      currentValue: value ? value : props.range ? [0, 0] : 0,\n      min: props.min || 0,\n      max: props.max || 0,\n      focusPos: '',\n      onChange: props.onChange,\n      disabled: props.disabled || false,\n      chooseMovePos: '',\n      isDrag: false,\n      clickValue: 0,\n      showBoundary: false,\n      isInRenderTree: true,\n      firstDotFocusVisible: false,\n      secondDotFocusVisible: false,\n    });\n    const sliderEl = ref();\n    const minHanleEl = ref();\n\n    const maxHanleEl = ref();\n    let dragging = [false, false];\n    const eventListenerSet = new Set();\n    const handleDownEventListenerSet: Set<() => void> = new Set();\n\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent<SliderProps>(props, state);\n\n    const adapter = adapter_();\n\n    function adapter_(): SliderAdapter {\n      return {\n        ...adapterInject<SliderProps, SliderState>(),\n        getSliderLengths: () => {\n          if (sliderEl && sliderEl.value) {\n            const rect = sliderEl.value.getBoundingClientRect();\n            const offsetParentRect = sliderEl.value.offsetParent?.getBoundingClientRect();\n\n            const offset = {\n              x: offsetParentRect ? rect.left - offsetParentRect.left : sliderEl.value.offsetLeft,\n              y: offsetParentRect ? rect.top - offsetParentRect.top : sliderEl.value.current.offsetTop,\n            };\n            return {\n              sliderX: offset.x,\n              sliderY: offset.y,\n              sliderWidth: rect.width,\n              sliderHeight: rect.height,\n            };\n          }\n          return {\n            sliderX: 0,\n            sliderY: 0,\n            sliderWidth: 0,\n            sliderHeight: 0,\n          };\n        },\n        getParentRect: (): DOMRect | undefined => {\n          const parentObj = sliderEl && sliderEl.value && sliderEl.value.offsetParent;\n          if (!parentObj) {\n            return undefined;\n          }\n          return parentObj.getBoundingClientRect();\n        },\n        getScrollParentVal: () => {\n          const scrollParent = foundation.getScrollParent(sliderEl.value);\n          return {\n            scrollTop: scrollParent.scrollTop,\n            scrollLeft: scrollParent.scrollLeft,\n          };\n        },\n        isEventFromHandle: (e: MouseEvent) => {\n          const handles = [minHanleEl, maxHanleEl];\n          let flag = false;\n          handles.forEach((handle) => {\n            if (!handle.value) {\n              return;\n            }\n            if (handle.value.contains(e.target as Node)) {\n              flag = true;\n            }\n          });\n          return flag;\n        },\n        getOverallVars: () => ({\n          dragging: dragging,\n        }),\n        updateDisabled: (disabled: boolean) => {\n          state.disabled = disabled;\n        },\n        transNewPropsToState<K extends keyof SliderState>(stateObj: Pick<SliderState, K>, callback = noop) {\n          Object.keys(stateObj).forEach((key) => {\n            state[key] = stateObj[key];\n          });\n          nextTick(() => {\n            callback?.();\n          });\n        },\n        notifyChange: (cbValue: number | number[]) => {\n          props.onChange(Array.isArray(cbValue) ? [...cbValue].sort((a, b)=>a - b) : cbValue);\n        },\n        setDragging: (value: boolean[]) => {\n          dragging = value;\n        },\n        updateCurrentValue: (value: number | number[]) => {\n          const { currentValue } = state;\n          if (value !== currentValue) {\n            // state.currentValue = value\n          }\n        },\n        setOverallVars: (key: string, value: any) => {\n          // TODO\n          // this[key] = value;\n          console.error('smw: 用途 未知');\n        },\n        getMinHandleEl: () => minHanleEl.value,\n        getMaxHandleEl: () => maxHanleEl.value,\n        onHandleDown: (e: MouseEvent) => {\n          handleDownEventListenerSet.add(_addEventListener(document.body, 'mousemove', foundation.onHandleMove, false));\n          handleDownEventListenerSet.add(_addEventListener(window, 'mouseup', foundation.onHandleUp, false));\n          handleDownEventListenerSet.add(\n            _addEventListener(document.body, 'touchmove', foundation.onHandleTouchMove, false)\n          );\n        },\n        onHandleMove: (\n          mousePos: number,\n          isMin: boolean,\n          stateChangeCallback = noop,\n          clickTrack = false,\n          outPutValue\n        ): boolean | void => {\n          const sliderDOMIsInRenderTree = foundation.checkAndUpdateIsInRenderTreeState();\n          if (!sliderDOMIsInRenderTree) {\n            return;\n          }\n\n          const { value } = props;\n\n          let finalOutPutValue = outPutValue;\n          if (finalOutPutValue === undefined) {\n            const moveValue = foundation.transPosToValue(mousePos, isMin);\n            if (moveValue === false) {\n              return;\n            }\n            finalOutPutValue = foundation.outPutValue(moveValue);\n          }\n\n          const { currentValue } = state;\n          if (!isEqual(foundation.outPutValue(currentValue), finalOutPutValue)) {\n            if (!clickTrack && foundation.valueFormatIsCorrect(value)) {\n              // still require afterChangeCallback when click on the track directly, need skip here\n              return false;\n            }\n            state.currentValue = finalOutPutValue;\n            nextTick(() => {\n              stateChangeCallback?.();\n            });\n          }\n        },\n        setEventDefault: (e: MouseEvent) => {\n          e.stopPropagation();\n          e.preventDefault();\n        },\n        setStateVal: <K extends keyof SliderState>(name: K, val: SliderState[K]) => {\n          state[name] = val;\n        },\n        checkAndUpdateIsInRenderTreeState: () => {\n          const sliderDOMIsInRenderTree = domIsInRenderTree(sliderEl.value);\n          if (sliderDOMIsInRenderTree !== state.isInRenderTree) {\n            state.isInRenderTree = sliderDOMIsInRenderTree;\n          }\n          return sliderDOMIsInRenderTree;\n        },\n        onHandleEnter: (pos: SliderState['focusPos']) => {\n          state.focusPos = pos;\n        },\n        onHandleLeave: () => {\n          state.focusPos = '';\n        },\n        onHandleUpBefore: (e: MouseEvent) => {\n          props.onMouseUp?.(e);\n          e.stopPropagation();\n          e.preventDefault();\n          Array.from(handleDownEventListenerSet).forEach((clear) => clear());\n          handleDownEventListenerSet.clear();\n        },\n        onHandleUpAfter: () => {\n          const { currentValue } = state;\n          const value = foundation.outPutValue(currentValue);\n          props.onAfterChange(value);\n        },\n        unSubscribeEventListener: () => {\n          Array.from(eventListenerSet).forEach((clear: any) => clear?.());\n        },\n      };\n    }\n\n    const foundation = new SliderFoundation(adapter);\n\n    watch(\n      [() => props.value, () => props.disabled, () => state.currentValue],\n      (val, [prevPropsValue, prevPropsDisabled]) => {\n        const hasPropValueChange = !isEqual(props.value, prevPropsValue);\n        const hasPropDisabledChange = props.disabled !== prevPropsDisabled;\n\n        if (hasPropDisabledChange) {\n          foundation.handleDisabledChange(props.disabled);\n        }\n\n        if (hasPropValueChange) {\n          const nextValue = props.value;\n          const prevValue = state.currentValue;\n          foundation.handleValueChange(prevValue, nextValue);\n        }\n      }\n    );\n\n    onMounted(() => {\n      foundation.init();\n    });\n\n    onUnmounted(() => {\n      foundation.init();\n    });\n\n    const renderHandle = () => {\n      const {\n        vertical,\n        range,\n        tooltipVisible,\n        tipFormatter,\n        'aria-label': ariaLabel,\n        'aria-labelledby': ariaLabelledby,\n        'aria-valuetext': ariaValueText,\n        getAriaValueText,\n        disabled,\n      } = props;\n      const { chooseMovePos, isDrag, isInRenderTree, firstDotFocusVisible, secondDotFocusVisible } = state;\n      const stylePos = vertical ? 'top' : 'left';\n      const percentInfo = foundation.getMinAndMaxPercent(state.currentValue);\n      const minPercent = percentInfo.min;\n      const maxPercent = percentInfo.max;\n      const { tipVisible, tipChildren } = foundation.computeHandleVisibleVal(\n        tooltipVisible && isInRenderTree,\n        tipFormatter,\n        range\n      );\n      const minClass = cls(cssClasses.HANDLE, {\n        [`${cssClasses.HANDLE}-clicked`]: chooseMovePos === 'min' && isDrag,\n      });\n      const maxClass = cls(cssClasses.HANDLE, {\n        [`${cssClasses.HANDLE}-clicked`]: chooseMovePos === 'max' && isDrag,\n      });\n      const { min, max, currentValue } = state;\n\n      const commonAria = {\n        'aria-label': ariaLabel ?? (disabled ? 'Disabled Slider' : undefined),\n        'aria-labelledby': ariaLabelledby,\n        'aria-disabled': disabled,\n      };\n      vertical && Object.assign(commonAria, { 'aria-orientation': 'vertical' });\n      const handleDot = props.handleDot as {\n        size?: string;\n        color?: string;\n      } & {\n        size?: string;\n        color?: string;\n      }[];\n      const handleContents = !range ? (\n        <Tooltip\n          content={tipChildren.min}\n          showArrow={props.showArrow}\n          position=\"top\"\n          trigger=\"custom\"\n          rePosKey={minPercent}\n          visible={isInRenderTree && (tipVisible.min || firstDotFocusVisible)}\n          className={`${cssClasses.HANDLE}-tooltip`}\n        >\n          <span\n            onMouseover={foundation.checkAndUpdateIsInRenderTreeState}\n            ref={minHanleEl}\n            class={minClass}\n            style={{\n              [stylePos]: `${minPercent * 100}%`,\n              zIndex: chooseMovePos === 'min' && isDrag ? 2 : 1,\n            }}\n            onMousedown={(e) => {\n              foundation.onHandleDown(e, 'min');\n            }}\n            onMouseenter={() => {\n              foundation.onHandleEnter('min');\n            }}\n            onTouchstart={(e) => {\n              foundation.onHandleTouchStart(e, 'min');\n            }}\n            onMouseleave={() => {\n              foundation.onHandleLeave();\n            }}\n            onKeyup={(e) => {\n              foundation.onHandleUp(e);\n            }}\n            onTouchend={(e) => {\n              foundation.onHandleUp(e);\n            }}\n            onKeydown={(e) => {\n              foundation.handleKeyDown(e, 'min');\n            }}\n            onFocus={(e) => {\n              foundation.onFocus(e, 'min');\n            }}\n            onBlur={(e) => {\n              foundation.onBlur(e, 'min');\n            }}\n            role=\"slider\"\n            aria-valuetext={getAriaValueText ? getAriaValueText(currentValue as number, 0) : ariaValueText}\n            tabindex={disabled ? -1 : 0}\n            {...commonAria}\n            aria-valuenow={currentValue as number}\n            aria-valuemax={max}\n            aria-valuemin={min}\n          >\n            {handleDot && (\n              <div\n                class={cssClasses.HANDLE_DOT}\n                style={{\n                  ...(handleDot?.size ? { width: handleDot.size, height: handleDot.size } : {}),\n                  ...(handleDot?.color ? { backgroundColor: handleDot.color } : {}),\n                }}\n              />\n            )}\n          </span>\n        </Tooltip>\n      ) : (\n        <Fragment>\n          <Tooltip\n            content={tipChildren.min}\n            position=\"top\"\n            trigger=\"custom\"\n            rePosKey={minPercent}\n            visible={isInRenderTree && (tipVisible.min || firstDotFocusVisible)}\n            className={`${cssClasses.HANDLE}-tooltip`}\n          >\n            <span\n              ref={minHanleEl}\n              class={minClass}\n              style={{\n                [stylePos]: `${minPercent * 100}%`,\n                zIndex: chooseMovePos === 'min' ? 2 : 1,\n              }}\n              onMousedown={(e) => {\n                foundation.onHandleDown(e, 'min');\n              }}\n              onMouseenter={() => {\n                foundation.onHandleEnter('min');\n              }}\n              onTouchstart={(e) => {\n                foundation.onHandleTouchStart(e, 'min');\n              }}\n              onMouseleave={() => {\n                foundation.onHandleLeave();\n              }}\n              onKeyup={(e) => {\n                foundation.onHandleUp(e);\n              }}\n              onTouchend={(e) => {\n                foundation.onHandleUp(e);\n              }}\n              onKeydown={(e) => {\n                foundation.handleKeyDown(e, 'min');\n              }}\n              onFocus={(e) => {\n                foundation.onFocus(e, 'min');\n              }}\n              onBlur={(e) => {\n                foundation.onBlur(e, 'min');\n              }}\n              role=\"slider\"\n              tabindex={disabled ? -1 : 0}\n              {...commonAria}\n              aria-valuetext={getAriaValueText ? getAriaValueText(currentValue[0], 0) : ariaValueText}\n              aria-valuenow={currentValue[0]}\n              aria-valuemax={currentValue[1]}\n              aria-valuemin={min}\n            >\n              {handleDot?.[0] && (\n                <div\n                  class={cssClasses.HANDLE_DOT}\n                  style={{\n                    ...(handleDot[0]?.size ? { width: handleDot[0].size, height: handleDot[0].size } : {}),\n                    ...(handleDot[0]?.color ? { backgroundColor: handleDot[0].color } : {}),\n                  }}\n                />\n              )}\n            </span>\n          </Tooltip>\n          <Tooltip\n            content={tipChildren.max}\n            position=\"top\"\n            trigger=\"custom\"\n            rePosKey={maxPercent}\n            visible={isInRenderTree && (tipVisible.max || secondDotFocusVisible)}\n            className={`${cssClasses.HANDLE}-tooltip`}\n          >\n            <span\n              ref={maxHanleEl}\n              class={maxClass}\n              style={{\n                [stylePos]: `${maxPercent * 100}%`,\n                zIndex: chooseMovePos === 'max' ? 2 : 1,\n              }}\n              onMousedown={(e) => {\n                foundation.onHandleDown(e, 'max');\n              }}\n              onMouseenter={() => {\n                foundation.onHandleEnter('max');\n              }}\n              onMouseleave={() => {\n                foundation.onHandleLeave();\n              }}\n              onKeyup={(e) => {\n                foundation.onHandleUp(e);\n              }}\n              onTouchstart={(e) => {\n                foundation.onHandleTouchStart(e, 'max');\n              }}\n              onTouchend={(e) => {\n                foundation.onHandleUp(e);\n              }}\n              onKeydown={(e) => {\n                foundation.handleKeyDown(e, 'max');\n              }}\n              onFocus={(e) => {\n                foundation.onFocus(e, 'max');\n              }}\n              onBlur={(e) => {\n                foundation.onBlur(e, 'max');\n              }}\n              role=\"slider\"\n              tabindex={disabled ? -1 : 0}\n              {...commonAria}\n              aria-valuetext={getAriaValueText ? getAriaValueText(currentValue[1], 1) : ariaValueText}\n              aria-valuenow={currentValue[1]}\n              aria-valuemax={max}\n              aria-valuemin={currentValue[0]}\n            >\n              {props.handleDot?.[1] && (\n                <div\n                  class={cssClasses.HANDLE_DOT}\n                  style={{\n                    ...(props.handleDot[1]?.size\n                      ? {\n                          width: props.handleDot[1].size,\n                          height: props.handleDot[1].size,\n                        }\n                      : {}),\n                    ...(props.handleDot[1]?.color ? { backgroundColor: props.handleDot[1].color } : {}),\n                  }}\n                />\n              )}\n            </span>\n          </Tooltip>\n        </Fragment>\n      );\n      return handleContents;\n    };\n\n    const renderTrack = () => {\n      const { range, included, vertical } = props;\n      const percentInfo = foundation.getMinAndMaxPercent(state.currentValue);\n      const minPercent = percentInfo.min;\n      const maxPercent = percentInfo.max;\n      let trackStyle: CSSProperties = !vertical\n        ? {\n            width: range ? `${Math.abs(maxPercent - minPercent) * 100}%` : `${minPercent * 100}%`,\n            left: range ? `${Math.min(minPercent, maxPercent) * 100}%` : 0,\n          }\n        : {\n            height: range ? `${Math.abs(maxPercent - minPercent) * 100}%` : `${minPercent * 100}%`,\n            top: range ? `${Math.min(minPercent, maxPercent) * 100}%` : 0,\n          };\n      trackStyle = included ? trackStyle : {};\n      return (\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n        <div class={cssClasses.TRACK} style={trackStyle} onClick={foundation.handleWrapClick}>\n          {/* {renderTrack} */}\n        </div>\n      );\n    };\n\n    const renderStepDot = () => {\n      const { min, max, vertical, marks } = props;\n      const stylePos = vertical ? 'top' : 'left';\n      const labelContent =\n        marks && Object.keys(marks).length > 0 ? (\n          <div class={cssClasses.DOTS}>\n            {Object.keys(marks).map((mark) => {\n              const activeResult = foundation.isMarkActive(Number(mark));\n              const markClass = cls(`${prefixCls}-dot`, {\n                [`${prefixCls}-dot-active`]: foundation.isMarkActive(Number(mark)) === 'active',\n              });\n              const markPercent = (Number(mark) - min) / (max - min);\n              const dotDOM = // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n                (\n                  <span\n                    key={mark}\n                    onClick={foundation.handleWrapClick}\n                    class={markClass}\n                    style={{ [stylePos]: `calc(${markPercent * 100}% - 2px)` }}\n                  />\n                );\n              return activeResult ? (\n                props.tooltipOnMark ? (\n                  <Tooltip content={marks[mark]}>{dotDOM}</Tooltip>\n                ) : (\n                  dotDOM\n                )\n              ) : null;\n            })}\n          </div>\n        ) : null;\n      return labelContent;\n    };\n\n    const renderLabel = () => {\n      if (!props.showMarkLabel) {\n        return null;\n      }\n      const { min, max, vertical, marks, verticalReverse } = props;\n      const stylePos = vertical ? 'top' : 'left';\n      const labelContent =\n        marks && Object.keys(marks).length > 0 ? (\n          <div class={cssClasses.MARKS + (vertical && verticalReverse ? '-reverse' : '')}>\n            {Object.keys(marks).map((mark) => {\n              const activeResult = foundation.isMarkActive(Number(mark));\n              const markPercent = (Number(mark) - min) / (max - min);\n              return activeResult ? (\n                // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n                <span\n                  key={mark}\n                  class={cls(`${prefixCls}-mark${vertical && verticalReverse ? '-reverse' : ''}`)}\n                  style={{ [stylePos]: `${markPercent * 100}%` }}\n                  onClick={foundation.handleWrapClick}\n                >\n                  {marks[mark]}\n                </span>\n              ) : null;\n            })}\n          </div>\n        ) : null;\n      return labelContent;\n    };\n\n    const _getAriaValueText = (value: number, index?: number) => {\n      const { getAriaValueText } = props;\n      return getAriaValueText ? getAriaValueText(value, index) : value;\n    };\n\n    function _addEventListener<T extends keyof HTMLElementEventMap>(\n      target: HTMLElement | Window,\n      eventName: T,\n      callback: EventListenerOrEventListenerObject,\n      ...rests: any\n    ) {\n      if (target.addEventListener) {\n        target.addEventListener(eventName, callback, ...rests);\n        const clearSelf = () => {\n          target?.removeEventListener(eventName, callback);\n          Promise.resolve().then(() => {\n            eventListenerSet.delete(clearSelf);\n          });\n        };\n        eventListenerSet.add(clearSelf);\n        return clearSelf;\n      } else {\n        return noop;\n      }\n    }\n\n    return () => {\n      const { disabled, currentValue, min, max } = state;\n      const { vertical, verticalReverse, style, railStyle, range, className, ...rest } = props;\n      const wrapperClass = cls(\n        `${prefixCls}-wrapper`,\n        {\n          [`${prefixCls}-disabled`]: disabled,\n          [`${cssClasses.VERTICAL}-wrapper`]: vertical,\n          [`${prefixCls}-reverse`]: vertical && verticalReverse,\n        },\n        className\n      );\n      const boundaryClass = cls(`${prefixCls}-boundary`, {\n        [`${prefixCls}-boundary-show`]: props.showBoundary && state.showBoundary,\n      });\n      const sliderCls = cls({\n        [`${prefixCls}`]: !vertical,\n        [cssClasses.VERTICAL]: vertical,\n      });\n\n      const fixedCurrentValue = Array.isArray(currentValue) ? [...currentValue].sort() : currentValue;\n      const ariaLabel = range\n        ? `Range: ${_getAriaValueText(fixedCurrentValue[0], 0)} to ${_getAriaValueText(fixedCurrentValue[1], 1)}`\n        : undefined;\n\n      const slider = (\n        <div\n          class={wrapperClass}\n          style={style}\n          ref={sliderEl}\n          aria-label={ariaLabel}\n          onMouseenter={() => foundation.handleWrapperEnter()}\n          onMouseleave={() => foundation.handleWrapperLeave()}\n          {...getDataAttr()}\n        >\n          {\n            // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n            <div class={`${prefixCls}-rail`} onClick={foundation.handleWrapClick} style={railStyle} />\n          }\n          {renderTrack()}\n          {renderStepDot()}\n          <div>{renderHandle()}</div>\n          {renderLabel()}\n          <div class={boundaryClass}>\n            <span class={`${prefixCls}-boundary-min`}>{min}</span>\n            <span class={`${prefixCls}-boundary-max`}>{max}</span>\n          </div>\n        </div>\n      );\n      if (!vertical) {\n        return <div class={sliderCls}>{slider}</div>;\n      }\n      return slider;\n    };\n  },\n});\n\nexport default Slider;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","prefixCls","cssClasses","PREFIX","domIsInRenderTree","e","Boolean","offsetWidth","offsetHeight","getClientRects","length","propTypes","PropTypes","string","defaultValue","number","array","disabled","type","bool","default","undefined","showMarkLabel","included","marks","object","max","min","range","step","tipFormatter","func","value","vertical","onAfterChange","onChange","onMouseUp","tooltipOnMark","tooltipVisible","showArrow","style","className","showBoundary","railStyle","verticalReverse","getAriaValueText","handleDot","oneOfType","defaultProps","vuePropsType","vuePropsMake","Slider","defineComponent","props","name","setup","useSlots","state","reactive","currentValue","focusPos","chooseMovePos","isDrag","clickValue","isInRenderTree","firstDotFocusVisible","secondDotFocusVisible","sliderEl","ref","minHanleEl","maxHanleEl","dragging","eventListenerSet","Set","handleDownEventListenerSet","adapter","adapterInject","getDataAttr","useBaseComponent","adapter_","getSliderLengths","rect","getBoundingClientRect","offsetParentRect","offsetParent","offset","x","left","offsetLeft","y","top","current","offsetTop","sliderX","sliderY","sliderWidth","width","sliderHeight","height","getParentRect","parentObj","getScrollParentVal","scrollParent","foundation","getScrollParent","scrollTop","scrollLeft","isEventFromHandle","handles","flag","forEach","handle","contains","target","getOverallVars","updateDisabled","transNewPropsToState","stateObj","callback","noop","keys","key","nextTick","notifyChange","cbValue","Array","isArray","sort","a","b","setDragging","updateCurrentValue","setOverallVars","console","error","getMinHandleEl","getMaxHandleEl","onHandleDown","add","_addEventListener","document","body","onHandleMove","window","onHandleUp","onHandleTouchMove","mousePos","isMin","stateChangeCallback","clickTrack","outPutValue","checkAndUpdateIsInRenderTreeState","finalOutPutValue","moveValue","transPosToValue","isEqual","valueFormatIsCorrect","setEventDefault","stopPropagation","preventDefault","setStateVal","val","sliderDOMIsInRenderTree","onHandleEnter","pos","onHandleLeave","onHandleUpBefore","from","clear","onHandleUpAfter","unSubscribeEventListener","SliderFoundation","watch","prevPropsValue","prevPropsDisabled","hasPropValueChange","handleDisabledChange","nextValue","prevValue","handleValueChange","onMounted","init","onUnmounted","renderHandle","ariaLabel","ariaLabelledby","ariaValueText","stylePos","percentInfo","getMinAndMaxPercent","minPercent","maxPercent","tipVisible","tipChildren","computeHandleVisibleVal","minClass","cls","HANDLE","maxClass","commonAria","assign","_createVNode","_Fragment","Tooltip","_mergeProps","zIndex","onMouseenter","onHandleTouchStart","onMouseleave","handleKeyDown","onFocus","onBlur","HANDLE_DOT","size","color","backgroundColor","renderTrack","trackStyle","Math","abs","TRACK","handleWrapClick","renderStepDot","DOTS","map","mark","activeResult","isMarkActive","Number","markClass","markPercent","dotDOM","renderLabel","MARKS","_getAriaValueText","index","eventName","rests","addEventListener","clearSelf","removeEventListener","Promise","resolve","then","delete","rest","wrapperClass","VERTICAL","boundaryClass","sliderCls","fixedCurrentValue","slider","handleWrapperEnter","handleWrapperLeave"],"mappings":"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"}