import { ColorChooseAreaBaseProps, ColorChooseAreaBaseState } from '@douyinfe/semi-foundation/lib/es/colorPicker/ColorChooseAreaFoundation';
import { CSSProperties, PropType } from 'vue';
import { CombineProps } from '../../interface';
export interface ColorChooseAreaProps extends ColorChooseAreaBaseProps {
    className?: string;
    style?: CSSProperties;
}
export interface ColorChooseAreaState extends ColorChooseAreaBaseState {
}
export declare const vuePropsType: CombineProps<ColorChooseAreaProps>;
declare const ColorChooseArea: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    hsva: {
        type: PropType<import("@douyinfe/semi-foundation/lib/es/colorPicker/interface").HsvaColor>;
        default?: any;
        required: true;
    };
    onChange: {
        type: PropType<(newColor: {
            s: number;
            v: number;
        }) => void>;
        default?: any;
        required: true;
    };
    handleSize: {
        type: PropType<number>;
        default?: any;
        required: true;
    };
    width: {
        type: PropType<number>;
        default?: any;
        required: true;
    };
    height: {
        type: PropType<number>;
        default?: any;
        required: true;
    };
    foundation: {
        type: PropType<import("@douyinfe/semi-foundation/lib/es/colorPicker/foundation").default>;
        default?: any;
        required: true;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    hsva: {
        type: PropType<import("@douyinfe/semi-foundation/lib/es/colorPicker/interface").HsvaColor>;
        default?: any;
        required: true;
    };
    onChange: {
        type: PropType<(newColor: {
            s: number;
            v: number;
        }) => void>;
        default?: any;
        required: true;
    };
    handleSize: {
        type: PropType<number>;
        default?: any;
        required: true;
    };
    width: {
        type: PropType<number>;
        default?: any;
        required: true;
    };
    height: {
        type: PropType<number>;
        default?: any;
        required: true;
    };
    foundation: {
        type: PropType<import("@douyinfe/semi-foundation/lib/es/colorPicker/foundation").default>;
        default?: any;
        required: true;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default ColorChooseArea;
