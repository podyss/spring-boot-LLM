import ColorPickerFoundation from '@douyinfe/semi-foundation/lib/es/colorPicker/foundation';
import { DataPartBaseProps, DataPartBaseState } from '@douyinfe/semi-foundation/lib/es/colorPicker/DataPartFoundation';
import { CSSProperties, PropType } from 'vue';
import { CombineProps } from '../../interface';
export interface DataPartProps extends DataPartBaseProps {
    className?: string;
    style?: CSSProperties;
}
export interface DataPartState extends DataPartBaseState {
}
export declare const vuePropsType: CombineProps<DataPartProps>;
declare const DataPart: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    currentColor: {
        type: PropType<import("@douyinfe/semi-foundation/lib/es/colorPicker/foundation").ColorValue>;
        default?: any;
        required: true;
    };
    defaultFormat: {
        type: PropType<"hex" | "rgba" | "hsva">;
        default?: any;
        required: true;
    };
    width: {
        type: PropType<number>;
        default?: any;
        required: true;
    };
    alpha: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    foundation: {
        type: PropType<ColorPickerFoundation>;
        default?: any;
        required: true;
    };
    eyeDropper: {
        type: PropType<boolean>;
        default?: any;
        required: true;
    };
}>, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    className: PropType<string> | {
        type: PropType<string>;
        default?: any;
        required?: false;
    };
    style: PropType<CSSProperties> | {
        type: PropType<CSSProperties>;
        default?: any;
        required?: false;
    };
    currentColor: {
        type: PropType<import("@douyinfe/semi-foundation/lib/es/colorPicker/foundation").ColorValue>;
        default?: any;
        required: true;
    };
    defaultFormat: {
        type: PropType<"hex" | "rgba" | "hsva">;
        default?: any;
        required: true;
    };
    width: {
        type: PropType<number>;
        default?: any;
        required: true;
    };
    alpha: PropType<boolean> | {
        type: PropType<boolean>;
        default?: any;
        required?: false;
    };
    foundation: {
        type: PropType<ColorPickerFoundation>;
        default?: any;
        required: true;
    };
    eyeDropper: {
        type: PropType<boolean>;
        default?: any;
        required: true;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default DataPart;
