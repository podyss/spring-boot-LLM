{"version":3,"file":"index.js","sources":["../../src/components/colorPicker/index.tsx"],"sourcesContent":["import ColorPickerFoundation, {\n  ColorPickerProps,\n  ColorPickerState,\n} from '@douyinfe/semi-foundation/colorPicker/foundation';\nimport { PopoverProps } from '../popover';\nimport ColorChooseArea from './ColorChooseArea';\nimport { ColorPickerAdapter, ColorValue } from '@douyinfe/semi-foundation/colorPicker/foundation';\nimport AlphaSlider from './AlphaSlider';\nimport ColorSlider from './ColorSlider';\nimport DataPart from './DataPart';\nimport cls from 'classnames';\nimport '@douyinfe/semi-foundation/colorPicker/colorPicker.scss';\nimport { cssClasses } from '@douyinfe/semi-foundation/colorPicker/constants';\nimport Popover from '../popover';\nimport {\n  hexToHsva,\n  hexToRgba,\n  hsvaStringToHsva,\n  hsvaToHex,\n  hsvaToRgba,\n  rgbaStringToHsva,\n  rgbaStringToRgba,\n  rgbaToHex,\n  rgbStringToHsva,\n  rgbStringToRgba,\n} from '@douyinfe/semi-foundation/colorPicker/utils/convert';\nimport { CSSProperties, defineComponent, h, PropType, reactive, useSlots, VNode } from 'vue';\nimport { CombineProps } from '../interface';\nimport { vuePropsMake } from '../PropTypes';\nimport { useBaseComponent } from '../_base/baseComponent';\n\nexport interface ColorPickerReactProps extends ColorPickerProps {\n  usePopover?: boolean;\n  popoverProps?: PopoverProps;\n  className?: string;\n  style?: CSSProperties;\n  bottomSlot?: VNode;\n  topSlot?: VNode;\n}\n\nexport interface ColorPickerReactState extends ColorPickerState {}\n\nexport const propsType: CombineProps<ColorPickerReactProps> = {\n  alpha: {\n    type: Boolean,\n    required: true,\n  },\n  bottomSlot: [Object] as PropType<ColorPickerReactProps['bottomSlot']>,\n  className: String,\n  defaultFormat: {\n    type: String as PropType<ColorPickerReactProps['defaultFormat']>,\n    required: true,\n  },\n  defaultValue: Object as PropType<ColorPickerReactProps['defaultValue']>,\n  eyeDropper: Boolean,\n  height: Number,\n  onChange: {\n    type: Function as PropType<ColorPickerReactProps['onChange']>,\n    required: true,\n  },\n  popoverProps: Object as PropType<ColorPickerReactProps['popoverProps']>,\n  style: Object,\n  topSlot: Object,\n  usePopover: Boolean,\n  value: Object,\n  width: Number,\n};\nconst defaultProps = {\n  defaultValue: {\n    hsva: { h: 176, s: 71, v: 77, a: 1 },\n    rgba: { r: 57, g: 197, b: 187, a: 1 },\n    hex: '#39c5bb',\n  },\n  eyeDropper: true,\n  defaultFormat: 'hex',\n};\n\nconst vuePropsType = vuePropsMake(propsType, defaultProps);\nconst ColorPicker = defineComponent({\n  props: { ...vuePropsType },\n  name: 'ColorPicker',\n  setup(props, { attrs, expose }) {\n    const slots = useSlots();\n    const initValue = props.value ?? props.defaultValue;\n    const state = reactive<ColorPickerReactState>({\n      currentColor: initValue,\n    });\n    const { adapter: adapterInject } = useBaseComponent(props, state)\n    function adapter_(): ColorPickerAdapter<ColorPickerReactProps, ColorPickerReactState> {\n      return {\n        ...adapterInject(),\n        notifyChange: (value) => {\n          props.onChange?.(value);\n        },\n      };\n    }\n    const adapter = adapter_();\n    const foundation = new ColorPickerFoundation(adapter)\n\n\n\n    function renderPicker() {\n      const { className: userClassName } = props;\n      const className = cls(`${cssClasses.PREFIX}`, userClassName);\n      const currentColor = foundation.getCurrentColor();\n      return (\n        <div class={className} {...attrs}>\n          {props.topSlot}\n          <ColorChooseArea\n            hsva={currentColor.hsva}\n            foundation={foundation}\n            onChange={({ s, v }) => {\n              foundation.handleChange(\n                {\n                  s,\n                  v,\n                  a: currentColor.hsva.a,\n                  h: currentColor.hsva.h,\n                },\n                'hsva'\n              );\n            }}\n            handleSize={20}\n            width={props.width ?? 280}\n            height={props.height ?? 280}\n          />\n          <ColorSlider\n            width={props.width ?? 280}\n            height={10}\n            handleSize={18}\n            hue={currentColor.hsva.h}\n            class={'colorSliderWrapper'}\n            foundation={foundation}\n          />\n          {props.alpha && (\n            <AlphaSlider\n              width={props.width ?? 280}\n              height={10}\n              handleSize={18}\n              hsva={currentColor.hsva}\n              class={'alphaSliderWrapper'}\n              foundation={foundation}\n            />\n          )}\n          <DataPart\n            currentColor={currentColor}\n            eyeDropper={props.eyeDropper}\n            alpha={props.alpha}\n            width={props.width ?? 280}\n            foundation={foundation}\n            defaultFormat={props.defaultFormat}\n          />\n          {props.bottomSlot}\n        </div>\n      );\n    }\n    return () => {\n      const currentColor = foundation.getCurrentColor();\n      if (props.usePopover) {\n        return (\n          <Popover\n            {...props.popoverProps}\n            className={cls(`${cssClasses.PREFIX}-popover`, props.popoverProps?.className)}\n            content={renderPicker()}\n          >\n            {slots.default?.() ?? (\n              <div\n                {...attrs}\n                style={{ backgroundColor: currentColor.hex }}\n                class={cls(`${cssClasses.PREFIX}-popover-defaultChildren`)}\n              ></div>\n            )}\n          </Popover>\n        );\n      } else {\n        return renderPicker();\n      }\n    };\n  },\n});\n\nconst colorStringToValue = (raw: string) => {\n  if (raw.startsWith('#')) {\n    return {\n      hsva: hexToHsva(raw),\n      rgba: hexToRgba(raw),\n      hex: raw,\n    };\n  } else if (raw.startsWith('rgba')) {\n    const rgba = rgbaStringToRgba(raw);\n    return {\n      hsva: rgbaStringToHsva(raw),\n      rgba: rgba,\n      hex: rgbaToHex(rgba),\n    };\n  } else if (raw.startsWith('rgb')) {\n    const rgba = rgbStringToRgba(raw);\n    return {\n      hsva: rgbStringToHsva(raw),\n      rgba: rgba,\n      hex: rgbaToHex(rgba),\n    };\n  } else if (raw.startsWith('hsv')) {\n    const hsva = hsvaStringToHsva(raw);\n    const rgba = hsvaToRgba(hsva);\n    const hex = hsvaToHex(hsva);\n    return {\n      hsva,\n      rgba,\n      hex,\n    };\n  } else {\n    throw new Error('Semi ColorPicker: error on static colorStringToValue method, input value is invalid: ' + raw);\n  }\n};\n\n\nexport type { ColorValue };\nexport * from '@douyinfe/semi-foundation/colorPicker/interface';\n\nexport type ColorPickerType = typeof ColorPicker & {\n  colorStringToValue: typeof colorStringToValue\n}\nconst BaseColorPicker = ColorPicker as ColorPickerType\nBaseColorPicker.colorStringToValue = colorStringToValue\nexport default BaseColorPicker;\n"],"names":["propsType","alpha","type","Boolean","required","bottomSlot","Object","className","String","defaultFormat","defaultValue","eyeDropper","height","Number","onChange","Function","popoverProps","style","topSlot","usePopover","value","width","defaultProps","hsva","h","s","v","a","rgba","r","g","b","hex","vuePropsType","vuePropsMake","ColorPicker","defineComponent","props","name","setup","attrs","expose","slots","useSlots","initValue","state","reactive","currentColor","adapter","adapterInject","useBaseComponent","adapter_","notifyChange","foundation","ColorPickerFoundation","renderPicker","userClassName","cls","cssClasses","PREFIX","getCurrentColor","_createVNode","_mergeProps","ColorChooseArea","handleChange","ColorSlider","AlphaSlider","DataPart","Popover","default","backgroundColor","colorStringToValue","raw","startsWith","hexToHsva","hexToRgba","rgbaStringToRgba","rgbaStringToHsva","rgbaToHex","rgbStringToRgba","rgbStringToHsva","hsvaStringToHsva","hsvaToRgba","hsvaToHex","Error","BaseColorPicker"],"mappings":"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"}