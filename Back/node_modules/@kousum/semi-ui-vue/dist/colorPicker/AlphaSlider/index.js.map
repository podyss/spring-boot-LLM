{"version":3,"file":"index.js","sources":["../../../src/components/colorPicker/AlphaSlider/index.tsx"],"sourcesContent":["import { hsvaToHslaString, hsvaToRgbaString } from '@douyinfe/semi-foundation/colorPicker/utils/convert';\nimport { round } from '@douyinfe/semi-foundation/colorPicker/utils/round';\nimport { cssClasses } from '@douyinfe/semi-foundation/colorPicker/constants';\nimport AlphaSliderFoundation, {\n  AlphaSliderAdapter,\n  AlphaSliderBaseProps,\n  AlphaSliderBaseState,\n} from '@douyinfe/semi-foundation/colorPicker/AlphaSliderFoundation';\nimport { CSSProperties, defineComponent, h, reactive, ref, useSlots, watch } from 'vue';\nimport { CombineProps } from '../../interface';\nimport { useBaseComponent } from '../../_base/baseComponent';\n\nexport interface AlphaSliderProps extends AlphaSliderBaseProps {\n  className?: string;\n  style?: CSSProperties;\n}\n\nexport interface AlphaSliderState extends AlphaSliderBaseState {}\n\nexport const vuePropsType: CombineProps<AlphaSliderProps> = {\n  className: String,\n  style: Object,\n  foundation: {\n    type: Object,\n    required: true,\n  },\n  handleSize: {\n    type: Number,\n    required: true,\n  },\n  height: {\n    type: Number,\n    required: true,\n  },\n  hsva: {\n    type: Object,\n    required: true,\n  },\n  width: {\n    type: Number,\n    required: true,\n  },\n};\nconst AlphaSlider = defineComponent({\n  props: { ...vuePropsType },\n  name: 'AlphaSlider',\n  setup(props, { attrs }) {\n    const slots = useSlots();\n    const dom = ref();\n    const state = reactive<AlphaSliderState>({\n      handlePosition: props.hsva.a * props.width - props.handleSize / 2,\n      isHandleGrabbing: false,\n    });\n    const { adapter: adapterInject } = useBaseComponent(props, state);\n    function adapter_(): AlphaSliderAdapter<AlphaSliderProps, AlphaSliderState> {\n      return {\n        ...adapterInject(),\n        handleMouseDown: (e: any) => {\n          state.isHandleGrabbing = true;\n          window.addEventListener('mousemove', foundation.setHandlePositionByMousePosition);\n          window.addEventListener('mouseup', foundation.handleMouseUp);\n        },\n        handleMouseUp: (e: MouseEvent) => {\n          state.isHandleGrabbing = false;\n          window.removeEventListener('mousemove', foundation.setHandlePositionByMousePosition);\n          window.removeEventListener('mouseup', foundation.handleMouseUp);\n        },\n        getColorPickerFoundation: () => props.foundation,\n        getDOM: () => dom.value,\n      };\n    }\n    const adapter = adapter_();\n    const foundation = new AlphaSliderFoundation(adapter);\n\n    watch([() => props.hsva.a, () => props.width, () => props.handleSize], (value, [prevPropsHsvaA], onCleanup) => {\n      if (prevPropsHsvaA !== props.hsva.a) {\n        state.handlePosition = props.hsva.a * props.width - props.handleSize / 2;\n      }\n    });\n    const handleClick = (e: MouseEvent) => {\n      foundation.setHandlePositionByMousePosition(e);\n      foundation.handleMouseDown(e);\n    };\n\n    return () => {\n      const colorFrom = hsvaToHslaString({ ...props.hsva, a: 0 });\n      const colorTo = hsvaToHslaString({ ...props.hsva, a: 1 });\n\n      const alphaSliderBackground = `linear-gradient(90deg, ${colorFrom}, ${colorTo})`;\n      return (\n        <div\n          class={`${cssClasses.PREFIX}-alphaSlider`}\n          ref={dom}\n          aria-label=\"Alpha\"\n          aria-valuetext={`${round(props.hsva.a * 100)}%`}\n          onMousedown={handleClick}\n          style={{\n            width: props.width + 'px',\n            height: props.height + 'px',\n            ...props.style,\n          }}\n        >\n          <div class={`${cssClasses.PREFIX}-alphaSliderInner`} style={{ background: alphaSliderBackground }}>\n            <div\n              class={`${cssClasses.PREFIX}-alphaHandle`}\n              style={{\n                width: props.handleSize + 'px',\n                height: props.handleSize + 'px',\n                left: state.handlePosition + 'px',\n                top: `50%`,\n                transform: `translateY(-50%)`,\n                backgroundColor: hsvaToRgbaString(props.hsva),\n              }}\n              onMousedown={(e) => foundation.handleMouseDown(e)}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  },\n});\n\nexport default AlphaSlider;\n"],"names":["vuePropsType","className","String","style","Object","foundation","type","required","handleSize","Number","height","hsva","width","AlphaSlider","defineComponent","props","name","setup","attrs","useSlots","dom","ref","state","reactive","handlePosition","a","isHandleGrabbing","adapter","adapterInject","useBaseComponent","adapter_","handleMouseDown","e","window","addEventListener","setHandlePositionByMousePosition","handleMouseUp","removeEventListener","getColorPickerFoundation","getDOM","value","AlphaSliderFoundation","watch","prevPropsHsvaA","onCleanup","handleClick","colorFrom","hsvaToHslaString","colorTo","alphaSliderBackground","_createVNode","cssClasses","PREFIX","round","background","left","top","transform","backgroundColor","hsvaToRgbaString"],"mappings":"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"}