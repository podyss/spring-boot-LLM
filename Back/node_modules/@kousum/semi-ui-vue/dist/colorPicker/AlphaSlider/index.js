import { defineComponent as w, useSlots as f, ref as g, reactive as b, watch as S, createVNode as i } from "vue";
import { hsvaToHslaString as r, hsvaToRgbaString as y } from '@douyinfe/semi-foundation/lib/es/colorPicker/utils/convert';
import { round as P } from '@douyinfe/semi-foundation/lib/es/colorPicker/utils/round';
import { cssClasses as d } from '@douyinfe/semi-foundation/lib/es/colorPicker/constants';
import M from '@douyinfe/semi-foundation/lib/es/colorPicker/AlphaSliderFoundation';
import { useBaseComponent as H } from "../../_base/baseComponent";
const x = {
  className: String,
  style: Object,
  foundation: {
    type: Object,
    required: !0
  },
  handleSize: {
    type: Number,
    required: !0
  },
  height: {
    type: Number,
    required: !0
  },
  hsva: {
    type: Object,
    required: !0
  },
  width: {
    type: Number,
    required: !0
  }
}, B = /* @__PURE__ */ w({
  props: {
    ...x
  },
  name: "AlphaSlider",
  setup(e, {
    attrs: C
  }) {
    f();
    const s = g(), n = b({
      handlePosition: e.hsva.a * e.width - e.handleSize / 2,
      isHandleGrabbing: !1
    }), {
      adapter: u
    } = H(e, n);
    function h() {
      return {
        ...u(),
        handleMouseDown: (t) => {
          n.isHandleGrabbing = !0, window.addEventListener("mousemove", a.setHandlePositionByMousePosition), window.addEventListener("mouseup", a.handleMouseUp);
        },
        handleMouseUp: (t) => {
          n.isHandleGrabbing = !1, window.removeEventListener("mousemove", a.setHandlePositionByMousePosition), window.removeEventListener("mouseup", a.handleMouseUp);
        },
        getColorPickerFoundation: () => e.foundation,
        getDOM: () => s.value
      };
    }
    const c = h(), a = new M(c);
    S([() => e.hsva.a, () => e.width, () => e.handleSize], (t, [o], l) => {
      o !== e.hsva.a && (n.handlePosition = e.hsva.a * e.width - e.handleSize / 2);
    });
    const m = (t) => {
      a.setHandlePositionByMousePosition(t), a.handleMouseDown(t);
    };
    return () => {
      const t = r({
        ...e.hsva,
        a: 0
      }), o = r({
        ...e.hsva,
        a: 1
      }), l = `linear-gradient(90deg, ${t}, ${o})`;
      return i("div", {
        class: `${d.PREFIX}-alphaSlider`,
        ref: s,
        "aria-label": "Alpha",
        "aria-valuetext": `${P(e.hsva.a * 100)}%`,
        onMousedown: m,
        style: {
          width: e.width + "px",
          height: e.height + "px",
          ...e.style
        }
      }, [i("div", {
        class: `${d.PREFIX}-alphaSliderInner`,
        style: {
          background: l
        }
      }, [i("div", {
        class: `${d.PREFIX}-alphaHandle`,
        style: {
          width: e.handleSize + "px",
          height: e.handleSize + "px",
          left: n.handlePosition + "px",
          top: "50%",
          transform: "translateY(-50%)",
          backgroundColor: y(e.hsva)
        },
        onMousedown: (v) => a.handleMouseDown(v)
      }, null)])]);
    };
  }
});
export {
  B as default,
  x as vuePropsType
};
//# sourceMappingURL=index.js.map
