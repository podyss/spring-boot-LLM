import { defineComponent as m, useSlots as c, ref as w, reactive as f, watch as v, createVNode as a } from "vue";
import P from '@douyinfe/semi-foundation/lib/es/colorPicker/foundation';
import { cssClasses as d } from '@douyinfe/semi-foundation/lib/es/colorPicker/constants';
import b from "classnames";
import y from '@douyinfe/semi-foundation/lib/es/colorPicker/ColorSliderFoundation';
import { useBaseComponent as g } from "../../_base/baseComponent";
const M = {
  className: String,
  style: Object,
  foundation: {
    type: Object,
    required: !0
  },
  handleSize: {
    type: Number,
    required: !0
  },
  height: {
    type: Number,
    required: !0
  },
  hue: {
    type: Number,
    required: !0
  },
  width: {
    type: Number,
    required: !0
  }
}, F = /* @__PURE__ */ m({
  props: {
    ...M
  },
  name: "ColorSlider",
  setup(e, {
    attrs: S
  }) {
    c();
    const i = w(), o = f({
      handlePosition: e.hue / 360 * e.width - e.handleSize / 2,
      isHandleGrabbing: !1
    }), {
      adapter: r
    } = g(e, o);
    function s() {
      return {
        ...r(),
        handleMouseDown: (n) => {
          o.isHandleGrabbing = !0, window.addEventListener("mousemove", t.setHandlePositionByMousePosition), window.addEventListener("mouseup", t.handleMouseUp);
        },
        handleMouseUp: (n) => {
          o.isHandleGrabbing = !1, window.removeEventListener("mousemove", t.setHandlePositionByMousePosition), window.removeEventListener("mouseup", t.handleMouseUp);
        },
        getColorPickerFoundation: () => e.foundation,
        getDOM: () => i.value
      };
    }
    const u = s(), t = new y(u);
    v([() => e.hue], (n, [h], C) => {
      h !== e.hue && (o.handlePosition = e.hue / 360 * e.width - e.handleSize / 2);
    });
    const l = (n) => {
      t.setHandlePositionByMousePosition(n), t.handleMouseDown(n);
    };
    return () => a("div", {
      class: b(`${d.PREFIX}-colorSlider`, e.className),
      ref: i,
      onMousedown: l,
      style: {
        width: e.width + "px",
        height: e.height + "px",
        ...e.style
      }
    }, [a("div", {
      class: `${d.PREFIX}-handle`,
      style: {
        width: e.handleSize + "px",
        height: e.handleSize + "px",
        left: o.handlePosition + "px",
        top: "50%",
        transform: "translateY(-50%)",
        backgroundColor: P.hsvaToHslString({
          h: e.hue,
          s: 100,
          v: 100,
          a: 1
        })
      },
      onMousedown: (n) => t.handleMouseDown(n)
    }, null)]);
  }
});
export {
  F as default,
  M as vuePropsType
};
//# sourceMappingURL=index.js.map
