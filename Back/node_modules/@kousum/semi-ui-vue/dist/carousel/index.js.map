{"version":3,"file":"index.js","sources":["../../src/components/carousel/index.tsx"],"sourcesContent":["import cls from 'classnames';\nimport * as PropTypes from '../PropTypes';\nimport { useBaseComponent } from '../_base/baseComponent';\nimport { CarouselProps } from './interface';\nimport { cssClasses, numbers, strings } from '@douyinfe/semi-foundation/carousel/constants';\nimport CarouselFoundation, { CarouselAdapter } from '@douyinfe/semi-foundation/carousel/foundation';\nimport CarouselIndicator from './CarouselIndicator';\nimport CarouselArrow from './CarouselArrow';\nimport '@douyinfe/semi-foundation/carousel/carousel.scss';\nimport { debounce, isEqual, pick } from 'lodash';\nimport isNullOrUndefined from '@douyinfe/semi-foundation/utils/isNullOrUndefined';\nimport {\n  cloneVNode,\n  ComponentObjectPropsOptions,\n  defineComponent,\n  Fragment,\n  h,\n  isVNode,\n  onBeforeUnmount,\n  onMounted,\n  PropType,\n  reactive,\n  shallowRef,\n  useSlots,\n  VNode,\n  watch,\n} from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { getFragmentChildren } from '../_utils';\nimport { CombineProps } from '../interface';\n\nexport interface CarouselState {\n  activeIndex: number;\n  children: VNode[];\n  preIndex: number;\n  isReverse: boolean;\n  isInit: boolean;\n}\n\nconst propTypes: CombineProps<CarouselProps> = {\n  activeIndex: PropTypes.number,\n  animation: PropTypes.string as PropType<CarouselProps['animation']>,\n  arrowProps: PropTypes.object,\n  autoPlay: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  className: PropTypes.string,\n  defaultActiveIndex: PropTypes.number,\n  indicatorPosition: PropTypes.string as PropType<CarouselProps['indicatorPosition']>,\n  indicatorSize: PropTypes.string as PropType<CarouselProps['indicatorSize']>,\n  indicatorType: PropTypes.string as PropType<CarouselProps['indicatorType']>,\n  theme: PropTypes.string as PropType<CarouselProps['theme']>,\n  onChange: PropTypes.func as PropType<CarouselProps['onChange']>,\n  arrowType: PropTypes.string as PropType<CarouselProps['arrowType']>,\n  showArrow: PropTypes.bool,\n  showIndicator: PropTypes.bool,\n  slideDirection: PropTypes.string as PropType<CarouselProps['slideDirection']>,\n  speed: PropTypes.number,\n  style: PropTypes.object,\n  trigger: PropTypes.string as PropType<CarouselProps['trigger']>,\n};\n\nconst defaultProps: CarouselProps = {\n  // children: [],\n  animation: 'slide',\n  autoPlay: true,\n  arrowType: 'always',\n  defaultActiveIndex: numbers.DEFAULT_ACTIVE_INDEX,\n  indicatorPosition: 'center',\n  indicatorSize: 'small',\n  indicatorType: 'dot',\n  theme: 'light',\n  onChange: () => undefined,\n  showArrow: true,\n  showIndicator: true,\n  slideDirection: 'left',\n  speed: numbers.DEFAULT_SPEED,\n  trigger: 'click',\n};\nexport const vuePropsType = vuePropsMake<CarouselProps>(propTypes, defaultProps);\nconst Carousel = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Carousel',\n  setup(props, { expose }) {\n    const slots = useSlots();\n    const childrenRef = shallowRef<{ children: VNode[] }>({\n      children: [],\n    });\n\n    let preChildren: VNode[] = [];\n    const state = reactive<CarouselState>({\n      activeIndex: -1,\n      children: [],\n      preIndex: -1,\n      isReverse: false,\n      isInit: true,\n    });\n\n    const { adapter: adapterInject, getDataAttr } = useBaseComponent<CarouselProps>(props, state);\n\n    function adapter_(): CarouselAdapter<CarouselProps, CarouselState> {\n      return {\n        ...adapterInject(),\n        getStates() {\n          return {\n            ...state,\n            children: preChildren,\n          };\n        },\n        notifyChange: (activeIndex: number, preIndex: number): void => {\n          props.onChange(activeIndex, preIndex);\n        },\n        setNewActiveIndex: (activeIndex: number): void => {\n          state.activeIndex = activeIndex;\n        },\n        setPreActiveIndex: (preIndex: number): void => {\n          state.preIndex = preIndex;\n        },\n        setIsReverse: (isReverse: boolean): void => {\n          state.isReverse = isReverse;\n        },\n        setIsInit: (isInit: boolean): void => {\n          state.isInit = isInit;\n        },\n      };\n    }\n\n    const adapter = adapter_();\n    const foundation = new CarouselFoundation(adapter);\n\n    const defaultActiveIndex = foundation.getDefaultActiveIndex();\n    state.activeIndex = defaultActiveIndex;\n    state.preIndex = defaultActiveIndex;\n\n    function getDerivedStateFromProps(props: CarouselProps): Partial<CarouselState> {\n      const states: Partial<CarouselState> = {};\n      if (!isNullOrUndefined(props.activeIndex) && props.activeIndex !== state.activeIndex) {\n        states.activeIndex = props.activeIndex;\n      }\n      return states;\n    }\n\n    watch([() => props.activeIndex, () => state.activeIndex], (val) => {\n      const newState = getDerivedStateFromProps({ ...props });\n      if (newState) {\n        Object.keys(newState).forEach((key) => {\n          state[key] = newState[key];\n        });\n      }\n    });\n\n    onMounted(() => {\n      handleAutoPlay();\n    });\n    onBeforeUnmount(() => {\n      foundation.destroy();\n    });\n\n    const play = (): void => {\n      foundation.setForcePlay(true);\n      return foundation.handleAutoPlay();\n    };\n\n    const stop = (): void => {\n      foundation.setForcePlay(false);\n      return foundation.stop();\n    };\n\n    const goTo = (targetIndex: number): void => {\n      return foundation.goTo(targetIndex);\n    };\n\n    const prev = (): void => {\n      return foundation.prev();\n    };\n\n    const next = (): void => {\n      return foundation.next();\n    };\n\n    expose({\n      play,\n      stop,\n      goTo,\n      prev,\n      next,\n    });\n\n    const handleAutoPlay = (): void => {\n      if (!foundation.getIsControlledComponent()) {\n        foundation.handleAutoPlay();\n      }\n    };\n\n    const handleMouseEnter = (): void => {\n      const { autoPlay } = props;\n      if (autoPlay === true || (typeof autoPlay === 'object' && autoPlay.hoverToPause)) {\n        foundation.stop();\n      }\n    };\n\n    const handleMouseLeave = (): void => {\n      const { autoPlay } = props;\n      if ((typeof autoPlay !== 'object' || autoPlay.hoverToPause) && !foundation.getIsControlledComponent()) {\n        foundation.handleAutoPlay();\n      }\n    };\n\n    const onIndicatorChange = (activeIndex: number): void => {\n      return foundation.onIndicatorChange(activeIndex);\n    };\n\n    // function getChildren() {\n    //   const originChildren:VNode[] = slots.default?.()?.[0].children as any  || [];\n    //   return originChildren.filter(child => {\n    //     return isVNode(child);\n    //   });\n    // }\n\n    const getValidIndex = (activeIndex: number): number => {\n      return foundation.getValidIndex(activeIndex);\n    };\n\n    const renderChildren = () => {\n      const { speed, animation } = props;\n      const { activeIndex, preIndex, isInit } = state;\n\n      return (\n        <Fragment>\n          {preChildren.map((child: any, index: number) => {\n            const isCurrent = index === activeIndex;\n            const isPrev = index === getValidIndex(activeIndex - 1);\n            const isNext = index === getValidIndex(activeIndex + 1);\n\n            const animateStyle = {\n              transitionTimingFunction: 'ease',\n              transitionDuration: `${speed}ms`,\n              animationTimingFunction: 'ease',\n              animationDuration: `${speed}ms`,\n            };\n\n            return cloneVNode(child, {\n              style: {\n                ...child.props.style,\n                ...animateStyle,\n              },\n              className: cls(child.props.class, {\n                [`${cssClasses.CAROUSEL_CONTENT}-item-prev`]: isPrev,\n                [`${cssClasses.CAROUSEL_CONTENT}-item-next`]: isNext,\n                [`${cssClasses.CAROUSEL_CONTENT}-item-current`]: isCurrent,\n                [`${cssClasses.CAROUSEL_CONTENT}-item`]: true,\n                [`${cssClasses.CAROUSEL_CONTENT}-item-active`]: isCurrent,\n                [`${cssClasses.CAROUSEL_CONTENT}-item-slide-in`]: animation === 'slide' && !isInit && isCurrent,\n                [`${cssClasses.CAROUSEL_CONTENT}-item-slide-out`]:\n                  animation === 'slide' && !isInit && index === preIndex,\n              }),\n            });\n          })}\n        </Fragment>\n      );\n    };\n\n    const renderIndicator = () => {\n      const { activeIndex } = state;\n      const { showIndicator, indicatorType, theme, indicatorPosition, indicatorSize, trigger } = props;\n\n      const carouselIndicatorCls = cls({\n        [cssClasses.CAROUSEL_INDICATOR]: true,\n      });\n\n      if (showIndicator && preChildren.length > 1) {\n        return (\n          <div class={carouselIndicatorCls}>\n            <CarouselIndicator\n              type={indicatorType}\n              total={preChildren.length}\n              activeIndex={activeIndex}\n              position={indicatorPosition}\n              trigger={trigger}\n              size={indicatorSize}\n              theme={theme}\n              onIndicatorChange={onIndicatorChange}\n            />\n          </div>\n        );\n      }\n      return null;\n    };\n\n    const renderArrow = () => {\n      const { showArrow, arrowType, theme, arrowProps } = props;\n\n      if (showArrow && preChildren.length > 1) {\n        return <CarouselArrow type={arrowType} theme={theme} prev={prev} next={next} arrowProps={arrowProps} />;\n      }\n      return null;\n    };\n\n    return () => {\n      preChildren = getFragmentChildren(slots);\n\n      const { animation, className, style, slideDirection } = props;\n      const { isReverse } = state;\n\n      const carouselWrapperCls = cls(className, {\n        [cssClasses.CAROUSEL]: true,\n      });\n\n      return (\n        <div\n          // role='listbox'\n          // tabIndex={0}\n          class={carouselWrapperCls}\n          style={style}\n          onMouseenter={debounce(handleMouseEnter, 400)}\n          onMouseleave={debounce(handleMouseLeave, 400)}\n          {...getDataAttr()}\n          // onMouseEnter={handleMouseEnter}\n          // onMouseLeave={handleMouseLeave}\n          // onKeyDown={e => foundation.handleKeyDown(e)}\n        >\n          <div\n            class={cls([`${cssClasses.CAROUSEL_CONTENT}-${animation}`], {\n              [`${cssClasses.CAROUSEL_CONTENT}`]: true,\n              [`${cssClasses.CAROUSEL_CONTENT}-reverse`]: slideDirection === 'left' ? isReverse : !isReverse,\n            })}\n            x-semi-prop=\"children\"\n          >\n            {renderChildren()}\n          </div>\n          {renderIndicator()}\n          {renderArrow()}\n        </div>\n      );\n    };\n  },\n});\n\nexport default Carousel;\n"],"names":["propTypes","activeIndex","PropTypes","number","animation","string","arrowProps","object","autoPlay","oneOfType","bool","className","defaultActiveIndex","indicatorPosition","indicatorSize","indicatorType","theme","onChange","func","arrowType","showArrow","showIndicator","slideDirection","speed","style","trigger","defaultProps","numbers","DEFAULT_ACTIVE_INDEX","DEFAULT_SPEED","vuePropsType","vuePropsMake","Carousel","defineComponent","props","name","setup","expose","slots","useSlots","shallowRef","children","preChildren","state","reactive","preIndex","isReverse","isInit","adapter","adapterInject","getDataAttr","useBaseComponent","adapter_","getStates","notifyChange","setNewActiveIndex","setPreActiveIndex","setIsReverse","setIsInit","foundation","CarouselFoundation","getDefaultActiveIndex","getDerivedStateFromProps","states","isNullOrUndefined","watch","val","newState","Object","keys","forEach","key","onMounted","handleAutoPlay","onBeforeUnmount","destroy","play","setForcePlay","stop","goTo","targetIndex","prev","next","getIsControlledComponent","handleMouseEnter","hoverToPause","handleMouseLeave","onIndicatorChange","getValidIndex","renderChildren","_createVNode","_Fragment","map","child","index","isCurrent","isPrev","isNext","animateStyle","transitionTimingFunction","transitionDuration","animationTimingFunction","animationDuration","cloneVNode","cls","class","cssClasses","CAROUSEL_CONTENT","renderIndicator","carouselIndicatorCls","CAROUSEL_INDICATOR","length","CarouselIndicator","renderArrow","CarouselArrow","getFragmentChildren","carouselWrapperCls","CAROUSEL","_mergeProps","debounce"],"mappings":"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"}