import { defineComponent as u, useSlots as C, createVNode as t, mergeProps as i } from "vue";
import n from "classnames";
import { cssClasses as r } from '@douyinfe/semi-foundation/lib/es/carousel/constants';
import { IconChevronLeft as w, IconChevronRight as O } from "@kousum/semi-icons-vue";
import { get as s } from "lodash";
const d = {
  type: String,
  theme: String,
  prev: Function,
  next: Function,
  arrowProps: Object
}, x = /* @__PURE__ */ u({
  props: {
    ...d
  },
  name: "CarouselArrow",
  setup(o, {}) {
    C();
    const a = () => s(o, "arrowProps.leftArrow.children", t(w, {
      "aria-label": "Previous index",
      size: "inherit"
    }, null)), l = () => s(o, "arrowProps.rightArrow.children", t(O, {
      "aria-label": "Next index",
      size: "inherit"
    }, null));
    return () => {
      const {
        type: c,
        theme: e,
        prev: p,
        next: R
      } = o, m = n({
        [r.CAROUSEL_ARROW]: !0,
        [`${r.CAROUSEL_ARROW}-${e}`]: e,
        [`${r.CAROUSEL_ARROW}-hover`]: c === "hover"
      }), A = n({
        [`${r.CAROUSEL_ARROW}-prev`]: !0,
        [`${r.CAROUSEL_ARROW}-${e}`]: e
      }), h = n({
        [`${r.CAROUSEL_ARROW}-next`]: !0,
        [`${r.CAROUSEL_ARROW}-${e}`]: e
      });
      return t("div", {
        class: m
      }, [t("div", i({
        className: A,
        onClick: p
      }, s(o, "arrowProps.leftArrow.props"), {
        "x-semi-prop": "arrowProps.leftArrow.children"
      }), [a()]), t("div", i({
        className: h,
        onClick: R
      }, s(o, "arrowProps.rightArrow.props"), {
        "x-semi-prop": "arrowProps.rightArrow.children"
      }), [l()])]);
    };
  }
});
export {
  x as default,
  d as vuePropsType
};
//# sourceMappingURL=CarouselArrow.js.map
