import { defineComponent as X, useSlots as q, reactive as J, watch as v, onMounted as Q, onBeforeUnmount as Y, createVNode as c, mergeProps as Z } from "vue";
import * as e from "../PropTypes";
import { vuePropsMake as ee } from "../PropTypes";
import te from "../_portal";
import oe from "classnames";
import { cssClasses as ne, strings as k } from '@douyinfe/semi-foundation/lib/es/sideSheet/constants';
import ie from "./SideSheetContent";
import { noop as le } from "lodash";
import ae from '@douyinfe/semi-foundation/lib/es/sideSheet/sideSheetFoundation';
import '@douyinfe/semi-foundation/lib/es/sideSheet/sideSheet.css';
import N from "../_cssAnimation";
import { useConfigContext as se } from "../configProvider/context/Consumer";
import { useBaseComponent as re } from "../_base/baseComponent";
import { getScrollbarWidth as de } from "../_utils";
const l = ne.PREFIX, ce = k.WIDTH, me = k.HEIGHT, fe = {
  bodyStyle: e.object,
  headerStyle: e.object,
  className: e.string,
  closable: e.bool,
  disableScroll: e.bool,
  getPopupContainer: e.func,
  height: e.oneOfType([e.number, e.string]),
  mask: e.bool,
  maskClosable: e.bool,
  maskStyle: e.object,
  motion: e.oneOfType([e.bool, e.object, e.func]),
  onCancel: e.func,
  placement: e.string,
  size: e.string,
  style: e.object,
  title: e.node,
  visible: e.bool,
  width: e.oneOfType([e.number, e.string]),
  zIndex: e.number,
  afterVisibleChange: e.func,
  closeOnEsc: e.bool,
  footer: e.node,
  keepDOM: e.bool,
  "aria-label": e.string,
  closeIcon: e.node
}, ue = {
  visible: !1,
  motion: !0,
  mask: !0,
  placement: "right",
  closable: !0,
  footer: null,
  zIndex: 1e3,
  maskClosable: !0,
  size: "small",
  disableScroll: !0,
  closeOnEsc: !1,
  afterVisibleChange: le,
  keepDOM: !1
}, be = ee(fe, ue), Ie = /* @__PURE__ */ X({
  props: {
    ...be
  },
  name: "SideSheet",
  setup(o, {}) {
    const P = q();
    let d = "", b = 0, m = "100%";
    const n = J({
      displayNone: !o.visible
    }), {
      context: $
    } = se(), {
      adapter: E
    } = re(o, n);
    function O() {
      return {
        ...E(),
        disabledBodyScroll: () => {
          const {
            getPopupContainer: t
          } = o;
          d = document.body.style.overflow || "", !t && d !== "hidden" && (document.body.style.overflow = "hidden", document.body.style.width = `calc(${m || "100%"} - ${b}px)`);
        },
        enabledBodyScroll: () => {
          const {
            getPopupContainer: t
          } = o;
          !t && d !== "hidden" && (document.body.style.overflow = d, document.body.style.width = m);
        },
        notifyCancel: (t) => {
          o.onCancel && o.onCancel(t);
        },
        notifyVisibleChange: (t) => {
          o.afterVisibleChange(t);
        },
        setOnKeyDownListener: () => {
          window && window.addEventListener("keydown", y);
        },
        removeKeyDownListener: () => {
          window && window.removeEventListener("keydown", y);
        },
        toggleDisplayNone: (t) => {
          t !== n.displayNone && (n.displayNone = t);
        }
      };
    }
    const D = O(), a = new ae(D);
    function x(t) {
      const i = {};
      return t.visible && n.displayNone && (i.displayNone = !1), !t.visible && !t.motion && !n.displayNone && (i.displayNone = !0), i;
    }
    v([() => o.visible, () => o.motion, () => n.displayNone], () => {
      const t = x({
        ...o
      });
      t && Object.keys(t).forEach((i) => {
        n[i] = t[i];
      });
    }), Q(() => {
      b = de(), m = document.body.style.width, o.visible && a.beforeShow();
    }), v([() => o.visible, () => n.displayNone], (t, [i, s], f) => {
      !i && o.visible && a.beforeShow(), i && !o.visible && a.afterHide(), s !== n.displayNone && a.onVisibleChange(!n.displayNone);
    }), Y(() => {
      o.visible && a.destroy();
    });
    const z = (t) => {
      a.handleCancel(t);
    }, y = (t) => {
      a.handleKeyDown(t);
    }, h = () => {
      a.toggleDisplayNone(!o.visible);
    };
    function I() {
      const {
        placement: t,
        className: i,
        width: s,
        height: f,
        motion: ye,
        visible: r,
        style: T,
        maskStyle: _,
        size: p,
        zIndex: g,
        getPopupContainer: u,
        keepDOM: j,
        afterVisibleChange: he,
        disableScroll: pe,
        closeOnEsc: ge,
        ...B
      } = o;
      let w = {
        zIndex: g
      };
      u && (w = {
        zIndex: g,
        position: "static"
      });
      const {
        direction: H
      } = $.value, C = t === "left" || t === "right", S = t === "top" || t === "bottom", V = C ? s || ce[p] : "100%", L = S ? f || me : "100%", M = oe(l, i, {
        [`${l}-${t}`]: t,
        [`${l}-popup`]: u,
        [`${l}-horizontal`]: S,
        [`${l}-rtl`]: H === "rtl",
        [`${l}-hidden`]: j && n.displayNone
      }), W = {
        ...C ? s ? {
          width: s
        } : {} : {
          width: "100%"
        },
        ...B,
        visible: r,
        motion: !1,
        size: p,
        className: M,
        width: V,
        height: L,
        onClose: z
      }, K = o.visible || o.keepDOM || o.motion && !n.displayNone;
      return c(N, {
        motion: o.motion,
        animationState: r ? "enter" : "leave",
        startClassName: r ? `${l}-animation-mask_show` : `${l}-animation-mask_hide`,
        onAnimationEnd: h,
        children: ({
          animationClassName: A,
          animationEventsNeedBind: F
        }) => c(N, {
          motion: o.motion,
          animationState: r ? "enter" : "leave",
          startClassName: r ? `${l}-animation-content_show_${o.placement}` : `${l}-animation-content_hide_${o.placement}`,
          onAnimationEnd: h,
          children: ({
            animationClassName: R,
            animationStyle: G,
            animationEventsNeedBind: U
          }) => K ? c(te, {
            getPopupContainer: u,
            style: w
          }, {
            default: () => [c(ie, Z(W, {
              maskExtraProps: F,
              wrapperExtraProps: U,
              dialogClassName: R,
              maskClassName: A,
              maskStyle: {
                ..._
              },
              style: {
                ...G,
                ...T
              }
            }), {
              default: P.default
            })]
          }) : null
        }, null)
      }, null);
    }
    return () => I();
  }
});
export {
  Ie as default,
  be as vuePropsType
};
//# sourceMappingURL=index.js.map
