import { defineComponent as v, useSlots as P, onMounted as E, onBeforeUnmount as N, createVNode as l, mergeProps as d } from "vue";
import * as e from "../PropTypes";
import { vuePropsMake as $ } from "../PropTypes";
import u from "classnames";
import { cssClasses as j } from '@douyinfe/semi-foundation/lib/es/sideSheet/constants';
import T from "../iconButton";
import { noop as q } from "lodash";
import { IconClose as I } from "@kousum/semi-icons-vue";
import M from '@douyinfe/semi-foundation/lib/es/utils/getDataAttr';
const r = j.PREFIX, z = {
  size: {
    type: String,
    required: !0
  },
  onClose: e.func,
  closeIcon: e.node,
  mask: e.bool,
  maskStyle: e.object,
  maskClosable: e.bool,
  maskClassName: e.string,
  title: e.node,
  closable: e.bool,
  headerStyle: e.object,
  width: {
    type: [e.string, e.number],
    required: !0
  },
  height: {
    type: [e.string, e.number],
    required: !0
  },
  style: {
    type: e.object,
    required: !0
  },
  bodyStyle: e.object,
  className: {
    type: e.string,
    required: !0
  },
  dialogClassName: e.string,
  footer: e.node,
  "aria-label": e.string,
  maskExtraProps: e.object,
  wrapperExtraProps: e.object,
  // children: PropTypes.node as PropType<SideSheetContentProps['children']>,
  motion: e.bool,
  visible: e.bool
}, A = {
  onClose: q
}, B = $(z, A), oe = /* @__PURE__ */ v({
  props: {
    ...B
  },
  name: "SideSheetContent",
  setup(t, {}) {
    const n = P();
    let g;
    E(() => {
    }), N(() => {
      clearTimeout(g);
    });
    const b = (o) => {
      o.target === o.currentTarget && y(o);
    }, y = (o) => {
      const {
        onClose: s
      } = t;
      s && s(o);
    };
    function k() {
      const {
        mask: o,
        maskStyle: s,
        maskClosable: a
      } = t;
      return o ? l("div", d({
        "aria-hidden": !0,
        key: "mask",
        class: u(`${r}-mask`, t.maskClassName ?? ""),
        style: s,
        onClick: a ? b : null
      }, t.maskExtraProps), null) : null;
    }
    function C() {
      const {
        title: o,
        closable: s,
        headerStyle: a,
        closeIcon: i
      } = t;
      let c, m;
      if (o && (c = l("div", {
        class: `${r}-title`,
        "x-semi-prop": "title"
      }, [t.title])), s) {
        const f = i || l(I, null, null);
        m = l(T, {
          className: `${r}-close`,
          key: "close-btn",
          onClick: y,
          type: "tertiary",
          icon: f,
          theme: "borderless",
          size: "small"
        }, null);
      }
      return l("div", {
        class: `${r}-header`,
        role: "heading",
        "aria-level": 1,
        style: {
          ...a
        }
      }, [c, m]);
    }
    function p() {
      var i;
      const o = {};
      t.width && (o.width = typeof t.width == "string" ? t.width : t.width + "px", t.mask || (o.width = "100%")), t.height && (o.height = typeof t.height == "string" ? t.height : t.height + "px");
      const s = C();
      return l("div", d({
        key: "dialog-element",
        role: "dialog",
        tabindex: -1,
        class: u(`${r}-inner`, `${r}-inner-wrap`, t.dialogClassName ?? ""),
        style: {
          ...t.style,
          ...o
        }
      }, t.wrapperExtraProps), [l("div", {
        class: `${r}-content`
      }, [s, l("div", {
        class: `${r}-body`,
        style: t.bodyStyle,
        "x-semi-prop": "children"
      }, [(i = n.default) == null ? void 0 : i.call(n)]), t.footer ? l("div", {
        class: `${r}-footer`,
        "x-semi-prop": "footer"
      }, [t.footer]) : null])]);
    }
    return () => {
      const {
        mask: o,
        className: s,
        width: a,
        onClose: i,
        maskStyle: c,
        maskClosable: m,
        maskClassName: f,
        title: D,
        closable: F,
        headerStyle: H,
        height: R,
        style: U,
        size: V,
        bodyStyle: X,
        dialogClassName: G,
        footer: J,
        maskExtraProps: K,
        wrapperExtraProps: L,
        ...x
      } = t, S = u(s, {
        [`${r}-fixed`]: !o
      }), h = {};
      !o && a && (h.width = typeof a == "string" ? a : a + "px");
      const w = M(x);
      return l("div", d({
        class: S,
        style: h
      }, w), [k(), p()]);
    };
  }
});
export {
  oe as default,
  B as vuePropsType
};
//# sourceMappingURL=SideSheetContent.js.map
