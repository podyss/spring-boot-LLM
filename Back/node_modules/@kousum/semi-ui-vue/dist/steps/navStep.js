import { defineComponent as y, useSlots as x, createVNode as r } from "vue";
import * as e from "../PropTypes";
import { vuePropsMake as C } from "../PropTypes";
import { noop as N } from "lodash";
import g from "classnames";
import { stepsClasses as $ } from '@douyinfe/semi-foundation/lib/es/steps/constants';
import { IconChevronRight as k } from "@kousum/semi-icons-vue";
const P = {
  prefixCls: e.string,
  title: e.node,
  className: e.string,
  style: e.object,
  onClick: e.func,
  active: e.bool,
  onChange: e.func,
  stepNumber: [e.number, e.string],
  onKeyDown: e.func,
  role: e.string,
  "aria-label": e.string,
  index: e.number,
  total: e.number
}, S = {
  prefixCls: $.ITEM,
  active: !1,
  className: "",
  onChange: N
}, T = C(P, S), j = /* @__PURE__ */ y({
  props: {
    ...T
  },
  name: "NavStep",
  setup(a, {}) {
    return x(), () => {
      const {
        prefixCls: t,
        className: i,
        title: c,
        style: p,
        active: m,
        index: f,
        total: u,
        onClick: n,
        onKeyDown: l,
        onChange: s
      } = a, d = g(t, {
        [`${t}-active`]: m
      }, i), v = (o) => {
        n == null || n(o), s == null || s();
      }, b = (o) => {
        o.key === "Enter" && (l == null || l(o), s == null || s());
      };
      return r("div", {
        role: a.role,
        "aria-label": a["aria-label"],
        "aria-current": "step",
        tabindex: 0,
        class: d,
        style: p,
        onClick: (o) => v(o),
        onKeydown: b
      }, [r("div", {
        class: `${t}-container`
      }, [r("div", {
        class: `${t}-content`
      }, [r("div", {
        class: `${t}-title`
      }, [c])]), f !== u - 1 && r("div", {
        class: `${t}-icon`
      }, [r(k, {
        size: "small"
      }, null)])])]);
    };
  }
});
export {
  j as default,
  T as vuePropsType
};
//# sourceMappingURL=navStep.js.map
