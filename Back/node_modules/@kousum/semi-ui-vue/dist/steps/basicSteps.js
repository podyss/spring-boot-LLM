import { defineComponent as y, useSlots as v, useAttrs as z, createVNode as L, mergeProps as S, isVNode as T, cloneVNode as V } from "vue";
import * as e from "../PropTypes";
import { vuePropsMake as w } from "../PropTypes";
import x from "classnames";
import { stepsClasses as A } from '@douyinfe/semi-foundation/lib/es/steps/constants';
import { noop as F } from "lodash";
import j from '@douyinfe/semi-foundation/lib/es/utils/getDataAttr';
import { getFragmentChildren as k } from "../_utils";
const D = {
  prefixCls: e.string,
  className: e.string,
  style: e.object,
  current: e.number,
  initial: e.number,
  direction: e.string,
  status: e.string,
  hasLine: e.bool,
  children: e.node,
  onChange: e.func,
  "aria-label": e.string,
  size: e.string
}, E = {
  prefixCls: A.PREFIX,
  current: 0,
  direction: "horizontal",
  size: "",
  initial: 0,
  hasLine: !0,
  status: "process",
  onChange: F
}, I = w(D, E), O = /* @__PURE__ */ y({
  props: {
    ...I
  },
  name: "Steps",
  setup(p, {}) {
    const i = v(), d = z();
    return () => {
      var m;
      (m = i.default) == null || m.call(i);
      const {
        size: l,
        current: r,
        status: u,
        prefixCls: n,
        initial: c,
        direction: g,
        className: C,
        style: h,
        hasLine: b,
        onChange: f,
        ...N
      } = p, $ = () => k(i).filter((s) => T(s)).map((s, a) => {
        if (!s)
          return null;
        const o = c + a, t = {
          stepNumber: `${o + 1}`,
          size: l,
          ...s.props
        };
        return u === "error" && a === r - 1 && (t.className = `${n}-next-error`), s.props.status || (o === r ? t.status = u : o < r ? t.status = "finish" : t.status = "wait"), t.active = o === r, t.done = o < r, t.onChange = f ? () => {
          a !== r && f(a + c);
        } : void 0, V(s, {
          ...t
        });
      }), P = x(C, {
        [`${n}-basic`]: !0,
        [`${n}-${g}`]: !0,
        [`${n}-${l}`]: l !== "default",
        [`${n}-hasline`]: b
      });
      return L("div", S({
        "aria-label": p["aria-label"],
        class: P,
        style: h
      }, j({
        ...N,
        ...d
      })), [$()]);
    };
  }
});
export {
  O as default,
  I as vuePropsType
};
//# sourceMappingURL=basicSteps.js.map
