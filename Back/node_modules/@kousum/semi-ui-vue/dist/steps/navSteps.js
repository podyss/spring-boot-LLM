import { defineComponent as N, useSlots as P, useAttrs as b, createVNode as y, mergeProps as z, isVNode as S, cloneVNode as T } from "vue";
import * as t from "../PropTypes";
import { vuePropsMake as V } from "../PropTypes";
import $ from "classnames";
import { stepsClasses as A } from '@douyinfe/semi-foundation/lib/es/steps/constants';
import { noop as j } from "lodash";
import k from '@douyinfe/semi-foundation/lib/es/utils/getDataAttr';
const w = {
  prefixCls: t.string,
  className: t.string,
  style: t.object,
  current: t.number,
  initial: t.number,
  children: t.node,
  onChange: t.func,
  "aria-label": t.string,
  direction: t.string,
  size: t.string,
  status: t.string
}, x = {
  prefixCls: A.PREFIX,
  current: 0,
  direction: "horizontal",
  size: "default",
  initial: 0,
  status: "process",
  onChange: j
}, D = V(w, x), B = /* @__PURE__ */ N({
  props: {
    ...D
  },
  name: "NavSteps",
  setup(n, {}) {
    P();
    const c = b();
    return () => {
      const {
        size: o,
        current: i,
        initial: u,
        children: m,
        prefixCls: a,
        className: f,
        style: d,
        onChange: l,
        ...g
      } = n, C = () => {
        const p = m.filter((e) => S(e)), v = p.length;
        return p.map((e, r) => {
          if (!e)
            return null;
          const s = {
            index: r,
            total: v,
            ...e.props
          };
          return s.active = r === i, s.onChange = l ? () => {
            r !== i && l(r + u);
          } : void 0, T(e, {
            ...s
          });
        });
      }, h = $(f, {
        [`${a}-nav`]: !0,
        [`${a}-${o}`]: o !== "default"
      });
      return y("div", z({
        "aria-label": n["aria-label"],
        class: h,
        style: d
      }, k({
        ...g,
        ...c
      })), [C()]);
    };
  }
});
export {
  B as default,
  D as vuePropsType
};
//# sourceMappingURL=navSteps.js.map
