{"version":3,"file":"fillSteps.js","sources":["../../src/components/steps/fillSteps.tsx"],"sourcesContent":["import * as PropTypes from '../PropTypes';\nimport cls from 'classnames';\nimport { stepsClasses as css } from '@douyinfe/semi-foundation/steps/constants';\nimport { Row, Col } from '../grid';\nimport {\n  defineComponent,\n  useSlots,\n  h,\n  CSSProperties,\n  isVNode,\n  VNode,\n  cloneVNode,\n  ComponentObjectPropsOptions,\n  PropType,\n} from 'vue';\nimport { vuePropsMake } from '../PropTypes';\nimport { FillStepProps } from './fillStep';\nimport { getFragmentChildren } from '../_utils';\nimport { CombineProps } from '../interface';\n\nexport type Status = 'wait' | 'process' | 'finish' | 'error' | 'warning';\nexport type Direction = 'horizontal' | 'vertical';\nexport type Size = 'default' | 'small';\nexport interface FillStepsProps {\n  prefixCls?: string;\n  className?: string;\n  current?: number;\n  direction?: Direction;\n  initial?: number;\n  status?: Status;\n  style?: CSSProperties;\n  children?: VNode[];\n  onChange?: (current: number) => void;\n  'aria-label'?: string;\n  size?: Size;\n}\n\nconst propTypes: CombineProps<FillStepsProps> = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  current: PropTypes.number,\n  initial: PropTypes.number,\n  direction: PropTypes.string as PropType<FillStepsProps['direction']>,\n  status: PropTypes.string as PropType<FillStepsProps['status']>,\n  children: PropTypes.node as PropType<FillStepsProps['children']>,\n  onChange: PropTypes.func as PropType<FillStepsProps['onChange']>,\n  size: PropTypes.string as PropType<FillStepsProps['size']>,\n  'aria-label': PropTypes.string,\n};\n\nconst defaultProps = {\n  prefixCls: css.PREFIX,\n  current: 0,\n  direction: 'horizontal',\n  initial: 0,\n  status: 'process',\n};\n\nexport const vuePropsType = vuePropsMake<FillStepsProps>(propTypes, defaultProps);\nconst FillSteps = defineComponent({\n  props: { ...vuePropsType },\n  name: 'FillSteps',\n  setup(props, {}) {\n    const slots = useSlots();\n\n    return () => {\n      const { current, status, children, prefixCls, initial, direction, className, style, onChange } = props;\n\n      const inner = () => {\n        const filteredChildren = getFragmentChildren(slots).filter((c) => isVNode(c)) as Array<VNode>;\n        const colStyle = direction === 'vertical' ? null : { width: `${100 / filteredChildren.length}%` };\n        const content = filteredChildren.map((child: VNode, index) => {\n          if (!child) {\n            return null;\n          }\n          const stepNumber = initial + index;\n          const childProps: FillStepProps = {\n            stepNumber: `${stepNumber + 1}`,\n            direction,\n            ...child.props,\n          };\n\n          if (status === 'error' && index === current - 1) {\n            childProps.className = `${prefixCls}-next-error`;\n          }\n\n          if (!child.props.status) {\n            if (stepNumber === current) {\n              childProps.status = status;\n            } else if (stepNumber < current) {\n              childProps.status = 'finish';\n            } else {\n              childProps.status = 'wait';\n            }\n          }\n          childProps.onChange = onChange\n            ? () => {\n                if (index !== current) {\n                  onChange(index + initial);\n                }\n              }\n            : undefined;\n          return <Col style={colStyle}>{cloneVNode(child, { ...childProps })}</Col>;\n        });\n        return content;\n      };\n      const wrapperCls = cls(className, {\n        [prefixCls]: true,\n        [`${prefixCls}-${direction}`]: true,\n      });\n\n      return (\n        <div class={wrapperCls} style={style} aria-label={props['aria-label']}>\n          <Row type=\"flex\" justify=\"start\">\n            {inner}\n          </Row>\n        </div>\n      );\n    };\n  },\n});\n\nexport default FillSteps;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","propTypes","prefixCls","PropTypes","string","className","style","object","current","number","initial","direction","status","children","node","onChange","func","size","defaultProps","css","PREFIX","vuePropsType","vuePropsMake","FillSteps","defineComponent","props","name","setup","slots","useSlots","inner","filteredChildren","getFragmentChildren","filter","c","isVNode","colStyle","width","length","map","child","index","_slot","stepNumber","childProps","undefined","_createVNode","Col","cloneVNode","default","wrapperCls","cls","Row"],"mappings":"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"}