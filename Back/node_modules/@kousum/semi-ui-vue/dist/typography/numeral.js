import { defineComponent as c, useSlots as u, createVNode as f, Text as a, h as m } from "vue";
import * as e from "../PropTypes";
import { vuePropsMake as y } from "../PropTypes";
import b from "./base";
import d from '@douyinfe/semi-foundation/lib/es/typography/formatNumeral';
import { getFragmentChildren as g } from "../_utils";
import { omit as h } from "lodash";
const N = {
  rule: e.string,
  precision: e.number,
  truncate: e.string,
  parser: e.func,
  copyable: e.oneOfType([e.object, e.bool]),
  delete: e.bool,
  disabled: e.bool,
  icon: e.oneOfType([e.node, e.string]),
  mark: e.bool,
  underline: e.bool,
  link: [e.object, e.bool, e.string],
  strong: e.bool,
  type: e.string,
  size: e.string,
  style: e.object,
  className: e.string,
  code: e.bool,
  component_: [e.string, e.node]
}, j = {
  rule: "text",
  precision: 0,
  truncate: "round",
  parser: void 0,
  copyable: !1,
  delete: !1,
  icon: "",
  mark: !1,
  underline: !1,
  strong: !1,
  link: !1,
  type: "primary",
  style: {},
  size: "normal",
  className: ""
}, k = y(N, j), F = /* @__PURE__ */ c({
  props: {
    ...k
  },
  name: "Numeral",
  setup(t, {}) {
    const i = u();
    function s(r) {
      return Array.isArray(r) || (r = [r]), r = r.map((n) => {
        if (typeof n == "string" || typeof n == "number")
          return new d(String(n), t.rule, t.precision, t.truncate, t.parser).format();
        if (typeof n == "function")
          return s(n());
        if (typeof n == "object" && "children" in n) {
          let p = function() {
            var l;
            return Array.isArray(o) ? o : typeof o == "object" ? [o] : !n.ctx || (l = n.ctx.type) != null && l.render ? o : n.type !== a ? [m(a, o)] : o;
          }, o = s(n.children);
          return {
            ...n,
            props: {
              ...n.props
            },
            children: p()
          };
        }
        return n;
      }), r.length === 1 ? r[0] : r;
    }
    return () => {
      const r = Object.assign({}, t);
      return delete r.rule, delete r.parser, r.children = s(g(i)), f(b, {
        ...h(r, "precision", "truncate", "component_"),
        component_: r.component_ || "span"
      }, null);
    };
  }
});
export {
  F as default,
  k as vuePropsType
};
//# sourceMappingURL=numeral.js.map
