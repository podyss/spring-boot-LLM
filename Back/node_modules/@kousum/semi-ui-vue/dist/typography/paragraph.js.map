{"version":3,"file":"paragraph.js","sources":["../../src/components/typography/paragraph.tsx"],"sourcesContent":["import {\n  defineComponent,\n  ref,\n  h,\n  Fragment,\n  CSSProperties,\n  HTMLAttributes,\n  ComponentObjectPropsOptions,\n  PropType,\n} from 'vue';\nimport cls from 'classnames';\nimport { strings, cssClasses } from '@douyinfe/semi-foundation/typography/constants';\nimport Base from './base';\nimport {\n  Ellipsis,\n  TypographyBaseSize,\n  TypographyBaseSpacing,\n  TypographyBaseType,\n  OmitTypographyProps,\n} from './interface';\nimport { CopyableConfig, LinkType } from './title';\nimport { CombineProps } from '../interface';\n\ntype OmitParagraphProps = OmitTypographyProps;\n\nexport interface ParagraphProps {\n  className?: string;\n  component_?: any;\n  copyable?: CopyableConfig | boolean;\n  delete?: boolean;\n  disabled?: boolean;\n\n  /**\n   * ellipsis 用于设置截断相关参数.\n   * Ellipsis is used to set ellipsis related parameters.\n   * ellipsis 仅支持纯文本的截断，不支持 reactNode 等复杂类型，请确保 children 传入内容类型为 string.\n   * Ellipsis only supports ellipsis of plain text, and does not support complex types such as reactNode.\n   * Please ensure that the content type of children is string.\n   * Semi 截断有两种策略， CSS 截断和 JS 截断。\n   * Semi ellipsis has two strategies, CSS ellipsis and JS ellipsis.\n   *  - 当设置中间截断（pos='middle')、可展开（expandable)、有后缀（suffix 非空）、可复制（copyable），启用 JS 截断策略\n   *  - When setting middle ellipsis (pos='middle')、expandable、suffix is not empty string、copyable,\n   * the JS ellipsis strategy is enabled\n   *  - 非以上场景，启用 CSS 截断策略\n   *  - Otherwise, enable the CSS ellipsis strategy\n   *\n   * 通常来说 CSS 截断的性能优于 JS 截断。在 children 不变， 容器尺寸不变的情况下，CSS 截断只涉及 1-2 次计算，js 截断基于二分法，可能涉及多次计算。\n   * In general CSS ellipsis performs better than JS ellipsis. when the children and container size remain unchanged,\n   * CSS ellipsis only involves 1-2 calculations, while JS ellipsis is based on dichotomy and may require multiple calculations.\n   * 同时使用大量带有截断功能的 Typography 需注意性能消耗，如在 Table 中，可通过设置合理的页容量进行分页减少性能损耗\n   * Pay attention to performance consumption when using a large number of Typography with ellipsis. For example, in Table,\n   * you can reduce performance loss by setting a reasonable pageSize for paging\n   */\n  ellipsis?: Ellipsis | boolean;\n  link?: LinkType;\n  mark?: boolean;\n  size?: TypographyBaseSize;\n  spacing?: TypographyBaseSpacing;\n  strong?: boolean;\n  style?: CSSProperties;\n  type?: TypographyBaseType;\n  underline?: boolean;\n}\n\nconst prefixCls = cssClasses.PREFIX;\n\nexport const vuePropsType: CombineProps<ParagraphProps> = {\n  copyable: {\n    type: [Object, Boolean],\n    default: false,\n  },\n  delete: {\n    type: Boolean,\n    default: false,\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  // editable: false,\n  ellipsis: {\n    type: [Object, Boolean],\n    default: false,\n  },\n  mark: {\n    type: Boolean,\n    default: false,\n  },\n  underline: {\n    type: Boolean,\n    default: false,\n  },\n  strong: {\n    type: Boolean,\n    default: false,\n  },\n  link: {\n    type: [Boolean, Object, String],\n    default: false,\n  },\n  type: {\n    type: String as PropType<ParagraphProps['type']>,\n    default: 'primary',\n  },\n  size: {\n    type: String as PropType<ParagraphProps['size']>,\n    default: 'normal',\n  },\n  spacing: {\n    type: String as PropType<ParagraphProps['spacing']>,\n    default: 'normal',\n  },\n  style: {\n    type: Object,\n    default: {},\n  },\n  className: {\n    type: String,\n    default: '',\n  },\n  component_: {\n    type: [Object, String, Function],\n  },\n};\nconst paragraph = defineComponent({\n  props: { ...vuePropsType },\n  name: 'Paragraph',\n  setup(props, { slots, attrs }) {\n    const { className } = props;\n    const paragraphCls = cls(className, `${prefixCls}-paragraph`);\n    return () => <Base children={slots.default?.()} {...{...props, component_: props.component_ || 'p'}} {...attrs} className={paragraphCls}></Base>;\n  },\n});\n\nexport default paragraph;\n"],"names":["prefixCls","cssClasses","PREFIX","vuePropsType","copyable","type","Object","Boolean","default","delete","disabled","ellipsis","mark","underline","strong","link","String","size","spacing","style","className","component_","Function","paragraph","defineComponent","props","name","setup","slots","attrs","paragraphCls","cls","_createVNode","Base","_mergeProps"],"mappings":";;;;AAgEA,MAAMA,IAAYC,EAAWC,QAEhBC,IAA6C;AAAA,EACxDC,UAAU;AAAA,IACRC,MAAM,CAACC,QAAQC,OAAO;AAAA,IACtBC,SAAS;AAAA,EACV;AAAA,EACDC,QAAQ;AAAA,IACNJ,MAAME;AAAAA,IACNC,SAAS;AAAA,EACV;AAAA,EACDE,UAAU;AAAA,IACRL,MAAME;AAAAA,IACNC,SAAS;AAAA,EACV;AAAA;AAAA,EAEDG,UAAU;AAAA,IACRN,MAAM,CAACC,QAAQC,OAAO;AAAA,IACtBC,SAAS;AAAA,EACV;AAAA,EACDI,MAAM;AAAA,IACJP,MAAME;AAAAA,IACNC,SAAS;AAAA,EACV;AAAA,EACDK,WAAW;AAAA,IACTR,MAAME;AAAAA,IACNC,SAAS;AAAA,EACV;AAAA,EACDM,QAAQ;AAAA,IACNT,MAAME;AAAAA,IACNC,SAAS;AAAA,EACV;AAAA,EACDO,MAAM;AAAA,IACJV,MAAM,CAACE,SAASD,QAAQU,MAAM;AAAA,IAC9BR,SAAS;AAAA,EACV;AAAA,EACDH,MAAM;AAAA,IACJA,MAAMW;AAAAA,IACNR,SAAS;AAAA,EACV;AAAA,EACDS,MAAM;AAAA,IACJZ,MAAMW;AAAAA,IACNR,SAAS;AAAA,EACV;AAAA,EACDU,SAAS;AAAA,IACPb,MAAMW;AAAAA,IACNR,SAAS;AAAA,EACV;AAAA,EACDW,OAAO;AAAA,IACLd,MAAMC;AAAAA,IACNE,SAAS,CAAC;AAAA,EACX;AAAA,EACDY,WAAW;AAAA,IACTf,MAAMW;AAAAA,IACNR,SAAS;AAAA,EACV;AAAA,EACDa,YAAY;AAAA,IACVhB,MAAM,CAACC,QAAQU,QAAQM,QAAQ;AAAA,EACjC;AACF,GACMC,IAAYC,gBAAAA,EAAgB;AAAA,EAChCC,OAAO;AAAA,IAAE,GAAGtB;AAAAA,EAAc;AAAA,EAC1BuB,MAAM;AAAA,EACNC,MAAMF,GAAO;AAAA,IAAEG,OAAAA;AAAAA,IAAOC,OAAAA;AAAAA,EAAM,GAAG;AAC7B,UAAM;AAAA,MAAET,WAAAA;AAAAA,IAAW,IAAGK,GAChBK,IAAeC,EAAIX,GAAW,GAAGpB,CAAS,YAAY;AAC5D,WAAO,MAAAgC;;AAAAA,aAAAA,EAAAC,GAAAC,EAAA;AAAA,QAAA,WAAsBN,IAAAA,EAAMpB,YAANoB,gBAAAA,EAAAA,KAAAA;AAAAA,MAAiB,GAAA;AAAA,QAAO,GAAGH;AAAAA,QAAOJ,YAAYI,EAAMJ,cAAc;AAAA,MAAG,GAAOQ,GAAK;AAAA,QAAA,WAAaC;AAAAA,OAAqB,GAAA,IAAA;AAAA;AAAA,EAClJ;AACF,CAAC;"}