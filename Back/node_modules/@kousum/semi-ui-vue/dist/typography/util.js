import { createApp as I, h as O } from "vue";
import { omit as S } from "lodash";
let e, c;
function f(r) {
  if (!r)
    return 0;
  const l = r.match(/^\d*(\.\d*)?/);
  return l ? Number(l[0]) : 0;
}
function W(r) {
  return Array.prototype.slice.apply(r).map((i) => `${i}: ${r.getPropertyValue(i)};`).join("");
}
const z = (r, l, i = "", y, p, C, T, A) => {
  if (i.length === 0)
    return "";
  e || (e = document.createElement("div"), e.setAttribute("aria-hidden", "true"), document.body.appendChild(e));
  const a = window.getComputedStyle(r), M = W(a), v = f(a.lineHeight), w = Math.round(v * (l + 1) + f(a.paddingTop) + f(a.paddingBottom));
  e.setAttribute("style", M), e.style.position = "fixed", e.style.left = "0", e.style.height = "auto", e.style.top = "-999999px", e.style.zIndex = "-1000", A && (e.style.fontWeight = "600"), e.style.textOverflow = "clip", e.style.webkitLineClamp = "none", c && c.unmount(), c = I(() => O("div")), c.mount(e);
  function h() {
    const t = e.scrollWidth <= e.offsetWidth, n = e.scrollHeight < w;
    return l === 1 ? t && n : n;
  }
  const u = document.createElement("span"), x = document.createTextNode(i);
  if (u.appendChild(x), C.length > 0) {
    const t = document.createTextNode(C);
    u.appendChild(t);
  }
  e.appendChild(u), Object.values(S(y, "expand")).map((t) => t && e.appendChild(t.cloneNode(!0)));
  function R() {
    e.innerHTML = "", e.appendChild(u), Object.values(y).map((t) => t && e.appendChild(t.cloneNode(!0)));
  }
  function b(t, n) {
    const o = t.length;
    return n ? T === "end" ? t.slice(0, n) + p : t.slice(0, n) + p + t.slice(o - n, o) : p;
  }
  function m(t, n, o = 0, d = n.length, j = 0) {
    const s = Math.floor((o + d) / 2), E = b(n, s);
    if (t.textContent = E, o >= d - 1 && d > 0)
      for (let g = d; g >= o; g -= 1) {
        const H = b(n, g);
        if (t.textContent = H, h())
          return H;
      }
    else if (d === 0)
      return p;
    return h() ? m(t, n, s, d, s) : m(t, n, o, s, j);
  }
  let N = i;
  return h() || (R(), N = m(x, i, 0, T === "middle" ? Math.floor(i.length / 2) : i.length)), e.innerHTML = "", N;
};
export {
  z as default
};
//# sourceMappingURL=util.js.map
