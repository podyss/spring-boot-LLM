import { defineComponent as l, createVNode as n, mergeProps as o } from "vue";
import p from "./base";
const f = {
  copyable: {
    type: [Object, Boolean],
    default: !1
  },
  delete: {
    type: Boolean,
    default: !1
  },
  disabled: {
    type: Boolean,
    default: !1
  },
  icon: {
    type: [Object, String],
    default: ""
  },
  // editable: false,
  ellipsis: {
    type: [Object, Boolean],
    default: !1
  },
  mark: {
    type: Boolean,
    default: !1
  },
  underline: {
    type: Boolean,
    default: !1
  },
  strong: {
    type: Boolean,
    default: !1
  },
  link: {
    type: [Boolean, Object, String],
    default: !1
  },
  type: {
    type: String,
    default: "primary"
  },
  style: {
    type: Object,
    default: {}
  },
  size: {
    type: String,
    default: "normal"
  },
  className: {
    type: String,
    default: ""
  },
  component_: {
    type: [Object, String, Function]
  },
  weight: Number,
  code: Boolean
}, u = /* @__PURE__ */ l({
  props: {
    ...f
  },
  name: "Text",
  setup(t, {
    slots: e
  }) {
    return () => {
      var a;
      return n(p, o({
        children: (a = e.default) == null ? void 0 : a.call(e)
      }, {
        ...t,
        component_: t.component_ || "span"
      }), {
        default: e.default
      });
    };
  }
});
export {
  u as default,
  f as vuePropsType
};
//# sourceMappingURL=text.js.map
