import { defineComponent as p, createVNode as i, mergeProps as d } from "vue";
import { strings as f } from '@douyinfe/semi-foundation/lib/es/typography/constants';
import u from "./base";
const y = {
  className: {
    type: String,
    default: ""
  },
  class: {
    type: String,
    default: ""
  },
  id: {
    type: String,
    default: ""
  },
  "x-semi-prop": {
    type: String,
    default: ""
  },
  component_: [String, Array, Boolean, Object, Number],
  copyable: {
    type: [Object, Boolean],
    default: !1
  },
  delete: {
    type: Boolean,
    default: !1
  },
  disabled: {
    type: Boolean,
    default: !1
  },
  ellipsis: {
    type: [Object, Boolean],
    default: !1
  },
  heading: {
    type: [String, Array, Boolean, Object, Number],
    default: 1
  },
  link: {
    type: [Object, Boolean, String],
    default: !1
  },
  mark: {
    type: Boolean,
    default: !1
  },
  strong: {
    type: Boolean,
    default: !1
  },
  style: {
    type: [String, Object],
    default: {}
  },
  type: {
    type: String,
    default: "primary"
  },
  underline: Boolean,
  weight: [String, Number]
}, g = /* @__PURE__ */ p({
  props: {
    ...y
  },
  name: "Title",
  setup(l, {
    slots: e
  }) {
    return () => {
      var n;
      const {
        heading: t,
        component_: o,
        ...r
      } = l, a = f.HEADING.indexOf(t) !== -1 ? `h${t}` : "h1";
      return i(u, d({
        children: (n = e.default) == null ? void 0 : n.call(e),
        component_: o || a,
        heading: a
      }, r), {
        default: e.default
      });
    };
  }
});
export {
  g as default,
  y as vuePropsType
};
//# sourceMappingURL=title.js.map
