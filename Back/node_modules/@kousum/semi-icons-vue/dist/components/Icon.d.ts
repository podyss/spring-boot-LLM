import { StyleValue, VNode } from 'vue';
import '../styles/icons.css';
import { CombineProps } from './interface';
export type IconSize = 'inherit' | 'extra-small' | 'small' | 'default' | 'large' | 'extra-large';
export interface IconProps {
    size?: IconSize;
    spin?: boolean;
    rotate?: number;
    prefixCls?: string;
    type?: string;
    className?: string;
    svg?: VNode;
    style?: StyleValue;
    onClick?: (e: any) => void;
    role?: string;
    tabIndex?: number;
    onKeypress?: (e: any) => void;
}
export declare const vuePropsType: CombineProps<IconProps>;
declare const Icon: import("vue").DefineSetupFnComponent<IconProps, {}, {}, IconProps & {}, import("vue").PublicProps>;
export interface convertIconType extends IconProps {
    svg?: any;
    iconType?: string;
}
declare const ConvertIcon: import("vue").DefineSetupFnComponent<convertIconType, {}, {}, convertIconType & {}, import("vue").PublicProps>;
export { ConvertIcon };
export default Icon;
